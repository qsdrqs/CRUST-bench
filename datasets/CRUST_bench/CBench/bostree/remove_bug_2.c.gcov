        -:    0:Source:tests/remove_bug_2.c
        -:    1:/*
        -:    2:
        -:    3:	This test is related to remove_bug.c. If H is removed from
        -:    4:
        -:    5:	                 H
        -:    6:	           D       -something-
        -:    7:	      B      F
        -:    8:	    A   C   E
        -:    9:
        -:   10:
        -:   11:	E was not correctly reparented.
        -:   12:
        -:   13:*/
        -:   14:#define _GNU_SOURCE
        -:   15:#include <string.h>
        -:   16:#include <stdio.h>
        -:   17:#include <stdlib.h>
        -:   18:#include <sys/timeb.h>
        -:   19:#include "../bostree.h"
        -:   20:#include "test_helpers.h"
        -:   21:
        1:   22:BOSTree *test_tree() {
        1:   23:	BOSTree *t = bostree_new((BOSTree_cmp_function)strcmp, NULL);
        1:   24:	char i;
       27:   25:	for(i='A'; i<'Z'; i++) {
       25:   26:		char *key = malloc(2);
       25:   27:		key[0] = i; key[1] = 0;
       25:   28:		bostree_insert(t, key, NULL);
        -:   29:	}
        -:   30:
        1:   31:	return t;
        -:   32:}
        -:   33:
        1:   34:int main() {
        -:   35:	// Prepare the situation from above
        1:   36:	BOSTree *t = test_tree();
        1:   37:	bostree_remove(t, bostree_lookup(t, strdup("G")));
        1:   38:	bostree_remove(t, bostree_lookup(t, strdup("H")));
        -:   39:
        1:   40:	test_tree_sanity(t);
        1:   41:	if(bostree_lookup(t, strdup("E")) == NULL) {
    #####:   42:		printf("Nodes missing after removing another one\n");
    #####:   43:		exit(1);
        -:   44:	}
        -:   45:
        1:   46:	return 0;
        -:   47:}
