        -:    0:Source:for-gen.c
        -:    1:/* This file was generated.
        -:    2: *
        -:    3: * The pack/unpack routines will not work on big-endian architectures.
        -:    4: */
        -:    5:
        -:    6:static uint32_t
        1:    7:pack0_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:    8:  (void)base;
        -:    9:  (void)in;
        -:   10:  (void)out;
        1:   11:  return 0;
        -:   12:}
        -:   13:
        -:   14:static uint32_t
        1:   15:pack0_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:   16:  (void)base;
        -:   17:  (void)in;
        -:   18:  (void)out;
        1:   19:  return 0;
        -:   20:}
        -:   21:
        -:   22:static uint32_t
        1:   23:pack0_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:   24:  (void)base;
        -:   25:  (void)in;
        -:   26:  (void)out;
        1:   27:  return 0;
        -:   28:}
        -:   29:
        -:   30:static uint32_t
        1:   31:unpack0_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:   32:  int k;
        -:   33:  (void)in;
       33:   34:  for (k = 0; k < 32; ++k) {
       32:   35:    out[k] = base;
        -:   36:  }
        1:   37:  return 0;
        -:   38:}
        -:   39:
        -:   40:static uint32_t
        1:   41:unpack0_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:   42:  int k;
        -:   43:  (void)in;
       17:   44:  for (k = 0; k < 16; ++k) {
       16:   45:    out[k] = base;
        -:   46:  }
        1:   47:  return 0;
        -:   48:}
        -:   49:
        -:   50:static uint32_t
        1:   51:unpack0_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:   52:  int k;
        -:   53:  (void)in;
        9:   54:  for (k = 0; k < 8; ++k) {
        8:   55:    out[k] = base;
        -:   56:  }
        1:   57:  return 0;
        -:   58:}
        -:   59:
        -:   60:static uint32_t
       16:   61:pack0_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:   62:  (void)base;
        -:   63:  (void)in;
        -:   64:  (void)out;
        -:   65:  (void)length;
       16:   66:  return 0;
        -:   67:}
        -:   68:
        -:   69:static uint32_t
       13:   70:unpack0_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:   71:  uint32_t k;
        -:   72:  (void)in;
       46:   73:  for (k = 0; k < length; ++k) {
       33:   74:    out[k] = base;
        -:   75:  }
       13:   76:  return 0;
        -:   77:}
        -:   78:
        -:   79:static uint32_t
    #####:   80:linsearch0_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:   81:  (void)in;
    #####:   82:  if (base == value)
    #####:   83:    *found = 0;
    #####:   84:  return 0;
        -:   85:}
        -:   86:
        -:   87:static uint32_t
    #####:   88:linsearch0_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:   89:  (void)in;
    #####:   90:  if (base == value)
    #####:   91:    *found = 0;
    #####:   92:  return 0;
        -:   93:}
        -:   94:
        -:   95:static uint32_t
    #####:   96:linsearch0_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:   97:  (void)in;
    #####:   98:  if (base == value)
    #####:   99:    *found = 0;
    #####:  100:  return 0;
        -:  101:}
        -:  102:
        -:  103:static uint32_t
    #####:  104:linsearch0_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value,
        -:  105:                int *found) {
        -:  106:  (void)in;
    #####:  107:  if (base == value && length > 0)
    #####:  108:    *found = 0;
    #####:  109:  return 0;
        -:  110:}
        -:  111:
        -:  112:static uint32_t
        1:  113:pack1_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  114:  uint32_t tmp, length;
        1:  115:  tmp  = (*(in + 0) - base) << 0;
        1:  116:  tmp |= (*(in + 1) - base) << 1;
        1:  117:  tmp |= (*(in + 2) - base) << 2;
        1:  118:  tmp |= (*(in + 3) - base) << 3;
        1:  119:  tmp |= (*(in + 4) - base) << 4;
        1:  120:  tmp |= (*(in + 5) - base) << 5;
        1:  121:  tmp |= (*(in + 6) - base) << 6;
        1:  122:  tmp |= (*(in + 7) - base) << 7;
        1:  123:  tmp |= (*(in + 8) - base) << 8;
        1:  124:  tmp |= (*(in + 9) - base) << 9;
        1:  125:  tmp |= (*(in + 10) - base) << 10;
        1:  126:  tmp |= (*(in + 11) - base) << 11;
        1:  127:  tmp |= (*(in + 12) - base) << 12;
        1:  128:  tmp |= (*(in + 13) - base) << 13;
        1:  129:  tmp |= (*(in + 14) - base) << 14;
        1:  130:  tmp |= (*(in + 15) - base) << 15;
        1:  131:  tmp |= (*(in + 16) - base) << 16;
        1:  132:  tmp |= (*(in + 17) - base) << 17;
        1:  133:  tmp |= (*(in + 18) - base) << 18;
        1:  134:  tmp |= (*(in + 19) - base) << 19;
        1:  135:  tmp |= (*(in + 20) - base) << 20;
        1:  136:  tmp |= (*(in + 21) - base) << 21;
        1:  137:  tmp |= (*(in + 22) - base) << 22;
        1:  138:  tmp |= (*(in + 23) - base) << 23;
        1:  139:  tmp |= (*(in + 24) - base) << 24;
        1:  140:  tmp |= (*(in + 25) - base) << 25;
        1:  141:  tmp |= (*(in + 26) - base) << 26;
        1:  142:  tmp |= (*(in + 27) - base) << 27;
        1:  143:  tmp |= (*(in + 28) - base) << 28;
        1:  144:  tmp |= (*(in + 29) - base) << 29;
        1:  145:  tmp |= (*(in + 30) - base) << 30;
        1:  146:  tmp |= (*(in + 31) - base) << 31;
        -:  147:  /* remaining: 0 bits */
        -:  148:  length = (32 / 8) - (32 - 32) / 8;
        -:  149:  /* consumed: 4 bytes (total: 4) */
        -:  150:  memcpy(out, &tmp, length);
        1:  151:  return 4;
        -:  152:}
        -:  153:
        -:  154:static uint32_t
        1:  155:unpack1_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  156:  uint32_t *in32 = (uint32_t *)in;
        -:  157:  uint32_t tmp; (void)tmp;
        1:  158:  *(out + 0)  = base + ((*in32 >> 0) & 1);
        1:  159:  *(out + 1)  = base + ((*in32 >> 1) & 1);
        1:  160:  *(out + 2)  = base + ((*in32 >> 2) & 1);
        1:  161:  *(out + 3)  = base + ((*in32 >> 3) & 1);
        1:  162:  *(out + 4)  = base + ((*in32 >> 4) & 1);
        1:  163:  *(out + 5)  = base + ((*in32 >> 5) & 1);
        1:  164:  *(out + 6)  = base + ((*in32 >> 6) & 1);
        1:  165:  *(out + 7)  = base + ((*in32 >> 7) & 1);
        1:  166:  *(out + 8)  = base + ((*in32 >> 8) & 1);
        1:  167:  *(out + 9)  = base + ((*in32 >> 9) & 1);
        1:  168:  *(out + 10)  = base + ((*in32 >> 10) & 1);
        1:  169:  *(out + 11)  = base + ((*in32 >> 11) & 1);
        1:  170:  *(out + 12)  = base + ((*in32 >> 12) & 1);
        1:  171:  *(out + 13)  = base + ((*in32 >> 13) & 1);
        1:  172:  *(out + 14)  = base + ((*in32 >> 14) & 1);
        1:  173:  *(out + 15)  = base + ((*in32 >> 15) & 1);
        1:  174:  *(out + 16)  = base + ((*in32 >> 16) & 1);
        1:  175:  *(out + 17)  = base + ((*in32 >> 17) & 1);
        1:  176:  *(out + 18)  = base + ((*in32 >> 18) & 1);
        1:  177:  *(out + 19)  = base + ((*in32 >> 19) & 1);
        1:  178:  *(out + 20)  = base + ((*in32 >> 20) & 1);
        1:  179:  *(out + 21)  = base + ((*in32 >> 21) & 1);
        1:  180:  *(out + 22)  = base + ((*in32 >> 22) & 1);
        1:  181:  *(out + 23)  = base + ((*in32 >> 23) & 1);
        1:  182:  *(out + 24)  = base + ((*in32 >> 24) & 1);
        1:  183:  *(out + 25)  = base + ((*in32 >> 25) & 1);
        1:  184:  *(out + 26)  = base + ((*in32 >> 26) & 1);
        1:  185:  *(out + 27)  = base + ((*in32 >> 27) & 1);
        1:  186:  *(out + 28)  = base + ((*in32 >> 28) & 1);
        1:  187:  *(out + 29)  = base + ((*in32 >> 29) & 1);
        1:  188:  *(out + 30)  = base + ((*in32 >> 30) & 1);
        1:  189:  *(out + 31)  = base + ((*in32 >> 31) & 1);
        -:  190:  /* remaining: 0 bits */
        1:  191:  return 4;
        -:  192:}
        -:  193:
        -:  194:static uint32_t
        1:  195:pack2_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  196:  uint32_t tmp, length;
        1:  197:  tmp  = (*(in + 0) - base) << 0;
        1:  198:  tmp |= (*(in + 1) - base) << 2;
        1:  199:  tmp |= (*(in + 2) - base) << 4;
        1:  200:  tmp |= (*(in + 3) - base) << 6;
        1:  201:  tmp |= (*(in + 4) - base) << 8;
        1:  202:  tmp |= (*(in + 5) - base) << 10;
        1:  203:  tmp |= (*(in + 6) - base) << 12;
        1:  204:  tmp |= (*(in + 7) - base) << 14;
        1:  205:  tmp |= (*(in + 8) - base) << 16;
        1:  206:  tmp |= (*(in + 9) - base) << 18;
        1:  207:  tmp |= (*(in + 10) - base) << 20;
        1:  208:  tmp |= (*(in + 11) - base) << 22;
        1:  209:  tmp |= (*(in + 12) - base) << 24;
        1:  210:  tmp |= (*(in + 13) - base) << 26;
        1:  211:  tmp |= (*(in + 14) - base) << 28;
        1:  212:  tmp |= (*(in + 15) - base) << 30;
        1:  213:  *(uint32_t *)out = tmp;
        1:  214:  out += sizeof(uint32_t);
        -:  215:  /* consumed: 4 bytes (total: 4) */
        1:  216:  tmp  = (*(in + 16) - base) << 0;
        1:  217:  tmp |= (*(in + 17) - base) << 2;
        1:  218:  tmp |= (*(in + 18) - base) << 4;
        1:  219:  tmp |= (*(in + 19) - base) << 6;
        1:  220:  tmp |= (*(in + 20) - base) << 8;
        1:  221:  tmp |= (*(in + 21) - base) << 10;
        1:  222:  tmp |= (*(in + 22) - base) << 12;
        1:  223:  tmp |= (*(in + 23) - base) << 14;
        1:  224:  tmp |= (*(in + 24) - base) << 16;
        1:  225:  tmp |= (*(in + 25) - base) << 18;
        1:  226:  tmp |= (*(in + 26) - base) << 20;
        1:  227:  tmp |= (*(in + 27) - base) << 22;
        1:  228:  tmp |= (*(in + 28) - base) << 24;
        1:  229:  tmp |= (*(in + 29) - base) << 26;
        1:  230:  tmp |= (*(in + 30) - base) << 28;
        1:  231:  tmp |= (*(in + 31) - base) << 30;
        -:  232:  /* remaining: 0 bits */
        -:  233:  length = (32 / 8) - (32 - 32) / 8;
        -:  234:  /* consumed: 4 bytes (total: 8) */
        -:  235:  memcpy(out, &tmp, length);
        1:  236:  return 8;
        -:  237:}
        -:  238:
        -:  239:static uint32_t
        1:  240:unpack2_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  241:  uint32_t *in32 = (uint32_t *)in;
        -:  242:  uint32_t tmp; (void)tmp;
        1:  243:  *(out + 0)  = base + ((*in32 >> 0) & 3);
        1:  244:  *(out + 1)  = base + ((*in32 >> 2) & 3);
        1:  245:  *(out + 2)  = base + ((*in32 >> 4) & 3);
        1:  246:  *(out + 3)  = base + ((*in32 >> 6) & 3);
        1:  247:  *(out + 4)  = base + ((*in32 >> 8) & 3);
        1:  248:  *(out + 5)  = base + ((*in32 >> 10) & 3);
        1:  249:  *(out + 6)  = base + ((*in32 >> 12) & 3);
        1:  250:  *(out + 7)  = base + ((*in32 >> 14) & 3);
        1:  251:  *(out + 8)  = base + ((*in32 >> 16) & 3);
        1:  252:  *(out + 9)  = base + ((*in32 >> 18) & 3);
        1:  253:  *(out + 10)  = base + ((*in32 >> 20) & 3);
        1:  254:  *(out + 11)  = base + ((*in32 >> 22) & 3);
        1:  255:  *(out + 12)  = base + ((*in32 >> 24) & 3);
        1:  256:  *(out + 13)  = base + ((*in32 >> 26) & 3);
        1:  257:  *(out + 14)  = base + ((*in32 >> 28) & 3);
        1:  258:  *(out + 15)  = base + ((*in32 >> 30) & 3);
        -:  259:  in32++;
        -:  260:  /* consumed: 4 bytes (total: 8) */
        1:  261:  *(out + 16)  = base + ((*in32 >> 0) & 3);
        1:  262:  *(out + 17)  = base + ((*in32 >> 2) & 3);
        1:  263:  *(out + 18)  = base + ((*in32 >> 4) & 3);
        1:  264:  *(out + 19)  = base + ((*in32 >> 6) & 3);
        1:  265:  *(out + 20)  = base + ((*in32 >> 8) & 3);
        1:  266:  *(out + 21)  = base + ((*in32 >> 10) & 3);
        1:  267:  *(out + 22)  = base + ((*in32 >> 12) & 3);
        1:  268:  *(out + 23)  = base + ((*in32 >> 14) & 3);
        1:  269:  *(out + 24)  = base + ((*in32 >> 16) & 3);
        1:  270:  *(out + 25)  = base + ((*in32 >> 18) & 3);
        1:  271:  *(out + 26)  = base + ((*in32 >> 20) & 3);
        1:  272:  *(out + 27)  = base + ((*in32 >> 22) & 3);
        1:  273:  *(out + 28)  = base + ((*in32 >> 24) & 3);
        1:  274:  *(out + 29)  = base + ((*in32 >> 26) & 3);
        1:  275:  *(out + 30)  = base + ((*in32 >> 28) & 3);
        1:  276:  *(out + 31)  = base + ((*in32 >> 30) & 3);
        -:  277:  /* remaining: 0 bits */
        1:  278:  return 8;
        -:  279:}
        -:  280:
        -:  281:static uint32_t
        1:  282:pack3_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  283:  uint32_t tmp, length;
        1:  284:  tmp  = (*(in + 0) - base) << 0;
        1:  285:  tmp |= (*(in + 1) - base) << 3;
        1:  286:  tmp |= (*(in + 2) - base) << 6;
        1:  287:  tmp |= (*(in + 3) - base) << 9;
        1:  288:  tmp |= (*(in + 4) - base) << 12;
        1:  289:  tmp |= (*(in + 5) - base) << 15;
        1:  290:  tmp |= (*(in + 6) - base) << 18;
        1:  291:  tmp |= (*(in + 7) - base) << 21;
        1:  292:  tmp |= (*(in + 8) - base) << 24;
        1:  293:  tmp |= (*(in + 9) - base) << 27;
        1:  294:  tmp |= (*(in + 10) - base) << 30;
        1:  295:  *(uint32_t *)out = tmp;
        -:  296:  out += sizeof(uint32_t);
        -:  297:  /* consumed: 4 bytes (total: 4) */
        1:  298:  tmp  = (*(in + 10) - base) >> (3 - 1);
        1:  299:  tmp |= (*(in + 11) - base) << 1;
        1:  300:  tmp |= (*(in + 12) - base) << 4;
        1:  301:  tmp |= (*(in + 13) - base) << 7;
        1:  302:  tmp |= (*(in + 14) - base) << 10;
        1:  303:  tmp |= (*(in + 15) - base) << 13;
        1:  304:  tmp |= (*(in + 16) - base) << 16;
        1:  305:  tmp |= (*(in + 17) - base) << 19;
        1:  306:  tmp |= (*(in + 18) - base) << 22;
        1:  307:  tmp |= (*(in + 19) - base) << 25;
        1:  308:  tmp |= (*(in + 20) - base) << 28;
        1:  309:  tmp |= (*(in + 21) - base) << 31;
        1:  310:  *(uint32_t *)out = tmp;
        1:  311:  out += sizeof(uint32_t);
        -:  312:  /* consumed: 4 bytes (total: 8) */
        1:  313:  tmp  = (*(in + 21) - base) >> (3 - 2);
        1:  314:  tmp |= (*(in + 22) - base) << 2;
        1:  315:  tmp |= (*(in + 23) - base) << 5;
        1:  316:  tmp |= (*(in + 24) - base) << 8;
        1:  317:  tmp |= (*(in + 25) - base) << 11;
        1:  318:  tmp |= (*(in + 26) - base) << 14;
        1:  319:  tmp |= (*(in + 27) - base) << 17;
        1:  320:  tmp |= (*(in + 28) - base) << 20;
        1:  321:  tmp |= (*(in + 29) - base) << 23;
        1:  322:  tmp |= (*(in + 30) - base) << 26;
        1:  323:  tmp |= (*(in + 31) - base) << 29;
        -:  324:  /* remaining: 0 bits */
        -:  325:  length = (32 / 8) - (32 - 32) / 8;
        -:  326:  /* consumed: 4 bytes (total: 12) */
        -:  327:  memcpy(out, &tmp, length);
        1:  328:  return 12;
        -:  329:}
        -:  330:
        -:  331:static uint32_t
        1:  332:unpack3_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  333:  uint32_t *in32 = (uint32_t *)in;
        -:  334:  uint32_t tmp; (void)tmp;
        1:  335:  *(out + 0)  = base + ((*in32 >> 0) & 7);
        1:  336:  *(out + 1)  = base + ((*in32 >> 3) & 7);
        1:  337:  *(out + 2)  = base + ((*in32 >> 6) & 7);
        1:  338:  *(out + 3)  = base + ((*in32 >> 9) & 7);
        1:  339:  *(out + 4)  = base + ((*in32 >> 12) & 7);
        1:  340:  *(out + 5)  = base + ((*in32 >> 15) & 7);
        1:  341:  *(out + 6)  = base + ((*in32 >> 18) & 7);
        1:  342:  *(out + 7)  = base + ((*in32 >> 21) & 7);
        1:  343:  *(out + 8)  = base + ((*in32 >> 24) & 7);
        1:  344:  *(out + 9)  = base + ((*in32 >> 27) & 7);
        1:  345:  tmp = (*in32 >> 30);
        -:  346:  in32++;
        -:  347:  /* consumed: 4 bytes (total: 8) */
        1:  348:  tmp |= (*in32 % (1U << 1)) << (3 - 1);
        1:  349:  *(out + 10) = base + tmp;
        1:  350:  *(out + 11)  = base + ((*in32 >> 1) & 7);
        1:  351:  *(out + 12)  = base + ((*in32 >> 4) & 7);
        1:  352:  *(out + 13)  = base + ((*in32 >> 7) & 7);
        1:  353:  *(out + 14)  = base + ((*in32 >> 10) & 7);
        1:  354:  *(out + 15)  = base + ((*in32 >> 13) & 7);
        1:  355:  *(out + 16)  = base + ((*in32 >> 16) & 7);
        1:  356:  *(out + 17)  = base + ((*in32 >> 19) & 7);
        1:  357:  *(out + 18)  = base + ((*in32 >> 22) & 7);
        1:  358:  *(out + 19)  = base + ((*in32 >> 25) & 7);
        1:  359:  *(out + 20)  = base + ((*in32 >> 28) & 7);
        1:  360:  tmp = (*in32 >> 31);
        -:  361:  in32++;
        -:  362:  /* consumed: 4 bytes (total: 12) */
        1:  363:  tmp |= (*in32 % (1U << 2)) << (3 - 2);
        1:  364:  *(out + 21) = base + tmp;
        1:  365:  *(out + 22)  = base + ((*in32 >> 2) & 7);
        1:  366:  *(out + 23)  = base + ((*in32 >> 5) & 7);
        1:  367:  *(out + 24)  = base + ((*in32 >> 8) & 7);
        1:  368:  *(out + 25)  = base + ((*in32 >> 11) & 7);
        1:  369:  *(out + 26)  = base + ((*in32 >> 14) & 7);
        1:  370:  *(out + 27)  = base + ((*in32 >> 17) & 7);
        1:  371:  *(out + 28)  = base + ((*in32 >> 20) & 7);
        1:  372:  *(out + 29)  = base + ((*in32 >> 23) & 7);
        1:  373:  *(out + 30)  = base + ((*in32 >> 26) & 7);
        1:  374:  *(out + 31)  = base + ((*in32 >> 29) & 7);
        -:  375:  /* remaining: 0 bits */
        1:  376:  return 12;
        -:  377:}
        -:  378:
        -:  379:static uint32_t
        1:  380:pack4_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  381:  uint32_t tmp, length;
        1:  382:  tmp  = (*(in + 0) - base) << 0;
        1:  383:  tmp |= (*(in + 1) - base) << 4;
        1:  384:  tmp |= (*(in + 2) - base) << 8;
        1:  385:  tmp |= (*(in + 3) - base) << 12;
        1:  386:  tmp |= (*(in + 4) - base) << 16;
        1:  387:  tmp |= (*(in + 5) - base) << 20;
        1:  388:  tmp |= (*(in + 6) - base) << 24;
        1:  389:  tmp |= (*(in + 7) - base) << 28;
        1:  390:  *(uint32_t *)out = tmp;
        -:  391:  out += sizeof(uint32_t);
        -:  392:  /* consumed: 4 bytes (total: 4) */
        1:  393:  tmp  = (*(in + 8) - base) << 0;
        1:  394:  tmp |= (*(in + 9) - base) << 4;
        1:  395:  tmp |= (*(in + 10) - base) << 8;
        1:  396:  tmp |= (*(in + 11) - base) << 12;
        1:  397:  tmp |= (*(in + 12) - base) << 16;
        1:  398:  tmp |= (*(in + 13) - base) << 20;
        1:  399:  tmp |= (*(in + 14) - base) << 24;
        1:  400:  tmp |= (*(in + 15) - base) << 28;
        1:  401:  *(uint32_t *)out = tmp;
        -:  402:  out += sizeof(uint32_t);
        -:  403:  /* consumed: 4 bytes (total: 8) */
        1:  404:  tmp  = (*(in + 16) - base) << 0;
        1:  405:  tmp |= (*(in + 17) - base) << 4;
        1:  406:  tmp |= (*(in + 18) - base) << 8;
        1:  407:  tmp |= (*(in + 19) - base) << 12;
        1:  408:  tmp |= (*(in + 20) - base) << 16;
        1:  409:  tmp |= (*(in + 21) - base) << 20;
        1:  410:  tmp |= (*(in + 22) - base) << 24;
        1:  411:  tmp |= (*(in + 23) - base) << 28;
        1:  412:  *(uint32_t *)out = tmp;
        1:  413:  out += sizeof(uint32_t);
        -:  414:  /* consumed: 4 bytes (total: 12) */
        1:  415:  tmp  = (*(in + 24) - base) << 0;
        1:  416:  tmp |= (*(in + 25) - base) << 4;
        1:  417:  tmp |= (*(in + 26) - base) << 8;
        1:  418:  tmp |= (*(in + 27) - base) << 12;
        1:  419:  tmp |= (*(in + 28) - base) << 16;
        1:  420:  tmp |= (*(in + 29) - base) << 20;
        1:  421:  tmp |= (*(in + 30) - base) << 24;
        1:  422:  tmp |= (*(in + 31) - base) << 28;
        -:  423:  /* remaining: 0 bits */
        -:  424:  length = (32 / 8) - (32 - 32) / 8;
        -:  425:  /* consumed: 4 bytes (total: 16) */
        -:  426:  memcpy(out, &tmp, length);
        1:  427:  return 16;
        -:  428:}
        -:  429:
        -:  430:static uint32_t
        1:  431:unpack4_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  432:  uint32_t *in32 = (uint32_t *)in;
        -:  433:  uint32_t tmp; (void)tmp;
        1:  434:  *(out + 0)  = base + ((*in32 >> 0) & 15);
        1:  435:  *(out + 1)  = base + ((*in32 >> 4) & 15);
        1:  436:  *(out + 2)  = base + ((*in32 >> 8) & 15);
        1:  437:  *(out + 3)  = base + ((*in32 >> 12) & 15);
        1:  438:  *(out + 4)  = base + ((*in32 >> 16) & 15);
        1:  439:  *(out + 5)  = base + ((*in32 >> 20) & 15);
        1:  440:  *(out + 6)  = base + ((*in32 >> 24) & 15);
        1:  441:  *(out + 7)  = base + ((*in32 >> 28) & 15);
        -:  442:  in32++;
        -:  443:  /* consumed: 4 bytes (total: 8) */
        1:  444:  *(out + 8)  = base + ((*in32 >> 0) & 15);
        1:  445:  *(out + 9)  = base + ((*in32 >> 4) & 15);
        1:  446:  *(out + 10)  = base + ((*in32 >> 8) & 15);
        1:  447:  *(out + 11)  = base + ((*in32 >> 12) & 15);
        1:  448:  *(out + 12)  = base + ((*in32 >> 16) & 15);
        1:  449:  *(out + 13)  = base + ((*in32 >> 20) & 15);
        1:  450:  *(out + 14)  = base + ((*in32 >> 24) & 15);
        1:  451:  *(out + 15)  = base + ((*in32 >> 28) & 15);
        -:  452:  in32++;
        -:  453:  /* consumed: 4 bytes (total: 12) */
        1:  454:  *(out + 16)  = base + ((*in32 >> 0) & 15);
        1:  455:  *(out + 17)  = base + ((*in32 >> 4) & 15);
        1:  456:  *(out + 18)  = base + ((*in32 >> 8) & 15);
        1:  457:  *(out + 19)  = base + ((*in32 >> 12) & 15);
        1:  458:  *(out + 20)  = base + ((*in32 >> 16) & 15);
        1:  459:  *(out + 21)  = base + ((*in32 >> 20) & 15);
        1:  460:  *(out + 22)  = base + ((*in32 >> 24) & 15);
        1:  461:  *(out + 23)  = base + ((*in32 >> 28) & 15);
        -:  462:  in32++;
        -:  463:  /* consumed: 4 bytes (total: 16) */
        1:  464:  *(out + 24)  = base + ((*in32 >> 0) & 15);
        1:  465:  *(out + 25)  = base + ((*in32 >> 4) & 15);
        1:  466:  *(out + 26)  = base + ((*in32 >> 8) & 15);
        1:  467:  *(out + 27)  = base + ((*in32 >> 12) & 15);
        1:  468:  *(out + 28)  = base + ((*in32 >> 16) & 15);
        1:  469:  *(out + 29)  = base + ((*in32 >> 20) & 15);
        1:  470:  *(out + 30)  = base + ((*in32 >> 24) & 15);
        1:  471:  *(out + 31)  = base + ((*in32 >> 28) & 15);
        -:  472:  /* remaining: 0 bits */
        1:  473:  return 16;
        -:  474:}
        -:  475:
        -:  476:static uint32_t
        3:  477:pack5_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  478:  uint32_t tmp, length;
        3:  479:  tmp  = (*(in + 0) - base) << 0;
        3:  480:  tmp |= (*(in + 1) - base) << 5;
        3:  481:  tmp |= (*(in + 2) - base) << 10;
        3:  482:  tmp |= (*(in + 3) - base) << 15;
        3:  483:  tmp |= (*(in + 4) - base) << 20;
        3:  484:  tmp |= (*(in + 5) - base) << 25;
        3:  485:  tmp |= (*(in + 6) - base) << 30;
        3:  486:  *(uint32_t *)out = tmp;
        -:  487:  out += sizeof(uint32_t);
        -:  488:  /* consumed: 4 bytes (total: 4) */
        3:  489:  tmp  = (*(in + 6) - base) >> (5 - 3);
        3:  490:  tmp |= (*(in + 7) - base) << 3;
        3:  491:  tmp |= (*(in + 8) - base) << 8;
        3:  492:  tmp |= (*(in + 9) - base) << 13;
        3:  493:  tmp |= (*(in + 10) - base) << 18;
        3:  494:  tmp |= (*(in + 11) - base) << 23;
        3:  495:  tmp |= (*(in + 12) - base) << 28;
        3:  496:  *(uint32_t *)out = tmp;
        -:  497:  out += sizeof(uint32_t);
        -:  498:  /* consumed: 4 bytes (total: 8) */
        3:  499:  tmp  = (*(in + 12) - base) >> (5 - 1);
        3:  500:  tmp |= (*(in + 13) - base) << 1;
        3:  501:  tmp |= (*(in + 14) - base) << 6;
        3:  502:  tmp |= (*(in + 15) - base) << 11;
        3:  503:  tmp |= (*(in + 16) - base) << 16;
        3:  504:  tmp |= (*(in + 17) - base) << 21;
        3:  505:  tmp |= (*(in + 18) - base) << 26;
        3:  506:  tmp |= (*(in + 19) - base) << 31;
        3:  507:  *(uint32_t *)out = tmp;
        -:  508:  out += sizeof(uint32_t);
        -:  509:  /* consumed: 4 bytes (total: 12) */
        3:  510:  tmp  = (*(in + 19) - base) >> (5 - 4);
        3:  511:  tmp |= (*(in + 20) - base) << 4;
        3:  512:  tmp |= (*(in + 21) - base) << 9;
        3:  513:  tmp |= (*(in + 22) - base) << 14;
        3:  514:  tmp |= (*(in + 23) - base) << 19;
        3:  515:  tmp |= (*(in + 24) - base) << 24;
        3:  516:  tmp |= (*(in + 25) - base) << 29;
        3:  517:  *(uint32_t *)out = tmp;
        3:  518:  out += sizeof(uint32_t);
        -:  519:  /* consumed: 4 bytes (total: 16) */
        3:  520:  tmp  = (*(in + 25) - base) >> (5 - 2);
        3:  521:  tmp |= (*(in + 26) - base) << 2;
        3:  522:  tmp |= (*(in + 27) - base) << 7;
        3:  523:  tmp |= (*(in + 28) - base) << 12;
        3:  524:  tmp |= (*(in + 29) - base) << 17;
        3:  525:  tmp |= (*(in + 30) - base) << 22;
        3:  526:  tmp |= (*(in + 31) - base) << 27;
        -:  527:  /* remaining: 0 bits */
        -:  528:  length = (32 / 8) - (32 - 32) / 8;
        -:  529:  /* consumed: 4 bytes (total: 20) */
        -:  530:  memcpy(out, &tmp, length);
        3:  531:  return 20;
        -:  532:}
        -:  533:
        -:  534:static uint32_t
        3:  535:unpack5_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  536:  uint32_t *in32 = (uint32_t *)in;
        -:  537:  uint32_t tmp; (void)tmp;
        3:  538:  *(out + 0)  = base + ((*in32 >> 0) & 31);
        3:  539:  *(out + 1)  = base + ((*in32 >> 5) & 31);
        3:  540:  *(out + 2)  = base + ((*in32 >> 10) & 31);
        3:  541:  *(out + 3)  = base + ((*in32 >> 15) & 31);
        3:  542:  *(out + 4)  = base + ((*in32 >> 20) & 31);
        3:  543:  *(out + 5)  = base + ((*in32 >> 25) & 31);
        3:  544:  tmp = (*in32 >> 30);
        -:  545:  in32++;
        -:  546:  /* consumed: 4 bytes (total: 8) */
        3:  547:  tmp |= (*in32 % (1U << 3)) << (5 - 3);
        3:  548:  *(out + 6) = base + tmp;
        3:  549:  *(out + 7)  = base + ((*in32 >> 3) & 31);
        3:  550:  *(out + 8)  = base + ((*in32 >> 8) & 31);
        3:  551:  *(out + 9)  = base + ((*in32 >> 13) & 31);
        3:  552:  *(out + 10)  = base + ((*in32 >> 18) & 31);
        3:  553:  *(out + 11)  = base + ((*in32 >> 23) & 31);
        3:  554:  tmp = (*in32 >> 28);
        -:  555:  in32++;
        -:  556:  /* consumed: 4 bytes (total: 12) */
        3:  557:  tmp |= (*in32 % (1U << 1)) << (5 - 1);
        3:  558:  *(out + 12) = base + tmp;
        3:  559:  *(out + 13)  = base + ((*in32 >> 1) & 31);
        3:  560:  *(out + 14)  = base + ((*in32 >> 6) & 31);
        3:  561:  *(out + 15)  = base + ((*in32 >> 11) & 31);
        3:  562:  *(out + 16)  = base + ((*in32 >> 16) & 31);
        3:  563:  *(out + 17)  = base + ((*in32 >> 21) & 31);
        3:  564:  *(out + 18)  = base + ((*in32 >> 26) & 31);
        3:  565:  tmp = (*in32 >> 31);
        -:  566:  in32++;
        -:  567:  /* consumed: 4 bytes (total: 16) */
        3:  568:  tmp |= (*in32 % (1U << 4)) << (5 - 4);
        3:  569:  *(out + 19) = base + tmp;
        3:  570:  *(out + 20)  = base + ((*in32 >> 4) & 31);
        3:  571:  *(out + 21)  = base + ((*in32 >> 9) & 31);
        3:  572:  *(out + 22)  = base + ((*in32 >> 14) & 31);
        3:  573:  *(out + 23)  = base + ((*in32 >> 19) & 31);
        3:  574:  *(out + 24)  = base + ((*in32 >> 24) & 31);
        3:  575:  tmp = (*in32 >> 29);
        -:  576:  in32++;
        -:  577:  /* consumed: 4 bytes (total: 20) */
        3:  578:  tmp |= (*in32 % (1U << 2)) << (5 - 2);
        3:  579:  *(out + 25) = base + tmp;
        3:  580:  *(out + 26)  = base + ((*in32 >> 2) & 31);
        3:  581:  *(out + 27)  = base + ((*in32 >> 7) & 31);
        3:  582:  *(out + 28)  = base + ((*in32 >> 12) & 31);
        3:  583:  *(out + 29)  = base + ((*in32 >> 17) & 31);
        3:  584:  *(out + 30)  = base + ((*in32 >> 22) & 31);
        3:  585:  *(out + 31)  = base + ((*in32 >> 27) & 31);
        -:  586:  /* remaining: 0 bits */
        3:  587:  return 20;
        -:  588:}
        -:  589:
        -:  590:static uint32_t
       38:  591:pack6_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  592:  uint32_t tmp, length;
       38:  593:  tmp  = (*(in + 0) - base) << 0;
       38:  594:  tmp |= (*(in + 1) - base) << 6;
       38:  595:  tmp |= (*(in + 2) - base) << 12;
       38:  596:  tmp |= (*(in + 3) - base) << 18;
       38:  597:  tmp |= (*(in + 4) - base) << 24;
       38:  598:  tmp |= (*(in + 5) - base) << 30;
       38:  599:  *(uint32_t *)out = tmp;
        -:  600:  out += sizeof(uint32_t);
        -:  601:  /* consumed: 4 bytes (total: 4) */
       38:  602:  tmp  = (*(in + 5) - base) >> (6 - 4);
       38:  603:  tmp |= (*(in + 6) - base) << 4;
       38:  604:  tmp |= (*(in + 7) - base) << 10;
       38:  605:  tmp |= (*(in + 8) - base) << 16;
       38:  606:  tmp |= (*(in + 9) - base) << 22;
       38:  607:  tmp |= (*(in + 10) - base) << 28;
       38:  608:  *(uint32_t *)out = tmp;
        -:  609:  out += sizeof(uint32_t);
        -:  610:  /* consumed: 4 bytes (total: 8) */
       38:  611:  tmp  = (*(in + 10) - base) >> (6 - 2);
       38:  612:  tmp |= (*(in + 11) - base) << 2;
       38:  613:  tmp |= (*(in + 12) - base) << 8;
       38:  614:  tmp |= (*(in + 13) - base) << 14;
       38:  615:  tmp |= (*(in + 14) - base) << 20;
       38:  616:  tmp |= (*(in + 15) - base) << 26;
       38:  617:  *(uint32_t *)out = tmp;
        -:  618:  out += sizeof(uint32_t);
        -:  619:  /* consumed: 4 bytes (total: 12) */
       38:  620:  tmp  = (*(in + 16) - base) << 0;
       38:  621:  tmp |= (*(in + 17) - base) << 6;
       38:  622:  tmp |= (*(in + 18) - base) << 12;
       38:  623:  tmp |= (*(in + 19) - base) << 18;
       38:  624:  tmp |= (*(in + 20) - base) << 24;
       38:  625:  tmp |= (*(in + 21) - base) << 30;
       38:  626:  *(uint32_t *)out = tmp;
        -:  627:  out += sizeof(uint32_t);
        -:  628:  /* consumed: 4 bytes (total: 16) */
       38:  629:  tmp  = (*(in + 21) - base) >> (6 - 4);
       38:  630:  tmp |= (*(in + 22) - base) << 4;
       38:  631:  tmp |= (*(in + 23) - base) << 10;
       38:  632:  tmp |= (*(in + 24) - base) << 16;
       38:  633:  tmp |= (*(in + 25) - base) << 22;
       38:  634:  tmp |= (*(in + 26) - base) << 28;
       38:  635:  *(uint32_t *)out = tmp;
       38:  636:  out += sizeof(uint32_t);
        -:  637:  /* consumed: 4 bytes (total: 20) */
       38:  638:  tmp  = (*(in + 26) - base) >> (6 - 2);
       38:  639:  tmp |= (*(in + 27) - base) << 2;
       38:  640:  tmp |= (*(in + 28) - base) << 8;
       38:  641:  tmp |= (*(in + 29) - base) << 14;
       38:  642:  tmp |= (*(in + 30) - base) << 20;
       38:  643:  tmp |= (*(in + 31) - base) << 26;
        -:  644:  /* remaining: 0 bits */
        -:  645:  length = (32 / 8) - (32 - 32) / 8;
        -:  646:  /* consumed: 4 bytes (total: 24) */
        -:  647:  memcpy(out, &tmp, length);
       38:  648:  return 24;
        -:  649:}
        -:  650:
        -:  651:static uint32_t
        6:  652:unpack6_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  653:  uint32_t *in32 = (uint32_t *)in;
        -:  654:  uint32_t tmp; (void)tmp;
        6:  655:  *(out + 0)  = base + ((*in32 >> 0) & 63);
        6:  656:  *(out + 1)  = base + ((*in32 >> 6) & 63);
        6:  657:  *(out + 2)  = base + ((*in32 >> 12) & 63);
        6:  658:  *(out + 3)  = base + ((*in32 >> 18) & 63);
        6:  659:  *(out + 4)  = base + ((*in32 >> 24) & 63);
        6:  660:  tmp = (*in32 >> 30);
        -:  661:  in32++;
        -:  662:  /* consumed: 4 bytes (total: 8) */
        6:  663:  tmp |= (*in32 % (1U << 4)) << (6 - 4);
        6:  664:  *(out + 5) = base + tmp;
        6:  665:  *(out + 6)  = base + ((*in32 >> 4) & 63);
        6:  666:  *(out + 7)  = base + ((*in32 >> 10) & 63);
        6:  667:  *(out + 8)  = base + ((*in32 >> 16) & 63);
        6:  668:  *(out + 9)  = base + ((*in32 >> 22) & 63);
        6:  669:  tmp = (*in32 >> 28);
        -:  670:  in32++;
        -:  671:  /* consumed: 4 bytes (total: 12) */
        6:  672:  tmp |= (*in32 % (1U << 2)) << (6 - 2);
        6:  673:  *(out + 10) = base + tmp;
        6:  674:  *(out + 11)  = base + ((*in32 >> 2) & 63);
        6:  675:  *(out + 12)  = base + ((*in32 >> 8) & 63);
        6:  676:  *(out + 13)  = base + ((*in32 >> 14) & 63);
        6:  677:  *(out + 14)  = base + ((*in32 >> 20) & 63);
        6:  678:  *(out + 15)  = base + ((*in32 >> 26) & 63);
        -:  679:  in32++;
        -:  680:  /* consumed: 4 bytes (total: 16) */
        6:  681:  *(out + 16)  = base + ((*in32 >> 0) & 63);
        6:  682:  *(out + 17)  = base + ((*in32 >> 6) & 63);
        6:  683:  *(out + 18)  = base + ((*in32 >> 12) & 63);
        6:  684:  *(out + 19)  = base + ((*in32 >> 18) & 63);
        6:  685:  *(out + 20)  = base + ((*in32 >> 24) & 63);
        6:  686:  tmp = (*in32 >> 30);
        -:  687:  in32++;
        -:  688:  /* consumed: 4 bytes (total: 20) */
        6:  689:  tmp |= (*in32 % (1U << 4)) << (6 - 4);
        6:  690:  *(out + 21) = base + tmp;
        6:  691:  *(out + 22)  = base + ((*in32 >> 4) & 63);
        6:  692:  *(out + 23)  = base + ((*in32 >> 10) & 63);
        6:  693:  *(out + 24)  = base + ((*in32 >> 16) & 63);
        6:  694:  *(out + 25)  = base + ((*in32 >> 22) & 63);
        6:  695:  tmp = (*in32 >> 28);
        -:  696:  in32++;
        -:  697:  /* consumed: 4 bytes (total: 24) */
        6:  698:  tmp |= (*in32 % (1U << 2)) << (6 - 2);
        6:  699:  *(out + 26) = base + tmp;
        6:  700:  *(out + 27)  = base + ((*in32 >> 2) & 63);
        6:  701:  *(out + 28)  = base + ((*in32 >> 8) & 63);
        6:  702:  *(out + 29)  = base + ((*in32 >> 14) & 63);
        6:  703:  *(out + 30)  = base + ((*in32 >> 20) & 63);
        6:  704:  *(out + 31)  = base + ((*in32 >> 26) & 63);
        -:  705:  /* remaining: 0 bits */
        6:  706:  return 24;
        -:  707:}
        -:  708:
        -:  709:static uint32_t
      171:  710:pack7_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  711:  uint32_t tmp, length;
      171:  712:  tmp  = (*(in + 0) - base) << 0;
      171:  713:  tmp |= (*(in + 1) - base) << 7;
      171:  714:  tmp |= (*(in + 2) - base) << 14;
      171:  715:  tmp |= (*(in + 3) - base) << 21;
      171:  716:  tmp |= (*(in + 4) - base) << 28;
      171:  717:  *(uint32_t *)out = tmp;
        -:  718:  out += sizeof(uint32_t);
        -:  719:  /* consumed: 4 bytes (total: 4) */
      171:  720:  tmp  = (*(in + 4) - base) >> (7 - 3);
      171:  721:  tmp |= (*(in + 5) - base) << 3;
      171:  722:  tmp |= (*(in + 6) - base) << 10;
      171:  723:  tmp |= (*(in + 7) - base) << 17;
      171:  724:  tmp |= (*(in + 8) - base) << 24;
      171:  725:  tmp |= (*(in + 9) - base) << 31;
      171:  726:  *(uint32_t *)out = tmp;
        -:  727:  out += sizeof(uint32_t);
        -:  728:  /* consumed: 4 bytes (total: 8) */
      171:  729:  tmp  = (*(in + 9) - base) >> (7 - 6);
      171:  730:  tmp |= (*(in + 10) - base) << 6;
      171:  731:  tmp |= (*(in + 11) - base) << 13;
      171:  732:  tmp |= (*(in + 12) - base) << 20;
      171:  733:  tmp |= (*(in + 13) - base) << 27;
      171:  734:  *(uint32_t *)out = tmp;
        -:  735:  out += sizeof(uint32_t);
        -:  736:  /* consumed: 4 bytes (total: 12) */
      171:  737:  tmp  = (*(in + 13) - base) >> (7 - 2);
      171:  738:  tmp |= (*(in + 14) - base) << 2;
      171:  739:  tmp |= (*(in + 15) - base) << 9;
      171:  740:  tmp |= (*(in + 16) - base) << 16;
      171:  741:  tmp |= (*(in + 17) - base) << 23;
      171:  742:  tmp |= (*(in + 18) - base) << 30;
      171:  743:  *(uint32_t *)out = tmp;
        -:  744:  out += sizeof(uint32_t);
        -:  745:  /* consumed: 4 bytes (total: 16) */
      171:  746:  tmp  = (*(in + 18) - base) >> (7 - 5);
      171:  747:  tmp |= (*(in + 19) - base) << 5;
      171:  748:  tmp |= (*(in + 20) - base) << 12;
      171:  749:  tmp |= (*(in + 21) - base) << 19;
      171:  750:  tmp |= (*(in + 22) - base) << 26;
      171:  751:  *(uint32_t *)out = tmp;
        -:  752:  out += sizeof(uint32_t);
        -:  753:  /* consumed: 4 bytes (total: 20) */
      171:  754:  tmp  = (*(in + 22) - base) >> (7 - 1);
      171:  755:  tmp |= (*(in + 23) - base) << 1;
      171:  756:  tmp |= (*(in + 24) - base) << 8;
      171:  757:  tmp |= (*(in + 25) - base) << 15;
      171:  758:  tmp |= (*(in + 26) - base) << 22;
      171:  759:  tmp |= (*(in + 27) - base) << 29;
      171:  760:  *(uint32_t *)out = tmp;
      171:  761:  out += sizeof(uint32_t);
        -:  762:  /* consumed: 4 bytes (total: 24) */
      171:  763:  tmp  = (*(in + 27) - base) >> (7 - 4);
      171:  764:  tmp |= (*(in + 28) - base) << 4;
      171:  765:  tmp |= (*(in + 29) - base) << 11;
      171:  766:  tmp |= (*(in + 30) - base) << 18;
      171:  767:  tmp |= (*(in + 31) - base) << 25;
        -:  768:  /* remaining: 0 bits */
        -:  769:  length = (32 / 8) - (32 - 32) / 8;
        -:  770:  /* consumed: 4 bytes (total: 28) */
        -:  771:  memcpy(out, &tmp, length);
      171:  772:  return 28;
        -:  773:}
        -:  774:
        -:  775:static uint32_t
       11:  776:unpack7_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  777:  uint32_t *in32 = (uint32_t *)in;
        -:  778:  uint32_t tmp; (void)tmp;
       11:  779:  *(out + 0)  = base + ((*in32 >> 0) & 127);
       11:  780:  *(out + 1)  = base + ((*in32 >> 7) & 127);
       11:  781:  *(out + 2)  = base + ((*in32 >> 14) & 127);
       11:  782:  *(out + 3)  = base + ((*in32 >> 21) & 127);
       11:  783:  tmp = (*in32 >> 28);
        -:  784:  in32++;
        -:  785:  /* consumed: 4 bytes (total: 8) */
       11:  786:  tmp |= (*in32 % (1U << 3)) << (7 - 3);
       11:  787:  *(out + 4) = base + tmp;
       11:  788:  *(out + 5)  = base + ((*in32 >> 3) & 127);
       11:  789:  *(out + 6)  = base + ((*in32 >> 10) & 127);
       11:  790:  *(out + 7)  = base + ((*in32 >> 17) & 127);
       11:  791:  *(out + 8)  = base + ((*in32 >> 24) & 127);
       11:  792:  tmp = (*in32 >> 31);
        -:  793:  in32++;
        -:  794:  /* consumed: 4 bytes (total: 12) */
       11:  795:  tmp |= (*in32 % (1U << 6)) << (7 - 6);
       11:  796:  *(out + 9) = base + tmp;
       11:  797:  *(out + 10)  = base + ((*in32 >> 6) & 127);
       11:  798:  *(out + 11)  = base + ((*in32 >> 13) & 127);
       11:  799:  *(out + 12)  = base + ((*in32 >> 20) & 127);
       11:  800:  tmp = (*in32 >> 27);
        -:  801:  in32++;
        -:  802:  /* consumed: 4 bytes (total: 16) */
       11:  803:  tmp |= (*in32 % (1U << 2)) << (7 - 2);
       11:  804:  *(out + 13) = base + tmp;
       11:  805:  *(out + 14)  = base + ((*in32 >> 2) & 127);
       11:  806:  *(out + 15)  = base + ((*in32 >> 9) & 127);
       11:  807:  *(out + 16)  = base + ((*in32 >> 16) & 127);
       11:  808:  *(out + 17)  = base + ((*in32 >> 23) & 127);
       11:  809:  tmp = (*in32 >> 30);
        -:  810:  in32++;
        -:  811:  /* consumed: 4 bytes (total: 20) */
       11:  812:  tmp |= (*in32 % (1U << 5)) << (7 - 5);
       11:  813:  *(out + 18) = base + tmp;
       11:  814:  *(out + 19)  = base + ((*in32 >> 5) & 127);
       11:  815:  *(out + 20)  = base + ((*in32 >> 12) & 127);
       11:  816:  *(out + 21)  = base + ((*in32 >> 19) & 127);
       11:  817:  tmp = (*in32 >> 26);
        -:  818:  in32++;
        -:  819:  /* consumed: 4 bytes (total: 24) */
       11:  820:  tmp |= (*in32 % (1U << 1)) << (7 - 1);
       11:  821:  *(out + 22) = base + tmp;
       11:  822:  *(out + 23)  = base + ((*in32 >> 1) & 127);
       11:  823:  *(out + 24)  = base + ((*in32 >> 8) & 127);
       11:  824:  *(out + 25)  = base + ((*in32 >> 15) & 127);
       11:  825:  *(out + 26)  = base + ((*in32 >> 22) & 127);
       11:  826:  tmp = (*in32 >> 29);
        -:  827:  in32++;
        -:  828:  /* consumed: 4 bytes (total: 28) */
       11:  829:  tmp |= (*in32 % (1U << 4)) << (7 - 4);
       11:  830:  *(out + 27) = base + tmp;
       11:  831:  *(out + 28)  = base + ((*in32 >> 4) & 127);
       11:  832:  *(out + 29)  = base + ((*in32 >> 11) & 127);
       11:  833:  *(out + 30)  = base + ((*in32 >> 18) & 127);
       11:  834:  *(out + 31)  = base + ((*in32 >> 25) & 127);
        -:  835:  /* remaining: 0 bits */
       11:  836:  return 28;
        -:  837:}
        -:  838:
        -:  839:static uint32_t
      725:  840:pack8_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  841:  uint32_t tmp, length;
      725:  842:  tmp  = (*(in + 0) - base) << 0;
      725:  843:  tmp |= (*(in + 1) - base) << 8;
      725:  844:  tmp |= (*(in + 2) - base) << 16;
      725:  845:  tmp |= (*(in + 3) - base) << 24;
      725:  846:  *(uint32_t *)out = tmp;
        -:  847:  out += sizeof(uint32_t);
        -:  848:  /* consumed: 4 bytes (total: 4) */
      725:  849:  tmp  = (*(in + 4) - base) << 0;
      725:  850:  tmp |= (*(in + 5) - base) << 8;
      725:  851:  tmp |= (*(in + 6) - base) << 16;
      725:  852:  tmp |= (*(in + 7) - base) << 24;
      725:  853:  *(uint32_t *)out = tmp;
        -:  854:  out += sizeof(uint32_t);
        -:  855:  /* consumed: 4 bytes (total: 8) */
      725:  856:  tmp  = (*(in + 8) - base) << 0;
      725:  857:  tmp |= (*(in + 9) - base) << 8;
      725:  858:  tmp |= (*(in + 10) - base) << 16;
      725:  859:  tmp |= (*(in + 11) - base) << 24;
      725:  860:  *(uint32_t *)out = tmp;
        -:  861:  out += sizeof(uint32_t);
        -:  862:  /* consumed: 4 bytes (total: 12) */
      725:  863:  tmp  = (*(in + 12) - base) << 0;
      725:  864:  tmp |= (*(in + 13) - base) << 8;
      725:  865:  tmp |= (*(in + 14) - base) << 16;
      725:  866:  tmp |= (*(in + 15) - base) << 24;
      725:  867:  *(uint32_t *)out = tmp;
        -:  868:  out += sizeof(uint32_t);
        -:  869:  /* consumed: 4 bytes (total: 16) */
      725:  870:  tmp  = (*(in + 16) - base) << 0;
      725:  871:  tmp |= (*(in + 17) - base) << 8;
      725:  872:  tmp |= (*(in + 18) - base) << 16;
      725:  873:  tmp |= (*(in + 19) - base) << 24;
      725:  874:  *(uint32_t *)out = tmp;
        -:  875:  out += sizeof(uint32_t);
        -:  876:  /* consumed: 4 bytes (total: 20) */
      725:  877:  tmp  = (*(in + 20) - base) << 0;
      725:  878:  tmp |= (*(in + 21) - base) << 8;
      725:  879:  tmp |= (*(in + 22) - base) << 16;
      725:  880:  tmp |= (*(in + 23) - base) << 24;
      725:  881:  *(uint32_t *)out = tmp;
        -:  882:  out += sizeof(uint32_t);
        -:  883:  /* consumed: 4 bytes (total: 24) */
      725:  884:  tmp  = (*(in + 24) - base) << 0;
      725:  885:  tmp |= (*(in + 25) - base) << 8;
      725:  886:  tmp |= (*(in + 26) - base) << 16;
      725:  887:  tmp |= (*(in + 27) - base) << 24;
      725:  888:  *(uint32_t *)out = tmp;
      725:  889:  out += sizeof(uint32_t);
        -:  890:  /* consumed: 4 bytes (total: 28) */
      725:  891:  tmp  = (*(in + 28) - base) << 0;
      725:  892:  tmp |= (*(in + 29) - base) << 8;
      725:  893:  tmp |= (*(in + 30) - base) << 16;
      725:  894:  tmp |= (*(in + 31) - base) << 24;
        -:  895:  /* remaining: 0 bits */
        -:  896:  length = (32 / 8) - (32 - 32) / 8;
        -:  897:  /* consumed: 4 bytes (total: 32) */
        -:  898:  memcpy(out, &tmp, length);
      725:  899:  return 32;
        -:  900:}
        -:  901:
        -:  902:static uint32_t
       21:  903:unpack8_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:  904:  uint32_t *in32 = (uint32_t *)in;
        -:  905:  uint32_t tmp; (void)tmp;
       21:  906:  *(out + 0)  = base + ((*in32 >> 0) & 255);
       21:  907:  *(out + 1)  = base + ((*in32 >> 8) & 255);
       21:  908:  *(out + 2)  = base + ((*in32 >> 16) & 255);
       21:  909:  *(out + 3)  = base + ((*in32 >> 24) & 255);
        -:  910:  in32++;
        -:  911:  /* consumed: 4 bytes (total: 8) */
       21:  912:  *(out + 4)  = base + ((*in32 >> 0) & 255);
       21:  913:  *(out + 5)  = base + ((*in32 >> 8) & 255);
       21:  914:  *(out + 6)  = base + ((*in32 >> 16) & 255);
       21:  915:  *(out + 7)  = base + ((*in32 >> 24) & 255);
        -:  916:  in32++;
        -:  917:  /* consumed: 4 bytes (total: 12) */
       21:  918:  *(out + 8)  = base + ((*in32 >> 0) & 255);
       21:  919:  *(out + 9)  = base + ((*in32 >> 8) & 255);
       21:  920:  *(out + 10)  = base + ((*in32 >> 16) & 255);
       21:  921:  *(out + 11)  = base + ((*in32 >> 24) & 255);
        -:  922:  in32++;
        -:  923:  /* consumed: 4 bytes (total: 16) */
       21:  924:  *(out + 12)  = base + ((*in32 >> 0) & 255);
       21:  925:  *(out + 13)  = base + ((*in32 >> 8) & 255);
       21:  926:  *(out + 14)  = base + ((*in32 >> 16) & 255);
       21:  927:  *(out + 15)  = base + ((*in32 >> 24) & 255);
        -:  928:  in32++;
        -:  929:  /* consumed: 4 bytes (total: 20) */
       21:  930:  *(out + 16)  = base + ((*in32 >> 0) & 255);
       21:  931:  *(out + 17)  = base + ((*in32 >> 8) & 255);
       21:  932:  *(out + 18)  = base + ((*in32 >> 16) & 255);
       21:  933:  *(out + 19)  = base + ((*in32 >> 24) & 255);
        -:  934:  in32++;
        -:  935:  /* consumed: 4 bytes (total: 24) */
       21:  936:  *(out + 20)  = base + ((*in32 >> 0) & 255);
       21:  937:  *(out + 21)  = base + ((*in32 >> 8) & 255);
       21:  938:  *(out + 22)  = base + ((*in32 >> 16) & 255);
       21:  939:  *(out + 23)  = base + ((*in32 >> 24) & 255);
        -:  940:  in32++;
        -:  941:  /* consumed: 4 bytes (total: 28) */
       21:  942:  *(out + 24)  = base + ((*in32 >> 0) & 255);
       21:  943:  *(out + 25)  = base + ((*in32 >> 8) & 255);
       21:  944:  *(out + 26)  = base + ((*in32 >> 16) & 255);
       21:  945:  *(out + 27)  = base + ((*in32 >> 24) & 255);
        -:  946:  in32++;
        -:  947:  /* consumed: 4 bytes (total: 32) */
       21:  948:  *(out + 28)  = base + ((*in32 >> 0) & 255);
       21:  949:  *(out + 29)  = base + ((*in32 >> 8) & 255);
       21:  950:  *(out + 30)  = base + ((*in32 >> 16) & 255);
       21:  951:  *(out + 31)  = base + ((*in32 >> 24) & 255);
        -:  952:  /* remaining: 0 bits */
       21:  953:  return 32;
        -:  954:}
        -:  955:
        -:  956:static uint32_t
     2969:  957:pack9_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:  958:  uint32_t tmp, length;
     2969:  959:  tmp  = (*(in + 0) - base) << 0;
     2969:  960:  tmp |= (*(in + 1) - base) << 9;
     2969:  961:  tmp |= (*(in + 2) - base) << 18;
     2969:  962:  tmp |= (*(in + 3) - base) << 27;
     2969:  963:  *(uint32_t *)out = tmp;
        -:  964:  out += sizeof(uint32_t);
        -:  965:  /* consumed: 4 bytes (total: 4) */
     2969:  966:  tmp  = (*(in + 3) - base) >> (9 - 4);
     2969:  967:  tmp |= (*(in + 4) - base) << 4;
     2969:  968:  tmp |= (*(in + 5) - base) << 13;
     2969:  969:  tmp |= (*(in + 6) - base) << 22;
     2969:  970:  tmp |= (*(in + 7) - base) << 31;
     2969:  971:  *(uint32_t *)out = tmp;
        -:  972:  out += sizeof(uint32_t);
        -:  973:  /* consumed: 4 bytes (total: 8) */
     2969:  974:  tmp  = (*(in + 7) - base) >> (9 - 8);
     2969:  975:  tmp |= (*(in + 8) - base) << 8;
     2969:  976:  tmp |= (*(in + 9) - base) << 17;
     2969:  977:  tmp |= (*(in + 10) - base) << 26;
     2969:  978:  *(uint32_t *)out = tmp;
        -:  979:  out += sizeof(uint32_t);
        -:  980:  /* consumed: 4 bytes (total: 12) */
     2969:  981:  tmp  = (*(in + 10) - base) >> (9 - 3);
     2969:  982:  tmp |= (*(in + 11) - base) << 3;
     2969:  983:  tmp |= (*(in + 12) - base) << 12;
     2969:  984:  tmp |= (*(in + 13) - base) << 21;
     2969:  985:  tmp |= (*(in + 14) - base) << 30;
     2969:  986:  *(uint32_t *)out = tmp;
        -:  987:  out += sizeof(uint32_t);
        -:  988:  /* consumed: 4 bytes (total: 16) */
     2969:  989:  tmp  = (*(in + 14) - base) >> (9 - 7);
     2969:  990:  tmp |= (*(in + 15) - base) << 7;
     2969:  991:  tmp |= (*(in + 16) - base) << 16;
     2969:  992:  tmp |= (*(in + 17) - base) << 25;
     2969:  993:  *(uint32_t *)out = tmp;
        -:  994:  out += sizeof(uint32_t);
        -:  995:  /* consumed: 4 bytes (total: 20) */
     2969:  996:  tmp  = (*(in + 17) - base) >> (9 - 2);
     2969:  997:  tmp |= (*(in + 18) - base) << 2;
     2969:  998:  tmp |= (*(in + 19) - base) << 11;
     2969:  999:  tmp |= (*(in + 20) - base) << 20;
     2969: 1000:  tmp |= (*(in + 21) - base) << 29;
     2969: 1001:  *(uint32_t *)out = tmp;
        -: 1002:  out += sizeof(uint32_t);
        -: 1003:  /* consumed: 4 bytes (total: 24) */
     2969: 1004:  tmp  = (*(in + 21) - base) >> (9 - 6);
     2969: 1005:  tmp |= (*(in + 22) - base) << 6;
     2969: 1006:  tmp |= (*(in + 23) - base) << 15;
     2969: 1007:  tmp |= (*(in + 24) - base) << 24;
     2969: 1008:  *(uint32_t *)out = tmp;
        -: 1009:  out += sizeof(uint32_t);
        -: 1010:  /* consumed: 4 bytes (total: 28) */
     2969: 1011:  tmp  = (*(in + 24) - base) >> (9 - 1);
     2969: 1012:  tmp |= (*(in + 25) - base) << 1;
     2969: 1013:  tmp |= (*(in + 26) - base) << 10;
     2969: 1014:  tmp |= (*(in + 27) - base) << 19;
     2969: 1015:  tmp |= (*(in + 28) - base) << 28;
     2969: 1016:  *(uint32_t *)out = tmp;
     2969: 1017:  out += sizeof(uint32_t);
        -: 1018:  /* consumed: 4 bytes (total: 32) */
     2969: 1019:  tmp  = (*(in + 28) - base) >> (9 - 5);
     2969: 1020:  tmp |= (*(in + 29) - base) << 5;
     2969: 1021:  tmp |= (*(in + 30) - base) << 14;
     2969: 1022:  tmp |= (*(in + 31) - base) << 23;
        -: 1023:  /* remaining: 0 bits */
        -: 1024:  length = (32 / 8) - (32 - 32) / 8;
        -: 1025:  /* consumed: 4 bytes (total: 36) */
        -: 1026:  memcpy(out, &tmp, length);
     2969: 1027:  return 36;
        -: 1028:}
        -: 1029:
        -: 1030:static uint32_t
       25: 1031:unpack9_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 1032:  uint32_t *in32 = (uint32_t *)in;
        -: 1033:  uint32_t tmp; (void)tmp;
       25: 1034:  *(out + 0)  = base + ((*in32 >> 0) & 511);
       25: 1035:  *(out + 1)  = base + ((*in32 >> 9) & 511);
       25: 1036:  *(out + 2)  = base + ((*in32 >> 18) & 511);
       25: 1037:  tmp = (*in32 >> 27);
        -: 1038:  in32++;
        -: 1039:  /* consumed: 4 bytes (total: 8) */
       25: 1040:  tmp |= (*in32 % (1U << 4)) << (9 - 4);
       25: 1041:  *(out + 3) = base + tmp;
       25: 1042:  *(out + 4)  = base + ((*in32 >> 4) & 511);
       25: 1043:  *(out + 5)  = base + ((*in32 >> 13) & 511);
       25: 1044:  *(out + 6)  = base + ((*in32 >> 22) & 511);
       25: 1045:  tmp = (*in32 >> 31);
        -: 1046:  in32++;
        -: 1047:  /* consumed: 4 bytes (total: 12) */
       25: 1048:  tmp |= (*in32 % (1U << 8)) << (9 - 8);
       25: 1049:  *(out + 7) = base + tmp;
       25: 1050:  *(out + 8)  = base + ((*in32 >> 8) & 511);
       25: 1051:  *(out + 9)  = base + ((*in32 >> 17) & 511);
       25: 1052:  tmp = (*in32 >> 26);
        -: 1053:  in32++;
        -: 1054:  /* consumed: 4 bytes (total: 16) */
       25: 1055:  tmp |= (*in32 % (1U << 3)) << (9 - 3);
       25: 1056:  *(out + 10) = base + tmp;
       25: 1057:  *(out + 11)  = base + ((*in32 >> 3) & 511);
       25: 1058:  *(out + 12)  = base + ((*in32 >> 12) & 511);
       25: 1059:  *(out + 13)  = base + ((*in32 >> 21) & 511);
       25: 1060:  tmp = (*in32 >> 30);
        -: 1061:  in32++;
        -: 1062:  /* consumed: 4 bytes (total: 20) */
       25: 1063:  tmp |= (*in32 % (1U << 7)) << (9 - 7);
       25: 1064:  *(out + 14) = base + tmp;
       25: 1065:  *(out + 15)  = base + ((*in32 >> 7) & 511);
       25: 1066:  *(out + 16)  = base + ((*in32 >> 16) & 511);
       25: 1067:  tmp = (*in32 >> 25);
        -: 1068:  in32++;
        -: 1069:  /* consumed: 4 bytes (total: 24) */
       25: 1070:  tmp |= (*in32 % (1U << 2)) << (9 - 2);
       25: 1071:  *(out + 17) = base + tmp;
       25: 1072:  *(out + 18)  = base + ((*in32 >> 2) & 511);
       25: 1073:  *(out + 19)  = base + ((*in32 >> 11) & 511);
       25: 1074:  *(out + 20)  = base + ((*in32 >> 20) & 511);
       25: 1075:  tmp = (*in32 >> 29);
        -: 1076:  in32++;
        -: 1077:  /* consumed: 4 bytes (total: 28) */
       25: 1078:  tmp |= (*in32 % (1U << 6)) << (9 - 6);
       25: 1079:  *(out + 21) = base + tmp;
       25: 1080:  *(out + 22)  = base + ((*in32 >> 6) & 511);
       25: 1081:  *(out + 23)  = base + ((*in32 >> 15) & 511);
       25: 1082:  tmp = (*in32 >> 24);
        -: 1083:  in32++;
        -: 1084:  /* consumed: 4 bytes (total: 32) */
       25: 1085:  tmp |= (*in32 % (1U << 1)) << (9 - 1);
       25: 1086:  *(out + 24) = base + tmp;
       25: 1087:  *(out + 25)  = base + ((*in32 >> 1) & 511);
       25: 1088:  *(out + 26)  = base + ((*in32 >> 10) & 511);
       25: 1089:  *(out + 27)  = base + ((*in32 >> 19) & 511);
       25: 1090:  tmp = (*in32 >> 28);
        -: 1091:  in32++;
        -: 1092:  /* consumed: 4 bytes (total: 36) */
       25: 1093:  tmp |= (*in32 % (1U << 5)) << (9 - 5);
       25: 1094:  *(out + 28) = base + tmp;
       25: 1095:  *(out + 29)  = base + ((*in32 >> 5) & 511);
       25: 1096:  *(out + 30)  = base + ((*in32 >> 14) & 511);
       25: 1097:  *(out + 31)  = base + ((*in32 >> 23) & 511);
        -: 1098:  /* remaining: 0 bits */
       25: 1099:  return 36;
        -: 1100:}
        -: 1101:
        -: 1102:static uint32_t
    12097: 1103:pack10_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 1104:  uint32_t tmp, length;
    12097: 1105:  tmp  = (*(in + 0) - base) << 0;
    12097: 1106:  tmp |= (*(in + 1) - base) << 10;
    12097: 1107:  tmp |= (*(in + 2) - base) << 20;
    12097: 1108:  tmp |= (*(in + 3) - base) << 30;
    12097: 1109:  *(uint32_t *)out = tmp;
        -: 1110:  out += sizeof(uint32_t);
        -: 1111:  /* consumed: 4 bytes (total: 4) */
    12097: 1112:  tmp  = (*(in + 3) - base) >> (10 - 8);
    12097: 1113:  tmp |= (*(in + 4) - base) << 8;
    12097: 1114:  tmp |= (*(in + 5) - base) << 18;
    12097: 1115:  tmp |= (*(in + 6) - base) << 28;
    12097: 1116:  *(uint32_t *)out = tmp;
        -: 1117:  out += sizeof(uint32_t);
        -: 1118:  /* consumed: 4 bytes (total: 8) */
    12097: 1119:  tmp  = (*(in + 6) - base) >> (10 - 6);
    12097: 1120:  tmp |= (*(in + 7) - base) << 6;
    12097: 1121:  tmp |= (*(in + 8) - base) << 16;
    12097: 1122:  tmp |= (*(in + 9) - base) << 26;
    12097: 1123:  *(uint32_t *)out = tmp;
        -: 1124:  out += sizeof(uint32_t);
        -: 1125:  /* consumed: 4 bytes (total: 12) */
    12097: 1126:  tmp  = (*(in + 9) - base) >> (10 - 4);
    12097: 1127:  tmp |= (*(in + 10) - base) << 4;
    12097: 1128:  tmp |= (*(in + 11) - base) << 14;
    12097: 1129:  tmp |= (*(in + 12) - base) << 24;
    12097: 1130:  *(uint32_t *)out = tmp;
        -: 1131:  out += sizeof(uint32_t);
        -: 1132:  /* consumed: 4 bytes (total: 16) */
    12097: 1133:  tmp  = (*(in + 12) - base) >> (10 - 2);
    12097: 1134:  tmp |= (*(in + 13) - base) << 2;
    12097: 1135:  tmp |= (*(in + 14) - base) << 12;
    12097: 1136:  tmp |= (*(in + 15) - base) << 22;
    12097: 1137:  *(uint32_t *)out = tmp;
        -: 1138:  out += sizeof(uint32_t);
        -: 1139:  /* consumed: 4 bytes (total: 20) */
    12097: 1140:  tmp  = (*(in + 16) - base) << 0;
    12097: 1141:  tmp |= (*(in + 17) - base) << 10;
    12097: 1142:  tmp |= (*(in + 18) - base) << 20;
    12097: 1143:  tmp |= (*(in + 19) - base) << 30;
    12097: 1144:  *(uint32_t *)out = tmp;
        -: 1145:  out += sizeof(uint32_t);
        -: 1146:  /* consumed: 4 bytes (total: 24) */
    12097: 1147:  tmp  = (*(in + 19) - base) >> (10 - 8);
    12097: 1148:  tmp |= (*(in + 20) - base) << 8;
    12097: 1149:  tmp |= (*(in + 21) - base) << 18;
    12097: 1150:  tmp |= (*(in + 22) - base) << 28;
    12097: 1151:  *(uint32_t *)out = tmp;
        -: 1152:  out += sizeof(uint32_t);
        -: 1153:  /* consumed: 4 bytes (total: 28) */
    12097: 1154:  tmp  = (*(in + 22) - base) >> (10 - 6);
    12097: 1155:  tmp |= (*(in + 23) - base) << 6;
    12097: 1156:  tmp |= (*(in + 24) - base) << 16;
    12097: 1157:  tmp |= (*(in + 25) - base) << 26;
    12097: 1158:  *(uint32_t *)out = tmp;
        -: 1159:  out += sizeof(uint32_t);
        -: 1160:  /* consumed: 4 bytes (total: 32) */
    12097: 1161:  tmp  = (*(in + 25) - base) >> (10 - 4);
    12097: 1162:  tmp |= (*(in + 26) - base) << 4;
    12097: 1163:  tmp |= (*(in + 27) - base) << 14;
    12097: 1164:  tmp |= (*(in + 28) - base) << 24;
    12097: 1165:  *(uint32_t *)out = tmp;
    12097: 1166:  out += sizeof(uint32_t);
        -: 1167:  /* consumed: 4 bytes (total: 36) */
    12097: 1168:  tmp  = (*(in + 28) - base) >> (10 - 2);
    12097: 1169:  tmp |= (*(in + 29) - base) << 2;
    12097: 1170:  tmp |= (*(in + 30) - base) << 12;
    12097: 1171:  tmp |= (*(in + 31) - base) << 22;
        -: 1172:  /* remaining: 0 bits */
        -: 1173:  length = (32 / 8) - (32 - 32) / 8;
        -: 1174:  /* consumed: 4 bytes (total: 40) */
        -: 1175:  memcpy(out, &tmp, length);
    12097: 1176:  return 40;
        -: 1177:}
        -: 1178:
        -: 1179:static uint32_t
       65: 1180:unpack10_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 1181:  uint32_t *in32 = (uint32_t *)in;
        -: 1182:  uint32_t tmp; (void)tmp;
       65: 1183:  *(out + 0)  = base + ((*in32 >> 0) & 1023);
       65: 1184:  *(out + 1)  = base + ((*in32 >> 10) & 1023);
       65: 1185:  *(out + 2)  = base + ((*in32 >> 20) & 1023);
       65: 1186:  tmp = (*in32 >> 30);
        -: 1187:  in32++;
        -: 1188:  /* consumed: 4 bytes (total: 8) */
       65: 1189:  tmp |= (*in32 % (1U << 8)) << (10 - 8);
       65: 1190:  *(out + 3) = base + tmp;
       65: 1191:  *(out + 4)  = base + ((*in32 >> 8) & 1023);
       65: 1192:  *(out + 5)  = base + ((*in32 >> 18) & 1023);
       65: 1193:  tmp = (*in32 >> 28);
        -: 1194:  in32++;
        -: 1195:  /* consumed: 4 bytes (total: 12) */
       65: 1196:  tmp |= (*in32 % (1U << 6)) << (10 - 6);
       65: 1197:  *(out + 6) = base + tmp;
       65: 1198:  *(out + 7)  = base + ((*in32 >> 6) & 1023);
       65: 1199:  *(out + 8)  = base + ((*in32 >> 16) & 1023);
       65: 1200:  tmp = (*in32 >> 26);
        -: 1201:  in32++;
        -: 1202:  /* consumed: 4 bytes (total: 16) */
       65: 1203:  tmp |= (*in32 % (1U << 4)) << (10 - 4);
       65: 1204:  *(out + 9) = base + tmp;
       65: 1205:  *(out + 10)  = base + ((*in32 >> 4) & 1023);
       65: 1206:  *(out + 11)  = base + ((*in32 >> 14) & 1023);
       65: 1207:  tmp = (*in32 >> 24);
        -: 1208:  in32++;
        -: 1209:  /* consumed: 4 bytes (total: 20) */
       65: 1210:  tmp |= (*in32 % (1U << 2)) << (10 - 2);
       65: 1211:  *(out + 12) = base + tmp;
       65: 1212:  *(out + 13)  = base + ((*in32 >> 2) & 1023);
       65: 1213:  *(out + 14)  = base + ((*in32 >> 12) & 1023);
       65: 1214:  *(out + 15)  = base + ((*in32 >> 22) & 1023);
        -: 1215:  in32++;
        -: 1216:  /* consumed: 4 bytes (total: 24) */
       65: 1217:  *(out + 16)  = base + ((*in32 >> 0) & 1023);
       65: 1218:  *(out + 17)  = base + ((*in32 >> 10) & 1023);
       65: 1219:  *(out + 18)  = base + ((*in32 >> 20) & 1023);
       65: 1220:  tmp = (*in32 >> 30);
        -: 1221:  in32++;
        -: 1222:  /* consumed: 4 bytes (total: 28) */
       65: 1223:  tmp |= (*in32 % (1U << 8)) << (10 - 8);
       65: 1224:  *(out + 19) = base + tmp;
       65: 1225:  *(out + 20)  = base + ((*in32 >> 8) & 1023);
       65: 1226:  *(out + 21)  = base + ((*in32 >> 18) & 1023);
       65: 1227:  tmp = (*in32 >> 28);
        -: 1228:  in32++;
        -: 1229:  /* consumed: 4 bytes (total: 32) */
       65: 1230:  tmp |= (*in32 % (1U << 6)) << (10 - 6);
       65: 1231:  *(out + 22) = base + tmp;
       65: 1232:  *(out + 23)  = base + ((*in32 >> 6) & 1023);
       65: 1233:  *(out + 24)  = base + ((*in32 >> 16) & 1023);
       65: 1234:  tmp = (*in32 >> 26);
        -: 1235:  in32++;
        -: 1236:  /* consumed: 4 bytes (total: 36) */
       65: 1237:  tmp |= (*in32 % (1U << 4)) << (10 - 4);
       65: 1238:  *(out + 25) = base + tmp;
       65: 1239:  *(out + 26)  = base + ((*in32 >> 4) & 1023);
       65: 1240:  *(out + 27)  = base + ((*in32 >> 14) & 1023);
       65: 1241:  tmp = (*in32 >> 24);
        -: 1242:  in32++;
        -: 1243:  /* consumed: 4 bytes (total: 40) */
       65: 1244:  tmp |= (*in32 % (1U << 2)) << (10 - 2);
       65: 1245:  *(out + 28) = base + tmp;
       65: 1246:  *(out + 29)  = base + ((*in32 >> 2) & 1023);
       65: 1247:  *(out + 30)  = base + ((*in32 >> 12) & 1023);
       65: 1248:  *(out + 31)  = base + ((*in32 >> 22) & 1023);
        -: 1249:  /* remaining: 0 bits */
       65: 1250:  return 40;
        -: 1251:}
        -: 1252:
        -: 1253:static uint32_t
    48778: 1254:pack11_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 1255:  uint32_t tmp, length;
    48778: 1256:  tmp  = (*(in + 0) - base) << 0;
    48778: 1257:  tmp |= (*(in + 1) - base) << 11;
    48778: 1258:  tmp |= (*(in + 2) - base) << 22;
    48778: 1259:  *(uint32_t *)out = tmp;
        -: 1260:  out += sizeof(uint32_t);
        -: 1261:  /* consumed: 4 bytes (total: 4) */
    48778: 1262:  tmp  = (*(in + 2) - base) >> (11 - 1);
    48778: 1263:  tmp |= (*(in + 3) - base) << 1;
    48778: 1264:  tmp |= (*(in + 4) - base) << 12;
    48778: 1265:  tmp |= (*(in + 5) - base) << 23;
    48778: 1266:  *(uint32_t *)out = tmp;
        -: 1267:  out += sizeof(uint32_t);
        -: 1268:  /* consumed: 4 bytes (total: 8) */
    48778: 1269:  tmp  = (*(in + 5) - base) >> (11 - 2);
    48778: 1270:  tmp |= (*(in + 6) - base) << 2;
    48778: 1271:  tmp |= (*(in + 7) - base) << 13;
    48778: 1272:  tmp |= (*(in + 8) - base) << 24;
    48778: 1273:  *(uint32_t *)out = tmp;
        -: 1274:  out += sizeof(uint32_t);
        -: 1275:  /* consumed: 4 bytes (total: 12) */
    48778: 1276:  tmp  = (*(in + 8) - base) >> (11 - 3);
    48778: 1277:  tmp |= (*(in + 9) - base) << 3;
    48778: 1278:  tmp |= (*(in + 10) - base) << 14;
    48778: 1279:  tmp |= (*(in + 11) - base) << 25;
    48778: 1280:  *(uint32_t *)out = tmp;
        -: 1281:  out += sizeof(uint32_t);
        -: 1282:  /* consumed: 4 bytes (total: 16) */
    48778: 1283:  tmp  = (*(in + 11) - base) >> (11 - 4);
    48778: 1284:  tmp |= (*(in + 12) - base) << 4;
    48778: 1285:  tmp |= (*(in + 13) - base) << 15;
    48778: 1286:  tmp |= (*(in + 14) - base) << 26;
    48778: 1287:  *(uint32_t *)out = tmp;
        -: 1288:  out += sizeof(uint32_t);
        -: 1289:  /* consumed: 4 bytes (total: 20) */
    48778: 1290:  tmp  = (*(in + 14) - base) >> (11 - 5);
    48778: 1291:  tmp |= (*(in + 15) - base) << 5;
    48778: 1292:  tmp |= (*(in + 16) - base) << 16;
    48778: 1293:  tmp |= (*(in + 17) - base) << 27;
    48778: 1294:  *(uint32_t *)out = tmp;
        -: 1295:  out += sizeof(uint32_t);
        -: 1296:  /* consumed: 4 bytes (total: 24) */
    48778: 1297:  tmp  = (*(in + 17) - base) >> (11 - 6);
    48778: 1298:  tmp |= (*(in + 18) - base) << 6;
    48778: 1299:  tmp |= (*(in + 19) - base) << 17;
    48778: 1300:  tmp |= (*(in + 20) - base) << 28;
    48778: 1301:  *(uint32_t *)out = tmp;
        -: 1302:  out += sizeof(uint32_t);
        -: 1303:  /* consumed: 4 bytes (total: 28) */
    48778: 1304:  tmp  = (*(in + 20) - base) >> (11 - 7);
    48778: 1305:  tmp |= (*(in + 21) - base) << 7;
    48778: 1306:  tmp |= (*(in + 22) - base) << 18;
    48778: 1307:  tmp |= (*(in + 23) - base) << 29;
    48778: 1308:  *(uint32_t *)out = tmp;
        -: 1309:  out += sizeof(uint32_t);
        -: 1310:  /* consumed: 4 bytes (total: 32) */
    48778: 1311:  tmp  = (*(in + 23) - base) >> (11 - 8);
    48778: 1312:  tmp |= (*(in + 24) - base) << 8;
    48778: 1313:  tmp |= (*(in + 25) - base) << 19;
    48778: 1314:  tmp |= (*(in + 26) - base) << 30;
    48778: 1315:  *(uint32_t *)out = tmp;
        -: 1316:  out += sizeof(uint32_t);
        -: 1317:  /* consumed: 4 bytes (total: 36) */
    48778: 1318:  tmp  = (*(in + 26) - base) >> (11 - 9);
    48778: 1319:  tmp |= (*(in + 27) - base) << 9;
    48778: 1320:  tmp |= (*(in + 28) - base) << 20;
    48778: 1321:  tmp |= (*(in + 29) - base) << 31;
    48778: 1322:  *(uint32_t *)out = tmp;
    48778: 1323:  out += sizeof(uint32_t);
        -: 1324:  /* consumed: 4 bytes (total: 40) */
    48778: 1325:  tmp  = (*(in + 29) - base) >> (11 - 10);
    48778: 1326:  tmp |= (*(in + 30) - base) << 10;
    48778: 1327:  tmp |= (*(in + 31) - base) << 21;
        -: 1328:  /* remaining: 0 bits */
        -: 1329:  length = (32 / 8) - (32 - 32) / 8;
        -: 1330:  /* consumed: 4 bytes (total: 44) */
        -: 1331:  memcpy(out, &tmp, length);
    48778: 1332:  return 44;
        -: 1333:}
        -: 1334:
        -: 1335:static uint32_t
      138: 1336:unpack11_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 1337:  uint32_t *in32 = (uint32_t *)in;
        -: 1338:  uint32_t tmp; (void)tmp;
      138: 1339:  *(out + 0)  = base + ((*in32 >> 0) & 2047);
      138: 1340:  *(out + 1)  = base + ((*in32 >> 11) & 2047);
      138: 1341:  tmp = (*in32 >> 22);
        -: 1342:  in32++;
        -: 1343:  /* consumed: 4 bytes (total: 8) */
      138: 1344:  tmp |= (*in32 % (1U << 1)) << (11 - 1);
      138: 1345:  *(out + 2) = base + tmp;
      138: 1346:  *(out + 3)  = base + ((*in32 >> 1) & 2047);
      138: 1347:  *(out + 4)  = base + ((*in32 >> 12) & 2047);
      138: 1348:  tmp = (*in32 >> 23);
        -: 1349:  in32++;
        -: 1350:  /* consumed: 4 bytes (total: 12) */
      138: 1351:  tmp |= (*in32 % (1U << 2)) << (11 - 2);
      138: 1352:  *(out + 5) = base + tmp;
      138: 1353:  *(out + 6)  = base + ((*in32 >> 2) & 2047);
      138: 1354:  *(out + 7)  = base + ((*in32 >> 13) & 2047);
      138: 1355:  tmp = (*in32 >> 24);
        -: 1356:  in32++;
        -: 1357:  /* consumed: 4 bytes (total: 16) */
      138: 1358:  tmp |= (*in32 % (1U << 3)) << (11 - 3);
      138: 1359:  *(out + 8) = base + tmp;
      138: 1360:  *(out + 9)  = base + ((*in32 >> 3) & 2047);
      138: 1361:  *(out + 10)  = base + ((*in32 >> 14) & 2047);
      138: 1362:  tmp = (*in32 >> 25);
        -: 1363:  in32++;
        -: 1364:  /* consumed: 4 bytes (total: 20) */
      138: 1365:  tmp |= (*in32 % (1U << 4)) << (11 - 4);
      138: 1366:  *(out + 11) = base + tmp;
      138: 1367:  *(out + 12)  = base + ((*in32 >> 4) & 2047);
      138: 1368:  *(out + 13)  = base + ((*in32 >> 15) & 2047);
      138: 1369:  tmp = (*in32 >> 26);
        -: 1370:  in32++;
        -: 1371:  /* consumed: 4 bytes (total: 24) */
      138: 1372:  tmp |= (*in32 % (1U << 5)) << (11 - 5);
      138: 1373:  *(out + 14) = base + tmp;
      138: 1374:  *(out + 15)  = base + ((*in32 >> 5) & 2047);
      138: 1375:  *(out + 16)  = base + ((*in32 >> 16) & 2047);
      138: 1376:  tmp = (*in32 >> 27);
        -: 1377:  in32++;
        -: 1378:  /* consumed: 4 bytes (total: 28) */
      138: 1379:  tmp |= (*in32 % (1U << 6)) << (11 - 6);
      138: 1380:  *(out + 17) = base + tmp;
      138: 1381:  *(out + 18)  = base + ((*in32 >> 6) & 2047);
      138: 1382:  *(out + 19)  = base + ((*in32 >> 17) & 2047);
      138: 1383:  tmp = (*in32 >> 28);
        -: 1384:  in32++;
        -: 1385:  /* consumed: 4 bytes (total: 32) */
      138: 1386:  tmp |= (*in32 % (1U << 7)) << (11 - 7);
      138: 1387:  *(out + 20) = base + tmp;
      138: 1388:  *(out + 21)  = base + ((*in32 >> 7) & 2047);
      138: 1389:  *(out + 22)  = base + ((*in32 >> 18) & 2047);
      138: 1390:  tmp = (*in32 >> 29);
        -: 1391:  in32++;
        -: 1392:  /* consumed: 4 bytes (total: 36) */
      138: 1393:  tmp |= (*in32 % (1U << 8)) << (11 - 8);
      138: 1394:  *(out + 23) = base + tmp;
      138: 1395:  *(out + 24)  = base + ((*in32 >> 8) & 2047);
      138: 1396:  *(out + 25)  = base + ((*in32 >> 19) & 2047);
      138: 1397:  tmp = (*in32 >> 30);
        -: 1398:  in32++;
        -: 1399:  /* consumed: 4 bytes (total: 40) */
      138: 1400:  tmp |= (*in32 % (1U << 9)) << (11 - 9);
      138: 1401:  *(out + 26) = base + tmp;
      138: 1402:  *(out + 27)  = base + ((*in32 >> 9) & 2047);
      138: 1403:  *(out + 28)  = base + ((*in32 >> 20) & 2047);
      138: 1404:  tmp = (*in32 >> 31);
        -: 1405:  in32++;
        -: 1406:  /* consumed: 4 bytes (total: 44) */
      138: 1407:  tmp |= (*in32 % (1U << 10)) << (11 - 10);
      138: 1408:  *(out + 29) = base + tmp;
      138: 1409:  *(out + 30)  = base + ((*in32 >> 10) & 2047);
      138: 1410:  *(out + 31)  = base + ((*in32 >> 21) & 2047);
        -: 1411:  /* remaining: 0 bits */
      138: 1412:  return 44;
        -: 1413:}
        -: 1414:
        -: 1415:static uint32_t
   195713: 1416:pack12_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 1417:  uint32_t tmp, length;
   195713: 1418:  tmp  = (*(in + 0) - base) << 0;
   195713: 1419:  tmp |= (*(in + 1) - base) << 12;
   195713: 1420:  tmp |= (*(in + 2) - base) << 24;
   195713: 1421:  *(uint32_t *)out = tmp;
        -: 1422:  out += sizeof(uint32_t);
        -: 1423:  /* consumed: 4 bytes (total: 4) */
   195713: 1424:  tmp  = (*(in + 2) - base) >> (12 - 4);
   195713: 1425:  tmp |= (*(in + 3) - base) << 4;
   195713: 1426:  tmp |= (*(in + 4) - base) << 16;
   195713: 1427:  tmp |= (*(in + 5) - base) << 28;
   195713: 1428:  *(uint32_t *)out = tmp;
        -: 1429:  out += sizeof(uint32_t);
        -: 1430:  /* consumed: 4 bytes (total: 8) */
   195713: 1431:  tmp  = (*(in + 5) - base) >> (12 - 8);
   195713: 1432:  tmp |= (*(in + 6) - base) << 8;
   195713: 1433:  tmp |= (*(in + 7) - base) << 20;
   195713: 1434:  *(uint32_t *)out = tmp;
        -: 1435:  out += sizeof(uint32_t);
        -: 1436:  /* consumed: 4 bytes (total: 12) */
   195713: 1437:  tmp  = (*(in + 8) - base) << 0;
   195713: 1438:  tmp |= (*(in + 9) - base) << 12;
   195713: 1439:  tmp |= (*(in + 10) - base) << 24;
   195713: 1440:  *(uint32_t *)out = tmp;
        -: 1441:  out += sizeof(uint32_t);
        -: 1442:  /* consumed: 4 bytes (total: 16) */
   195713: 1443:  tmp  = (*(in + 10) - base) >> (12 - 4);
   195713: 1444:  tmp |= (*(in + 11) - base) << 4;
   195713: 1445:  tmp |= (*(in + 12) - base) << 16;
   195713: 1446:  tmp |= (*(in + 13) - base) << 28;
   195713: 1447:  *(uint32_t *)out = tmp;
        -: 1448:  out += sizeof(uint32_t);
        -: 1449:  /* consumed: 4 bytes (total: 20) */
   195713: 1450:  tmp  = (*(in + 13) - base) >> (12 - 8);
   195713: 1451:  tmp |= (*(in + 14) - base) << 8;
   195713: 1452:  tmp |= (*(in + 15) - base) << 20;
   195713: 1453:  *(uint32_t *)out = tmp;
        -: 1454:  out += sizeof(uint32_t);
        -: 1455:  /* consumed: 4 bytes (total: 24) */
   195713: 1456:  tmp  = (*(in + 16) - base) << 0;
   195713: 1457:  tmp |= (*(in + 17) - base) << 12;
   195713: 1458:  tmp |= (*(in + 18) - base) << 24;
   195713: 1459:  *(uint32_t *)out = tmp;
        -: 1460:  out += sizeof(uint32_t);
        -: 1461:  /* consumed: 4 bytes (total: 28) */
   195713: 1462:  tmp  = (*(in + 18) - base) >> (12 - 4);
   195713: 1463:  tmp |= (*(in + 19) - base) << 4;
   195713: 1464:  tmp |= (*(in + 20) - base) << 16;
   195713: 1465:  tmp |= (*(in + 21) - base) << 28;
   195713: 1466:  *(uint32_t *)out = tmp;
        -: 1467:  out += sizeof(uint32_t);
        -: 1468:  /* consumed: 4 bytes (total: 32) */
   195713: 1469:  tmp  = (*(in + 21) - base) >> (12 - 8);
   195713: 1470:  tmp |= (*(in + 22) - base) << 8;
   195713: 1471:  tmp |= (*(in + 23) - base) << 20;
   195713: 1472:  *(uint32_t *)out = tmp;
        -: 1473:  out += sizeof(uint32_t);
        -: 1474:  /* consumed: 4 bytes (total: 36) */
   195713: 1475:  tmp  = (*(in + 24) - base) << 0;
   195713: 1476:  tmp |= (*(in + 25) - base) << 12;
   195713: 1477:  tmp |= (*(in + 26) - base) << 24;
   195713: 1478:  *(uint32_t *)out = tmp;
        -: 1479:  out += sizeof(uint32_t);
        -: 1480:  /* consumed: 4 bytes (total: 40) */
   195713: 1481:  tmp  = (*(in + 26) - base) >> (12 - 4);
   195713: 1482:  tmp |= (*(in + 27) - base) << 4;
   195713: 1483:  tmp |= (*(in + 28) - base) << 16;
   195713: 1484:  tmp |= (*(in + 29) - base) << 28;
   195713: 1485:  *(uint32_t *)out = tmp;
   195713: 1486:  out += sizeof(uint32_t);
        -: 1487:  /* consumed: 4 bytes (total: 44) */
   195713: 1488:  tmp  = (*(in + 29) - base) >> (12 - 8);
   195713: 1489:  tmp |= (*(in + 30) - base) << 8;
   195713: 1490:  tmp |= (*(in + 31) - base) << 20;
        -: 1491:  /* remaining: 0 bits */
        -: 1492:  length = (32 / 8) - (32 - 32) / 8;
        -: 1493:  /* consumed: 4 bytes (total: 48) */
        -: 1494:  memcpy(out, &tmp, length);
   195713: 1495:  return 48;
        -: 1496:}
        -: 1497:
        -: 1498:static uint32_t
      129: 1499:unpack12_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 1500:  uint32_t *in32 = (uint32_t *)in;
        -: 1501:  uint32_t tmp; (void)tmp;
      129: 1502:  *(out + 0)  = base + ((*in32 >> 0) & 4095);
      129: 1503:  *(out + 1)  = base + ((*in32 >> 12) & 4095);
      129: 1504:  tmp = (*in32 >> 24);
        -: 1505:  in32++;
        -: 1506:  /* consumed: 4 bytes (total: 8) */
      129: 1507:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
      129: 1508:  *(out + 2) = base + tmp;
      129: 1509:  *(out + 3)  = base + ((*in32 >> 4) & 4095);
      129: 1510:  *(out + 4)  = base + ((*in32 >> 16) & 4095);
      129: 1511:  tmp = (*in32 >> 28);
        -: 1512:  in32++;
        -: 1513:  /* consumed: 4 bytes (total: 12) */
      129: 1514:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
      129: 1515:  *(out + 5) = base + tmp;
      129: 1516:  *(out + 6)  = base + ((*in32 >> 8) & 4095);
      129: 1517:  *(out + 7)  = base + ((*in32 >> 20) & 4095);
        -: 1518:  in32++;
        -: 1519:  /* consumed: 4 bytes (total: 16) */
      129: 1520:  *(out + 8)  = base + ((*in32 >> 0) & 4095);
      129: 1521:  *(out + 9)  = base + ((*in32 >> 12) & 4095);
      129: 1522:  tmp = (*in32 >> 24);
        -: 1523:  in32++;
        -: 1524:  /* consumed: 4 bytes (total: 20) */
      129: 1525:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
      129: 1526:  *(out + 10) = base + tmp;
      129: 1527:  *(out + 11)  = base + ((*in32 >> 4) & 4095);
      129: 1528:  *(out + 12)  = base + ((*in32 >> 16) & 4095);
      129: 1529:  tmp = (*in32 >> 28);
        -: 1530:  in32++;
        -: 1531:  /* consumed: 4 bytes (total: 24) */
      129: 1532:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
      129: 1533:  *(out + 13) = base + tmp;
      129: 1534:  *(out + 14)  = base + ((*in32 >> 8) & 4095);
      129: 1535:  *(out + 15)  = base + ((*in32 >> 20) & 4095);
        -: 1536:  in32++;
        -: 1537:  /* consumed: 4 bytes (total: 28) */
      129: 1538:  *(out + 16)  = base + ((*in32 >> 0) & 4095);
      129: 1539:  *(out + 17)  = base + ((*in32 >> 12) & 4095);
      129: 1540:  tmp = (*in32 >> 24);
        -: 1541:  in32++;
        -: 1542:  /* consumed: 4 bytes (total: 32) */
      129: 1543:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
      129: 1544:  *(out + 18) = base + tmp;
      129: 1545:  *(out + 19)  = base + ((*in32 >> 4) & 4095);
      129: 1546:  *(out + 20)  = base + ((*in32 >> 16) & 4095);
      129: 1547:  tmp = (*in32 >> 28);
        -: 1548:  in32++;
        -: 1549:  /* consumed: 4 bytes (total: 36) */
      129: 1550:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
      129: 1551:  *(out + 21) = base + tmp;
      129: 1552:  *(out + 22)  = base + ((*in32 >> 8) & 4095);
      129: 1553:  *(out + 23)  = base + ((*in32 >> 20) & 4095);
        -: 1554:  in32++;
        -: 1555:  /* consumed: 4 bytes (total: 40) */
      129: 1556:  *(out + 24)  = base + ((*in32 >> 0) & 4095);
      129: 1557:  *(out + 25)  = base + ((*in32 >> 12) & 4095);
      129: 1558:  tmp = (*in32 >> 24);
        -: 1559:  in32++;
        -: 1560:  /* consumed: 4 bytes (total: 44) */
      129: 1561:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
      129: 1562:  *(out + 26) = base + tmp;
      129: 1563:  *(out + 27)  = base + ((*in32 >> 4) & 4095);
      129: 1564:  *(out + 28)  = base + ((*in32 >> 16) & 4095);
      129: 1565:  tmp = (*in32 >> 28);
        -: 1566:  in32++;
        -: 1567:  /* consumed: 4 bytes (total: 48) */
      129: 1568:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
      129: 1569:  *(out + 29) = base + tmp;
      129: 1570:  *(out + 30)  = base + ((*in32 >> 8) & 4095);
      129: 1571:  *(out + 31)  = base + ((*in32 >> 20) & 4095);
        -: 1572:  /* remaining: 0 bits */
      129: 1573:  return 48;
        -: 1574:}
        -: 1575:
        -: 1576:static uint32_t
   784641: 1577:pack13_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 1578:  uint32_t tmp, length;
   784641: 1579:  tmp  = (*(in + 0) - base) << 0;
   784641: 1580:  tmp |= (*(in + 1) - base) << 13;
   784641: 1581:  tmp |= (*(in + 2) - base) << 26;
   784641: 1582:  *(uint32_t *)out = tmp;
        -: 1583:  out += sizeof(uint32_t);
        -: 1584:  /* consumed: 4 bytes (total: 4) */
   784641: 1585:  tmp  = (*(in + 2) - base) >> (13 - 7);
   784641: 1586:  tmp |= (*(in + 3) - base) << 7;
   784641: 1587:  tmp |= (*(in + 4) - base) << 20;
   784641: 1588:  *(uint32_t *)out = tmp;
        -: 1589:  out += sizeof(uint32_t);
        -: 1590:  /* consumed: 4 bytes (total: 8) */
   784641: 1591:  tmp  = (*(in + 4) - base) >> (13 - 1);
   784641: 1592:  tmp |= (*(in + 5) - base) << 1;
   784641: 1593:  tmp |= (*(in + 6) - base) << 14;
   784641: 1594:  tmp |= (*(in + 7) - base) << 27;
   784641: 1595:  *(uint32_t *)out = tmp;
        -: 1596:  out += sizeof(uint32_t);
        -: 1597:  /* consumed: 4 bytes (total: 12) */
   784641: 1598:  tmp  = (*(in + 7) - base) >> (13 - 8);
   784641: 1599:  tmp |= (*(in + 8) - base) << 8;
   784641: 1600:  tmp |= (*(in + 9) - base) << 21;
   784641: 1601:  *(uint32_t *)out = tmp;
        -: 1602:  out += sizeof(uint32_t);
        -: 1603:  /* consumed: 4 bytes (total: 16) */
   784641: 1604:  tmp  = (*(in + 9) - base) >> (13 - 2);
   784641: 1605:  tmp |= (*(in + 10) - base) << 2;
   784641: 1606:  tmp |= (*(in + 11) - base) << 15;
   784641: 1607:  tmp |= (*(in + 12) - base) << 28;
   784641: 1608:  *(uint32_t *)out = tmp;
        -: 1609:  out += sizeof(uint32_t);
        -: 1610:  /* consumed: 4 bytes (total: 20) */
   784641: 1611:  tmp  = (*(in + 12) - base) >> (13 - 9);
   784641: 1612:  tmp |= (*(in + 13) - base) << 9;
   784641: 1613:  tmp |= (*(in + 14) - base) << 22;
   784641: 1614:  *(uint32_t *)out = tmp;
        -: 1615:  out += sizeof(uint32_t);
        -: 1616:  /* consumed: 4 bytes (total: 24) */
   784641: 1617:  tmp  = (*(in + 14) - base) >> (13 - 3);
   784641: 1618:  tmp |= (*(in + 15) - base) << 3;
   784641: 1619:  tmp |= (*(in + 16) - base) << 16;
   784641: 1620:  tmp |= (*(in + 17) - base) << 29;
   784641: 1621:  *(uint32_t *)out = tmp;
        -: 1622:  out += sizeof(uint32_t);
        -: 1623:  /* consumed: 4 bytes (total: 28) */
   784641: 1624:  tmp  = (*(in + 17) - base) >> (13 - 10);
   784641: 1625:  tmp |= (*(in + 18) - base) << 10;
   784641: 1626:  tmp |= (*(in + 19) - base) << 23;
   784641: 1627:  *(uint32_t *)out = tmp;
        -: 1628:  out += sizeof(uint32_t);
        -: 1629:  /* consumed: 4 bytes (total: 32) */
   784641: 1630:  tmp  = (*(in + 19) - base) >> (13 - 4);
   784641: 1631:  tmp |= (*(in + 20) - base) << 4;
   784641: 1632:  tmp |= (*(in + 21) - base) << 17;
   784641: 1633:  tmp |= (*(in + 22) - base) << 30;
   784641: 1634:  *(uint32_t *)out = tmp;
        -: 1635:  out += sizeof(uint32_t);
        -: 1636:  /* consumed: 4 bytes (total: 36) */
   784641: 1637:  tmp  = (*(in + 22) - base) >> (13 - 11);
   784641: 1638:  tmp |= (*(in + 23) - base) << 11;
   784641: 1639:  tmp |= (*(in + 24) - base) << 24;
   784641: 1640:  *(uint32_t *)out = tmp;
        -: 1641:  out += sizeof(uint32_t);
        -: 1642:  /* consumed: 4 bytes (total: 40) */
   784641: 1643:  tmp  = (*(in + 24) - base) >> (13 - 5);
   784641: 1644:  tmp |= (*(in + 25) - base) << 5;
   784641: 1645:  tmp |= (*(in + 26) - base) << 18;
   784641: 1646:  tmp |= (*(in + 27) - base) << 31;
   784641: 1647:  *(uint32_t *)out = tmp;
        -: 1648:  out += sizeof(uint32_t);
        -: 1649:  /* consumed: 4 bytes (total: 44) */
   784641: 1650:  tmp  = (*(in + 27) - base) >> (13 - 12);
   784641: 1651:  tmp |= (*(in + 28) - base) << 12;
   784641: 1652:  tmp |= (*(in + 29) - base) << 25;
   784641: 1653:  *(uint32_t *)out = tmp;
   784641: 1654:  out += sizeof(uint32_t);
        -: 1655:  /* consumed: 4 bytes (total: 48) */
   784641: 1656:  tmp  = (*(in + 29) - base) >> (13 - 6);
   784641: 1657:  tmp |= (*(in + 30) - base) << 6;
   784641: 1658:  tmp |= (*(in + 31) - base) << 19;
        -: 1659:  /* remaining: 0 bits */
        -: 1660:  length = (32 / 8) - (32 - 32) / 8;
        -: 1661:  /* consumed: 4 bytes (total: 52) */
        -: 1662:  memcpy(out, &tmp, length);
   784641: 1663:  return 52;
        -: 1664:}
        -: 1665:
        -: 1666:static uint32_t
      257: 1667:unpack13_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 1668:  uint32_t *in32 = (uint32_t *)in;
        -: 1669:  uint32_t tmp; (void)tmp;
      257: 1670:  *(out + 0)  = base + ((*in32 >> 0) & 8191);
      257: 1671:  *(out + 1)  = base + ((*in32 >> 13) & 8191);
      257: 1672:  tmp = (*in32 >> 26);
        -: 1673:  in32++;
        -: 1674:  /* consumed: 4 bytes (total: 8) */
      257: 1675:  tmp |= (*in32 % (1U << 7)) << (13 - 7);
      257: 1676:  *(out + 2) = base + tmp;
      257: 1677:  *(out + 3)  = base + ((*in32 >> 7) & 8191);
      257: 1678:  tmp = (*in32 >> 20);
        -: 1679:  in32++;
        -: 1680:  /* consumed: 4 bytes (total: 12) */
      257: 1681:  tmp |= (*in32 % (1U << 1)) << (13 - 1);
      257: 1682:  *(out + 4) = base + tmp;
      257: 1683:  *(out + 5)  = base + ((*in32 >> 1) & 8191);
      257: 1684:  *(out + 6)  = base + ((*in32 >> 14) & 8191);
      257: 1685:  tmp = (*in32 >> 27);
        -: 1686:  in32++;
        -: 1687:  /* consumed: 4 bytes (total: 16) */
      257: 1688:  tmp |= (*in32 % (1U << 8)) << (13 - 8);
      257: 1689:  *(out + 7) = base + tmp;
      257: 1690:  *(out + 8)  = base + ((*in32 >> 8) & 8191);
      257: 1691:  tmp = (*in32 >> 21);
        -: 1692:  in32++;
        -: 1693:  /* consumed: 4 bytes (total: 20) */
      257: 1694:  tmp |= (*in32 % (1U << 2)) << (13 - 2);
      257: 1695:  *(out + 9) = base + tmp;
      257: 1696:  *(out + 10)  = base + ((*in32 >> 2) & 8191);
      257: 1697:  *(out + 11)  = base + ((*in32 >> 15) & 8191);
      257: 1698:  tmp = (*in32 >> 28);
        -: 1699:  in32++;
        -: 1700:  /* consumed: 4 bytes (total: 24) */
      257: 1701:  tmp |= (*in32 % (1U << 9)) << (13 - 9);
      257: 1702:  *(out + 12) = base + tmp;
      257: 1703:  *(out + 13)  = base + ((*in32 >> 9) & 8191);
      257: 1704:  tmp = (*in32 >> 22);
        -: 1705:  in32++;
        -: 1706:  /* consumed: 4 bytes (total: 28) */
      257: 1707:  tmp |= (*in32 % (1U << 3)) << (13 - 3);
      257: 1708:  *(out + 14) = base + tmp;
      257: 1709:  *(out + 15)  = base + ((*in32 >> 3) & 8191);
      257: 1710:  *(out + 16)  = base + ((*in32 >> 16) & 8191);
      257: 1711:  tmp = (*in32 >> 29);
        -: 1712:  in32++;
        -: 1713:  /* consumed: 4 bytes (total: 32) */
      257: 1714:  tmp |= (*in32 % (1U << 10)) << (13 - 10);
      257: 1715:  *(out + 17) = base + tmp;
      257: 1716:  *(out + 18)  = base + ((*in32 >> 10) & 8191);
      257: 1717:  tmp = (*in32 >> 23);
        -: 1718:  in32++;
        -: 1719:  /* consumed: 4 bytes (total: 36) */
      257: 1720:  tmp |= (*in32 % (1U << 4)) << (13 - 4);
      257: 1721:  *(out + 19) = base + tmp;
      257: 1722:  *(out + 20)  = base + ((*in32 >> 4) & 8191);
      257: 1723:  *(out + 21)  = base + ((*in32 >> 17) & 8191);
      257: 1724:  tmp = (*in32 >> 30);
        -: 1725:  in32++;
        -: 1726:  /* consumed: 4 bytes (total: 40) */
      257: 1727:  tmp |= (*in32 % (1U << 11)) << (13 - 11);
      257: 1728:  *(out + 22) = base + tmp;
      257: 1729:  *(out + 23)  = base + ((*in32 >> 11) & 8191);
      257: 1730:  tmp = (*in32 >> 24);
        -: 1731:  in32++;
        -: 1732:  /* consumed: 4 bytes (total: 44) */
      257: 1733:  tmp |= (*in32 % (1U << 5)) << (13 - 5);
      257: 1734:  *(out + 24) = base + tmp;
      257: 1735:  *(out + 25)  = base + ((*in32 >> 5) & 8191);
      257: 1736:  *(out + 26)  = base + ((*in32 >> 18) & 8191);
      257: 1737:  tmp = (*in32 >> 31);
        -: 1738:  in32++;
        -: 1739:  /* consumed: 4 bytes (total: 48) */
      257: 1740:  tmp |= (*in32 % (1U << 12)) << (13 - 12);
      257: 1741:  *(out + 27) = base + tmp;
      257: 1742:  *(out + 28)  = base + ((*in32 >> 12) & 8191);
      257: 1743:  tmp = (*in32 >> 25);
        -: 1744:  in32++;
        -: 1745:  /* consumed: 4 bytes (total: 52) */
      257: 1746:  tmp |= (*in32 % (1U << 6)) << (13 - 6);
      257: 1747:  *(out + 29) = base + tmp;
      257: 1748:  *(out + 30)  = base + ((*in32 >> 6) & 8191);
      257: 1749:  *(out + 31)  = base + ((*in32 >> 19) & 8191);
        -: 1750:  /* remaining: 0 bits */
      257: 1751:  return 52;
        -: 1752:}
        -: 1753:
        -: 1754:static uint32_t
   513337: 1755:pack14_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 1756:  uint32_t tmp, length;
   513337: 1757:  tmp  = (*(in + 0) - base) << 0;
   513337: 1758:  tmp |= (*(in + 1) - base) << 14;
   513337: 1759:  tmp |= (*(in + 2) - base) << 28;
   513337: 1760:  *(uint32_t *)out = tmp;
        -: 1761:  out += sizeof(uint32_t);
        -: 1762:  /* consumed: 4 bytes (total: 4) */
   513337: 1763:  tmp  = (*(in + 2) - base) >> (14 - 10);
   513337: 1764:  tmp |= (*(in + 3) - base) << 10;
   513337: 1765:  tmp |= (*(in + 4) - base) << 24;
   513337: 1766:  *(uint32_t *)out = tmp;
        -: 1767:  out += sizeof(uint32_t);
        -: 1768:  /* consumed: 4 bytes (total: 8) */
   513337: 1769:  tmp  = (*(in + 4) - base) >> (14 - 6);
   513337: 1770:  tmp |= (*(in + 5) - base) << 6;
   513337: 1771:  tmp |= (*(in + 6) - base) << 20;
   513337: 1772:  *(uint32_t *)out = tmp;
        -: 1773:  out += sizeof(uint32_t);
        -: 1774:  /* consumed: 4 bytes (total: 12) */
   513337: 1775:  tmp  = (*(in + 6) - base) >> (14 - 2);
   513337: 1776:  tmp |= (*(in + 7) - base) << 2;
   513337: 1777:  tmp |= (*(in + 8) - base) << 16;
   513337: 1778:  tmp |= (*(in + 9) - base) << 30;
   513337: 1779:  *(uint32_t *)out = tmp;
        -: 1780:  out += sizeof(uint32_t);
        -: 1781:  /* consumed: 4 bytes (total: 16) */
   513337: 1782:  tmp  = (*(in + 9) - base) >> (14 - 12);
   513337: 1783:  tmp |= (*(in + 10) - base) << 12;
   513337: 1784:  tmp |= (*(in + 11) - base) << 26;
   513337: 1785:  *(uint32_t *)out = tmp;
        -: 1786:  out += sizeof(uint32_t);
        -: 1787:  /* consumed: 4 bytes (total: 20) */
   513337: 1788:  tmp  = (*(in + 11) - base) >> (14 - 8);
   513337: 1789:  tmp |= (*(in + 12) - base) << 8;
   513337: 1790:  tmp |= (*(in + 13) - base) << 22;
   513337: 1791:  *(uint32_t *)out = tmp;
        -: 1792:  out += sizeof(uint32_t);
        -: 1793:  /* consumed: 4 bytes (total: 24) */
   513337: 1794:  tmp  = (*(in + 13) - base) >> (14 - 4);
   513337: 1795:  tmp |= (*(in + 14) - base) << 4;
   513337: 1796:  tmp |= (*(in + 15) - base) << 18;
   513337: 1797:  *(uint32_t *)out = tmp;
        -: 1798:  out += sizeof(uint32_t);
        -: 1799:  /* consumed: 4 bytes (total: 28) */
   513337: 1800:  tmp  = (*(in + 16) - base) << 0;
   513337: 1801:  tmp |= (*(in + 17) - base) << 14;
   513337: 1802:  tmp |= (*(in + 18) - base) << 28;
   513337: 1803:  *(uint32_t *)out = tmp;
        -: 1804:  out += sizeof(uint32_t);
        -: 1805:  /* consumed: 4 bytes (total: 32) */
   513337: 1806:  tmp  = (*(in + 18) - base) >> (14 - 10);
   513337: 1807:  tmp |= (*(in + 19) - base) << 10;
   513337: 1808:  tmp |= (*(in + 20) - base) << 24;
   513337: 1809:  *(uint32_t *)out = tmp;
        -: 1810:  out += sizeof(uint32_t);
        -: 1811:  /* consumed: 4 bytes (total: 36) */
   513337: 1812:  tmp  = (*(in + 20) - base) >> (14 - 6);
   513337: 1813:  tmp |= (*(in + 21) - base) << 6;
   513337: 1814:  tmp |= (*(in + 22) - base) << 20;
   513337: 1815:  *(uint32_t *)out = tmp;
        -: 1816:  out += sizeof(uint32_t);
        -: 1817:  /* consumed: 4 bytes (total: 40) */
   513337: 1818:  tmp  = (*(in + 22) - base) >> (14 - 2);
   513337: 1819:  tmp |= (*(in + 23) - base) << 2;
   513337: 1820:  tmp |= (*(in + 24) - base) << 16;
   513337: 1821:  tmp |= (*(in + 25) - base) << 30;
   513337: 1822:  *(uint32_t *)out = tmp;
        -: 1823:  out += sizeof(uint32_t);
        -: 1824:  /* consumed: 4 bytes (total: 44) */
   513337: 1825:  tmp  = (*(in + 25) - base) >> (14 - 12);
   513337: 1826:  tmp |= (*(in + 26) - base) << 12;
   513337: 1827:  tmp |= (*(in + 27) - base) << 26;
   513337: 1828:  *(uint32_t *)out = tmp;
        -: 1829:  out += sizeof(uint32_t);
        -: 1830:  /* consumed: 4 bytes (total: 48) */
   513337: 1831:  tmp  = (*(in + 27) - base) >> (14 - 8);
   513337: 1832:  tmp |= (*(in + 28) - base) << 8;
   513337: 1833:  tmp |= (*(in + 29) - base) << 22;
   513337: 1834:  *(uint32_t *)out = tmp;
   513337: 1835:  out += sizeof(uint32_t);
        -: 1836:  /* consumed: 4 bytes (total: 52) */
   513337: 1837:  tmp  = (*(in + 29) - base) >> (14 - 4);
   513337: 1838:  tmp |= (*(in + 30) - base) << 4;
   513337: 1839:  tmp |= (*(in + 31) - base) << 18;
        -: 1840:  /* remaining: 0 bits */
        -: 1841:  length = (32 / 8) - (32 - 32) / 8;
        -: 1842:  /* consumed: 4 bytes (total: 56) */
        -: 1843:  memcpy(out, &tmp, length);
   513337: 1844:  return 56;
        -: 1845:}
        -: 1846:
        -: 1847:static uint32_t
        1: 1848:unpack14_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 1849:  uint32_t *in32 = (uint32_t *)in;
        -: 1850:  uint32_t tmp; (void)tmp;
        1: 1851:  *(out + 0)  = base + ((*in32 >> 0) & 16383);
        1: 1852:  *(out + 1)  = base + ((*in32 >> 14) & 16383);
        1: 1853:  tmp = (*in32 >> 28);
        -: 1854:  in32++;
        -: 1855:  /* consumed: 4 bytes (total: 8) */
        1: 1856:  tmp |= (*in32 % (1U << 10)) << (14 - 10);
        1: 1857:  *(out + 2) = base + tmp;
        1: 1858:  *(out + 3)  = base + ((*in32 >> 10) & 16383);
        1: 1859:  tmp = (*in32 >> 24);
        -: 1860:  in32++;
        -: 1861:  /* consumed: 4 bytes (total: 12) */
        1: 1862:  tmp |= (*in32 % (1U << 6)) << (14 - 6);
        1: 1863:  *(out + 4) = base + tmp;
        1: 1864:  *(out + 5)  = base + ((*in32 >> 6) & 16383);
        1: 1865:  tmp = (*in32 >> 20);
        -: 1866:  in32++;
        -: 1867:  /* consumed: 4 bytes (total: 16) */
        1: 1868:  tmp |= (*in32 % (1U << 2)) << (14 - 2);
        1: 1869:  *(out + 6) = base + tmp;
        1: 1870:  *(out + 7)  = base + ((*in32 >> 2) & 16383);
        1: 1871:  *(out + 8)  = base + ((*in32 >> 16) & 16383);
        1: 1872:  tmp = (*in32 >> 30);
        -: 1873:  in32++;
        -: 1874:  /* consumed: 4 bytes (total: 20) */
        1: 1875:  tmp |= (*in32 % (1U << 12)) << (14 - 12);
        1: 1876:  *(out + 9) = base + tmp;
        1: 1877:  *(out + 10)  = base + ((*in32 >> 12) & 16383);
        1: 1878:  tmp = (*in32 >> 26);
        -: 1879:  in32++;
        -: 1880:  /* consumed: 4 bytes (total: 24) */
        1: 1881:  tmp |= (*in32 % (1U << 8)) << (14 - 8);
        1: 1882:  *(out + 11) = base + tmp;
        1: 1883:  *(out + 12)  = base + ((*in32 >> 8) & 16383);
        1: 1884:  tmp = (*in32 >> 22);
        -: 1885:  in32++;
        -: 1886:  /* consumed: 4 bytes (total: 28) */
        1: 1887:  tmp |= (*in32 % (1U << 4)) << (14 - 4);
        1: 1888:  *(out + 13) = base + tmp;
        1: 1889:  *(out + 14)  = base + ((*in32 >> 4) & 16383);
        1: 1890:  *(out + 15)  = base + ((*in32 >> 18) & 16383);
        -: 1891:  in32++;
        -: 1892:  /* consumed: 4 bytes (total: 32) */
        1: 1893:  *(out + 16)  = base + ((*in32 >> 0) & 16383);
        1: 1894:  *(out + 17)  = base + ((*in32 >> 14) & 16383);
        1: 1895:  tmp = (*in32 >> 28);
        -: 1896:  in32++;
        -: 1897:  /* consumed: 4 bytes (total: 36) */
        1: 1898:  tmp |= (*in32 % (1U << 10)) << (14 - 10);
        1: 1899:  *(out + 18) = base + tmp;
        1: 1900:  *(out + 19)  = base + ((*in32 >> 10) & 16383);
        1: 1901:  tmp = (*in32 >> 24);
        -: 1902:  in32++;
        -: 1903:  /* consumed: 4 bytes (total: 40) */
        1: 1904:  tmp |= (*in32 % (1U << 6)) << (14 - 6);
        1: 1905:  *(out + 20) = base + tmp;
        1: 1906:  *(out + 21)  = base + ((*in32 >> 6) & 16383);
        1: 1907:  tmp = (*in32 >> 20);
        -: 1908:  in32++;
        -: 1909:  /* consumed: 4 bytes (total: 44) */
        1: 1910:  tmp |= (*in32 % (1U << 2)) << (14 - 2);
        1: 1911:  *(out + 22) = base + tmp;
        1: 1912:  *(out + 23)  = base + ((*in32 >> 2) & 16383);
        1: 1913:  *(out + 24)  = base + ((*in32 >> 16) & 16383);
        1: 1914:  tmp = (*in32 >> 30);
        -: 1915:  in32++;
        -: 1916:  /* consumed: 4 bytes (total: 48) */
        1: 1917:  tmp |= (*in32 % (1U << 12)) << (14 - 12);
        1: 1918:  *(out + 25) = base + tmp;
        1: 1919:  *(out + 26)  = base + ((*in32 >> 12) & 16383);
        1: 1920:  tmp = (*in32 >> 26);
        -: 1921:  in32++;
        -: 1922:  /* consumed: 4 bytes (total: 52) */
        1: 1923:  tmp |= (*in32 % (1U << 8)) << (14 - 8);
        1: 1924:  *(out + 27) = base + tmp;
        1: 1925:  *(out + 28)  = base + ((*in32 >> 8) & 16383);
        1: 1926:  tmp = (*in32 >> 22);
        -: 1927:  in32++;
        -: 1928:  /* consumed: 4 bytes (total: 56) */
        1: 1929:  tmp |= (*in32 % (1U << 4)) << (14 - 4);
        1: 1930:  *(out + 29) = base + tmp;
        1: 1931:  *(out + 30)  = base + ((*in32 >> 4) & 16383);
        1: 1932:  *(out + 31)  = base + ((*in32 >> 18) & 16383);
        -: 1933:  /* remaining: 0 bits */
        1: 1934:  return 56;
        -: 1935:}
        -: 1936:
        -: 1937:static uint32_t
  1557952: 1938:pack15_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 1939:  uint32_t tmp, length;
  1557952: 1940:  tmp  = (*(in + 0) - base) << 0;
  1557952: 1941:  tmp |= (*(in + 1) - base) << 15;
  1557952: 1942:  tmp |= (*(in + 2) - base) << 30;
  1557952: 1943:  *(uint32_t *)out = tmp;
        -: 1944:  out += sizeof(uint32_t);
        -: 1945:  /* consumed: 4 bytes (total: 4) */
  1557952: 1946:  tmp  = (*(in + 2) - base) >> (15 - 13);
  1557952: 1947:  tmp |= (*(in + 3) - base) << 13;
  1557952: 1948:  tmp |= (*(in + 4) - base) << 28;
  1557952: 1949:  *(uint32_t *)out = tmp;
        -: 1950:  out += sizeof(uint32_t);
        -: 1951:  /* consumed: 4 bytes (total: 8) */
  1557952: 1952:  tmp  = (*(in + 4) - base) >> (15 - 11);
  1557952: 1953:  tmp |= (*(in + 5) - base) << 11;
  1557952: 1954:  tmp |= (*(in + 6) - base) << 26;
  1557952: 1955:  *(uint32_t *)out = tmp;
        -: 1956:  out += sizeof(uint32_t);
        -: 1957:  /* consumed: 4 bytes (total: 12) */
  1557952: 1958:  tmp  = (*(in + 6) - base) >> (15 - 9);
  1557952: 1959:  tmp |= (*(in + 7) - base) << 9;
  1557952: 1960:  tmp |= (*(in + 8) - base) << 24;
  1557952: 1961:  *(uint32_t *)out = tmp;
        -: 1962:  out += sizeof(uint32_t);
        -: 1963:  /* consumed: 4 bytes (total: 16) */
  1557952: 1964:  tmp  = (*(in + 8) - base) >> (15 - 7);
  1557952: 1965:  tmp |= (*(in + 9) - base) << 7;
  1557952: 1966:  tmp |= (*(in + 10) - base) << 22;
  1557952: 1967:  *(uint32_t *)out = tmp;
        -: 1968:  out += sizeof(uint32_t);
        -: 1969:  /* consumed: 4 bytes (total: 20) */
  1557952: 1970:  tmp  = (*(in + 10) - base) >> (15 - 5);
  1557952: 1971:  tmp |= (*(in + 11) - base) << 5;
  1557952: 1972:  tmp |= (*(in + 12) - base) << 20;
  1557952: 1973:  *(uint32_t *)out = tmp;
        -: 1974:  out += sizeof(uint32_t);
        -: 1975:  /* consumed: 4 bytes (total: 24) */
  1557952: 1976:  tmp  = (*(in + 12) - base) >> (15 - 3);
  1557952: 1977:  tmp |= (*(in + 13) - base) << 3;
  1557952: 1978:  tmp |= (*(in + 14) - base) << 18;
  1557952: 1979:  *(uint32_t *)out = tmp;
        -: 1980:  out += sizeof(uint32_t);
        -: 1981:  /* consumed: 4 bytes (total: 28) */
  1557952: 1982:  tmp  = (*(in + 14) - base) >> (15 - 1);
  1557952: 1983:  tmp |= (*(in + 15) - base) << 1;
  1557952: 1984:  tmp |= (*(in + 16) - base) << 16;
  1557952: 1985:  tmp |= (*(in + 17) - base) << 31;
  1557952: 1986:  *(uint32_t *)out = tmp;
        -: 1987:  out += sizeof(uint32_t);
        -: 1988:  /* consumed: 4 bytes (total: 32) */
  1557952: 1989:  tmp  = (*(in + 17) - base) >> (15 - 14);
  1557952: 1990:  tmp |= (*(in + 18) - base) << 14;
  1557952: 1991:  tmp |= (*(in + 19) - base) << 29;
  1557952: 1992:  *(uint32_t *)out = tmp;
        -: 1993:  out += sizeof(uint32_t);
        -: 1994:  /* consumed: 4 bytes (total: 36) */
  1557952: 1995:  tmp  = (*(in + 19) - base) >> (15 - 12);
  1557952: 1996:  tmp |= (*(in + 20) - base) << 12;
  1557952: 1997:  tmp |= (*(in + 21) - base) << 27;
  1557952: 1998:  *(uint32_t *)out = tmp;
        -: 1999:  out += sizeof(uint32_t);
        -: 2000:  /* consumed: 4 bytes (total: 40) */
  1557952: 2001:  tmp  = (*(in + 21) - base) >> (15 - 10);
  1557952: 2002:  tmp |= (*(in + 22) - base) << 10;
  1557952: 2003:  tmp |= (*(in + 23) - base) << 25;
  1557952: 2004:  *(uint32_t *)out = tmp;
        -: 2005:  out += sizeof(uint32_t);
        -: 2006:  /* consumed: 4 bytes (total: 44) */
  1557952: 2007:  tmp  = (*(in + 23) - base) >> (15 - 8);
  1557952: 2008:  tmp |= (*(in + 24) - base) << 8;
  1557952: 2009:  tmp |= (*(in + 25) - base) << 23;
  1557952: 2010:  *(uint32_t *)out = tmp;
        -: 2011:  out += sizeof(uint32_t);
        -: 2012:  /* consumed: 4 bytes (total: 48) */
  1557952: 2013:  tmp  = (*(in + 25) - base) >> (15 - 6);
  1557952: 2014:  tmp |= (*(in + 26) - base) << 6;
  1557952: 2015:  tmp |= (*(in + 27) - base) << 21;
  1557952: 2016:  *(uint32_t *)out = tmp;
        -: 2017:  out += sizeof(uint32_t);
        -: 2018:  /* consumed: 4 bytes (total: 52) */
  1557952: 2019:  tmp  = (*(in + 27) - base) >> (15 - 4);
  1557952: 2020:  tmp |= (*(in + 28) - base) << 4;
  1557952: 2021:  tmp |= (*(in + 29) - base) << 19;
  1557952: 2022:  *(uint32_t *)out = tmp;
  1557952: 2023:  out += sizeof(uint32_t);
        -: 2024:  /* consumed: 4 bytes (total: 56) */
  1557952: 2025:  tmp  = (*(in + 29) - base) >> (15 - 2);
  1557952: 2026:  tmp |= (*(in + 30) - base) << 2;
  1557952: 2027:  tmp |= (*(in + 31) - base) << 17;
        -: 2028:  /* remaining: 0 bits */
        -: 2029:  length = (32 / 8) - (32 - 32) / 8;
        -: 2030:  /* consumed: 4 bytes (total: 60) */
        -: 2031:  memcpy(out, &tmp, length);
  1557952: 2032:  return 60;
        -: 2033:}
        -: 2034:
        -: 2035:static uint32_t
      136: 2036:unpack15_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 2037:  uint32_t *in32 = (uint32_t *)in;
        -: 2038:  uint32_t tmp; (void)tmp;
      136: 2039:  *(out + 0)  = base + ((*in32 >> 0) & 32767);
      136: 2040:  *(out + 1)  = base + ((*in32 >> 15) & 32767);
      136: 2041:  tmp = (*in32 >> 30);
        -: 2042:  in32++;
        -: 2043:  /* consumed: 4 bytes (total: 8) */
      136: 2044:  tmp |= (*in32 % (1U << 13)) << (15 - 13);
      136: 2045:  *(out + 2) = base + tmp;
      136: 2046:  *(out + 3)  = base + ((*in32 >> 13) & 32767);
      136: 2047:  tmp = (*in32 >> 28);
        -: 2048:  in32++;
        -: 2049:  /* consumed: 4 bytes (total: 12) */
      136: 2050:  tmp |= (*in32 % (1U << 11)) << (15 - 11);
      136: 2051:  *(out + 4) = base + tmp;
      136: 2052:  *(out + 5)  = base + ((*in32 >> 11) & 32767);
      136: 2053:  tmp = (*in32 >> 26);
        -: 2054:  in32++;
        -: 2055:  /* consumed: 4 bytes (total: 16) */
      136: 2056:  tmp |= (*in32 % (1U << 9)) << (15 - 9);
      136: 2057:  *(out + 6) = base + tmp;
      136: 2058:  *(out + 7)  = base + ((*in32 >> 9) & 32767);
      136: 2059:  tmp = (*in32 >> 24);
        -: 2060:  in32++;
        -: 2061:  /* consumed: 4 bytes (total: 20) */
      136: 2062:  tmp |= (*in32 % (1U << 7)) << (15 - 7);
      136: 2063:  *(out + 8) = base + tmp;
      136: 2064:  *(out + 9)  = base + ((*in32 >> 7) & 32767);
      136: 2065:  tmp = (*in32 >> 22);
        -: 2066:  in32++;
        -: 2067:  /* consumed: 4 bytes (total: 24) */
      136: 2068:  tmp |= (*in32 % (1U << 5)) << (15 - 5);
      136: 2069:  *(out + 10) = base + tmp;
      136: 2070:  *(out + 11)  = base + ((*in32 >> 5) & 32767);
      136: 2071:  tmp = (*in32 >> 20);
        -: 2072:  in32++;
        -: 2073:  /* consumed: 4 bytes (total: 28) */
      136: 2074:  tmp |= (*in32 % (1U << 3)) << (15 - 3);
      136: 2075:  *(out + 12) = base + tmp;
      136: 2076:  *(out + 13)  = base + ((*in32 >> 3) & 32767);
      136: 2077:  tmp = (*in32 >> 18);
        -: 2078:  in32++;
        -: 2079:  /* consumed: 4 bytes (total: 32) */
      136: 2080:  tmp |= (*in32 % (1U << 1)) << (15 - 1);
      136: 2081:  *(out + 14) = base + tmp;
      136: 2082:  *(out + 15)  = base + ((*in32 >> 1) & 32767);
      136: 2083:  *(out + 16)  = base + ((*in32 >> 16) & 32767);
      136: 2084:  tmp = (*in32 >> 31);
        -: 2085:  in32++;
        -: 2086:  /* consumed: 4 bytes (total: 36) */
      136: 2087:  tmp |= (*in32 % (1U << 14)) << (15 - 14);
      136: 2088:  *(out + 17) = base + tmp;
      136: 2089:  *(out + 18)  = base + ((*in32 >> 14) & 32767);
      136: 2090:  tmp = (*in32 >> 29);
        -: 2091:  in32++;
        -: 2092:  /* consumed: 4 bytes (total: 40) */
      136: 2093:  tmp |= (*in32 % (1U << 12)) << (15 - 12);
      136: 2094:  *(out + 19) = base + tmp;
      136: 2095:  *(out + 20)  = base + ((*in32 >> 12) & 32767);
      136: 2096:  tmp = (*in32 >> 27);
        -: 2097:  in32++;
        -: 2098:  /* consumed: 4 bytes (total: 44) */
      136: 2099:  tmp |= (*in32 % (1U << 10)) << (15 - 10);
      136: 2100:  *(out + 21) = base + tmp;
      136: 2101:  *(out + 22)  = base + ((*in32 >> 10) & 32767);
      136: 2102:  tmp = (*in32 >> 25);
        -: 2103:  in32++;
        -: 2104:  /* consumed: 4 bytes (total: 48) */
      136: 2105:  tmp |= (*in32 % (1U << 8)) << (15 - 8);
      136: 2106:  *(out + 23) = base + tmp;
      136: 2107:  *(out + 24)  = base + ((*in32 >> 8) & 32767);
      136: 2108:  tmp = (*in32 >> 23);
        -: 2109:  in32++;
        -: 2110:  /* consumed: 4 bytes (total: 52) */
      136: 2111:  tmp |= (*in32 % (1U << 6)) << (15 - 6);
      136: 2112:  *(out + 25) = base + tmp;
      136: 2113:  *(out + 26)  = base + ((*in32 >> 6) & 32767);
      136: 2114:  tmp = (*in32 >> 21);
        -: 2115:  in32++;
        -: 2116:  /* consumed: 4 bytes (total: 56) */
      136: 2117:  tmp |= (*in32 % (1U << 4)) << (15 - 4);
      136: 2118:  *(out + 27) = base + tmp;
      136: 2119:  *(out + 28)  = base + ((*in32 >> 4) & 32767);
      136: 2120:  tmp = (*in32 >> 19);
        -: 2121:  in32++;
        -: 2122:  /* consumed: 4 bytes (total: 60) */
      136: 2123:  tmp |= (*in32 % (1U << 2)) << (15 - 2);
      136: 2124:  *(out + 29) = base + tmp;
      136: 2125:  *(out + 30)  = base + ((*in32 >> 2) & 32767);
      136: 2126:  *(out + 31)  = base + ((*in32 >> 17) & 32767);
        -: 2127:  /* remaining: 0 bits */
      136: 2128:  return 60;
        -: 2129:}
        -: 2130:
        -: 2131:static uint32_t
        1: 2132:pack16_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 2133:  uint32_t tmp, length;
        1: 2134:  tmp  = (*(in + 0) - base) << 0;
        1: 2135:  tmp |= (*(in + 1) - base) << 16;
        1: 2136:  *(uint32_t *)out = tmp;
        -: 2137:  out += sizeof(uint32_t);
        -: 2138:  /* consumed: 4 bytes (total: 4) */
        1: 2139:  tmp  = (*(in + 2) - base) << 0;
        1: 2140:  tmp |= (*(in + 3) - base) << 16;
        1: 2141:  *(uint32_t *)out = tmp;
        -: 2142:  out += sizeof(uint32_t);
        -: 2143:  /* consumed: 4 bytes (total: 8) */
        1: 2144:  tmp  = (*(in + 4) - base) << 0;
        1: 2145:  tmp |= (*(in + 5) - base) << 16;
        1: 2146:  *(uint32_t *)out = tmp;
        -: 2147:  out += sizeof(uint32_t);
        -: 2148:  /* consumed: 4 bytes (total: 12) */
        1: 2149:  tmp  = (*(in + 6) - base) << 0;
        1: 2150:  tmp |= (*(in + 7) - base) << 16;
        1: 2151:  *(uint32_t *)out = tmp;
        -: 2152:  out += sizeof(uint32_t);
        -: 2153:  /* consumed: 4 bytes (total: 16) */
        1: 2154:  tmp  = (*(in + 8) - base) << 0;
        1: 2155:  tmp |= (*(in + 9) - base) << 16;
        1: 2156:  *(uint32_t *)out = tmp;
        -: 2157:  out += sizeof(uint32_t);
        -: 2158:  /* consumed: 4 bytes (total: 20) */
        1: 2159:  tmp  = (*(in + 10) - base) << 0;
        1: 2160:  tmp |= (*(in + 11) - base) << 16;
        1: 2161:  *(uint32_t *)out = tmp;
        -: 2162:  out += sizeof(uint32_t);
        -: 2163:  /* consumed: 4 bytes (total: 24) */
        1: 2164:  tmp  = (*(in + 12) - base) << 0;
        1: 2165:  tmp |= (*(in + 13) - base) << 16;
        1: 2166:  *(uint32_t *)out = tmp;
        -: 2167:  out += sizeof(uint32_t);
        -: 2168:  /* consumed: 4 bytes (total: 28) */
        1: 2169:  tmp  = (*(in + 14) - base) << 0;
        1: 2170:  tmp |= (*(in + 15) - base) << 16;
        1: 2171:  *(uint32_t *)out = tmp;
        -: 2172:  out += sizeof(uint32_t);
        -: 2173:  /* consumed: 4 bytes (total: 32) */
        1: 2174:  tmp  = (*(in + 16) - base) << 0;
        1: 2175:  tmp |= (*(in + 17) - base) << 16;
        1: 2176:  *(uint32_t *)out = tmp;
        -: 2177:  out += sizeof(uint32_t);
        -: 2178:  /* consumed: 4 bytes (total: 36) */
        1: 2179:  tmp  = (*(in + 18) - base) << 0;
        1: 2180:  tmp |= (*(in + 19) - base) << 16;
        1: 2181:  *(uint32_t *)out = tmp;
        -: 2182:  out += sizeof(uint32_t);
        -: 2183:  /* consumed: 4 bytes (total: 40) */
        1: 2184:  tmp  = (*(in + 20) - base) << 0;
        1: 2185:  tmp |= (*(in + 21) - base) << 16;
        1: 2186:  *(uint32_t *)out = tmp;
        -: 2187:  out += sizeof(uint32_t);
        -: 2188:  /* consumed: 4 bytes (total: 44) */
        1: 2189:  tmp  = (*(in + 22) - base) << 0;
        1: 2190:  tmp |= (*(in + 23) - base) << 16;
        1: 2191:  *(uint32_t *)out = tmp;
        -: 2192:  out += sizeof(uint32_t);
        -: 2193:  /* consumed: 4 bytes (total: 48) */
        1: 2194:  tmp  = (*(in + 24) - base) << 0;
        1: 2195:  tmp |= (*(in + 25) - base) << 16;
        1: 2196:  *(uint32_t *)out = tmp;
        -: 2197:  out += sizeof(uint32_t);
        -: 2198:  /* consumed: 4 bytes (total: 52) */
        1: 2199:  tmp  = (*(in + 26) - base) << 0;
        1: 2200:  tmp |= (*(in + 27) - base) << 16;
        1: 2201:  *(uint32_t *)out = tmp;
        -: 2202:  out += sizeof(uint32_t);
        -: 2203:  /* consumed: 4 bytes (total: 56) */
        1: 2204:  tmp  = (*(in + 28) - base) << 0;
        1: 2205:  tmp |= (*(in + 29) - base) << 16;
        1: 2206:  *(uint32_t *)out = tmp;
        1: 2207:  out += sizeof(uint32_t);
        -: 2208:  /* consumed: 4 bytes (total: 60) */
        1: 2209:  tmp  = (*(in + 30) - base) << 0;
        1: 2210:  tmp |= (*(in + 31) - base) << 16;
        -: 2211:  /* remaining: 0 bits */
        -: 2212:  length = (32 / 8) - (32 - 32) / 8;
        -: 2213:  /* consumed: 4 bytes (total: 64) */
        -: 2214:  memcpy(out, &tmp, length);
        1: 2215:  return 64;
        -: 2216:}
        -: 2217:
        -: 2218:static uint32_t
        1: 2219:unpack16_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 2220:  uint32_t *in32 = (uint32_t *)in;
        -: 2221:  uint32_t tmp; (void)tmp;
        1: 2222:  *(out + 0)  = base + ((*in32 >> 0) & 65535);
        1: 2223:  *(out + 1)  = base + ((*in32 >> 16) & 65535);
        -: 2224:  in32++;
        -: 2225:  /* consumed: 4 bytes (total: 8) */
        1: 2226:  *(out + 2)  = base + ((*in32 >> 0) & 65535);
        1: 2227:  *(out + 3)  = base + ((*in32 >> 16) & 65535);
        -: 2228:  in32++;
        -: 2229:  /* consumed: 4 bytes (total: 12) */
        1: 2230:  *(out + 4)  = base + ((*in32 >> 0) & 65535);
        1: 2231:  *(out + 5)  = base + ((*in32 >> 16) & 65535);
        -: 2232:  in32++;
        -: 2233:  /* consumed: 4 bytes (total: 16) */
        1: 2234:  *(out + 6)  = base + ((*in32 >> 0) & 65535);
        1: 2235:  *(out + 7)  = base + ((*in32 >> 16) & 65535);
        -: 2236:  in32++;
        -: 2237:  /* consumed: 4 bytes (total: 20) */
        1: 2238:  *(out + 8)  = base + ((*in32 >> 0) & 65535);
        1: 2239:  *(out + 9)  = base + ((*in32 >> 16) & 65535);
        -: 2240:  in32++;
        -: 2241:  /* consumed: 4 bytes (total: 24) */
        1: 2242:  *(out + 10)  = base + ((*in32 >> 0) & 65535);
        1: 2243:  *(out + 11)  = base + ((*in32 >> 16) & 65535);
        -: 2244:  in32++;
        -: 2245:  /* consumed: 4 bytes (total: 28) */
        1: 2246:  *(out + 12)  = base + ((*in32 >> 0) & 65535);
        1: 2247:  *(out + 13)  = base + ((*in32 >> 16) & 65535);
        -: 2248:  in32++;
        -: 2249:  /* consumed: 4 bytes (total: 32) */
        1: 2250:  *(out + 14)  = base + ((*in32 >> 0) & 65535);
        1: 2251:  *(out + 15)  = base + ((*in32 >> 16) & 65535);
        -: 2252:  in32++;
        -: 2253:  /* consumed: 4 bytes (total: 36) */
        1: 2254:  *(out + 16)  = base + ((*in32 >> 0) & 65535);
        1: 2255:  *(out + 17)  = base + ((*in32 >> 16) & 65535);
        -: 2256:  in32++;
        -: 2257:  /* consumed: 4 bytes (total: 40) */
        1: 2258:  *(out + 18)  = base + ((*in32 >> 0) & 65535);
        1: 2259:  *(out + 19)  = base + ((*in32 >> 16) & 65535);
        -: 2260:  in32++;
        -: 2261:  /* consumed: 4 bytes (total: 44) */
        1: 2262:  *(out + 20)  = base + ((*in32 >> 0) & 65535);
        1: 2263:  *(out + 21)  = base + ((*in32 >> 16) & 65535);
        -: 2264:  in32++;
        -: 2265:  /* consumed: 4 bytes (total: 48) */
        1: 2266:  *(out + 22)  = base + ((*in32 >> 0) & 65535);
        1: 2267:  *(out + 23)  = base + ((*in32 >> 16) & 65535);
        -: 2268:  in32++;
        -: 2269:  /* consumed: 4 bytes (total: 52) */
        1: 2270:  *(out + 24)  = base + ((*in32 >> 0) & 65535);
        1: 2271:  *(out + 25)  = base + ((*in32 >> 16) & 65535);
        -: 2272:  in32++;
        -: 2273:  /* consumed: 4 bytes (total: 56) */
        1: 2274:  *(out + 26)  = base + ((*in32 >> 0) & 65535);
        1: 2275:  *(out + 27)  = base + ((*in32 >> 16) & 65535);
        -: 2276:  in32++;
        -: 2277:  /* consumed: 4 bytes (total: 60) */
        1: 2278:  *(out + 28)  = base + ((*in32 >> 0) & 65535);
        1: 2279:  *(out + 29)  = base + ((*in32 >> 16) & 65535);
        -: 2280:  in32++;
        -: 2281:  /* consumed: 4 bytes (total: 64) */
        1: 2282:  *(out + 30)  = base + ((*in32 >> 0) & 65535);
        1: 2283:  *(out + 31)  = base + ((*in32 >> 16) & 65535);
        -: 2284:  /* remaining: 0 bits */
        1: 2285:  return 64;
        -: 2286:}
        -: 2287:
        -: 2288:static uint32_t
        1: 2289:pack17_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 2290:  uint32_t tmp, length;
        1: 2291:  tmp  = (*(in + 0) - base) << 0;
        1: 2292:  tmp |= (*(in + 1) - base) << 17;
        1: 2293:  *(uint32_t *)out = tmp;
        -: 2294:  out += sizeof(uint32_t);
        -: 2295:  /* consumed: 4 bytes (total: 4) */
        1: 2296:  tmp  = (*(in + 1) - base) >> (17 - 2);
        1: 2297:  tmp |= (*(in + 2) - base) << 2;
        1: 2298:  tmp |= (*(in + 3) - base) << 19;
        1: 2299:  *(uint32_t *)out = tmp;
        -: 2300:  out += sizeof(uint32_t);
        -: 2301:  /* consumed: 4 bytes (total: 8) */
        1: 2302:  tmp  = (*(in + 3) - base) >> (17 - 4);
        1: 2303:  tmp |= (*(in + 4) - base) << 4;
        1: 2304:  tmp |= (*(in + 5) - base) << 21;
        1: 2305:  *(uint32_t *)out = tmp;
        -: 2306:  out += sizeof(uint32_t);
        -: 2307:  /* consumed: 4 bytes (total: 12) */
        1: 2308:  tmp  = (*(in + 5) - base) >> (17 - 6);
        1: 2309:  tmp |= (*(in + 6) - base) << 6;
        1: 2310:  tmp |= (*(in + 7) - base) << 23;
        1: 2311:  *(uint32_t *)out = tmp;
        -: 2312:  out += sizeof(uint32_t);
        -: 2313:  /* consumed: 4 bytes (total: 16) */
        1: 2314:  tmp  = (*(in + 7) - base) >> (17 - 8);
        1: 2315:  tmp |= (*(in + 8) - base) << 8;
        1: 2316:  tmp |= (*(in + 9) - base) << 25;
        1: 2317:  *(uint32_t *)out = tmp;
        -: 2318:  out += sizeof(uint32_t);
        -: 2319:  /* consumed: 4 bytes (total: 20) */
        1: 2320:  tmp  = (*(in + 9) - base) >> (17 - 10);
        1: 2321:  tmp |= (*(in + 10) - base) << 10;
        1: 2322:  tmp |= (*(in + 11) - base) << 27;
        1: 2323:  *(uint32_t *)out = tmp;
        -: 2324:  out += sizeof(uint32_t);
        -: 2325:  /* consumed: 4 bytes (total: 24) */
        1: 2326:  tmp  = (*(in + 11) - base) >> (17 - 12);
        1: 2327:  tmp |= (*(in + 12) - base) << 12;
        1: 2328:  tmp |= (*(in + 13) - base) << 29;
        1: 2329:  *(uint32_t *)out = tmp;
        -: 2330:  out += sizeof(uint32_t);
        -: 2331:  /* consumed: 4 bytes (total: 28) */
        1: 2332:  tmp  = (*(in + 13) - base) >> (17 - 14);
        1: 2333:  tmp |= (*(in + 14) - base) << 14;
        1: 2334:  tmp |= (*(in + 15) - base) << 31;
        1: 2335:  *(uint32_t *)out = tmp;
        -: 2336:  out += sizeof(uint32_t);
        -: 2337:  /* consumed: 4 bytes (total: 32) */
        1: 2338:  tmp  = (*(in + 15) - base) >> (17 - 16);
        1: 2339:  tmp |= (*(in + 16) - base) << 16;
        1: 2340:  *(uint32_t *)out = tmp;
        -: 2341:  out += sizeof(uint32_t);
        -: 2342:  /* consumed: 4 bytes (total: 36) */
        1: 2343:  tmp  = (*(in + 16) - base) >> (17 - 1);
        1: 2344:  tmp |= (*(in + 17) - base) << 1;
        1: 2345:  tmp |= (*(in + 18) - base) << 18;
        1: 2346:  *(uint32_t *)out = tmp;
        -: 2347:  out += sizeof(uint32_t);
        -: 2348:  /* consumed: 4 bytes (total: 40) */
        1: 2349:  tmp  = (*(in + 18) - base) >> (17 - 3);
        1: 2350:  tmp |= (*(in + 19) - base) << 3;
        1: 2351:  tmp |= (*(in + 20) - base) << 20;
        1: 2352:  *(uint32_t *)out = tmp;
        -: 2353:  out += sizeof(uint32_t);
        -: 2354:  /* consumed: 4 bytes (total: 44) */
        1: 2355:  tmp  = (*(in + 20) - base) >> (17 - 5);
        1: 2356:  tmp |= (*(in + 21) - base) << 5;
        1: 2357:  tmp |= (*(in + 22) - base) << 22;
        1: 2358:  *(uint32_t *)out = tmp;
        -: 2359:  out += sizeof(uint32_t);
        -: 2360:  /* consumed: 4 bytes (total: 48) */
        1: 2361:  tmp  = (*(in + 22) - base) >> (17 - 7);
        1: 2362:  tmp |= (*(in + 23) - base) << 7;
        1: 2363:  tmp |= (*(in + 24) - base) << 24;
        1: 2364:  *(uint32_t *)out = tmp;
        -: 2365:  out += sizeof(uint32_t);
        -: 2366:  /* consumed: 4 bytes (total: 52) */
        1: 2367:  tmp  = (*(in + 24) - base) >> (17 - 9);
        1: 2368:  tmp |= (*(in + 25) - base) << 9;
        1: 2369:  tmp |= (*(in + 26) - base) << 26;
        1: 2370:  *(uint32_t *)out = tmp;
        -: 2371:  out += sizeof(uint32_t);
        -: 2372:  /* consumed: 4 bytes (total: 56) */
        1: 2373:  tmp  = (*(in + 26) - base) >> (17 - 11);
        1: 2374:  tmp |= (*(in + 27) - base) << 11;
        1: 2375:  tmp |= (*(in + 28) - base) << 28;
        1: 2376:  *(uint32_t *)out = tmp;
        -: 2377:  out += sizeof(uint32_t);
        -: 2378:  /* consumed: 4 bytes (total: 60) */
        1: 2379:  tmp  = (*(in + 28) - base) >> (17 - 13);
        1: 2380:  tmp |= (*(in + 29) - base) << 13;
        1: 2381:  tmp |= (*(in + 30) - base) << 30;
        1: 2382:  *(uint32_t *)out = tmp;
        1: 2383:  out += sizeof(uint32_t);
        -: 2384:  /* consumed: 4 bytes (total: 64) */
        1: 2385:  tmp  = (*(in + 30) - base) >> (17 - 15);
        1: 2386:  tmp |= (*(in + 31) - base) << 15;
        -: 2387:  /* remaining: 0 bits */
        -: 2388:  length = (32 / 8) - (32 - 32) / 8;
        -: 2389:  /* consumed: 4 bytes (total: 68) */
        -: 2390:  memcpy(out, &tmp, length);
        1: 2391:  return 68;
        -: 2392:}
        -: 2393:
        -: 2394:static uint32_t
        1: 2395:unpack17_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 2396:  uint32_t *in32 = (uint32_t *)in;
        -: 2397:  uint32_t tmp; (void)tmp;
        1: 2398:  *(out + 0)  = base + ((*in32 >> 0) & 131071);
        1: 2399:  tmp = (*in32 >> 17);
        -: 2400:  in32++;
        -: 2401:  /* consumed: 4 bytes (total: 8) */
        1: 2402:  tmp |= (*in32 % (1U << 2)) << (17 - 2);
        1: 2403:  *(out + 1) = base + tmp;
        1: 2404:  *(out + 2)  = base + ((*in32 >> 2) & 131071);
        1: 2405:  tmp = (*in32 >> 19);
        -: 2406:  in32++;
        -: 2407:  /* consumed: 4 bytes (total: 12) */
        1: 2408:  tmp |= (*in32 % (1U << 4)) << (17 - 4);
        1: 2409:  *(out + 3) = base + tmp;
        1: 2410:  *(out + 4)  = base + ((*in32 >> 4) & 131071);
        1: 2411:  tmp = (*in32 >> 21);
        -: 2412:  in32++;
        -: 2413:  /* consumed: 4 bytes (total: 16) */
        1: 2414:  tmp |= (*in32 % (1U << 6)) << (17 - 6);
        1: 2415:  *(out + 5) = base + tmp;
        1: 2416:  *(out + 6)  = base + ((*in32 >> 6) & 131071);
        1: 2417:  tmp = (*in32 >> 23);
        -: 2418:  in32++;
        -: 2419:  /* consumed: 4 bytes (total: 20) */
        1: 2420:  tmp |= (*in32 % (1U << 8)) << (17 - 8);
        1: 2421:  *(out + 7) = base + tmp;
        1: 2422:  *(out + 8)  = base + ((*in32 >> 8) & 131071);
        1: 2423:  tmp = (*in32 >> 25);
        -: 2424:  in32++;
        -: 2425:  /* consumed: 4 bytes (total: 24) */
        1: 2426:  tmp |= (*in32 % (1U << 10)) << (17 - 10);
        1: 2427:  *(out + 9) = base + tmp;
        1: 2428:  *(out + 10)  = base + ((*in32 >> 10) & 131071);
        1: 2429:  tmp = (*in32 >> 27);
        -: 2430:  in32++;
        -: 2431:  /* consumed: 4 bytes (total: 28) */
        1: 2432:  tmp |= (*in32 % (1U << 12)) << (17 - 12);
        1: 2433:  *(out + 11) = base + tmp;
        1: 2434:  *(out + 12)  = base + ((*in32 >> 12) & 131071);
        1: 2435:  tmp = (*in32 >> 29);
        -: 2436:  in32++;
        -: 2437:  /* consumed: 4 bytes (total: 32) */
        1: 2438:  tmp |= (*in32 % (1U << 14)) << (17 - 14);
        1: 2439:  *(out + 13) = base + tmp;
        1: 2440:  *(out + 14)  = base + ((*in32 >> 14) & 131071);
        1: 2441:  tmp = (*in32 >> 31);
        -: 2442:  in32++;
        -: 2443:  /* consumed: 4 bytes (total: 36) */
        1: 2444:  tmp |= (*in32 % (1U << 16)) << (17 - 16);
        1: 2445:  *(out + 15) = base + tmp;
        1: 2446:  tmp = (*in32 >> 16);
        -: 2447:  in32++;
        -: 2448:  /* consumed: 4 bytes (total: 40) */
        1: 2449:  tmp |= (*in32 % (1U << 1)) << (17 - 1);
        1: 2450:  *(out + 16) = base + tmp;
        1: 2451:  *(out + 17)  = base + ((*in32 >> 1) & 131071);
        1: 2452:  tmp = (*in32 >> 18);
        -: 2453:  in32++;
        -: 2454:  /* consumed: 4 bytes (total: 44) */
        1: 2455:  tmp |= (*in32 % (1U << 3)) << (17 - 3);
        1: 2456:  *(out + 18) = base + tmp;
        1: 2457:  *(out + 19)  = base + ((*in32 >> 3) & 131071);
        1: 2458:  tmp = (*in32 >> 20);
        -: 2459:  in32++;
        -: 2460:  /* consumed: 4 bytes (total: 48) */
        1: 2461:  tmp |= (*in32 % (1U << 5)) << (17 - 5);
        1: 2462:  *(out + 20) = base + tmp;
        1: 2463:  *(out + 21)  = base + ((*in32 >> 5) & 131071);
        1: 2464:  tmp = (*in32 >> 22);
        -: 2465:  in32++;
        -: 2466:  /* consumed: 4 bytes (total: 52) */
        1: 2467:  tmp |= (*in32 % (1U << 7)) << (17 - 7);
        1: 2468:  *(out + 22) = base + tmp;
        1: 2469:  *(out + 23)  = base + ((*in32 >> 7) & 131071);
        1: 2470:  tmp = (*in32 >> 24);
        -: 2471:  in32++;
        -: 2472:  /* consumed: 4 bytes (total: 56) */
        1: 2473:  tmp |= (*in32 % (1U << 9)) << (17 - 9);
        1: 2474:  *(out + 24) = base + tmp;
        1: 2475:  *(out + 25)  = base + ((*in32 >> 9) & 131071);
        1: 2476:  tmp = (*in32 >> 26);
        -: 2477:  in32++;
        -: 2478:  /* consumed: 4 bytes (total: 60) */
        1: 2479:  tmp |= (*in32 % (1U << 11)) << (17 - 11);
        1: 2480:  *(out + 26) = base + tmp;
        1: 2481:  *(out + 27)  = base + ((*in32 >> 11) & 131071);
        1: 2482:  tmp = (*in32 >> 28);
        -: 2483:  in32++;
        -: 2484:  /* consumed: 4 bytes (total: 64) */
        1: 2485:  tmp |= (*in32 % (1U << 13)) << (17 - 13);
        1: 2486:  *(out + 28) = base + tmp;
        1: 2487:  *(out + 29)  = base + ((*in32 >> 13) & 131071);
        1: 2488:  tmp = (*in32 >> 30);
        -: 2489:  in32++;
        -: 2490:  /* consumed: 4 bytes (total: 68) */
        1: 2491:  tmp |= (*in32 % (1U << 15)) << (17 - 15);
        1: 2492:  *(out + 30) = base + tmp;
        1: 2493:  *(out + 31)  = base + ((*in32 >> 15) & 131071);
        -: 2494:  /* remaining: 0 bits */
        1: 2495:  return 68;
        -: 2496:}
        -: 2497:
        -: 2498:static uint32_t
        1: 2499:pack18_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 2500:  uint32_t tmp, length;
        1: 2501:  tmp  = (*(in + 0) - base) << 0;
        1: 2502:  tmp |= (*(in + 1) - base) << 18;
        1: 2503:  *(uint32_t *)out = tmp;
        -: 2504:  out += sizeof(uint32_t);
        -: 2505:  /* consumed: 4 bytes (total: 4) */
        1: 2506:  tmp  = (*(in + 1) - base) >> (18 - 4);
        1: 2507:  tmp |= (*(in + 2) - base) << 4;
        1: 2508:  tmp |= (*(in + 3) - base) << 22;
        1: 2509:  *(uint32_t *)out = tmp;
        -: 2510:  out += sizeof(uint32_t);
        -: 2511:  /* consumed: 4 bytes (total: 8) */
        1: 2512:  tmp  = (*(in + 3) - base) >> (18 - 8);
        1: 2513:  tmp |= (*(in + 4) - base) << 8;
        1: 2514:  tmp |= (*(in + 5) - base) << 26;
        1: 2515:  *(uint32_t *)out = tmp;
        -: 2516:  out += sizeof(uint32_t);
        -: 2517:  /* consumed: 4 bytes (total: 12) */
        1: 2518:  tmp  = (*(in + 5) - base) >> (18 - 12);
        1: 2519:  tmp |= (*(in + 6) - base) << 12;
        1: 2520:  tmp |= (*(in + 7) - base) << 30;
        1: 2521:  *(uint32_t *)out = tmp;
        -: 2522:  out += sizeof(uint32_t);
        -: 2523:  /* consumed: 4 bytes (total: 16) */
        1: 2524:  tmp  = (*(in + 7) - base) >> (18 - 16);
        1: 2525:  tmp |= (*(in + 8) - base) << 16;
        1: 2526:  *(uint32_t *)out = tmp;
        -: 2527:  out += sizeof(uint32_t);
        -: 2528:  /* consumed: 4 bytes (total: 20) */
        1: 2529:  tmp  = (*(in + 8) - base) >> (18 - 2);
        1: 2530:  tmp |= (*(in + 9) - base) << 2;
        1: 2531:  tmp |= (*(in + 10) - base) << 20;
        1: 2532:  *(uint32_t *)out = tmp;
        -: 2533:  out += sizeof(uint32_t);
        -: 2534:  /* consumed: 4 bytes (total: 24) */
        1: 2535:  tmp  = (*(in + 10) - base) >> (18 - 6);
        1: 2536:  tmp |= (*(in + 11) - base) << 6;
        1: 2537:  tmp |= (*(in + 12) - base) << 24;
        1: 2538:  *(uint32_t *)out = tmp;
        -: 2539:  out += sizeof(uint32_t);
        -: 2540:  /* consumed: 4 bytes (total: 28) */
        1: 2541:  tmp  = (*(in + 12) - base) >> (18 - 10);
        1: 2542:  tmp |= (*(in + 13) - base) << 10;
        1: 2543:  tmp |= (*(in + 14) - base) << 28;
        1: 2544:  *(uint32_t *)out = tmp;
        -: 2545:  out += sizeof(uint32_t);
        -: 2546:  /* consumed: 4 bytes (total: 32) */
        1: 2547:  tmp  = (*(in + 14) - base) >> (18 - 14);
        1: 2548:  tmp |= (*(in + 15) - base) << 14;
        1: 2549:  *(uint32_t *)out = tmp;
        -: 2550:  out += sizeof(uint32_t);
        -: 2551:  /* consumed: 4 bytes (total: 36) */
        1: 2552:  tmp  = (*(in + 16) - base) << 0;
        1: 2553:  tmp |= (*(in + 17) - base) << 18;
        1: 2554:  *(uint32_t *)out = tmp;
        -: 2555:  out += sizeof(uint32_t);
        -: 2556:  /* consumed: 4 bytes (total: 40) */
        1: 2557:  tmp  = (*(in + 17) - base) >> (18 - 4);
        1: 2558:  tmp |= (*(in + 18) - base) << 4;
        1: 2559:  tmp |= (*(in + 19) - base) << 22;
        1: 2560:  *(uint32_t *)out = tmp;
        -: 2561:  out += sizeof(uint32_t);
        -: 2562:  /* consumed: 4 bytes (total: 44) */
        1: 2563:  tmp  = (*(in + 19) - base) >> (18 - 8);
        1: 2564:  tmp |= (*(in + 20) - base) << 8;
        1: 2565:  tmp |= (*(in + 21) - base) << 26;
        1: 2566:  *(uint32_t *)out = tmp;
        -: 2567:  out += sizeof(uint32_t);
        -: 2568:  /* consumed: 4 bytes (total: 48) */
        1: 2569:  tmp  = (*(in + 21) - base) >> (18 - 12);
        1: 2570:  tmp |= (*(in + 22) - base) << 12;
        1: 2571:  tmp |= (*(in + 23) - base) << 30;
        1: 2572:  *(uint32_t *)out = tmp;
        -: 2573:  out += sizeof(uint32_t);
        -: 2574:  /* consumed: 4 bytes (total: 52) */
        1: 2575:  tmp  = (*(in + 23) - base) >> (18 - 16);
        1: 2576:  tmp |= (*(in + 24) - base) << 16;
        1: 2577:  *(uint32_t *)out = tmp;
        -: 2578:  out += sizeof(uint32_t);
        -: 2579:  /* consumed: 4 bytes (total: 56) */
        1: 2580:  tmp  = (*(in + 24) - base) >> (18 - 2);
        1: 2581:  tmp |= (*(in + 25) - base) << 2;
        1: 2582:  tmp |= (*(in + 26) - base) << 20;
        1: 2583:  *(uint32_t *)out = tmp;
        -: 2584:  out += sizeof(uint32_t);
        -: 2585:  /* consumed: 4 bytes (total: 60) */
        1: 2586:  tmp  = (*(in + 26) - base) >> (18 - 6);
        1: 2587:  tmp |= (*(in + 27) - base) << 6;
        1: 2588:  tmp |= (*(in + 28) - base) << 24;
        1: 2589:  *(uint32_t *)out = tmp;
        -: 2590:  out += sizeof(uint32_t);
        -: 2591:  /* consumed: 4 bytes (total: 64) */
        1: 2592:  tmp  = (*(in + 28) - base) >> (18 - 10);
        1: 2593:  tmp |= (*(in + 29) - base) << 10;
        1: 2594:  tmp |= (*(in + 30) - base) << 28;
        1: 2595:  *(uint32_t *)out = tmp;
        1: 2596:  out += sizeof(uint32_t);
        -: 2597:  /* consumed: 4 bytes (total: 68) */
        1: 2598:  tmp  = (*(in + 30) - base) >> (18 - 14);
        1: 2599:  tmp |= (*(in + 31) - base) << 14;
        -: 2600:  /* remaining: 0 bits */
        -: 2601:  length = (32 / 8) - (32 - 32) / 8;
        -: 2602:  /* consumed: 4 bytes (total: 72) */
        -: 2603:  memcpy(out, &tmp, length);
        1: 2604:  return 72;
        -: 2605:}
        -: 2606:
        -: 2607:static uint32_t
        1: 2608:unpack18_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 2609:  uint32_t *in32 = (uint32_t *)in;
        -: 2610:  uint32_t tmp; (void)tmp;
        1: 2611:  *(out + 0)  = base + ((*in32 >> 0) & 262143);
        1: 2612:  tmp = (*in32 >> 18);
        -: 2613:  in32++;
        -: 2614:  /* consumed: 4 bytes (total: 8) */
        1: 2615:  tmp |= (*in32 % (1U << 4)) << (18 - 4);
        1: 2616:  *(out + 1) = base + tmp;
        1: 2617:  *(out + 2)  = base + ((*in32 >> 4) & 262143);
        1: 2618:  tmp = (*in32 >> 22);
        -: 2619:  in32++;
        -: 2620:  /* consumed: 4 bytes (total: 12) */
        1: 2621:  tmp |= (*in32 % (1U << 8)) << (18 - 8);
        1: 2622:  *(out + 3) = base + tmp;
        1: 2623:  *(out + 4)  = base + ((*in32 >> 8) & 262143);
        1: 2624:  tmp = (*in32 >> 26);
        -: 2625:  in32++;
        -: 2626:  /* consumed: 4 bytes (total: 16) */
        1: 2627:  tmp |= (*in32 % (1U << 12)) << (18 - 12);
        1: 2628:  *(out + 5) = base + tmp;
        1: 2629:  *(out + 6)  = base + ((*in32 >> 12) & 262143);
        1: 2630:  tmp = (*in32 >> 30);
        -: 2631:  in32++;
        -: 2632:  /* consumed: 4 bytes (total: 20) */
        1: 2633:  tmp |= (*in32 % (1U << 16)) << (18 - 16);
        1: 2634:  *(out + 7) = base + tmp;
        1: 2635:  tmp = (*in32 >> 16);
        -: 2636:  in32++;
        -: 2637:  /* consumed: 4 bytes (total: 24) */
        1: 2638:  tmp |= (*in32 % (1U << 2)) << (18 - 2);
        1: 2639:  *(out + 8) = base + tmp;
        1: 2640:  *(out + 9)  = base + ((*in32 >> 2) & 262143);
        1: 2641:  tmp = (*in32 >> 20);
        -: 2642:  in32++;
        -: 2643:  /* consumed: 4 bytes (total: 28) */
        1: 2644:  tmp |= (*in32 % (1U << 6)) << (18 - 6);
        1: 2645:  *(out + 10) = base + tmp;
        1: 2646:  *(out + 11)  = base + ((*in32 >> 6) & 262143);
        1: 2647:  tmp = (*in32 >> 24);
        -: 2648:  in32++;
        -: 2649:  /* consumed: 4 bytes (total: 32) */
        1: 2650:  tmp |= (*in32 % (1U << 10)) << (18 - 10);
        1: 2651:  *(out + 12) = base + tmp;
        1: 2652:  *(out + 13)  = base + ((*in32 >> 10) & 262143);
        1: 2653:  tmp = (*in32 >> 28);
        -: 2654:  in32++;
        -: 2655:  /* consumed: 4 bytes (total: 36) */
        1: 2656:  tmp |= (*in32 % (1U << 14)) << (18 - 14);
        1: 2657:  *(out + 14) = base + tmp;
        1: 2658:  *(out + 15)  = base + ((*in32 >> 14) & 262143);
        -: 2659:  in32++;
        -: 2660:  /* consumed: 4 bytes (total: 40) */
        1: 2661:  *(out + 16)  = base + ((*in32 >> 0) & 262143);
        1: 2662:  tmp = (*in32 >> 18);
        -: 2663:  in32++;
        -: 2664:  /* consumed: 4 bytes (total: 44) */
        1: 2665:  tmp |= (*in32 % (1U << 4)) << (18 - 4);
        1: 2666:  *(out + 17) = base + tmp;
        1: 2667:  *(out + 18)  = base + ((*in32 >> 4) & 262143);
        1: 2668:  tmp = (*in32 >> 22);
        -: 2669:  in32++;
        -: 2670:  /* consumed: 4 bytes (total: 48) */
        1: 2671:  tmp |= (*in32 % (1U << 8)) << (18 - 8);
        1: 2672:  *(out + 19) = base + tmp;
        1: 2673:  *(out + 20)  = base + ((*in32 >> 8) & 262143);
        1: 2674:  tmp = (*in32 >> 26);
        -: 2675:  in32++;
        -: 2676:  /* consumed: 4 bytes (total: 52) */
        1: 2677:  tmp |= (*in32 % (1U << 12)) << (18 - 12);
        1: 2678:  *(out + 21) = base + tmp;
        1: 2679:  *(out + 22)  = base + ((*in32 >> 12) & 262143);
        1: 2680:  tmp = (*in32 >> 30);
        -: 2681:  in32++;
        -: 2682:  /* consumed: 4 bytes (total: 56) */
        1: 2683:  tmp |= (*in32 % (1U << 16)) << (18 - 16);
        1: 2684:  *(out + 23) = base + tmp;
        1: 2685:  tmp = (*in32 >> 16);
        -: 2686:  in32++;
        -: 2687:  /* consumed: 4 bytes (total: 60) */
        1: 2688:  tmp |= (*in32 % (1U << 2)) << (18 - 2);
        1: 2689:  *(out + 24) = base + tmp;
        1: 2690:  *(out + 25)  = base + ((*in32 >> 2) & 262143);
        1: 2691:  tmp = (*in32 >> 20);
        -: 2692:  in32++;
        -: 2693:  /* consumed: 4 bytes (total: 64) */
        1: 2694:  tmp |= (*in32 % (1U << 6)) << (18 - 6);
        1: 2695:  *(out + 26) = base + tmp;
        1: 2696:  *(out + 27)  = base + ((*in32 >> 6) & 262143);
        1: 2697:  tmp = (*in32 >> 24);
        -: 2698:  in32++;
        -: 2699:  /* consumed: 4 bytes (total: 68) */
        1: 2700:  tmp |= (*in32 % (1U << 10)) << (18 - 10);
        1: 2701:  *(out + 28) = base + tmp;
        1: 2702:  *(out + 29)  = base + ((*in32 >> 10) & 262143);
        1: 2703:  tmp = (*in32 >> 28);
        -: 2704:  in32++;
        -: 2705:  /* consumed: 4 bytes (total: 72) */
        1: 2706:  tmp |= (*in32 % (1U << 14)) << (18 - 14);
        1: 2707:  *(out + 30) = base + tmp;
        1: 2708:  *(out + 31)  = base + ((*in32 >> 14) & 262143);
        -: 2709:  /* remaining: 0 bits */
        1: 2710:  return 72;
        -: 2711:}
        -: 2712:
        -: 2713:static uint32_t
        1: 2714:pack19_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 2715:  uint32_t tmp, length;
        1: 2716:  tmp  = (*(in + 0) - base) << 0;
        1: 2717:  tmp |= (*(in + 1) - base) << 19;
        1: 2718:  *(uint32_t *)out = tmp;
        -: 2719:  out += sizeof(uint32_t);
        -: 2720:  /* consumed: 4 bytes (total: 4) */
        1: 2721:  tmp  = (*(in + 1) - base) >> (19 - 6);
        1: 2722:  tmp |= (*(in + 2) - base) << 6;
        1: 2723:  tmp |= (*(in + 3) - base) << 25;
        1: 2724:  *(uint32_t *)out = tmp;
        -: 2725:  out += sizeof(uint32_t);
        -: 2726:  /* consumed: 4 bytes (total: 8) */
        1: 2727:  tmp  = (*(in + 3) - base) >> (19 - 12);
        1: 2728:  tmp |= (*(in + 4) - base) << 12;
        1: 2729:  tmp |= (*(in + 5) - base) << 31;
        1: 2730:  *(uint32_t *)out = tmp;
        -: 2731:  out += sizeof(uint32_t);
        -: 2732:  /* consumed: 4 bytes (total: 12) */
        1: 2733:  tmp  = (*(in + 5) - base) >> (19 - 18);
        1: 2734:  tmp |= (*(in + 6) - base) << 18;
        1: 2735:  *(uint32_t *)out = tmp;
        -: 2736:  out += sizeof(uint32_t);
        -: 2737:  /* consumed: 4 bytes (total: 16) */
        1: 2738:  tmp  = (*(in + 6) - base) >> (19 - 5);
        1: 2739:  tmp |= (*(in + 7) - base) << 5;
        1: 2740:  tmp |= (*(in + 8) - base) << 24;
        1: 2741:  *(uint32_t *)out = tmp;
        -: 2742:  out += sizeof(uint32_t);
        -: 2743:  /* consumed: 4 bytes (total: 20) */
        1: 2744:  tmp  = (*(in + 8) - base) >> (19 - 11);
        1: 2745:  tmp |= (*(in + 9) - base) << 11;
        1: 2746:  tmp |= (*(in + 10) - base) << 30;
        1: 2747:  *(uint32_t *)out = tmp;
        -: 2748:  out += sizeof(uint32_t);
        -: 2749:  /* consumed: 4 bytes (total: 24) */
        1: 2750:  tmp  = (*(in + 10) - base) >> (19 - 17);
        1: 2751:  tmp |= (*(in + 11) - base) << 17;
        1: 2752:  *(uint32_t *)out = tmp;
        -: 2753:  out += sizeof(uint32_t);
        -: 2754:  /* consumed: 4 bytes (total: 28) */
        1: 2755:  tmp  = (*(in + 11) - base) >> (19 - 4);
        1: 2756:  tmp |= (*(in + 12) - base) << 4;
        1: 2757:  tmp |= (*(in + 13) - base) << 23;
        1: 2758:  *(uint32_t *)out = tmp;
        -: 2759:  out += sizeof(uint32_t);
        -: 2760:  /* consumed: 4 bytes (total: 32) */
        1: 2761:  tmp  = (*(in + 13) - base) >> (19 - 10);
        1: 2762:  tmp |= (*(in + 14) - base) << 10;
        1: 2763:  tmp |= (*(in + 15) - base) << 29;
        1: 2764:  *(uint32_t *)out = tmp;
        -: 2765:  out += sizeof(uint32_t);
        -: 2766:  /* consumed: 4 bytes (total: 36) */
        1: 2767:  tmp  = (*(in + 15) - base) >> (19 - 16);
        1: 2768:  tmp |= (*(in + 16) - base) << 16;
        1: 2769:  *(uint32_t *)out = tmp;
        -: 2770:  out += sizeof(uint32_t);
        -: 2771:  /* consumed: 4 bytes (total: 40) */
        1: 2772:  tmp  = (*(in + 16) - base) >> (19 - 3);
        1: 2773:  tmp |= (*(in + 17) - base) << 3;
        1: 2774:  tmp |= (*(in + 18) - base) << 22;
        1: 2775:  *(uint32_t *)out = tmp;
        -: 2776:  out += sizeof(uint32_t);
        -: 2777:  /* consumed: 4 bytes (total: 44) */
        1: 2778:  tmp  = (*(in + 18) - base) >> (19 - 9);
        1: 2779:  tmp |= (*(in + 19) - base) << 9;
        1: 2780:  tmp |= (*(in + 20) - base) << 28;
        1: 2781:  *(uint32_t *)out = tmp;
        -: 2782:  out += sizeof(uint32_t);
        -: 2783:  /* consumed: 4 bytes (total: 48) */
        1: 2784:  tmp  = (*(in + 20) - base) >> (19 - 15);
        1: 2785:  tmp |= (*(in + 21) - base) << 15;
        1: 2786:  *(uint32_t *)out = tmp;
        -: 2787:  out += sizeof(uint32_t);
        -: 2788:  /* consumed: 4 bytes (total: 52) */
        1: 2789:  tmp  = (*(in + 21) - base) >> (19 - 2);
        1: 2790:  tmp |= (*(in + 22) - base) << 2;
        1: 2791:  tmp |= (*(in + 23) - base) << 21;
        1: 2792:  *(uint32_t *)out = tmp;
        -: 2793:  out += sizeof(uint32_t);
        -: 2794:  /* consumed: 4 bytes (total: 56) */
        1: 2795:  tmp  = (*(in + 23) - base) >> (19 - 8);
        1: 2796:  tmp |= (*(in + 24) - base) << 8;
        1: 2797:  tmp |= (*(in + 25) - base) << 27;
        1: 2798:  *(uint32_t *)out = tmp;
        -: 2799:  out += sizeof(uint32_t);
        -: 2800:  /* consumed: 4 bytes (total: 60) */
        1: 2801:  tmp  = (*(in + 25) - base) >> (19 - 14);
        1: 2802:  tmp |= (*(in + 26) - base) << 14;
        1: 2803:  *(uint32_t *)out = tmp;
        -: 2804:  out += sizeof(uint32_t);
        -: 2805:  /* consumed: 4 bytes (total: 64) */
        1: 2806:  tmp  = (*(in + 26) - base) >> (19 - 1);
        1: 2807:  tmp |= (*(in + 27) - base) << 1;
        1: 2808:  tmp |= (*(in + 28) - base) << 20;
        1: 2809:  *(uint32_t *)out = tmp;
        -: 2810:  out += sizeof(uint32_t);
        -: 2811:  /* consumed: 4 bytes (total: 68) */
        1: 2812:  tmp  = (*(in + 28) - base) >> (19 - 7);
        1: 2813:  tmp |= (*(in + 29) - base) << 7;
        1: 2814:  tmp |= (*(in + 30) - base) << 26;
        1: 2815:  *(uint32_t *)out = tmp;
        1: 2816:  out += sizeof(uint32_t);
        -: 2817:  /* consumed: 4 bytes (total: 72) */
        1: 2818:  tmp  = (*(in + 30) - base) >> (19 - 13);
        1: 2819:  tmp |= (*(in + 31) - base) << 13;
        -: 2820:  /* remaining: 0 bits */
        -: 2821:  length = (32 / 8) - (32 - 32) / 8;
        -: 2822:  /* consumed: 4 bytes (total: 76) */
        -: 2823:  memcpy(out, &tmp, length);
        1: 2824:  return 76;
        -: 2825:}
        -: 2826:
        -: 2827:static uint32_t
        1: 2828:unpack19_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 2829:  uint32_t *in32 = (uint32_t *)in;
        -: 2830:  uint32_t tmp; (void)tmp;
        1: 2831:  *(out + 0)  = base + ((*in32 >> 0) & 524287);
        1: 2832:  tmp = (*in32 >> 19);
        -: 2833:  in32++;
        -: 2834:  /* consumed: 4 bytes (total: 8) */
        1: 2835:  tmp |= (*in32 % (1U << 6)) << (19 - 6);
        1: 2836:  *(out + 1) = base + tmp;
        1: 2837:  *(out + 2)  = base + ((*in32 >> 6) & 524287);
        1: 2838:  tmp = (*in32 >> 25);
        -: 2839:  in32++;
        -: 2840:  /* consumed: 4 bytes (total: 12) */
        1: 2841:  tmp |= (*in32 % (1U << 12)) << (19 - 12);
        1: 2842:  *(out + 3) = base + tmp;
        1: 2843:  *(out + 4)  = base + ((*in32 >> 12) & 524287);
        1: 2844:  tmp = (*in32 >> 31);
        -: 2845:  in32++;
        -: 2846:  /* consumed: 4 bytes (total: 16) */
        1: 2847:  tmp |= (*in32 % (1U << 18)) << (19 - 18);
        1: 2848:  *(out + 5) = base + tmp;
        1: 2849:  tmp = (*in32 >> 18);
        -: 2850:  in32++;
        -: 2851:  /* consumed: 4 bytes (total: 20) */
        1: 2852:  tmp |= (*in32 % (1U << 5)) << (19 - 5);
        1: 2853:  *(out + 6) = base + tmp;
        1: 2854:  *(out + 7)  = base + ((*in32 >> 5) & 524287);
        1: 2855:  tmp = (*in32 >> 24);
        -: 2856:  in32++;
        -: 2857:  /* consumed: 4 bytes (total: 24) */
        1: 2858:  tmp |= (*in32 % (1U << 11)) << (19 - 11);
        1: 2859:  *(out + 8) = base + tmp;
        1: 2860:  *(out + 9)  = base + ((*in32 >> 11) & 524287);
        1: 2861:  tmp = (*in32 >> 30);
        -: 2862:  in32++;
        -: 2863:  /* consumed: 4 bytes (total: 28) */
        1: 2864:  tmp |= (*in32 % (1U << 17)) << (19 - 17);
        1: 2865:  *(out + 10) = base + tmp;
        1: 2866:  tmp = (*in32 >> 17);
        -: 2867:  in32++;
        -: 2868:  /* consumed: 4 bytes (total: 32) */
        1: 2869:  tmp |= (*in32 % (1U << 4)) << (19 - 4);
        1: 2870:  *(out + 11) = base + tmp;
        1: 2871:  *(out + 12)  = base + ((*in32 >> 4) & 524287);
        1: 2872:  tmp = (*in32 >> 23);
        -: 2873:  in32++;
        -: 2874:  /* consumed: 4 bytes (total: 36) */
        1: 2875:  tmp |= (*in32 % (1U << 10)) << (19 - 10);
        1: 2876:  *(out + 13) = base + tmp;
        1: 2877:  *(out + 14)  = base + ((*in32 >> 10) & 524287);
        1: 2878:  tmp = (*in32 >> 29);
        -: 2879:  in32++;
        -: 2880:  /* consumed: 4 bytes (total: 40) */
        1: 2881:  tmp |= (*in32 % (1U << 16)) << (19 - 16);
        1: 2882:  *(out + 15) = base + tmp;
        1: 2883:  tmp = (*in32 >> 16);
        -: 2884:  in32++;
        -: 2885:  /* consumed: 4 bytes (total: 44) */
        1: 2886:  tmp |= (*in32 % (1U << 3)) << (19 - 3);
        1: 2887:  *(out + 16) = base + tmp;
        1: 2888:  *(out + 17)  = base + ((*in32 >> 3) & 524287);
        1: 2889:  tmp = (*in32 >> 22);
        -: 2890:  in32++;
        -: 2891:  /* consumed: 4 bytes (total: 48) */
        1: 2892:  tmp |= (*in32 % (1U << 9)) << (19 - 9);
        1: 2893:  *(out + 18) = base + tmp;
        1: 2894:  *(out + 19)  = base + ((*in32 >> 9) & 524287);
        1: 2895:  tmp = (*in32 >> 28);
        -: 2896:  in32++;
        -: 2897:  /* consumed: 4 bytes (total: 52) */
        1: 2898:  tmp |= (*in32 % (1U << 15)) << (19 - 15);
        1: 2899:  *(out + 20) = base + tmp;
        1: 2900:  tmp = (*in32 >> 15);
        -: 2901:  in32++;
        -: 2902:  /* consumed: 4 bytes (total: 56) */
        1: 2903:  tmp |= (*in32 % (1U << 2)) << (19 - 2);
        1: 2904:  *(out + 21) = base + tmp;
        1: 2905:  *(out + 22)  = base + ((*in32 >> 2) & 524287);
        1: 2906:  tmp = (*in32 >> 21);
        -: 2907:  in32++;
        -: 2908:  /* consumed: 4 bytes (total: 60) */
        1: 2909:  tmp |= (*in32 % (1U << 8)) << (19 - 8);
        1: 2910:  *(out + 23) = base + tmp;
        1: 2911:  *(out + 24)  = base + ((*in32 >> 8) & 524287);
        1: 2912:  tmp = (*in32 >> 27);
        -: 2913:  in32++;
        -: 2914:  /* consumed: 4 bytes (total: 64) */
        1: 2915:  tmp |= (*in32 % (1U << 14)) << (19 - 14);
        1: 2916:  *(out + 25) = base + tmp;
        1: 2917:  tmp = (*in32 >> 14);
        -: 2918:  in32++;
        -: 2919:  /* consumed: 4 bytes (total: 68) */
        1: 2920:  tmp |= (*in32 % (1U << 1)) << (19 - 1);
        1: 2921:  *(out + 26) = base + tmp;
        1: 2922:  *(out + 27)  = base + ((*in32 >> 1) & 524287);
        1: 2923:  tmp = (*in32 >> 20);
        -: 2924:  in32++;
        -: 2925:  /* consumed: 4 bytes (total: 72) */
        1: 2926:  tmp |= (*in32 % (1U << 7)) << (19 - 7);
        1: 2927:  *(out + 28) = base + tmp;
        1: 2928:  *(out + 29)  = base + ((*in32 >> 7) & 524287);
        1: 2929:  tmp = (*in32 >> 26);
        -: 2930:  in32++;
        -: 2931:  /* consumed: 4 bytes (total: 76) */
        1: 2932:  tmp |= (*in32 % (1U << 13)) << (19 - 13);
        1: 2933:  *(out + 30) = base + tmp;
        1: 2934:  *(out + 31)  = base + ((*in32 >> 13) & 524287);
        -: 2935:  /* remaining: 0 bits */
        1: 2936:  return 76;
        -: 2937:}
        -: 2938:
        -: 2939:static uint32_t
        1: 2940:pack20_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 2941:  uint32_t tmp, length;
        1: 2942:  tmp  = (*(in + 0) - base) << 0;
        1: 2943:  tmp |= (*(in + 1) - base) << 20;
        1: 2944:  *(uint32_t *)out = tmp;
        -: 2945:  out += sizeof(uint32_t);
        -: 2946:  /* consumed: 4 bytes (total: 4) */
        1: 2947:  tmp  = (*(in + 1) - base) >> (20 - 8);
        1: 2948:  tmp |= (*(in + 2) - base) << 8;
        1: 2949:  tmp |= (*(in + 3) - base) << 28;
        1: 2950:  *(uint32_t *)out = tmp;
        -: 2951:  out += sizeof(uint32_t);
        -: 2952:  /* consumed: 4 bytes (total: 8) */
        1: 2953:  tmp  = (*(in + 3) - base) >> (20 - 16);
        1: 2954:  tmp |= (*(in + 4) - base) << 16;
        1: 2955:  *(uint32_t *)out = tmp;
        -: 2956:  out += sizeof(uint32_t);
        -: 2957:  /* consumed: 4 bytes (total: 12) */
        1: 2958:  tmp  = (*(in + 4) - base) >> (20 - 4);
        1: 2959:  tmp |= (*(in + 5) - base) << 4;
        1: 2960:  tmp |= (*(in + 6) - base) << 24;
        1: 2961:  *(uint32_t *)out = tmp;
        -: 2962:  out += sizeof(uint32_t);
        -: 2963:  /* consumed: 4 bytes (total: 16) */
        1: 2964:  tmp  = (*(in + 6) - base) >> (20 - 12);
        1: 2965:  tmp |= (*(in + 7) - base) << 12;
        1: 2966:  *(uint32_t *)out = tmp;
        -: 2967:  out += sizeof(uint32_t);
        -: 2968:  /* consumed: 4 bytes (total: 20) */
        1: 2969:  tmp  = (*(in + 8) - base) << 0;
        1: 2970:  tmp |= (*(in + 9) - base) << 20;
        1: 2971:  *(uint32_t *)out = tmp;
        -: 2972:  out += sizeof(uint32_t);
        -: 2973:  /* consumed: 4 bytes (total: 24) */
        1: 2974:  tmp  = (*(in + 9) - base) >> (20 - 8);
        1: 2975:  tmp |= (*(in + 10) - base) << 8;
        1: 2976:  tmp |= (*(in + 11) - base) << 28;
        1: 2977:  *(uint32_t *)out = tmp;
        -: 2978:  out += sizeof(uint32_t);
        -: 2979:  /* consumed: 4 bytes (total: 28) */
        1: 2980:  tmp  = (*(in + 11) - base) >> (20 - 16);
        1: 2981:  tmp |= (*(in + 12) - base) << 16;
        1: 2982:  *(uint32_t *)out = tmp;
        -: 2983:  out += sizeof(uint32_t);
        -: 2984:  /* consumed: 4 bytes (total: 32) */
        1: 2985:  tmp  = (*(in + 12) - base) >> (20 - 4);
        1: 2986:  tmp |= (*(in + 13) - base) << 4;
        1: 2987:  tmp |= (*(in + 14) - base) << 24;
        1: 2988:  *(uint32_t *)out = tmp;
        -: 2989:  out += sizeof(uint32_t);
        -: 2990:  /* consumed: 4 bytes (total: 36) */
        1: 2991:  tmp  = (*(in + 14) - base) >> (20 - 12);
        1: 2992:  tmp |= (*(in + 15) - base) << 12;
        1: 2993:  *(uint32_t *)out = tmp;
        -: 2994:  out += sizeof(uint32_t);
        -: 2995:  /* consumed: 4 bytes (total: 40) */
        1: 2996:  tmp  = (*(in + 16) - base) << 0;
        1: 2997:  tmp |= (*(in + 17) - base) << 20;
        1: 2998:  *(uint32_t *)out = tmp;
        -: 2999:  out += sizeof(uint32_t);
        -: 3000:  /* consumed: 4 bytes (total: 44) */
        1: 3001:  tmp  = (*(in + 17) - base) >> (20 - 8);
        1: 3002:  tmp |= (*(in + 18) - base) << 8;
        1: 3003:  tmp |= (*(in + 19) - base) << 28;
        1: 3004:  *(uint32_t *)out = tmp;
        -: 3005:  out += sizeof(uint32_t);
        -: 3006:  /* consumed: 4 bytes (total: 48) */
        1: 3007:  tmp  = (*(in + 19) - base) >> (20 - 16);
        1: 3008:  tmp |= (*(in + 20) - base) << 16;
        1: 3009:  *(uint32_t *)out = tmp;
        -: 3010:  out += sizeof(uint32_t);
        -: 3011:  /* consumed: 4 bytes (total: 52) */
        1: 3012:  tmp  = (*(in + 20) - base) >> (20 - 4);
        1: 3013:  tmp |= (*(in + 21) - base) << 4;
        1: 3014:  tmp |= (*(in + 22) - base) << 24;
        1: 3015:  *(uint32_t *)out = tmp;
        -: 3016:  out += sizeof(uint32_t);
        -: 3017:  /* consumed: 4 bytes (total: 56) */
        1: 3018:  tmp  = (*(in + 22) - base) >> (20 - 12);
        1: 3019:  tmp |= (*(in + 23) - base) << 12;
        1: 3020:  *(uint32_t *)out = tmp;
        -: 3021:  out += sizeof(uint32_t);
        -: 3022:  /* consumed: 4 bytes (total: 60) */
        1: 3023:  tmp  = (*(in + 24) - base) << 0;
        1: 3024:  tmp |= (*(in + 25) - base) << 20;
        1: 3025:  *(uint32_t *)out = tmp;
        -: 3026:  out += sizeof(uint32_t);
        -: 3027:  /* consumed: 4 bytes (total: 64) */
        1: 3028:  tmp  = (*(in + 25) - base) >> (20 - 8);
        1: 3029:  tmp |= (*(in + 26) - base) << 8;
        1: 3030:  tmp |= (*(in + 27) - base) << 28;
        1: 3031:  *(uint32_t *)out = tmp;
        -: 3032:  out += sizeof(uint32_t);
        -: 3033:  /* consumed: 4 bytes (total: 68) */
        1: 3034:  tmp  = (*(in + 27) - base) >> (20 - 16);
        1: 3035:  tmp |= (*(in + 28) - base) << 16;
        1: 3036:  *(uint32_t *)out = tmp;
        -: 3037:  out += sizeof(uint32_t);
        -: 3038:  /* consumed: 4 bytes (total: 72) */
        1: 3039:  tmp  = (*(in + 28) - base) >> (20 - 4);
        1: 3040:  tmp |= (*(in + 29) - base) << 4;
        1: 3041:  tmp |= (*(in + 30) - base) << 24;
        1: 3042:  *(uint32_t *)out = tmp;
        1: 3043:  out += sizeof(uint32_t);
        -: 3044:  /* consumed: 4 bytes (total: 76) */
        1: 3045:  tmp  = (*(in + 30) - base) >> (20 - 12);
        1: 3046:  tmp |= (*(in + 31) - base) << 12;
        -: 3047:  /* remaining: 0 bits */
        -: 3048:  length = (32 / 8) - (32 - 32) / 8;
        -: 3049:  /* consumed: 4 bytes (total: 80) */
        -: 3050:  memcpy(out, &tmp, length);
        1: 3051:  return 80;
        -: 3052:}
        -: 3053:
        -: 3054:static uint32_t
        1: 3055:unpack20_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 3056:  uint32_t *in32 = (uint32_t *)in;
        -: 3057:  uint32_t tmp; (void)tmp;
        1: 3058:  *(out + 0)  = base + ((*in32 >> 0) & 1048575);
        1: 3059:  tmp = (*in32 >> 20);
        -: 3060:  in32++;
        -: 3061:  /* consumed: 4 bytes (total: 8) */
        1: 3062:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1: 3063:  *(out + 1) = base + tmp;
        1: 3064:  *(out + 2)  = base + ((*in32 >> 8) & 1048575);
        1: 3065:  tmp = (*in32 >> 28);
        -: 3066:  in32++;
        -: 3067:  /* consumed: 4 bytes (total: 12) */
        1: 3068:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1: 3069:  *(out + 3) = base + tmp;
        1: 3070:  tmp = (*in32 >> 16);
        -: 3071:  in32++;
        -: 3072:  /* consumed: 4 bytes (total: 16) */
        1: 3073:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1: 3074:  *(out + 4) = base + tmp;
        1: 3075:  *(out + 5)  = base + ((*in32 >> 4) & 1048575);
        1: 3076:  tmp = (*in32 >> 24);
        -: 3077:  in32++;
        -: 3078:  /* consumed: 4 bytes (total: 20) */
        1: 3079:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1: 3080:  *(out + 6) = base + tmp;
        1: 3081:  *(out + 7)  = base + ((*in32 >> 12) & 1048575);
        -: 3082:  in32++;
        -: 3083:  /* consumed: 4 bytes (total: 24) */
        1: 3084:  *(out + 8)  = base + ((*in32 >> 0) & 1048575);
        1: 3085:  tmp = (*in32 >> 20);
        -: 3086:  in32++;
        -: 3087:  /* consumed: 4 bytes (total: 28) */
        1: 3088:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1: 3089:  *(out + 9) = base + tmp;
        1: 3090:  *(out + 10)  = base + ((*in32 >> 8) & 1048575);
        1: 3091:  tmp = (*in32 >> 28);
        -: 3092:  in32++;
        -: 3093:  /* consumed: 4 bytes (total: 32) */
        1: 3094:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1: 3095:  *(out + 11) = base + tmp;
        1: 3096:  tmp = (*in32 >> 16);
        -: 3097:  in32++;
        -: 3098:  /* consumed: 4 bytes (total: 36) */
        1: 3099:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1: 3100:  *(out + 12) = base + tmp;
        1: 3101:  *(out + 13)  = base + ((*in32 >> 4) & 1048575);
        1: 3102:  tmp = (*in32 >> 24);
        -: 3103:  in32++;
        -: 3104:  /* consumed: 4 bytes (total: 40) */
        1: 3105:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1: 3106:  *(out + 14) = base + tmp;
        1: 3107:  *(out + 15)  = base + ((*in32 >> 12) & 1048575);
        -: 3108:  in32++;
        -: 3109:  /* consumed: 4 bytes (total: 44) */
        1: 3110:  *(out + 16)  = base + ((*in32 >> 0) & 1048575);
        1: 3111:  tmp = (*in32 >> 20);
        -: 3112:  in32++;
        -: 3113:  /* consumed: 4 bytes (total: 48) */
        1: 3114:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1: 3115:  *(out + 17) = base + tmp;
        1: 3116:  *(out + 18)  = base + ((*in32 >> 8) & 1048575);
        1: 3117:  tmp = (*in32 >> 28);
        -: 3118:  in32++;
        -: 3119:  /* consumed: 4 bytes (total: 52) */
        1: 3120:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1: 3121:  *(out + 19) = base + tmp;
        1: 3122:  tmp = (*in32 >> 16);
        -: 3123:  in32++;
        -: 3124:  /* consumed: 4 bytes (total: 56) */
        1: 3125:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1: 3126:  *(out + 20) = base + tmp;
        1: 3127:  *(out + 21)  = base + ((*in32 >> 4) & 1048575);
        1: 3128:  tmp = (*in32 >> 24);
        -: 3129:  in32++;
        -: 3130:  /* consumed: 4 bytes (total: 60) */
        1: 3131:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1: 3132:  *(out + 22) = base + tmp;
        1: 3133:  *(out + 23)  = base + ((*in32 >> 12) & 1048575);
        -: 3134:  in32++;
        -: 3135:  /* consumed: 4 bytes (total: 64) */
        1: 3136:  *(out + 24)  = base + ((*in32 >> 0) & 1048575);
        1: 3137:  tmp = (*in32 >> 20);
        -: 3138:  in32++;
        -: 3139:  /* consumed: 4 bytes (total: 68) */
        1: 3140:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1: 3141:  *(out + 25) = base + tmp;
        1: 3142:  *(out + 26)  = base + ((*in32 >> 8) & 1048575);
        1: 3143:  tmp = (*in32 >> 28);
        -: 3144:  in32++;
        -: 3145:  /* consumed: 4 bytes (total: 72) */
        1: 3146:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1: 3147:  *(out + 27) = base + tmp;
        1: 3148:  tmp = (*in32 >> 16);
        -: 3149:  in32++;
        -: 3150:  /* consumed: 4 bytes (total: 76) */
        1: 3151:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1: 3152:  *(out + 28) = base + tmp;
        1: 3153:  *(out + 29)  = base + ((*in32 >> 4) & 1048575);
        1: 3154:  tmp = (*in32 >> 24);
        -: 3155:  in32++;
        -: 3156:  /* consumed: 4 bytes (total: 80) */
        1: 3157:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1: 3158:  *(out + 30) = base + tmp;
        1: 3159:  *(out + 31)  = base + ((*in32 >> 12) & 1048575);
        -: 3160:  /* remaining: 0 bits */
        1: 3161:  return 80;
        -: 3162:}
        -: 3163:
        -: 3164:static uint32_t
        1: 3165:pack21_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 3166:  uint32_t tmp, length;
        1: 3167:  tmp  = (*(in + 0) - base) << 0;
        1: 3168:  tmp |= (*(in + 1) - base) << 21;
        1: 3169:  *(uint32_t *)out = tmp;
        -: 3170:  out += sizeof(uint32_t);
        -: 3171:  /* consumed: 4 bytes (total: 4) */
        1: 3172:  tmp  = (*(in + 1) - base) >> (21 - 10);
        1: 3173:  tmp |= (*(in + 2) - base) << 10;
        1: 3174:  tmp |= (*(in + 3) - base) << 31;
        1: 3175:  *(uint32_t *)out = tmp;
        -: 3176:  out += sizeof(uint32_t);
        -: 3177:  /* consumed: 4 bytes (total: 8) */
        1: 3178:  tmp  = (*(in + 3) - base) >> (21 - 20);
        1: 3179:  tmp |= (*(in + 4) - base) << 20;
        1: 3180:  *(uint32_t *)out = tmp;
        -: 3181:  out += sizeof(uint32_t);
        -: 3182:  /* consumed: 4 bytes (total: 12) */
        1: 3183:  tmp  = (*(in + 4) - base) >> (21 - 9);
        1: 3184:  tmp |= (*(in + 5) - base) << 9;
        1: 3185:  tmp |= (*(in + 6) - base) << 30;
        1: 3186:  *(uint32_t *)out = tmp;
        -: 3187:  out += sizeof(uint32_t);
        -: 3188:  /* consumed: 4 bytes (total: 16) */
        1: 3189:  tmp  = (*(in + 6) - base) >> (21 - 19);
        1: 3190:  tmp |= (*(in + 7) - base) << 19;
        1: 3191:  *(uint32_t *)out = tmp;
        -: 3192:  out += sizeof(uint32_t);
        -: 3193:  /* consumed: 4 bytes (total: 20) */
        1: 3194:  tmp  = (*(in + 7) - base) >> (21 - 8);
        1: 3195:  tmp |= (*(in + 8) - base) << 8;
        1: 3196:  tmp |= (*(in + 9) - base) << 29;
        1: 3197:  *(uint32_t *)out = tmp;
        -: 3198:  out += sizeof(uint32_t);
        -: 3199:  /* consumed: 4 bytes (total: 24) */
        1: 3200:  tmp  = (*(in + 9) - base) >> (21 - 18);
        1: 3201:  tmp |= (*(in + 10) - base) << 18;
        1: 3202:  *(uint32_t *)out = tmp;
        -: 3203:  out += sizeof(uint32_t);
        -: 3204:  /* consumed: 4 bytes (total: 28) */
        1: 3205:  tmp  = (*(in + 10) - base) >> (21 - 7);
        1: 3206:  tmp |= (*(in + 11) - base) << 7;
        1: 3207:  tmp |= (*(in + 12) - base) << 28;
        1: 3208:  *(uint32_t *)out = tmp;
        -: 3209:  out += sizeof(uint32_t);
        -: 3210:  /* consumed: 4 bytes (total: 32) */
        1: 3211:  tmp  = (*(in + 12) - base) >> (21 - 17);
        1: 3212:  tmp |= (*(in + 13) - base) << 17;
        1: 3213:  *(uint32_t *)out = tmp;
        -: 3214:  out += sizeof(uint32_t);
        -: 3215:  /* consumed: 4 bytes (total: 36) */
        1: 3216:  tmp  = (*(in + 13) - base) >> (21 - 6);
        1: 3217:  tmp |= (*(in + 14) - base) << 6;
        1: 3218:  tmp |= (*(in + 15) - base) << 27;
        1: 3219:  *(uint32_t *)out = tmp;
        -: 3220:  out += sizeof(uint32_t);
        -: 3221:  /* consumed: 4 bytes (total: 40) */
        1: 3222:  tmp  = (*(in + 15) - base) >> (21 - 16);
        1: 3223:  tmp |= (*(in + 16) - base) << 16;
        1: 3224:  *(uint32_t *)out = tmp;
        -: 3225:  out += sizeof(uint32_t);
        -: 3226:  /* consumed: 4 bytes (total: 44) */
        1: 3227:  tmp  = (*(in + 16) - base) >> (21 - 5);
        1: 3228:  tmp |= (*(in + 17) - base) << 5;
        1: 3229:  tmp |= (*(in + 18) - base) << 26;
        1: 3230:  *(uint32_t *)out = tmp;
        -: 3231:  out += sizeof(uint32_t);
        -: 3232:  /* consumed: 4 bytes (total: 48) */
        1: 3233:  tmp  = (*(in + 18) - base) >> (21 - 15);
        1: 3234:  tmp |= (*(in + 19) - base) << 15;
        1: 3235:  *(uint32_t *)out = tmp;
        -: 3236:  out += sizeof(uint32_t);
        -: 3237:  /* consumed: 4 bytes (total: 52) */
        1: 3238:  tmp  = (*(in + 19) - base) >> (21 - 4);
        1: 3239:  tmp |= (*(in + 20) - base) << 4;
        1: 3240:  tmp |= (*(in + 21) - base) << 25;
        1: 3241:  *(uint32_t *)out = tmp;
        -: 3242:  out += sizeof(uint32_t);
        -: 3243:  /* consumed: 4 bytes (total: 56) */
        1: 3244:  tmp  = (*(in + 21) - base) >> (21 - 14);
        1: 3245:  tmp |= (*(in + 22) - base) << 14;
        1: 3246:  *(uint32_t *)out = tmp;
        -: 3247:  out += sizeof(uint32_t);
        -: 3248:  /* consumed: 4 bytes (total: 60) */
        1: 3249:  tmp  = (*(in + 22) - base) >> (21 - 3);
        1: 3250:  tmp |= (*(in + 23) - base) << 3;
        1: 3251:  tmp |= (*(in + 24) - base) << 24;
        1: 3252:  *(uint32_t *)out = tmp;
        -: 3253:  out += sizeof(uint32_t);
        -: 3254:  /* consumed: 4 bytes (total: 64) */
        1: 3255:  tmp  = (*(in + 24) - base) >> (21 - 13);
        1: 3256:  tmp |= (*(in + 25) - base) << 13;
        1: 3257:  *(uint32_t *)out = tmp;
        -: 3258:  out += sizeof(uint32_t);
        -: 3259:  /* consumed: 4 bytes (total: 68) */
        1: 3260:  tmp  = (*(in + 25) - base) >> (21 - 2);
        1: 3261:  tmp |= (*(in + 26) - base) << 2;
        1: 3262:  tmp |= (*(in + 27) - base) << 23;
        1: 3263:  *(uint32_t *)out = tmp;
        -: 3264:  out += sizeof(uint32_t);
        -: 3265:  /* consumed: 4 bytes (total: 72) */
        1: 3266:  tmp  = (*(in + 27) - base) >> (21 - 12);
        1: 3267:  tmp |= (*(in + 28) - base) << 12;
        1: 3268:  *(uint32_t *)out = tmp;
        -: 3269:  out += sizeof(uint32_t);
        -: 3270:  /* consumed: 4 bytes (total: 76) */
        1: 3271:  tmp  = (*(in + 28) - base) >> (21 - 1);
        1: 3272:  tmp |= (*(in + 29) - base) << 1;
        1: 3273:  tmp |= (*(in + 30) - base) << 22;
        1: 3274:  *(uint32_t *)out = tmp;
        1: 3275:  out += sizeof(uint32_t);
        -: 3276:  /* consumed: 4 bytes (total: 80) */
        1: 3277:  tmp  = (*(in + 30) - base) >> (21 - 11);
        1: 3278:  tmp |= (*(in + 31) - base) << 11;
        -: 3279:  /* remaining: 0 bits */
        -: 3280:  length = (32 / 8) - (32 - 32) / 8;
        -: 3281:  /* consumed: 4 bytes (total: 84) */
        -: 3282:  memcpy(out, &tmp, length);
        1: 3283:  return 84;
        -: 3284:}
        -: 3285:
        -: 3286:static uint32_t
        1: 3287:unpack21_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 3288:  uint32_t *in32 = (uint32_t *)in;
        -: 3289:  uint32_t tmp; (void)tmp;
        1: 3290:  *(out + 0)  = base + ((*in32 >> 0) & 2097151);
        1: 3291:  tmp = (*in32 >> 21);
        -: 3292:  in32++;
        -: 3293:  /* consumed: 4 bytes (total: 8) */
        1: 3294:  tmp |= (*in32 % (1U << 10)) << (21 - 10);
        1: 3295:  *(out + 1) = base + tmp;
        1: 3296:  *(out + 2)  = base + ((*in32 >> 10) & 2097151);
        1: 3297:  tmp = (*in32 >> 31);
        -: 3298:  in32++;
        -: 3299:  /* consumed: 4 bytes (total: 12) */
        1: 3300:  tmp |= (*in32 % (1U << 20)) << (21 - 20);
        1: 3301:  *(out + 3) = base + tmp;
        1: 3302:  tmp = (*in32 >> 20);
        -: 3303:  in32++;
        -: 3304:  /* consumed: 4 bytes (total: 16) */
        1: 3305:  tmp |= (*in32 % (1U << 9)) << (21 - 9);
        1: 3306:  *(out + 4) = base + tmp;
        1: 3307:  *(out + 5)  = base + ((*in32 >> 9) & 2097151);
        1: 3308:  tmp = (*in32 >> 30);
        -: 3309:  in32++;
        -: 3310:  /* consumed: 4 bytes (total: 20) */
        1: 3311:  tmp |= (*in32 % (1U << 19)) << (21 - 19);
        1: 3312:  *(out + 6) = base + tmp;
        1: 3313:  tmp = (*in32 >> 19);
        -: 3314:  in32++;
        -: 3315:  /* consumed: 4 bytes (total: 24) */
        1: 3316:  tmp |= (*in32 % (1U << 8)) << (21 - 8);
        1: 3317:  *(out + 7) = base + tmp;
        1: 3318:  *(out + 8)  = base + ((*in32 >> 8) & 2097151);
        1: 3319:  tmp = (*in32 >> 29);
        -: 3320:  in32++;
        -: 3321:  /* consumed: 4 bytes (total: 28) */
        1: 3322:  tmp |= (*in32 % (1U << 18)) << (21 - 18);
        1: 3323:  *(out + 9) = base + tmp;
        1: 3324:  tmp = (*in32 >> 18);
        -: 3325:  in32++;
        -: 3326:  /* consumed: 4 bytes (total: 32) */
        1: 3327:  tmp |= (*in32 % (1U << 7)) << (21 - 7);
        1: 3328:  *(out + 10) = base + tmp;
        1: 3329:  *(out + 11)  = base + ((*in32 >> 7) & 2097151);
        1: 3330:  tmp = (*in32 >> 28);
        -: 3331:  in32++;
        -: 3332:  /* consumed: 4 bytes (total: 36) */
        1: 3333:  tmp |= (*in32 % (1U << 17)) << (21 - 17);
        1: 3334:  *(out + 12) = base + tmp;
        1: 3335:  tmp = (*in32 >> 17);
        -: 3336:  in32++;
        -: 3337:  /* consumed: 4 bytes (total: 40) */
        1: 3338:  tmp |= (*in32 % (1U << 6)) << (21 - 6);
        1: 3339:  *(out + 13) = base + tmp;
        1: 3340:  *(out + 14)  = base + ((*in32 >> 6) & 2097151);
        1: 3341:  tmp = (*in32 >> 27);
        -: 3342:  in32++;
        -: 3343:  /* consumed: 4 bytes (total: 44) */
        1: 3344:  tmp |= (*in32 % (1U << 16)) << (21 - 16);
        1: 3345:  *(out + 15) = base + tmp;
        1: 3346:  tmp = (*in32 >> 16);
        -: 3347:  in32++;
        -: 3348:  /* consumed: 4 bytes (total: 48) */
        1: 3349:  tmp |= (*in32 % (1U << 5)) << (21 - 5);
        1: 3350:  *(out + 16) = base + tmp;
        1: 3351:  *(out + 17)  = base + ((*in32 >> 5) & 2097151);
        1: 3352:  tmp = (*in32 >> 26);
        -: 3353:  in32++;
        -: 3354:  /* consumed: 4 bytes (total: 52) */
        1: 3355:  tmp |= (*in32 % (1U << 15)) << (21 - 15);
        1: 3356:  *(out + 18) = base + tmp;
        1: 3357:  tmp = (*in32 >> 15);
        -: 3358:  in32++;
        -: 3359:  /* consumed: 4 bytes (total: 56) */
        1: 3360:  tmp |= (*in32 % (1U << 4)) << (21 - 4);
        1: 3361:  *(out + 19) = base + tmp;
        1: 3362:  *(out + 20)  = base + ((*in32 >> 4) & 2097151);
        1: 3363:  tmp = (*in32 >> 25);
        -: 3364:  in32++;
        -: 3365:  /* consumed: 4 bytes (total: 60) */
        1: 3366:  tmp |= (*in32 % (1U << 14)) << (21 - 14);
        1: 3367:  *(out + 21) = base + tmp;
        1: 3368:  tmp = (*in32 >> 14);
        -: 3369:  in32++;
        -: 3370:  /* consumed: 4 bytes (total: 64) */
        1: 3371:  tmp |= (*in32 % (1U << 3)) << (21 - 3);
        1: 3372:  *(out + 22) = base + tmp;
        1: 3373:  *(out + 23)  = base + ((*in32 >> 3) & 2097151);
        1: 3374:  tmp = (*in32 >> 24);
        -: 3375:  in32++;
        -: 3376:  /* consumed: 4 bytes (total: 68) */
        1: 3377:  tmp |= (*in32 % (1U << 13)) << (21 - 13);
        1: 3378:  *(out + 24) = base + tmp;
        1: 3379:  tmp = (*in32 >> 13);
        -: 3380:  in32++;
        -: 3381:  /* consumed: 4 bytes (total: 72) */
        1: 3382:  tmp |= (*in32 % (1U << 2)) << (21 - 2);
        1: 3383:  *(out + 25) = base + tmp;
        1: 3384:  *(out + 26)  = base + ((*in32 >> 2) & 2097151);
        1: 3385:  tmp = (*in32 >> 23);
        -: 3386:  in32++;
        -: 3387:  /* consumed: 4 bytes (total: 76) */
        1: 3388:  tmp |= (*in32 % (1U << 12)) << (21 - 12);
        1: 3389:  *(out + 27) = base + tmp;
        1: 3390:  tmp = (*in32 >> 12);
        -: 3391:  in32++;
        -: 3392:  /* consumed: 4 bytes (total: 80) */
        1: 3393:  tmp |= (*in32 % (1U << 1)) << (21 - 1);
        1: 3394:  *(out + 28) = base + tmp;
        1: 3395:  *(out + 29)  = base + ((*in32 >> 1) & 2097151);
        1: 3396:  tmp = (*in32 >> 22);
        -: 3397:  in32++;
        -: 3398:  /* consumed: 4 bytes (total: 84) */
        1: 3399:  tmp |= (*in32 % (1U << 11)) << (21 - 11);
        1: 3400:  *(out + 30) = base + tmp;
        1: 3401:  *(out + 31)  = base + ((*in32 >> 11) & 2097151);
        -: 3402:  /* remaining: 0 bits */
        1: 3403:  return 84;
        -: 3404:}
        -: 3405:
        -: 3406:static uint32_t
        1: 3407:pack22_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 3408:  uint32_t tmp, length;
        1: 3409:  tmp  = (*(in + 0) - base) << 0;
        1: 3410:  tmp |= (*(in + 1) - base) << 22;
        1: 3411:  *(uint32_t *)out = tmp;
        -: 3412:  out += sizeof(uint32_t);
        -: 3413:  /* consumed: 4 bytes (total: 4) */
        1: 3414:  tmp  = (*(in + 1) - base) >> (22 - 12);
        1: 3415:  tmp |= (*(in + 2) - base) << 12;
        1: 3416:  *(uint32_t *)out = tmp;
        -: 3417:  out += sizeof(uint32_t);
        -: 3418:  /* consumed: 4 bytes (total: 8) */
        1: 3419:  tmp  = (*(in + 2) - base) >> (22 - 2);
        1: 3420:  tmp |= (*(in + 3) - base) << 2;
        1: 3421:  tmp |= (*(in + 4) - base) << 24;
        1: 3422:  *(uint32_t *)out = tmp;
        -: 3423:  out += sizeof(uint32_t);
        -: 3424:  /* consumed: 4 bytes (total: 12) */
        1: 3425:  tmp  = (*(in + 4) - base) >> (22 - 14);
        1: 3426:  tmp |= (*(in + 5) - base) << 14;
        1: 3427:  *(uint32_t *)out = tmp;
        -: 3428:  out += sizeof(uint32_t);
        -: 3429:  /* consumed: 4 bytes (total: 16) */
        1: 3430:  tmp  = (*(in + 5) - base) >> (22 - 4);
        1: 3431:  tmp |= (*(in + 6) - base) << 4;
        1: 3432:  tmp |= (*(in + 7) - base) << 26;
        1: 3433:  *(uint32_t *)out = tmp;
        -: 3434:  out += sizeof(uint32_t);
        -: 3435:  /* consumed: 4 bytes (total: 20) */
        1: 3436:  tmp  = (*(in + 7) - base) >> (22 - 16);
        1: 3437:  tmp |= (*(in + 8) - base) << 16;
        1: 3438:  *(uint32_t *)out = tmp;
        -: 3439:  out += sizeof(uint32_t);
        -: 3440:  /* consumed: 4 bytes (total: 24) */
        1: 3441:  tmp  = (*(in + 8) - base) >> (22 - 6);
        1: 3442:  tmp |= (*(in + 9) - base) << 6;
        1: 3443:  tmp |= (*(in + 10) - base) << 28;
        1: 3444:  *(uint32_t *)out = tmp;
        -: 3445:  out += sizeof(uint32_t);
        -: 3446:  /* consumed: 4 bytes (total: 28) */
        1: 3447:  tmp  = (*(in + 10) - base) >> (22 - 18);
        1: 3448:  tmp |= (*(in + 11) - base) << 18;
        1: 3449:  *(uint32_t *)out = tmp;
        -: 3450:  out += sizeof(uint32_t);
        -: 3451:  /* consumed: 4 bytes (total: 32) */
        1: 3452:  tmp  = (*(in + 11) - base) >> (22 - 8);
        1: 3453:  tmp |= (*(in + 12) - base) << 8;
        1: 3454:  tmp |= (*(in + 13) - base) << 30;
        1: 3455:  *(uint32_t *)out = tmp;
        -: 3456:  out += sizeof(uint32_t);
        -: 3457:  /* consumed: 4 bytes (total: 36) */
        1: 3458:  tmp  = (*(in + 13) - base) >> (22 - 20);
        1: 3459:  tmp |= (*(in + 14) - base) << 20;
        1: 3460:  *(uint32_t *)out = tmp;
        -: 3461:  out += sizeof(uint32_t);
        -: 3462:  /* consumed: 4 bytes (total: 40) */
        1: 3463:  tmp  = (*(in + 14) - base) >> (22 - 10);
        1: 3464:  tmp |= (*(in + 15) - base) << 10;
        1: 3465:  *(uint32_t *)out = tmp;
        -: 3466:  out += sizeof(uint32_t);
        -: 3467:  /* consumed: 4 bytes (total: 44) */
        1: 3468:  tmp  = (*(in + 16) - base) << 0;
        1: 3469:  tmp |= (*(in + 17) - base) << 22;
        1: 3470:  *(uint32_t *)out = tmp;
        -: 3471:  out += sizeof(uint32_t);
        -: 3472:  /* consumed: 4 bytes (total: 48) */
        1: 3473:  tmp  = (*(in + 17) - base) >> (22 - 12);
        1: 3474:  tmp |= (*(in + 18) - base) << 12;
        1: 3475:  *(uint32_t *)out = tmp;
        -: 3476:  out += sizeof(uint32_t);
        -: 3477:  /* consumed: 4 bytes (total: 52) */
        1: 3478:  tmp  = (*(in + 18) - base) >> (22 - 2);
        1: 3479:  tmp |= (*(in + 19) - base) << 2;
        1: 3480:  tmp |= (*(in + 20) - base) << 24;
        1: 3481:  *(uint32_t *)out = tmp;
        -: 3482:  out += sizeof(uint32_t);
        -: 3483:  /* consumed: 4 bytes (total: 56) */
        1: 3484:  tmp  = (*(in + 20) - base) >> (22 - 14);
        1: 3485:  tmp |= (*(in + 21) - base) << 14;
        1: 3486:  *(uint32_t *)out = tmp;
        -: 3487:  out += sizeof(uint32_t);
        -: 3488:  /* consumed: 4 bytes (total: 60) */
        1: 3489:  tmp  = (*(in + 21) - base) >> (22 - 4);
        1: 3490:  tmp |= (*(in + 22) - base) << 4;
        1: 3491:  tmp |= (*(in + 23) - base) << 26;
        1: 3492:  *(uint32_t *)out = tmp;
        -: 3493:  out += sizeof(uint32_t);
        -: 3494:  /* consumed: 4 bytes (total: 64) */
        1: 3495:  tmp  = (*(in + 23) - base) >> (22 - 16);
        1: 3496:  tmp |= (*(in + 24) - base) << 16;
        1: 3497:  *(uint32_t *)out = tmp;
        -: 3498:  out += sizeof(uint32_t);
        -: 3499:  /* consumed: 4 bytes (total: 68) */
        1: 3500:  tmp  = (*(in + 24) - base) >> (22 - 6);
        1: 3501:  tmp |= (*(in + 25) - base) << 6;
        1: 3502:  tmp |= (*(in + 26) - base) << 28;
        1: 3503:  *(uint32_t *)out = tmp;
        -: 3504:  out += sizeof(uint32_t);
        -: 3505:  /* consumed: 4 bytes (total: 72) */
        1: 3506:  tmp  = (*(in + 26) - base) >> (22 - 18);
        1: 3507:  tmp |= (*(in + 27) - base) << 18;
        1: 3508:  *(uint32_t *)out = tmp;
        -: 3509:  out += sizeof(uint32_t);
        -: 3510:  /* consumed: 4 bytes (total: 76) */
        1: 3511:  tmp  = (*(in + 27) - base) >> (22 - 8);
        1: 3512:  tmp |= (*(in + 28) - base) << 8;
        1: 3513:  tmp |= (*(in + 29) - base) << 30;
        1: 3514:  *(uint32_t *)out = tmp;
        -: 3515:  out += sizeof(uint32_t);
        -: 3516:  /* consumed: 4 bytes (total: 80) */
        1: 3517:  tmp  = (*(in + 29) - base) >> (22 - 20);
        1: 3518:  tmp |= (*(in + 30) - base) << 20;
        1: 3519:  *(uint32_t *)out = tmp;
        1: 3520:  out += sizeof(uint32_t);
        -: 3521:  /* consumed: 4 bytes (total: 84) */
        1: 3522:  tmp  = (*(in + 30) - base) >> (22 - 10);
        1: 3523:  tmp |= (*(in + 31) - base) << 10;
        -: 3524:  /* remaining: 0 bits */
        -: 3525:  length = (32 / 8) - (32 - 32) / 8;
        -: 3526:  /* consumed: 4 bytes (total: 88) */
        -: 3527:  memcpy(out, &tmp, length);
        1: 3528:  return 88;
        -: 3529:}
        -: 3530:
        -: 3531:static uint32_t
        1: 3532:unpack22_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 3533:  uint32_t *in32 = (uint32_t *)in;
        -: 3534:  uint32_t tmp; (void)tmp;
        1: 3535:  *(out + 0)  = base + ((*in32 >> 0) & 4194303);
        1: 3536:  tmp = (*in32 >> 22);
        -: 3537:  in32++;
        -: 3538:  /* consumed: 4 bytes (total: 8) */
        1: 3539:  tmp |= (*in32 % (1U << 12)) << (22 - 12);
        1: 3540:  *(out + 1) = base + tmp;
        1: 3541:  tmp = (*in32 >> 12);
        -: 3542:  in32++;
        -: 3543:  /* consumed: 4 bytes (total: 12) */
        1: 3544:  tmp |= (*in32 % (1U << 2)) << (22 - 2);
        1: 3545:  *(out + 2) = base + tmp;
        1: 3546:  *(out + 3)  = base + ((*in32 >> 2) & 4194303);
        1: 3547:  tmp = (*in32 >> 24);
        -: 3548:  in32++;
        -: 3549:  /* consumed: 4 bytes (total: 16) */
        1: 3550:  tmp |= (*in32 % (1U << 14)) << (22 - 14);
        1: 3551:  *(out + 4) = base + tmp;
        1: 3552:  tmp = (*in32 >> 14);
        -: 3553:  in32++;
        -: 3554:  /* consumed: 4 bytes (total: 20) */
        1: 3555:  tmp |= (*in32 % (1U << 4)) << (22 - 4);
        1: 3556:  *(out + 5) = base + tmp;
        1: 3557:  *(out + 6)  = base + ((*in32 >> 4) & 4194303);
        1: 3558:  tmp = (*in32 >> 26);
        -: 3559:  in32++;
        -: 3560:  /* consumed: 4 bytes (total: 24) */
        1: 3561:  tmp |= (*in32 % (1U << 16)) << (22 - 16);
        1: 3562:  *(out + 7) = base + tmp;
        1: 3563:  tmp = (*in32 >> 16);
        -: 3564:  in32++;
        -: 3565:  /* consumed: 4 bytes (total: 28) */
        1: 3566:  tmp |= (*in32 % (1U << 6)) << (22 - 6);
        1: 3567:  *(out + 8) = base + tmp;
        1: 3568:  *(out + 9)  = base + ((*in32 >> 6) & 4194303);
        1: 3569:  tmp = (*in32 >> 28);
        -: 3570:  in32++;
        -: 3571:  /* consumed: 4 bytes (total: 32) */
        1: 3572:  tmp |= (*in32 % (1U << 18)) << (22 - 18);
        1: 3573:  *(out + 10) = base + tmp;
        1: 3574:  tmp = (*in32 >> 18);
        -: 3575:  in32++;
        -: 3576:  /* consumed: 4 bytes (total: 36) */
        1: 3577:  tmp |= (*in32 % (1U << 8)) << (22 - 8);
        1: 3578:  *(out + 11) = base + tmp;
        1: 3579:  *(out + 12)  = base + ((*in32 >> 8) & 4194303);
        1: 3580:  tmp = (*in32 >> 30);
        -: 3581:  in32++;
        -: 3582:  /* consumed: 4 bytes (total: 40) */
        1: 3583:  tmp |= (*in32 % (1U << 20)) << (22 - 20);
        1: 3584:  *(out + 13) = base + tmp;
        1: 3585:  tmp = (*in32 >> 20);
        -: 3586:  in32++;
        -: 3587:  /* consumed: 4 bytes (total: 44) */
        1: 3588:  tmp |= (*in32 % (1U << 10)) << (22 - 10);
        1: 3589:  *(out + 14) = base + tmp;
        1: 3590:  *(out + 15)  = base + ((*in32 >> 10) & 4194303);
        -: 3591:  in32++;
        -: 3592:  /* consumed: 4 bytes (total: 48) */
        1: 3593:  *(out + 16)  = base + ((*in32 >> 0) & 4194303);
        1: 3594:  tmp = (*in32 >> 22);
        -: 3595:  in32++;
        -: 3596:  /* consumed: 4 bytes (total: 52) */
        1: 3597:  tmp |= (*in32 % (1U << 12)) << (22 - 12);
        1: 3598:  *(out + 17) = base + tmp;
        1: 3599:  tmp = (*in32 >> 12);
        -: 3600:  in32++;
        -: 3601:  /* consumed: 4 bytes (total: 56) */
        1: 3602:  tmp |= (*in32 % (1U << 2)) << (22 - 2);
        1: 3603:  *(out + 18) = base + tmp;
        1: 3604:  *(out + 19)  = base + ((*in32 >> 2) & 4194303);
        1: 3605:  tmp = (*in32 >> 24);
        -: 3606:  in32++;
        -: 3607:  /* consumed: 4 bytes (total: 60) */
        1: 3608:  tmp |= (*in32 % (1U << 14)) << (22 - 14);
        1: 3609:  *(out + 20) = base + tmp;
        1: 3610:  tmp = (*in32 >> 14);
        -: 3611:  in32++;
        -: 3612:  /* consumed: 4 bytes (total: 64) */
        1: 3613:  tmp |= (*in32 % (1U << 4)) << (22 - 4);
        1: 3614:  *(out + 21) = base + tmp;
        1: 3615:  *(out + 22)  = base + ((*in32 >> 4) & 4194303);
        1: 3616:  tmp = (*in32 >> 26);
        -: 3617:  in32++;
        -: 3618:  /* consumed: 4 bytes (total: 68) */
        1: 3619:  tmp |= (*in32 % (1U << 16)) << (22 - 16);
        1: 3620:  *(out + 23) = base + tmp;
        1: 3621:  tmp = (*in32 >> 16);
        -: 3622:  in32++;
        -: 3623:  /* consumed: 4 bytes (total: 72) */
        1: 3624:  tmp |= (*in32 % (1U << 6)) << (22 - 6);
        1: 3625:  *(out + 24) = base + tmp;
        1: 3626:  *(out + 25)  = base + ((*in32 >> 6) & 4194303);
        1: 3627:  tmp = (*in32 >> 28);
        -: 3628:  in32++;
        -: 3629:  /* consumed: 4 bytes (total: 76) */
        1: 3630:  tmp |= (*in32 % (1U << 18)) << (22 - 18);
        1: 3631:  *(out + 26) = base + tmp;
        1: 3632:  tmp = (*in32 >> 18);
        -: 3633:  in32++;
        -: 3634:  /* consumed: 4 bytes (total: 80) */
        1: 3635:  tmp |= (*in32 % (1U << 8)) << (22 - 8);
        1: 3636:  *(out + 27) = base + tmp;
        1: 3637:  *(out + 28)  = base + ((*in32 >> 8) & 4194303);
        1: 3638:  tmp = (*in32 >> 30);
        -: 3639:  in32++;
        -: 3640:  /* consumed: 4 bytes (total: 84) */
        1: 3641:  tmp |= (*in32 % (1U << 20)) << (22 - 20);
        1: 3642:  *(out + 29) = base + tmp;
        1: 3643:  tmp = (*in32 >> 20);
        -: 3644:  in32++;
        -: 3645:  /* consumed: 4 bytes (total: 88) */
        1: 3646:  tmp |= (*in32 % (1U << 10)) << (22 - 10);
        1: 3647:  *(out + 30) = base + tmp;
        1: 3648:  *(out + 31)  = base + ((*in32 >> 10) & 4194303);
        -: 3649:  /* remaining: 0 bits */
        1: 3650:  return 88;
        -: 3651:}
        -: 3652:
        -: 3653:static uint32_t
        1: 3654:pack23_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 3655:  uint32_t tmp, length;
        1: 3656:  tmp  = (*(in + 0) - base) << 0;
        1: 3657:  tmp |= (*(in + 1) - base) << 23;
        1: 3658:  *(uint32_t *)out = tmp;
        -: 3659:  out += sizeof(uint32_t);
        -: 3660:  /* consumed: 4 bytes (total: 4) */
        1: 3661:  tmp  = (*(in + 1) - base) >> (23 - 14);
        1: 3662:  tmp |= (*(in + 2) - base) << 14;
        1: 3663:  *(uint32_t *)out = tmp;
        -: 3664:  out += sizeof(uint32_t);
        -: 3665:  /* consumed: 4 bytes (total: 8) */
        1: 3666:  tmp  = (*(in + 2) - base) >> (23 - 5);
        1: 3667:  tmp |= (*(in + 3) - base) << 5;
        1: 3668:  tmp |= (*(in + 4) - base) << 28;
        1: 3669:  *(uint32_t *)out = tmp;
        -: 3670:  out += sizeof(uint32_t);
        -: 3671:  /* consumed: 4 bytes (total: 12) */
        1: 3672:  tmp  = (*(in + 4) - base) >> (23 - 19);
        1: 3673:  tmp |= (*(in + 5) - base) << 19;
        1: 3674:  *(uint32_t *)out = tmp;
        -: 3675:  out += sizeof(uint32_t);
        -: 3676:  /* consumed: 4 bytes (total: 16) */
        1: 3677:  tmp  = (*(in + 5) - base) >> (23 - 10);
        1: 3678:  tmp |= (*(in + 6) - base) << 10;
        1: 3679:  *(uint32_t *)out = tmp;
        -: 3680:  out += sizeof(uint32_t);
        -: 3681:  /* consumed: 4 bytes (total: 20) */
        1: 3682:  tmp  = (*(in + 6) - base) >> (23 - 1);
        1: 3683:  tmp |= (*(in + 7) - base) << 1;
        1: 3684:  tmp |= (*(in + 8) - base) << 24;
        1: 3685:  *(uint32_t *)out = tmp;
        -: 3686:  out += sizeof(uint32_t);
        -: 3687:  /* consumed: 4 bytes (total: 24) */
        1: 3688:  tmp  = (*(in + 8) - base) >> (23 - 15);
        1: 3689:  tmp |= (*(in + 9) - base) << 15;
        1: 3690:  *(uint32_t *)out = tmp;
        -: 3691:  out += sizeof(uint32_t);
        -: 3692:  /* consumed: 4 bytes (total: 28) */
        1: 3693:  tmp  = (*(in + 9) - base) >> (23 - 6);
        1: 3694:  tmp |= (*(in + 10) - base) << 6;
        1: 3695:  tmp |= (*(in + 11) - base) << 29;
        1: 3696:  *(uint32_t *)out = tmp;
        -: 3697:  out += sizeof(uint32_t);
        -: 3698:  /* consumed: 4 bytes (total: 32) */
        1: 3699:  tmp  = (*(in + 11) - base) >> (23 - 20);
        1: 3700:  tmp |= (*(in + 12) - base) << 20;
        1: 3701:  *(uint32_t *)out = tmp;
        -: 3702:  out += sizeof(uint32_t);
        -: 3703:  /* consumed: 4 bytes (total: 36) */
        1: 3704:  tmp  = (*(in + 12) - base) >> (23 - 11);
        1: 3705:  tmp |= (*(in + 13) - base) << 11;
        1: 3706:  *(uint32_t *)out = tmp;
        -: 3707:  out += sizeof(uint32_t);
        -: 3708:  /* consumed: 4 bytes (total: 40) */
        1: 3709:  tmp  = (*(in + 13) - base) >> (23 - 2);
        1: 3710:  tmp |= (*(in + 14) - base) << 2;
        1: 3711:  tmp |= (*(in + 15) - base) << 25;
        1: 3712:  *(uint32_t *)out = tmp;
        -: 3713:  out += sizeof(uint32_t);
        -: 3714:  /* consumed: 4 bytes (total: 44) */
        1: 3715:  tmp  = (*(in + 15) - base) >> (23 - 16);
        1: 3716:  tmp |= (*(in + 16) - base) << 16;
        1: 3717:  *(uint32_t *)out = tmp;
        -: 3718:  out += sizeof(uint32_t);
        -: 3719:  /* consumed: 4 bytes (total: 48) */
        1: 3720:  tmp  = (*(in + 16) - base) >> (23 - 7);
        1: 3721:  tmp |= (*(in + 17) - base) << 7;
        1: 3722:  tmp |= (*(in + 18) - base) << 30;
        1: 3723:  *(uint32_t *)out = tmp;
        -: 3724:  out += sizeof(uint32_t);
        -: 3725:  /* consumed: 4 bytes (total: 52) */
        1: 3726:  tmp  = (*(in + 18) - base) >> (23 - 21);
        1: 3727:  tmp |= (*(in + 19) - base) << 21;
        1: 3728:  *(uint32_t *)out = tmp;
        -: 3729:  out += sizeof(uint32_t);
        -: 3730:  /* consumed: 4 bytes (total: 56) */
        1: 3731:  tmp  = (*(in + 19) - base) >> (23 - 12);
        1: 3732:  tmp |= (*(in + 20) - base) << 12;
        1: 3733:  *(uint32_t *)out = tmp;
        -: 3734:  out += sizeof(uint32_t);
        -: 3735:  /* consumed: 4 bytes (total: 60) */
        1: 3736:  tmp  = (*(in + 20) - base) >> (23 - 3);
        1: 3737:  tmp |= (*(in + 21) - base) << 3;
        1: 3738:  tmp |= (*(in + 22) - base) << 26;
        1: 3739:  *(uint32_t *)out = tmp;
        -: 3740:  out += sizeof(uint32_t);
        -: 3741:  /* consumed: 4 bytes (total: 64) */
        1: 3742:  tmp  = (*(in + 22) - base) >> (23 - 17);
        1: 3743:  tmp |= (*(in + 23) - base) << 17;
        1: 3744:  *(uint32_t *)out = tmp;
        -: 3745:  out += sizeof(uint32_t);
        -: 3746:  /* consumed: 4 bytes (total: 68) */
        1: 3747:  tmp  = (*(in + 23) - base) >> (23 - 8);
        1: 3748:  tmp |= (*(in + 24) - base) << 8;
        1: 3749:  tmp |= (*(in + 25) - base) << 31;
        1: 3750:  *(uint32_t *)out = tmp;
        -: 3751:  out += sizeof(uint32_t);
        -: 3752:  /* consumed: 4 bytes (total: 72) */
        1: 3753:  tmp  = (*(in + 25) - base) >> (23 - 22);
        1: 3754:  tmp |= (*(in + 26) - base) << 22;
        1: 3755:  *(uint32_t *)out = tmp;
        -: 3756:  out += sizeof(uint32_t);
        -: 3757:  /* consumed: 4 bytes (total: 76) */
        1: 3758:  tmp  = (*(in + 26) - base) >> (23 - 13);
        1: 3759:  tmp |= (*(in + 27) - base) << 13;
        1: 3760:  *(uint32_t *)out = tmp;
        -: 3761:  out += sizeof(uint32_t);
        -: 3762:  /* consumed: 4 bytes (total: 80) */
        1: 3763:  tmp  = (*(in + 27) - base) >> (23 - 4);
        1: 3764:  tmp |= (*(in + 28) - base) << 4;
        1: 3765:  tmp |= (*(in + 29) - base) << 27;
        1: 3766:  *(uint32_t *)out = tmp;
        -: 3767:  out += sizeof(uint32_t);
        -: 3768:  /* consumed: 4 bytes (total: 84) */
        1: 3769:  tmp  = (*(in + 29) - base) >> (23 - 18);
        1: 3770:  tmp |= (*(in + 30) - base) << 18;
        1: 3771:  *(uint32_t *)out = tmp;
        1: 3772:  out += sizeof(uint32_t);
        -: 3773:  /* consumed: 4 bytes (total: 88) */
        1: 3774:  tmp  = (*(in + 30) - base) >> (23 - 9);
        1: 3775:  tmp |= (*(in + 31) - base) << 9;
        -: 3776:  /* remaining: 0 bits */
        -: 3777:  length = (32 / 8) - (32 - 32) / 8;
        -: 3778:  /* consumed: 4 bytes (total: 92) */
        -: 3779:  memcpy(out, &tmp, length);
        1: 3780:  return 92;
        -: 3781:}
        -: 3782:
        -: 3783:static uint32_t
        1: 3784:unpack23_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 3785:  uint32_t *in32 = (uint32_t *)in;
        -: 3786:  uint32_t tmp; (void)tmp;
        1: 3787:  *(out + 0)  = base + ((*in32 >> 0) & 8388607);
        1: 3788:  tmp = (*in32 >> 23);
        -: 3789:  in32++;
        -: 3790:  /* consumed: 4 bytes (total: 8) */
        1: 3791:  tmp |= (*in32 % (1U << 14)) << (23 - 14);
        1: 3792:  *(out + 1) = base + tmp;
        1: 3793:  tmp = (*in32 >> 14);
        -: 3794:  in32++;
        -: 3795:  /* consumed: 4 bytes (total: 12) */
        1: 3796:  tmp |= (*in32 % (1U << 5)) << (23 - 5);
        1: 3797:  *(out + 2) = base + tmp;
        1: 3798:  *(out + 3)  = base + ((*in32 >> 5) & 8388607);
        1: 3799:  tmp = (*in32 >> 28);
        -: 3800:  in32++;
        -: 3801:  /* consumed: 4 bytes (total: 16) */
        1: 3802:  tmp |= (*in32 % (1U << 19)) << (23 - 19);
        1: 3803:  *(out + 4) = base + tmp;
        1: 3804:  tmp = (*in32 >> 19);
        -: 3805:  in32++;
        -: 3806:  /* consumed: 4 bytes (total: 20) */
        1: 3807:  tmp |= (*in32 % (1U << 10)) << (23 - 10);
        1: 3808:  *(out + 5) = base + tmp;
        1: 3809:  tmp = (*in32 >> 10);
        -: 3810:  in32++;
        -: 3811:  /* consumed: 4 bytes (total: 24) */
        1: 3812:  tmp |= (*in32 % (1U << 1)) << (23 - 1);
        1: 3813:  *(out + 6) = base + tmp;
        1: 3814:  *(out + 7)  = base + ((*in32 >> 1) & 8388607);
        1: 3815:  tmp = (*in32 >> 24);
        -: 3816:  in32++;
        -: 3817:  /* consumed: 4 bytes (total: 28) */
        1: 3818:  tmp |= (*in32 % (1U << 15)) << (23 - 15);
        1: 3819:  *(out + 8) = base + tmp;
        1: 3820:  tmp = (*in32 >> 15);
        -: 3821:  in32++;
        -: 3822:  /* consumed: 4 bytes (total: 32) */
        1: 3823:  tmp |= (*in32 % (1U << 6)) << (23 - 6);
        1: 3824:  *(out + 9) = base + tmp;
        1: 3825:  *(out + 10)  = base + ((*in32 >> 6) & 8388607);
        1: 3826:  tmp = (*in32 >> 29);
        -: 3827:  in32++;
        -: 3828:  /* consumed: 4 bytes (total: 36) */
        1: 3829:  tmp |= (*in32 % (1U << 20)) << (23 - 20);
        1: 3830:  *(out + 11) = base + tmp;
        1: 3831:  tmp = (*in32 >> 20);
        -: 3832:  in32++;
        -: 3833:  /* consumed: 4 bytes (total: 40) */
        1: 3834:  tmp |= (*in32 % (1U << 11)) << (23 - 11);
        1: 3835:  *(out + 12) = base + tmp;
        1: 3836:  tmp = (*in32 >> 11);
        -: 3837:  in32++;
        -: 3838:  /* consumed: 4 bytes (total: 44) */
        1: 3839:  tmp |= (*in32 % (1U << 2)) << (23 - 2);
        1: 3840:  *(out + 13) = base + tmp;
        1: 3841:  *(out + 14)  = base + ((*in32 >> 2) & 8388607);
        1: 3842:  tmp = (*in32 >> 25);
        -: 3843:  in32++;
        -: 3844:  /* consumed: 4 bytes (total: 48) */
        1: 3845:  tmp |= (*in32 % (1U << 16)) << (23 - 16);
        1: 3846:  *(out + 15) = base + tmp;
        1: 3847:  tmp = (*in32 >> 16);
        -: 3848:  in32++;
        -: 3849:  /* consumed: 4 bytes (total: 52) */
        1: 3850:  tmp |= (*in32 % (1U << 7)) << (23 - 7);
        1: 3851:  *(out + 16) = base + tmp;
        1: 3852:  *(out + 17)  = base + ((*in32 >> 7) & 8388607);
        1: 3853:  tmp = (*in32 >> 30);
        -: 3854:  in32++;
        -: 3855:  /* consumed: 4 bytes (total: 56) */
        1: 3856:  tmp |= (*in32 % (1U << 21)) << (23 - 21);
        1: 3857:  *(out + 18) = base + tmp;
        1: 3858:  tmp = (*in32 >> 21);
        -: 3859:  in32++;
        -: 3860:  /* consumed: 4 bytes (total: 60) */
        1: 3861:  tmp |= (*in32 % (1U << 12)) << (23 - 12);
        1: 3862:  *(out + 19) = base + tmp;
        1: 3863:  tmp = (*in32 >> 12);
        -: 3864:  in32++;
        -: 3865:  /* consumed: 4 bytes (total: 64) */
        1: 3866:  tmp |= (*in32 % (1U << 3)) << (23 - 3);
        1: 3867:  *(out + 20) = base + tmp;
        1: 3868:  *(out + 21)  = base + ((*in32 >> 3) & 8388607);
        1: 3869:  tmp = (*in32 >> 26);
        -: 3870:  in32++;
        -: 3871:  /* consumed: 4 bytes (total: 68) */
        1: 3872:  tmp |= (*in32 % (1U << 17)) << (23 - 17);
        1: 3873:  *(out + 22) = base + tmp;
        1: 3874:  tmp = (*in32 >> 17);
        -: 3875:  in32++;
        -: 3876:  /* consumed: 4 bytes (total: 72) */
        1: 3877:  tmp |= (*in32 % (1U << 8)) << (23 - 8);
        1: 3878:  *(out + 23) = base + tmp;
        1: 3879:  *(out + 24)  = base + ((*in32 >> 8) & 8388607);
        1: 3880:  tmp = (*in32 >> 31);
        -: 3881:  in32++;
        -: 3882:  /* consumed: 4 bytes (total: 76) */
        1: 3883:  tmp |= (*in32 % (1U << 22)) << (23 - 22);
        1: 3884:  *(out + 25) = base + tmp;
        1: 3885:  tmp = (*in32 >> 22);
        -: 3886:  in32++;
        -: 3887:  /* consumed: 4 bytes (total: 80) */
        1: 3888:  tmp |= (*in32 % (1U << 13)) << (23 - 13);
        1: 3889:  *(out + 26) = base + tmp;
        1: 3890:  tmp = (*in32 >> 13);
        -: 3891:  in32++;
        -: 3892:  /* consumed: 4 bytes (total: 84) */
        1: 3893:  tmp |= (*in32 % (1U << 4)) << (23 - 4);
        1: 3894:  *(out + 27) = base + tmp;
        1: 3895:  *(out + 28)  = base + ((*in32 >> 4) & 8388607);
        1: 3896:  tmp = (*in32 >> 27);
        -: 3897:  in32++;
        -: 3898:  /* consumed: 4 bytes (total: 88) */
        1: 3899:  tmp |= (*in32 % (1U << 18)) << (23 - 18);
        1: 3900:  *(out + 29) = base + tmp;
        1: 3901:  tmp = (*in32 >> 18);
        -: 3902:  in32++;
        -: 3903:  /* consumed: 4 bytes (total: 92) */
        1: 3904:  tmp |= (*in32 % (1U << 9)) << (23 - 9);
        1: 3905:  *(out + 30) = base + tmp;
        1: 3906:  *(out + 31)  = base + ((*in32 >> 9) & 8388607);
        -: 3907:  /* remaining: 0 bits */
        1: 3908:  return 92;
        -: 3909:}
        -: 3910:
        -: 3911:static uint32_t
        1: 3912:pack24_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 3913:  uint32_t tmp, length;
        1: 3914:  tmp  = (*(in + 0) - base) << 0;
        1: 3915:  tmp |= (*(in + 1) - base) << 24;
        1: 3916:  *(uint32_t *)out = tmp;
        -: 3917:  out += sizeof(uint32_t);
        -: 3918:  /* consumed: 4 bytes (total: 4) */
        1: 3919:  tmp  = (*(in + 1) - base) >> (24 - 16);
        1: 3920:  tmp |= (*(in + 2) - base) << 16;
        1: 3921:  *(uint32_t *)out = tmp;
        -: 3922:  out += sizeof(uint32_t);
        -: 3923:  /* consumed: 4 bytes (total: 8) */
        1: 3924:  tmp  = (*(in + 2) - base) >> (24 - 8);
        1: 3925:  tmp |= (*(in + 3) - base) << 8;
        1: 3926:  *(uint32_t *)out = tmp;
        -: 3927:  out += sizeof(uint32_t);
        -: 3928:  /* consumed: 4 bytes (total: 12) */
        1: 3929:  tmp  = (*(in + 4) - base) << 0;
        1: 3930:  tmp |= (*(in + 5) - base) << 24;
        1: 3931:  *(uint32_t *)out = tmp;
        -: 3932:  out += sizeof(uint32_t);
        -: 3933:  /* consumed: 4 bytes (total: 16) */
        1: 3934:  tmp  = (*(in + 5) - base) >> (24 - 16);
        1: 3935:  tmp |= (*(in + 6) - base) << 16;
        1: 3936:  *(uint32_t *)out = tmp;
        -: 3937:  out += sizeof(uint32_t);
        -: 3938:  /* consumed: 4 bytes (total: 20) */
        1: 3939:  tmp  = (*(in + 6) - base) >> (24 - 8);
        1: 3940:  tmp |= (*(in + 7) - base) << 8;
        1: 3941:  *(uint32_t *)out = tmp;
        -: 3942:  out += sizeof(uint32_t);
        -: 3943:  /* consumed: 4 bytes (total: 24) */
        1: 3944:  tmp  = (*(in + 8) - base) << 0;
        1: 3945:  tmp |= (*(in + 9) - base) << 24;
        1: 3946:  *(uint32_t *)out = tmp;
        -: 3947:  out += sizeof(uint32_t);
        -: 3948:  /* consumed: 4 bytes (total: 28) */
        1: 3949:  tmp  = (*(in + 9) - base) >> (24 - 16);
        1: 3950:  tmp |= (*(in + 10) - base) << 16;
        1: 3951:  *(uint32_t *)out = tmp;
        -: 3952:  out += sizeof(uint32_t);
        -: 3953:  /* consumed: 4 bytes (total: 32) */
        1: 3954:  tmp  = (*(in + 10) - base) >> (24 - 8);
        1: 3955:  tmp |= (*(in + 11) - base) << 8;
        1: 3956:  *(uint32_t *)out = tmp;
        -: 3957:  out += sizeof(uint32_t);
        -: 3958:  /* consumed: 4 bytes (total: 36) */
        1: 3959:  tmp  = (*(in + 12) - base) << 0;
        1: 3960:  tmp |= (*(in + 13) - base) << 24;
        1: 3961:  *(uint32_t *)out = tmp;
        -: 3962:  out += sizeof(uint32_t);
        -: 3963:  /* consumed: 4 bytes (total: 40) */
        1: 3964:  tmp  = (*(in + 13) - base) >> (24 - 16);
        1: 3965:  tmp |= (*(in + 14) - base) << 16;
        1: 3966:  *(uint32_t *)out = tmp;
        -: 3967:  out += sizeof(uint32_t);
        -: 3968:  /* consumed: 4 bytes (total: 44) */
        1: 3969:  tmp  = (*(in + 14) - base) >> (24 - 8);
        1: 3970:  tmp |= (*(in + 15) - base) << 8;
        1: 3971:  *(uint32_t *)out = tmp;
        -: 3972:  out += sizeof(uint32_t);
        -: 3973:  /* consumed: 4 bytes (total: 48) */
        1: 3974:  tmp  = (*(in + 16) - base) << 0;
        1: 3975:  tmp |= (*(in + 17) - base) << 24;
        1: 3976:  *(uint32_t *)out = tmp;
        -: 3977:  out += sizeof(uint32_t);
        -: 3978:  /* consumed: 4 bytes (total: 52) */
        1: 3979:  tmp  = (*(in + 17) - base) >> (24 - 16);
        1: 3980:  tmp |= (*(in + 18) - base) << 16;
        1: 3981:  *(uint32_t *)out = tmp;
        -: 3982:  out += sizeof(uint32_t);
        -: 3983:  /* consumed: 4 bytes (total: 56) */
        1: 3984:  tmp  = (*(in + 18) - base) >> (24 - 8);
        1: 3985:  tmp |= (*(in + 19) - base) << 8;
        1: 3986:  *(uint32_t *)out = tmp;
        -: 3987:  out += sizeof(uint32_t);
        -: 3988:  /* consumed: 4 bytes (total: 60) */
        1: 3989:  tmp  = (*(in + 20) - base) << 0;
        1: 3990:  tmp |= (*(in + 21) - base) << 24;
        1: 3991:  *(uint32_t *)out = tmp;
        -: 3992:  out += sizeof(uint32_t);
        -: 3993:  /* consumed: 4 bytes (total: 64) */
        1: 3994:  tmp  = (*(in + 21) - base) >> (24 - 16);
        1: 3995:  tmp |= (*(in + 22) - base) << 16;
        1: 3996:  *(uint32_t *)out = tmp;
        -: 3997:  out += sizeof(uint32_t);
        -: 3998:  /* consumed: 4 bytes (total: 68) */
        1: 3999:  tmp  = (*(in + 22) - base) >> (24 - 8);
        1: 4000:  tmp |= (*(in + 23) - base) << 8;
        1: 4001:  *(uint32_t *)out = tmp;
        -: 4002:  out += sizeof(uint32_t);
        -: 4003:  /* consumed: 4 bytes (total: 72) */
        1: 4004:  tmp  = (*(in + 24) - base) << 0;
        1: 4005:  tmp |= (*(in + 25) - base) << 24;
        1: 4006:  *(uint32_t *)out = tmp;
        -: 4007:  out += sizeof(uint32_t);
        -: 4008:  /* consumed: 4 bytes (total: 76) */
        1: 4009:  tmp  = (*(in + 25) - base) >> (24 - 16);
        1: 4010:  tmp |= (*(in + 26) - base) << 16;
        1: 4011:  *(uint32_t *)out = tmp;
        -: 4012:  out += sizeof(uint32_t);
        -: 4013:  /* consumed: 4 bytes (total: 80) */
        1: 4014:  tmp  = (*(in + 26) - base) >> (24 - 8);
        1: 4015:  tmp |= (*(in + 27) - base) << 8;
        1: 4016:  *(uint32_t *)out = tmp;
        -: 4017:  out += sizeof(uint32_t);
        -: 4018:  /* consumed: 4 bytes (total: 84) */
        1: 4019:  tmp  = (*(in + 28) - base) << 0;
        1: 4020:  tmp |= (*(in + 29) - base) << 24;
        1: 4021:  *(uint32_t *)out = tmp;
        -: 4022:  out += sizeof(uint32_t);
        -: 4023:  /* consumed: 4 bytes (total: 88) */
        1: 4024:  tmp  = (*(in + 29) - base) >> (24 - 16);
        1: 4025:  tmp |= (*(in + 30) - base) << 16;
        1: 4026:  *(uint32_t *)out = tmp;
        1: 4027:  out += sizeof(uint32_t);
        -: 4028:  /* consumed: 4 bytes (total: 92) */
        1: 4029:  tmp  = (*(in + 30) - base) >> (24 - 8);
        1: 4030:  tmp |= (*(in + 31) - base) << 8;
        -: 4031:  /* remaining: 0 bits */
        -: 4032:  length = (32 / 8) - (32 - 32) / 8;
        -: 4033:  /* consumed: 4 bytes (total: 96) */
        -: 4034:  memcpy(out, &tmp, length);
        1: 4035:  return 96;
        -: 4036:}
        -: 4037:
        -: 4038:static uint32_t
        1: 4039:unpack24_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 4040:  uint32_t *in32 = (uint32_t *)in;
        -: 4041:  uint32_t tmp; (void)tmp;
        1: 4042:  *(out + 0)  = base + ((*in32 >> 0) & 16777215);
        1: 4043:  tmp = (*in32 >> 24);
        -: 4044:  in32++;
        -: 4045:  /* consumed: 4 bytes (total: 8) */
        1: 4046:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4047:  *(out + 1) = base + tmp;
        1: 4048:  tmp = (*in32 >> 16);
        -: 4049:  in32++;
        -: 4050:  /* consumed: 4 bytes (total: 12) */
        1: 4051:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4052:  *(out + 2) = base + tmp;
        1: 4053:  *(out + 3)  = base + ((*in32 >> 8) & 16777215);
        -: 4054:  in32++;
        -: 4055:  /* consumed: 4 bytes (total: 16) */
        1: 4056:  *(out + 4)  = base + ((*in32 >> 0) & 16777215);
        1: 4057:  tmp = (*in32 >> 24);
        -: 4058:  in32++;
        -: 4059:  /* consumed: 4 bytes (total: 20) */
        1: 4060:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4061:  *(out + 5) = base + tmp;
        1: 4062:  tmp = (*in32 >> 16);
        -: 4063:  in32++;
        -: 4064:  /* consumed: 4 bytes (total: 24) */
        1: 4065:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4066:  *(out + 6) = base + tmp;
        1: 4067:  *(out + 7)  = base + ((*in32 >> 8) & 16777215);
        -: 4068:  in32++;
        -: 4069:  /* consumed: 4 bytes (total: 28) */
        1: 4070:  *(out + 8)  = base + ((*in32 >> 0) & 16777215);
        1: 4071:  tmp = (*in32 >> 24);
        -: 4072:  in32++;
        -: 4073:  /* consumed: 4 bytes (total: 32) */
        1: 4074:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4075:  *(out + 9) = base + tmp;
        1: 4076:  tmp = (*in32 >> 16);
        -: 4077:  in32++;
        -: 4078:  /* consumed: 4 bytes (total: 36) */
        1: 4079:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4080:  *(out + 10) = base + tmp;
        1: 4081:  *(out + 11)  = base + ((*in32 >> 8) & 16777215);
        -: 4082:  in32++;
        -: 4083:  /* consumed: 4 bytes (total: 40) */
        1: 4084:  *(out + 12)  = base + ((*in32 >> 0) & 16777215);
        1: 4085:  tmp = (*in32 >> 24);
        -: 4086:  in32++;
        -: 4087:  /* consumed: 4 bytes (total: 44) */
        1: 4088:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4089:  *(out + 13) = base + tmp;
        1: 4090:  tmp = (*in32 >> 16);
        -: 4091:  in32++;
        -: 4092:  /* consumed: 4 bytes (total: 48) */
        1: 4093:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4094:  *(out + 14) = base + tmp;
        1: 4095:  *(out + 15)  = base + ((*in32 >> 8) & 16777215);
        -: 4096:  in32++;
        -: 4097:  /* consumed: 4 bytes (total: 52) */
        1: 4098:  *(out + 16)  = base + ((*in32 >> 0) & 16777215);
        1: 4099:  tmp = (*in32 >> 24);
        -: 4100:  in32++;
        -: 4101:  /* consumed: 4 bytes (total: 56) */
        1: 4102:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4103:  *(out + 17) = base + tmp;
        1: 4104:  tmp = (*in32 >> 16);
        -: 4105:  in32++;
        -: 4106:  /* consumed: 4 bytes (total: 60) */
        1: 4107:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4108:  *(out + 18) = base + tmp;
        1: 4109:  *(out + 19)  = base + ((*in32 >> 8) & 16777215);
        -: 4110:  in32++;
        -: 4111:  /* consumed: 4 bytes (total: 64) */
        1: 4112:  *(out + 20)  = base + ((*in32 >> 0) & 16777215);
        1: 4113:  tmp = (*in32 >> 24);
        -: 4114:  in32++;
        -: 4115:  /* consumed: 4 bytes (total: 68) */
        1: 4116:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4117:  *(out + 21) = base + tmp;
        1: 4118:  tmp = (*in32 >> 16);
        -: 4119:  in32++;
        -: 4120:  /* consumed: 4 bytes (total: 72) */
        1: 4121:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4122:  *(out + 22) = base + tmp;
        1: 4123:  *(out + 23)  = base + ((*in32 >> 8) & 16777215);
        -: 4124:  in32++;
        -: 4125:  /* consumed: 4 bytes (total: 76) */
        1: 4126:  *(out + 24)  = base + ((*in32 >> 0) & 16777215);
        1: 4127:  tmp = (*in32 >> 24);
        -: 4128:  in32++;
        -: 4129:  /* consumed: 4 bytes (total: 80) */
        1: 4130:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4131:  *(out + 25) = base + tmp;
        1: 4132:  tmp = (*in32 >> 16);
        -: 4133:  in32++;
        -: 4134:  /* consumed: 4 bytes (total: 84) */
        1: 4135:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4136:  *(out + 26) = base + tmp;
        1: 4137:  *(out + 27)  = base + ((*in32 >> 8) & 16777215);
        -: 4138:  in32++;
        -: 4139:  /* consumed: 4 bytes (total: 88) */
        1: 4140:  *(out + 28)  = base + ((*in32 >> 0) & 16777215);
        1: 4141:  tmp = (*in32 >> 24);
        -: 4142:  in32++;
        -: 4143:  /* consumed: 4 bytes (total: 92) */
        1: 4144:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 4145:  *(out + 29) = base + tmp;
        1: 4146:  tmp = (*in32 >> 16);
        -: 4147:  in32++;
        -: 4148:  /* consumed: 4 bytes (total: 96) */
        1: 4149:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 4150:  *(out + 30) = base + tmp;
        1: 4151:  *(out + 31)  = base + ((*in32 >> 8) & 16777215);
        -: 4152:  /* remaining: 0 bits */
        1: 4153:  return 96;
        -: 4154:}
        -: 4155:
        -: 4156:static uint32_t
        1: 4157:pack25_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 4158:  uint32_t tmp, length;
        1: 4159:  tmp  = (*(in + 0) - base) << 0;
        1: 4160:  tmp |= (*(in + 1) - base) << 25;
        1: 4161:  *(uint32_t *)out = tmp;
        -: 4162:  out += sizeof(uint32_t);
        -: 4163:  /* consumed: 4 bytes (total: 4) */
        1: 4164:  tmp  = (*(in + 1) - base) >> (25 - 18);
        1: 4165:  tmp |= (*(in + 2) - base) << 18;
        1: 4166:  *(uint32_t *)out = tmp;
        -: 4167:  out += sizeof(uint32_t);
        -: 4168:  /* consumed: 4 bytes (total: 8) */
        1: 4169:  tmp  = (*(in + 2) - base) >> (25 - 11);
        1: 4170:  tmp |= (*(in + 3) - base) << 11;
        1: 4171:  *(uint32_t *)out = tmp;
        -: 4172:  out += sizeof(uint32_t);
        -: 4173:  /* consumed: 4 bytes (total: 12) */
        1: 4174:  tmp  = (*(in + 3) - base) >> (25 - 4);
        1: 4175:  tmp |= (*(in + 4) - base) << 4;
        1: 4176:  tmp |= (*(in + 5) - base) << 29;
        1: 4177:  *(uint32_t *)out = tmp;
        -: 4178:  out += sizeof(uint32_t);
        -: 4179:  /* consumed: 4 bytes (total: 16) */
        1: 4180:  tmp  = (*(in + 5) - base) >> (25 - 22);
        1: 4181:  tmp |= (*(in + 6) - base) << 22;
        1: 4182:  *(uint32_t *)out = tmp;
        -: 4183:  out += sizeof(uint32_t);
        -: 4184:  /* consumed: 4 bytes (total: 20) */
        1: 4185:  tmp  = (*(in + 6) - base) >> (25 - 15);
        1: 4186:  tmp |= (*(in + 7) - base) << 15;
        1: 4187:  *(uint32_t *)out = tmp;
        -: 4188:  out += sizeof(uint32_t);
        -: 4189:  /* consumed: 4 bytes (total: 24) */
        1: 4190:  tmp  = (*(in + 7) - base) >> (25 - 8);
        1: 4191:  tmp |= (*(in + 8) - base) << 8;
        1: 4192:  *(uint32_t *)out = tmp;
        -: 4193:  out += sizeof(uint32_t);
        -: 4194:  /* consumed: 4 bytes (total: 28) */
        1: 4195:  tmp  = (*(in + 8) - base) >> (25 - 1);
        1: 4196:  tmp |= (*(in + 9) - base) << 1;
        1: 4197:  tmp |= (*(in + 10) - base) << 26;
        1: 4198:  *(uint32_t *)out = tmp;
        -: 4199:  out += sizeof(uint32_t);
        -: 4200:  /* consumed: 4 bytes (total: 32) */
        1: 4201:  tmp  = (*(in + 10) - base) >> (25 - 19);
        1: 4202:  tmp |= (*(in + 11) - base) << 19;
        1: 4203:  *(uint32_t *)out = tmp;
        -: 4204:  out += sizeof(uint32_t);
        -: 4205:  /* consumed: 4 bytes (total: 36) */
        1: 4206:  tmp  = (*(in + 11) - base) >> (25 - 12);
        1: 4207:  tmp |= (*(in + 12) - base) << 12;
        1: 4208:  *(uint32_t *)out = tmp;
        -: 4209:  out += sizeof(uint32_t);
        -: 4210:  /* consumed: 4 bytes (total: 40) */
        1: 4211:  tmp  = (*(in + 12) - base) >> (25 - 5);
        1: 4212:  tmp |= (*(in + 13) - base) << 5;
        1: 4213:  tmp |= (*(in + 14) - base) << 30;
        1: 4214:  *(uint32_t *)out = tmp;
        -: 4215:  out += sizeof(uint32_t);
        -: 4216:  /* consumed: 4 bytes (total: 44) */
        1: 4217:  tmp  = (*(in + 14) - base) >> (25 - 23);
        1: 4218:  tmp |= (*(in + 15) - base) << 23;
        1: 4219:  *(uint32_t *)out = tmp;
        -: 4220:  out += sizeof(uint32_t);
        -: 4221:  /* consumed: 4 bytes (total: 48) */
        1: 4222:  tmp  = (*(in + 15) - base) >> (25 - 16);
        1: 4223:  tmp |= (*(in + 16) - base) << 16;
        1: 4224:  *(uint32_t *)out = tmp;
        -: 4225:  out += sizeof(uint32_t);
        -: 4226:  /* consumed: 4 bytes (total: 52) */
        1: 4227:  tmp  = (*(in + 16) - base) >> (25 - 9);
        1: 4228:  tmp |= (*(in + 17) - base) << 9;
        1: 4229:  *(uint32_t *)out = tmp;
        -: 4230:  out += sizeof(uint32_t);
        -: 4231:  /* consumed: 4 bytes (total: 56) */
        1: 4232:  tmp  = (*(in + 17) - base) >> (25 - 2);
        1: 4233:  tmp |= (*(in + 18) - base) << 2;
        1: 4234:  tmp |= (*(in + 19) - base) << 27;
        1: 4235:  *(uint32_t *)out = tmp;
        -: 4236:  out += sizeof(uint32_t);
        -: 4237:  /* consumed: 4 bytes (total: 60) */
        1: 4238:  tmp  = (*(in + 19) - base) >> (25 - 20);
        1: 4239:  tmp |= (*(in + 20) - base) << 20;
        1: 4240:  *(uint32_t *)out = tmp;
        -: 4241:  out += sizeof(uint32_t);
        -: 4242:  /* consumed: 4 bytes (total: 64) */
        1: 4243:  tmp  = (*(in + 20) - base) >> (25 - 13);
        1: 4244:  tmp |= (*(in + 21) - base) << 13;
        1: 4245:  *(uint32_t *)out = tmp;
        -: 4246:  out += sizeof(uint32_t);
        -: 4247:  /* consumed: 4 bytes (total: 68) */
        1: 4248:  tmp  = (*(in + 21) - base) >> (25 - 6);
        1: 4249:  tmp |= (*(in + 22) - base) << 6;
        1: 4250:  tmp |= (*(in + 23) - base) << 31;
        1: 4251:  *(uint32_t *)out = tmp;
        -: 4252:  out += sizeof(uint32_t);
        -: 4253:  /* consumed: 4 bytes (total: 72) */
        1: 4254:  tmp  = (*(in + 23) - base) >> (25 - 24);
        1: 4255:  tmp |= (*(in + 24) - base) << 24;
        1: 4256:  *(uint32_t *)out = tmp;
        -: 4257:  out += sizeof(uint32_t);
        -: 4258:  /* consumed: 4 bytes (total: 76) */
        1: 4259:  tmp  = (*(in + 24) - base) >> (25 - 17);
        1: 4260:  tmp |= (*(in + 25) - base) << 17;
        1: 4261:  *(uint32_t *)out = tmp;
        -: 4262:  out += sizeof(uint32_t);
        -: 4263:  /* consumed: 4 bytes (total: 80) */
        1: 4264:  tmp  = (*(in + 25) - base) >> (25 - 10);
        1: 4265:  tmp |= (*(in + 26) - base) << 10;
        1: 4266:  *(uint32_t *)out = tmp;
        -: 4267:  out += sizeof(uint32_t);
        -: 4268:  /* consumed: 4 bytes (total: 84) */
        1: 4269:  tmp  = (*(in + 26) - base) >> (25 - 3);
        1: 4270:  tmp |= (*(in + 27) - base) << 3;
        1: 4271:  tmp |= (*(in + 28) - base) << 28;
        1: 4272:  *(uint32_t *)out = tmp;
        -: 4273:  out += sizeof(uint32_t);
        -: 4274:  /* consumed: 4 bytes (total: 88) */
        1: 4275:  tmp  = (*(in + 28) - base) >> (25 - 21);
        1: 4276:  tmp |= (*(in + 29) - base) << 21;
        1: 4277:  *(uint32_t *)out = tmp;
        -: 4278:  out += sizeof(uint32_t);
        -: 4279:  /* consumed: 4 bytes (total: 92) */
        1: 4280:  tmp  = (*(in + 29) - base) >> (25 - 14);
        1: 4281:  tmp |= (*(in + 30) - base) << 14;
        1: 4282:  *(uint32_t *)out = tmp;
        1: 4283:  out += sizeof(uint32_t);
        -: 4284:  /* consumed: 4 bytes (total: 96) */
        1: 4285:  tmp  = (*(in + 30) - base) >> (25 - 7);
        1: 4286:  tmp |= (*(in + 31) - base) << 7;
        -: 4287:  /* remaining: 0 bits */
        -: 4288:  length = (32 / 8) - (32 - 32) / 8;
        -: 4289:  /* consumed: 4 bytes (total: 100) */
        -: 4290:  memcpy(out, &tmp, length);
        1: 4291:  return 100;
        -: 4292:}
        -: 4293:
        -: 4294:static uint32_t
        1: 4295:unpack25_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 4296:  uint32_t *in32 = (uint32_t *)in;
        -: 4297:  uint32_t tmp; (void)tmp;
        1: 4298:  *(out + 0)  = base + ((*in32 >> 0) & 33554431);
        1: 4299:  tmp = (*in32 >> 25);
        -: 4300:  in32++;
        -: 4301:  /* consumed: 4 bytes (total: 8) */
        1: 4302:  tmp |= (*in32 % (1U << 18)) << (25 - 18);
        1: 4303:  *(out + 1) = base + tmp;
        1: 4304:  tmp = (*in32 >> 18);
        -: 4305:  in32++;
        -: 4306:  /* consumed: 4 bytes (total: 12) */
        1: 4307:  tmp |= (*in32 % (1U << 11)) << (25 - 11);
        1: 4308:  *(out + 2) = base + tmp;
        1: 4309:  tmp = (*in32 >> 11);
        -: 4310:  in32++;
        -: 4311:  /* consumed: 4 bytes (total: 16) */
        1: 4312:  tmp |= (*in32 % (1U << 4)) << (25 - 4);
        1: 4313:  *(out + 3) = base + tmp;
        1: 4314:  *(out + 4)  = base + ((*in32 >> 4) & 33554431);
        1: 4315:  tmp = (*in32 >> 29);
        -: 4316:  in32++;
        -: 4317:  /* consumed: 4 bytes (total: 20) */
        1: 4318:  tmp |= (*in32 % (1U << 22)) << (25 - 22);
        1: 4319:  *(out + 5) = base + tmp;
        1: 4320:  tmp = (*in32 >> 22);
        -: 4321:  in32++;
        -: 4322:  /* consumed: 4 bytes (total: 24) */
        1: 4323:  tmp |= (*in32 % (1U << 15)) << (25 - 15);
        1: 4324:  *(out + 6) = base + tmp;
        1: 4325:  tmp = (*in32 >> 15);
        -: 4326:  in32++;
        -: 4327:  /* consumed: 4 bytes (total: 28) */
        1: 4328:  tmp |= (*in32 % (1U << 8)) << (25 - 8);
        1: 4329:  *(out + 7) = base + tmp;
        1: 4330:  tmp = (*in32 >> 8);
        -: 4331:  in32++;
        -: 4332:  /* consumed: 4 bytes (total: 32) */
        1: 4333:  tmp |= (*in32 % (1U << 1)) << (25 - 1);
        1: 4334:  *(out + 8) = base + tmp;
        1: 4335:  *(out + 9)  = base + ((*in32 >> 1) & 33554431);
        1: 4336:  tmp = (*in32 >> 26);
        -: 4337:  in32++;
        -: 4338:  /* consumed: 4 bytes (total: 36) */
        1: 4339:  tmp |= (*in32 % (1U << 19)) << (25 - 19);
        1: 4340:  *(out + 10) = base + tmp;
        1: 4341:  tmp = (*in32 >> 19);
        -: 4342:  in32++;
        -: 4343:  /* consumed: 4 bytes (total: 40) */
        1: 4344:  tmp |= (*in32 % (1U << 12)) << (25 - 12);
        1: 4345:  *(out + 11) = base + tmp;
        1: 4346:  tmp = (*in32 >> 12);
        -: 4347:  in32++;
        -: 4348:  /* consumed: 4 bytes (total: 44) */
        1: 4349:  tmp |= (*in32 % (1U << 5)) << (25 - 5);
        1: 4350:  *(out + 12) = base + tmp;
        1: 4351:  *(out + 13)  = base + ((*in32 >> 5) & 33554431);
        1: 4352:  tmp = (*in32 >> 30);
        -: 4353:  in32++;
        -: 4354:  /* consumed: 4 bytes (total: 48) */
        1: 4355:  tmp |= (*in32 % (1U << 23)) << (25 - 23);
        1: 4356:  *(out + 14) = base + tmp;
        1: 4357:  tmp = (*in32 >> 23);
        -: 4358:  in32++;
        -: 4359:  /* consumed: 4 bytes (total: 52) */
        1: 4360:  tmp |= (*in32 % (1U << 16)) << (25 - 16);
        1: 4361:  *(out + 15) = base + tmp;
        1: 4362:  tmp = (*in32 >> 16);
        -: 4363:  in32++;
        -: 4364:  /* consumed: 4 bytes (total: 56) */
        1: 4365:  tmp |= (*in32 % (1U << 9)) << (25 - 9);
        1: 4366:  *(out + 16) = base + tmp;
        1: 4367:  tmp = (*in32 >> 9);
        -: 4368:  in32++;
        -: 4369:  /* consumed: 4 bytes (total: 60) */
        1: 4370:  tmp |= (*in32 % (1U << 2)) << (25 - 2);
        1: 4371:  *(out + 17) = base + tmp;
        1: 4372:  *(out + 18)  = base + ((*in32 >> 2) & 33554431);
        1: 4373:  tmp = (*in32 >> 27);
        -: 4374:  in32++;
        -: 4375:  /* consumed: 4 bytes (total: 64) */
        1: 4376:  tmp |= (*in32 % (1U << 20)) << (25 - 20);
        1: 4377:  *(out + 19) = base + tmp;
        1: 4378:  tmp = (*in32 >> 20);
        -: 4379:  in32++;
        -: 4380:  /* consumed: 4 bytes (total: 68) */
        1: 4381:  tmp |= (*in32 % (1U << 13)) << (25 - 13);
        1: 4382:  *(out + 20) = base + tmp;
        1: 4383:  tmp = (*in32 >> 13);
        -: 4384:  in32++;
        -: 4385:  /* consumed: 4 bytes (total: 72) */
        1: 4386:  tmp |= (*in32 % (1U << 6)) << (25 - 6);
        1: 4387:  *(out + 21) = base + tmp;
        1: 4388:  *(out + 22)  = base + ((*in32 >> 6) & 33554431);
        1: 4389:  tmp = (*in32 >> 31);
        -: 4390:  in32++;
        -: 4391:  /* consumed: 4 bytes (total: 76) */
        1: 4392:  tmp |= (*in32 % (1U << 24)) << (25 - 24);
        1: 4393:  *(out + 23) = base + tmp;
        1: 4394:  tmp = (*in32 >> 24);
        -: 4395:  in32++;
        -: 4396:  /* consumed: 4 bytes (total: 80) */
        1: 4397:  tmp |= (*in32 % (1U << 17)) << (25 - 17);
        1: 4398:  *(out + 24) = base + tmp;
        1: 4399:  tmp = (*in32 >> 17);
        -: 4400:  in32++;
        -: 4401:  /* consumed: 4 bytes (total: 84) */
        1: 4402:  tmp |= (*in32 % (1U << 10)) << (25 - 10);
        1: 4403:  *(out + 25) = base + tmp;
        1: 4404:  tmp = (*in32 >> 10);
        -: 4405:  in32++;
        -: 4406:  /* consumed: 4 bytes (total: 88) */
        1: 4407:  tmp |= (*in32 % (1U << 3)) << (25 - 3);
        1: 4408:  *(out + 26) = base + tmp;
        1: 4409:  *(out + 27)  = base + ((*in32 >> 3) & 33554431);
        1: 4410:  tmp = (*in32 >> 28);
        -: 4411:  in32++;
        -: 4412:  /* consumed: 4 bytes (total: 92) */
        1: 4413:  tmp |= (*in32 % (1U << 21)) << (25 - 21);
        1: 4414:  *(out + 28) = base + tmp;
        1: 4415:  tmp = (*in32 >> 21);
        -: 4416:  in32++;
        -: 4417:  /* consumed: 4 bytes (total: 96) */
        1: 4418:  tmp |= (*in32 % (1U << 14)) << (25 - 14);
        1: 4419:  *(out + 29) = base + tmp;
        1: 4420:  tmp = (*in32 >> 14);
        -: 4421:  in32++;
        -: 4422:  /* consumed: 4 bytes (total: 100) */
        1: 4423:  tmp |= (*in32 % (1U << 7)) << (25 - 7);
        1: 4424:  *(out + 30) = base + tmp;
        1: 4425:  *(out + 31)  = base + ((*in32 >> 7) & 33554431);
        -: 4426:  /* remaining: 0 bits */
        1: 4427:  return 100;
        -: 4428:}
        -: 4429:
        -: 4430:static uint32_t
        1: 4431:pack26_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 4432:  uint32_t tmp, length;
        1: 4433:  tmp  = (*(in + 0) - base) << 0;
        1: 4434:  tmp |= (*(in + 1) - base) << 26;
        1: 4435:  *(uint32_t *)out = tmp;
        -: 4436:  out += sizeof(uint32_t);
        -: 4437:  /* consumed: 4 bytes (total: 4) */
        1: 4438:  tmp  = (*(in + 1) - base) >> (26 - 20);
        1: 4439:  tmp |= (*(in + 2) - base) << 20;
        1: 4440:  *(uint32_t *)out = tmp;
        -: 4441:  out += sizeof(uint32_t);
        -: 4442:  /* consumed: 4 bytes (total: 8) */
        1: 4443:  tmp  = (*(in + 2) - base) >> (26 - 14);
        1: 4444:  tmp |= (*(in + 3) - base) << 14;
        1: 4445:  *(uint32_t *)out = tmp;
        -: 4446:  out += sizeof(uint32_t);
        -: 4447:  /* consumed: 4 bytes (total: 12) */
        1: 4448:  tmp  = (*(in + 3) - base) >> (26 - 8);
        1: 4449:  tmp |= (*(in + 4) - base) << 8;
        1: 4450:  *(uint32_t *)out = tmp;
        -: 4451:  out += sizeof(uint32_t);
        -: 4452:  /* consumed: 4 bytes (total: 16) */
        1: 4453:  tmp  = (*(in + 4) - base) >> (26 - 2);
        1: 4454:  tmp |= (*(in + 5) - base) << 2;
        1: 4455:  tmp |= (*(in + 6) - base) << 28;
        1: 4456:  *(uint32_t *)out = tmp;
        -: 4457:  out += sizeof(uint32_t);
        -: 4458:  /* consumed: 4 bytes (total: 20) */
        1: 4459:  tmp  = (*(in + 6) - base) >> (26 - 22);
        1: 4460:  tmp |= (*(in + 7) - base) << 22;
        1: 4461:  *(uint32_t *)out = tmp;
        -: 4462:  out += sizeof(uint32_t);
        -: 4463:  /* consumed: 4 bytes (total: 24) */
        1: 4464:  tmp  = (*(in + 7) - base) >> (26 - 16);
        1: 4465:  tmp |= (*(in + 8) - base) << 16;
        1: 4466:  *(uint32_t *)out = tmp;
        -: 4467:  out += sizeof(uint32_t);
        -: 4468:  /* consumed: 4 bytes (total: 28) */
        1: 4469:  tmp  = (*(in + 8) - base) >> (26 - 10);
        1: 4470:  tmp |= (*(in + 9) - base) << 10;
        1: 4471:  *(uint32_t *)out = tmp;
        -: 4472:  out += sizeof(uint32_t);
        -: 4473:  /* consumed: 4 bytes (total: 32) */
        1: 4474:  tmp  = (*(in + 9) - base) >> (26 - 4);
        1: 4475:  tmp |= (*(in + 10) - base) << 4;
        1: 4476:  tmp |= (*(in + 11) - base) << 30;
        1: 4477:  *(uint32_t *)out = tmp;
        -: 4478:  out += sizeof(uint32_t);
        -: 4479:  /* consumed: 4 bytes (total: 36) */
        1: 4480:  tmp  = (*(in + 11) - base) >> (26 - 24);
        1: 4481:  tmp |= (*(in + 12) - base) << 24;
        1: 4482:  *(uint32_t *)out = tmp;
        -: 4483:  out += sizeof(uint32_t);
        -: 4484:  /* consumed: 4 bytes (total: 40) */
        1: 4485:  tmp  = (*(in + 12) - base) >> (26 - 18);
        1: 4486:  tmp |= (*(in + 13) - base) << 18;
        1: 4487:  *(uint32_t *)out = tmp;
        -: 4488:  out += sizeof(uint32_t);
        -: 4489:  /* consumed: 4 bytes (total: 44) */
        1: 4490:  tmp  = (*(in + 13) - base) >> (26 - 12);
        1: 4491:  tmp |= (*(in + 14) - base) << 12;
        1: 4492:  *(uint32_t *)out = tmp;
        -: 4493:  out += sizeof(uint32_t);
        -: 4494:  /* consumed: 4 bytes (total: 48) */
        1: 4495:  tmp  = (*(in + 14) - base) >> (26 - 6);
        1: 4496:  tmp |= (*(in + 15) - base) << 6;
        1: 4497:  *(uint32_t *)out = tmp;
        -: 4498:  out += sizeof(uint32_t);
        -: 4499:  /* consumed: 4 bytes (total: 52) */
        1: 4500:  tmp  = (*(in + 16) - base) << 0;
        1: 4501:  tmp |= (*(in + 17) - base) << 26;
        1: 4502:  *(uint32_t *)out = tmp;
        -: 4503:  out += sizeof(uint32_t);
        -: 4504:  /* consumed: 4 bytes (total: 56) */
        1: 4505:  tmp  = (*(in + 17) - base) >> (26 - 20);
        1: 4506:  tmp |= (*(in + 18) - base) << 20;
        1: 4507:  *(uint32_t *)out = tmp;
        -: 4508:  out += sizeof(uint32_t);
        -: 4509:  /* consumed: 4 bytes (total: 60) */
        1: 4510:  tmp  = (*(in + 18) - base) >> (26 - 14);
        1: 4511:  tmp |= (*(in + 19) - base) << 14;
        1: 4512:  *(uint32_t *)out = tmp;
        -: 4513:  out += sizeof(uint32_t);
        -: 4514:  /* consumed: 4 bytes (total: 64) */
        1: 4515:  tmp  = (*(in + 19) - base) >> (26 - 8);
        1: 4516:  tmp |= (*(in + 20) - base) << 8;
        1: 4517:  *(uint32_t *)out = tmp;
        -: 4518:  out += sizeof(uint32_t);
        -: 4519:  /* consumed: 4 bytes (total: 68) */
        1: 4520:  tmp  = (*(in + 20) - base) >> (26 - 2);
        1: 4521:  tmp |= (*(in + 21) - base) << 2;
        1: 4522:  tmp |= (*(in + 22) - base) << 28;
        1: 4523:  *(uint32_t *)out = tmp;
        -: 4524:  out += sizeof(uint32_t);
        -: 4525:  /* consumed: 4 bytes (total: 72) */
        1: 4526:  tmp  = (*(in + 22) - base) >> (26 - 22);
        1: 4527:  tmp |= (*(in + 23) - base) << 22;
        1: 4528:  *(uint32_t *)out = tmp;
        -: 4529:  out += sizeof(uint32_t);
        -: 4530:  /* consumed: 4 bytes (total: 76) */
        1: 4531:  tmp  = (*(in + 23) - base) >> (26 - 16);
        1: 4532:  tmp |= (*(in + 24) - base) << 16;
        1: 4533:  *(uint32_t *)out = tmp;
        -: 4534:  out += sizeof(uint32_t);
        -: 4535:  /* consumed: 4 bytes (total: 80) */
        1: 4536:  tmp  = (*(in + 24) - base) >> (26 - 10);
        1: 4537:  tmp |= (*(in + 25) - base) << 10;
        1: 4538:  *(uint32_t *)out = tmp;
        -: 4539:  out += sizeof(uint32_t);
        -: 4540:  /* consumed: 4 bytes (total: 84) */
        1: 4541:  tmp  = (*(in + 25) - base) >> (26 - 4);
        1: 4542:  tmp |= (*(in + 26) - base) << 4;
        1: 4543:  tmp |= (*(in + 27) - base) << 30;
        1: 4544:  *(uint32_t *)out = tmp;
        -: 4545:  out += sizeof(uint32_t);
        -: 4546:  /* consumed: 4 bytes (total: 88) */
        1: 4547:  tmp  = (*(in + 27) - base) >> (26 - 24);
        1: 4548:  tmp |= (*(in + 28) - base) << 24;
        1: 4549:  *(uint32_t *)out = tmp;
        -: 4550:  out += sizeof(uint32_t);
        -: 4551:  /* consumed: 4 bytes (total: 92) */
        1: 4552:  tmp  = (*(in + 28) - base) >> (26 - 18);
        1: 4553:  tmp |= (*(in + 29) - base) << 18;
        1: 4554:  *(uint32_t *)out = tmp;
        -: 4555:  out += sizeof(uint32_t);
        -: 4556:  /* consumed: 4 bytes (total: 96) */
        1: 4557:  tmp  = (*(in + 29) - base) >> (26 - 12);
        1: 4558:  tmp |= (*(in + 30) - base) << 12;
        1: 4559:  *(uint32_t *)out = tmp;
        1: 4560:  out += sizeof(uint32_t);
        -: 4561:  /* consumed: 4 bytes (total: 100) */
        1: 4562:  tmp  = (*(in + 30) - base) >> (26 - 6);
        1: 4563:  tmp |= (*(in + 31) - base) << 6;
        -: 4564:  /* remaining: 0 bits */
        -: 4565:  length = (32 / 8) - (32 - 32) / 8;
        -: 4566:  /* consumed: 4 bytes (total: 104) */
        -: 4567:  memcpy(out, &tmp, length);
        1: 4568:  return 104;
        -: 4569:}
        -: 4570:
        -: 4571:static uint32_t
        1: 4572:unpack26_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 4573:  uint32_t *in32 = (uint32_t *)in;
        -: 4574:  uint32_t tmp; (void)tmp;
        1: 4575:  *(out + 0)  = base + ((*in32 >> 0) & 67108863);
        1: 4576:  tmp = (*in32 >> 26);
        -: 4577:  in32++;
        -: 4578:  /* consumed: 4 bytes (total: 8) */
        1: 4579:  tmp |= (*in32 % (1U << 20)) << (26 - 20);
        1: 4580:  *(out + 1) = base + tmp;
        1: 4581:  tmp = (*in32 >> 20);
        -: 4582:  in32++;
        -: 4583:  /* consumed: 4 bytes (total: 12) */
        1: 4584:  tmp |= (*in32 % (1U << 14)) << (26 - 14);
        1: 4585:  *(out + 2) = base + tmp;
        1: 4586:  tmp = (*in32 >> 14);
        -: 4587:  in32++;
        -: 4588:  /* consumed: 4 bytes (total: 16) */
        1: 4589:  tmp |= (*in32 % (1U << 8)) << (26 - 8);
        1: 4590:  *(out + 3) = base + tmp;
        1: 4591:  tmp = (*in32 >> 8);
        -: 4592:  in32++;
        -: 4593:  /* consumed: 4 bytes (total: 20) */
        1: 4594:  tmp |= (*in32 % (1U << 2)) << (26 - 2);
        1: 4595:  *(out + 4) = base + tmp;
        1: 4596:  *(out + 5)  = base + ((*in32 >> 2) & 67108863);
        1: 4597:  tmp = (*in32 >> 28);
        -: 4598:  in32++;
        -: 4599:  /* consumed: 4 bytes (total: 24) */
        1: 4600:  tmp |= (*in32 % (1U << 22)) << (26 - 22);
        1: 4601:  *(out + 6) = base + tmp;
        1: 4602:  tmp = (*in32 >> 22);
        -: 4603:  in32++;
        -: 4604:  /* consumed: 4 bytes (total: 28) */
        1: 4605:  tmp |= (*in32 % (1U << 16)) << (26 - 16);
        1: 4606:  *(out + 7) = base + tmp;
        1: 4607:  tmp = (*in32 >> 16);
        -: 4608:  in32++;
        -: 4609:  /* consumed: 4 bytes (total: 32) */
        1: 4610:  tmp |= (*in32 % (1U << 10)) << (26 - 10);
        1: 4611:  *(out + 8) = base + tmp;
        1: 4612:  tmp = (*in32 >> 10);
        -: 4613:  in32++;
        -: 4614:  /* consumed: 4 bytes (total: 36) */
        1: 4615:  tmp |= (*in32 % (1U << 4)) << (26 - 4);
        1: 4616:  *(out + 9) = base + tmp;
        1: 4617:  *(out + 10)  = base + ((*in32 >> 4) & 67108863);
        1: 4618:  tmp = (*in32 >> 30);
        -: 4619:  in32++;
        -: 4620:  /* consumed: 4 bytes (total: 40) */
        1: 4621:  tmp |= (*in32 % (1U << 24)) << (26 - 24);
        1: 4622:  *(out + 11) = base + tmp;
        1: 4623:  tmp = (*in32 >> 24);
        -: 4624:  in32++;
        -: 4625:  /* consumed: 4 bytes (total: 44) */
        1: 4626:  tmp |= (*in32 % (1U << 18)) << (26 - 18);
        1: 4627:  *(out + 12) = base + tmp;
        1: 4628:  tmp = (*in32 >> 18);
        -: 4629:  in32++;
        -: 4630:  /* consumed: 4 bytes (total: 48) */
        1: 4631:  tmp |= (*in32 % (1U << 12)) << (26 - 12);
        1: 4632:  *(out + 13) = base + tmp;
        1: 4633:  tmp = (*in32 >> 12);
        -: 4634:  in32++;
        -: 4635:  /* consumed: 4 bytes (total: 52) */
        1: 4636:  tmp |= (*in32 % (1U << 6)) << (26 - 6);
        1: 4637:  *(out + 14) = base + tmp;
        1: 4638:  *(out + 15)  = base + ((*in32 >> 6) & 67108863);
        -: 4639:  in32++;
        -: 4640:  /* consumed: 4 bytes (total: 56) */
        1: 4641:  *(out + 16)  = base + ((*in32 >> 0) & 67108863);
        1: 4642:  tmp = (*in32 >> 26);
        -: 4643:  in32++;
        -: 4644:  /* consumed: 4 bytes (total: 60) */
        1: 4645:  tmp |= (*in32 % (1U << 20)) << (26 - 20);
        1: 4646:  *(out + 17) = base + tmp;
        1: 4647:  tmp = (*in32 >> 20);
        -: 4648:  in32++;
        -: 4649:  /* consumed: 4 bytes (total: 64) */
        1: 4650:  tmp |= (*in32 % (1U << 14)) << (26 - 14);
        1: 4651:  *(out + 18) = base + tmp;
        1: 4652:  tmp = (*in32 >> 14);
        -: 4653:  in32++;
        -: 4654:  /* consumed: 4 bytes (total: 68) */
        1: 4655:  tmp |= (*in32 % (1U << 8)) << (26 - 8);
        1: 4656:  *(out + 19) = base + tmp;
        1: 4657:  tmp = (*in32 >> 8);
        -: 4658:  in32++;
        -: 4659:  /* consumed: 4 bytes (total: 72) */
        1: 4660:  tmp |= (*in32 % (1U << 2)) << (26 - 2);
        1: 4661:  *(out + 20) = base + tmp;
        1: 4662:  *(out + 21)  = base + ((*in32 >> 2) & 67108863);
        1: 4663:  tmp = (*in32 >> 28);
        -: 4664:  in32++;
        -: 4665:  /* consumed: 4 bytes (total: 76) */
        1: 4666:  tmp |= (*in32 % (1U << 22)) << (26 - 22);
        1: 4667:  *(out + 22) = base + tmp;
        1: 4668:  tmp = (*in32 >> 22);
        -: 4669:  in32++;
        -: 4670:  /* consumed: 4 bytes (total: 80) */
        1: 4671:  tmp |= (*in32 % (1U << 16)) << (26 - 16);
        1: 4672:  *(out + 23) = base + tmp;
        1: 4673:  tmp = (*in32 >> 16);
        -: 4674:  in32++;
        -: 4675:  /* consumed: 4 bytes (total: 84) */
        1: 4676:  tmp |= (*in32 % (1U << 10)) << (26 - 10);
        1: 4677:  *(out + 24) = base + tmp;
        1: 4678:  tmp = (*in32 >> 10);
        -: 4679:  in32++;
        -: 4680:  /* consumed: 4 bytes (total: 88) */
        1: 4681:  tmp |= (*in32 % (1U << 4)) << (26 - 4);
        1: 4682:  *(out + 25) = base + tmp;
        1: 4683:  *(out + 26)  = base + ((*in32 >> 4) & 67108863);
        1: 4684:  tmp = (*in32 >> 30);
        -: 4685:  in32++;
        -: 4686:  /* consumed: 4 bytes (total: 92) */
        1: 4687:  tmp |= (*in32 % (1U << 24)) << (26 - 24);
        1: 4688:  *(out + 27) = base + tmp;
        1: 4689:  tmp = (*in32 >> 24);
        -: 4690:  in32++;
        -: 4691:  /* consumed: 4 bytes (total: 96) */
        1: 4692:  tmp |= (*in32 % (1U << 18)) << (26 - 18);
        1: 4693:  *(out + 28) = base + tmp;
        1: 4694:  tmp = (*in32 >> 18);
        -: 4695:  in32++;
        -: 4696:  /* consumed: 4 bytes (total: 100) */
        1: 4697:  tmp |= (*in32 % (1U << 12)) << (26 - 12);
        1: 4698:  *(out + 29) = base + tmp;
        1: 4699:  tmp = (*in32 >> 12);
        -: 4700:  in32++;
        -: 4701:  /* consumed: 4 bytes (total: 104) */
        1: 4702:  tmp |= (*in32 % (1U << 6)) << (26 - 6);
        1: 4703:  *(out + 30) = base + tmp;
        1: 4704:  *(out + 31)  = base + ((*in32 >> 6) & 67108863);
        -: 4705:  /* remaining: 0 bits */
        1: 4706:  return 104;
        -: 4707:}
        -: 4708:
        -: 4709:static uint32_t
        1: 4710:pack27_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 4711:  uint32_t tmp, length;
        1: 4712:  tmp  = (*(in + 0) - base) << 0;
        1: 4713:  tmp |= (*(in + 1) - base) << 27;
        1: 4714:  *(uint32_t *)out = tmp;
        -: 4715:  out += sizeof(uint32_t);
        -: 4716:  /* consumed: 4 bytes (total: 4) */
        1: 4717:  tmp  = (*(in + 1) - base) >> (27 - 22);
        1: 4718:  tmp |= (*(in + 2) - base) << 22;
        1: 4719:  *(uint32_t *)out = tmp;
        -: 4720:  out += sizeof(uint32_t);
        -: 4721:  /* consumed: 4 bytes (total: 8) */
        1: 4722:  tmp  = (*(in + 2) - base) >> (27 - 17);
        1: 4723:  tmp |= (*(in + 3) - base) << 17;
        1: 4724:  *(uint32_t *)out = tmp;
        -: 4725:  out += sizeof(uint32_t);
        -: 4726:  /* consumed: 4 bytes (total: 12) */
        1: 4727:  tmp  = (*(in + 3) - base) >> (27 - 12);
        1: 4728:  tmp |= (*(in + 4) - base) << 12;
        1: 4729:  *(uint32_t *)out = tmp;
        -: 4730:  out += sizeof(uint32_t);
        -: 4731:  /* consumed: 4 bytes (total: 16) */
        1: 4732:  tmp  = (*(in + 4) - base) >> (27 - 7);
        1: 4733:  tmp |= (*(in + 5) - base) << 7;
        1: 4734:  *(uint32_t *)out = tmp;
        -: 4735:  out += sizeof(uint32_t);
        -: 4736:  /* consumed: 4 bytes (total: 20) */
        1: 4737:  tmp  = (*(in + 5) - base) >> (27 - 2);
        1: 4738:  tmp |= (*(in + 6) - base) << 2;
        1: 4739:  tmp |= (*(in + 7) - base) << 29;
        1: 4740:  *(uint32_t *)out = tmp;
        -: 4741:  out += sizeof(uint32_t);
        -: 4742:  /* consumed: 4 bytes (total: 24) */
        1: 4743:  tmp  = (*(in + 7) - base) >> (27 - 24);
        1: 4744:  tmp |= (*(in + 8) - base) << 24;
        1: 4745:  *(uint32_t *)out = tmp;
        -: 4746:  out += sizeof(uint32_t);
        -: 4747:  /* consumed: 4 bytes (total: 28) */
        1: 4748:  tmp  = (*(in + 8) - base) >> (27 - 19);
        1: 4749:  tmp |= (*(in + 9) - base) << 19;
        1: 4750:  *(uint32_t *)out = tmp;
        -: 4751:  out += sizeof(uint32_t);
        -: 4752:  /* consumed: 4 bytes (total: 32) */
        1: 4753:  tmp  = (*(in + 9) - base) >> (27 - 14);
        1: 4754:  tmp |= (*(in + 10) - base) << 14;
        1: 4755:  *(uint32_t *)out = tmp;
        -: 4756:  out += sizeof(uint32_t);
        -: 4757:  /* consumed: 4 bytes (total: 36) */
        1: 4758:  tmp  = (*(in + 10) - base) >> (27 - 9);
        1: 4759:  tmp |= (*(in + 11) - base) << 9;
        1: 4760:  *(uint32_t *)out = tmp;
        -: 4761:  out += sizeof(uint32_t);
        -: 4762:  /* consumed: 4 bytes (total: 40) */
        1: 4763:  tmp  = (*(in + 11) - base) >> (27 - 4);
        1: 4764:  tmp |= (*(in + 12) - base) << 4;
        1: 4765:  tmp |= (*(in + 13) - base) << 31;
        1: 4766:  *(uint32_t *)out = tmp;
        -: 4767:  out += sizeof(uint32_t);
        -: 4768:  /* consumed: 4 bytes (total: 44) */
        1: 4769:  tmp  = (*(in + 13) - base) >> (27 - 26);
        1: 4770:  tmp |= (*(in + 14) - base) << 26;
        1: 4771:  *(uint32_t *)out = tmp;
        -: 4772:  out += sizeof(uint32_t);
        -: 4773:  /* consumed: 4 bytes (total: 48) */
        1: 4774:  tmp  = (*(in + 14) - base) >> (27 - 21);
        1: 4775:  tmp |= (*(in + 15) - base) << 21;
        1: 4776:  *(uint32_t *)out = tmp;
        -: 4777:  out += sizeof(uint32_t);
        -: 4778:  /* consumed: 4 bytes (total: 52) */
        1: 4779:  tmp  = (*(in + 15) - base) >> (27 - 16);
        1: 4780:  tmp |= (*(in + 16) - base) << 16;
        1: 4781:  *(uint32_t *)out = tmp;
        -: 4782:  out += sizeof(uint32_t);
        -: 4783:  /* consumed: 4 bytes (total: 56) */
        1: 4784:  tmp  = (*(in + 16) - base) >> (27 - 11);
        1: 4785:  tmp |= (*(in + 17) - base) << 11;
        1: 4786:  *(uint32_t *)out = tmp;
        -: 4787:  out += sizeof(uint32_t);
        -: 4788:  /* consumed: 4 bytes (total: 60) */
        1: 4789:  tmp  = (*(in + 17) - base) >> (27 - 6);
        1: 4790:  tmp |= (*(in + 18) - base) << 6;
        1: 4791:  *(uint32_t *)out = tmp;
        -: 4792:  out += sizeof(uint32_t);
        -: 4793:  /* consumed: 4 bytes (total: 64) */
        1: 4794:  tmp  = (*(in + 18) - base) >> (27 - 1);
        1: 4795:  tmp |= (*(in + 19) - base) << 1;
        1: 4796:  tmp |= (*(in + 20) - base) << 28;
        1: 4797:  *(uint32_t *)out = tmp;
        -: 4798:  out += sizeof(uint32_t);
        -: 4799:  /* consumed: 4 bytes (total: 68) */
        1: 4800:  tmp  = (*(in + 20) - base) >> (27 - 23);
        1: 4801:  tmp |= (*(in + 21) - base) << 23;
        1: 4802:  *(uint32_t *)out = tmp;
        -: 4803:  out += sizeof(uint32_t);
        -: 4804:  /* consumed: 4 bytes (total: 72) */
        1: 4805:  tmp  = (*(in + 21) - base) >> (27 - 18);
        1: 4806:  tmp |= (*(in + 22) - base) << 18;
        1: 4807:  *(uint32_t *)out = tmp;
        -: 4808:  out += sizeof(uint32_t);
        -: 4809:  /* consumed: 4 bytes (total: 76) */
        1: 4810:  tmp  = (*(in + 22) - base) >> (27 - 13);
        1: 4811:  tmp |= (*(in + 23) - base) << 13;
        1: 4812:  *(uint32_t *)out = tmp;
        -: 4813:  out += sizeof(uint32_t);
        -: 4814:  /* consumed: 4 bytes (total: 80) */
        1: 4815:  tmp  = (*(in + 23) - base) >> (27 - 8);
        1: 4816:  tmp |= (*(in + 24) - base) << 8;
        1: 4817:  *(uint32_t *)out = tmp;
        -: 4818:  out += sizeof(uint32_t);
        -: 4819:  /* consumed: 4 bytes (total: 84) */
        1: 4820:  tmp  = (*(in + 24) - base) >> (27 - 3);
        1: 4821:  tmp |= (*(in + 25) - base) << 3;
        1: 4822:  tmp |= (*(in + 26) - base) << 30;
        1: 4823:  *(uint32_t *)out = tmp;
        -: 4824:  out += sizeof(uint32_t);
        -: 4825:  /* consumed: 4 bytes (total: 88) */
        1: 4826:  tmp  = (*(in + 26) - base) >> (27 - 25);
        1: 4827:  tmp |= (*(in + 27) - base) << 25;
        1: 4828:  *(uint32_t *)out = tmp;
        -: 4829:  out += sizeof(uint32_t);
        -: 4830:  /* consumed: 4 bytes (total: 92) */
        1: 4831:  tmp  = (*(in + 27) - base) >> (27 - 20);
        1: 4832:  tmp |= (*(in + 28) - base) << 20;
        1: 4833:  *(uint32_t *)out = tmp;
        -: 4834:  out += sizeof(uint32_t);
        -: 4835:  /* consumed: 4 bytes (total: 96) */
        1: 4836:  tmp  = (*(in + 28) - base) >> (27 - 15);
        1: 4837:  tmp |= (*(in + 29) - base) << 15;
        1: 4838:  *(uint32_t *)out = tmp;
        -: 4839:  out += sizeof(uint32_t);
        -: 4840:  /* consumed: 4 bytes (total: 100) */
        1: 4841:  tmp  = (*(in + 29) - base) >> (27 - 10);
        1: 4842:  tmp |= (*(in + 30) - base) << 10;
        1: 4843:  *(uint32_t *)out = tmp;
        1: 4844:  out += sizeof(uint32_t);
        -: 4845:  /* consumed: 4 bytes (total: 104) */
        1: 4846:  tmp  = (*(in + 30) - base) >> (27 - 5);
        1: 4847:  tmp |= (*(in + 31) - base) << 5;
        -: 4848:  /* remaining: 0 bits */
        -: 4849:  length = (32 / 8) - (32 - 32) / 8;
        -: 4850:  /* consumed: 4 bytes (total: 108) */
        -: 4851:  memcpy(out, &tmp, length);
        1: 4852:  return 108;
        -: 4853:}
        -: 4854:
        -: 4855:static uint32_t
        1: 4856:unpack27_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 4857:  uint32_t *in32 = (uint32_t *)in;
        -: 4858:  uint32_t tmp; (void)tmp;
        1: 4859:  *(out + 0)  = base + ((*in32 >> 0) & 134217727);
        1: 4860:  tmp = (*in32 >> 27);
        -: 4861:  in32++;
        -: 4862:  /* consumed: 4 bytes (total: 8) */
        1: 4863:  tmp |= (*in32 % (1U << 22)) << (27 - 22);
        1: 4864:  *(out + 1) = base + tmp;
        1: 4865:  tmp = (*in32 >> 22);
        -: 4866:  in32++;
        -: 4867:  /* consumed: 4 bytes (total: 12) */
        1: 4868:  tmp |= (*in32 % (1U << 17)) << (27 - 17);
        1: 4869:  *(out + 2) = base + tmp;
        1: 4870:  tmp = (*in32 >> 17);
        -: 4871:  in32++;
        -: 4872:  /* consumed: 4 bytes (total: 16) */
        1: 4873:  tmp |= (*in32 % (1U << 12)) << (27 - 12);
        1: 4874:  *(out + 3) = base + tmp;
        1: 4875:  tmp = (*in32 >> 12);
        -: 4876:  in32++;
        -: 4877:  /* consumed: 4 bytes (total: 20) */
        1: 4878:  tmp |= (*in32 % (1U << 7)) << (27 - 7);
        1: 4879:  *(out + 4) = base + tmp;
        1: 4880:  tmp = (*in32 >> 7);
        -: 4881:  in32++;
        -: 4882:  /* consumed: 4 bytes (total: 24) */
        1: 4883:  tmp |= (*in32 % (1U << 2)) << (27 - 2);
        1: 4884:  *(out + 5) = base + tmp;
        1: 4885:  *(out + 6)  = base + ((*in32 >> 2) & 134217727);
        1: 4886:  tmp = (*in32 >> 29);
        -: 4887:  in32++;
        -: 4888:  /* consumed: 4 bytes (total: 28) */
        1: 4889:  tmp |= (*in32 % (1U << 24)) << (27 - 24);
        1: 4890:  *(out + 7) = base + tmp;
        1: 4891:  tmp = (*in32 >> 24);
        -: 4892:  in32++;
        -: 4893:  /* consumed: 4 bytes (total: 32) */
        1: 4894:  tmp |= (*in32 % (1U << 19)) << (27 - 19);
        1: 4895:  *(out + 8) = base + tmp;
        1: 4896:  tmp = (*in32 >> 19);
        -: 4897:  in32++;
        -: 4898:  /* consumed: 4 bytes (total: 36) */
        1: 4899:  tmp |= (*in32 % (1U << 14)) << (27 - 14);
        1: 4900:  *(out + 9) = base + tmp;
        1: 4901:  tmp = (*in32 >> 14);
        -: 4902:  in32++;
        -: 4903:  /* consumed: 4 bytes (total: 40) */
        1: 4904:  tmp |= (*in32 % (1U << 9)) << (27 - 9);
        1: 4905:  *(out + 10) = base + tmp;
        1: 4906:  tmp = (*in32 >> 9);
        -: 4907:  in32++;
        -: 4908:  /* consumed: 4 bytes (total: 44) */
        1: 4909:  tmp |= (*in32 % (1U << 4)) << (27 - 4);
        1: 4910:  *(out + 11) = base + tmp;
        1: 4911:  *(out + 12)  = base + ((*in32 >> 4) & 134217727);
        1: 4912:  tmp = (*in32 >> 31);
        -: 4913:  in32++;
        -: 4914:  /* consumed: 4 bytes (total: 48) */
        1: 4915:  tmp |= (*in32 % (1U << 26)) << (27 - 26);
        1: 4916:  *(out + 13) = base + tmp;
        1: 4917:  tmp = (*in32 >> 26);
        -: 4918:  in32++;
        -: 4919:  /* consumed: 4 bytes (total: 52) */
        1: 4920:  tmp |= (*in32 % (1U << 21)) << (27 - 21);
        1: 4921:  *(out + 14) = base + tmp;
        1: 4922:  tmp = (*in32 >> 21);
        -: 4923:  in32++;
        -: 4924:  /* consumed: 4 bytes (total: 56) */
        1: 4925:  tmp |= (*in32 % (1U << 16)) << (27 - 16);
        1: 4926:  *(out + 15) = base + tmp;
        1: 4927:  tmp = (*in32 >> 16);
        -: 4928:  in32++;
        -: 4929:  /* consumed: 4 bytes (total: 60) */
        1: 4930:  tmp |= (*in32 % (1U << 11)) << (27 - 11);
        1: 4931:  *(out + 16) = base + tmp;
        1: 4932:  tmp = (*in32 >> 11);
        -: 4933:  in32++;
        -: 4934:  /* consumed: 4 bytes (total: 64) */
        1: 4935:  tmp |= (*in32 % (1U << 6)) << (27 - 6);
        1: 4936:  *(out + 17) = base + tmp;
        1: 4937:  tmp = (*in32 >> 6);
        -: 4938:  in32++;
        -: 4939:  /* consumed: 4 bytes (total: 68) */
        1: 4940:  tmp |= (*in32 % (1U << 1)) << (27 - 1);
        1: 4941:  *(out + 18) = base + tmp;
        1: 4942:  *(out + 19)  = base + ((*in32 >> 1) & 134217727);
        1: 4943:  tmp = (*in32 >> 28);
        -: 4944:  in32++;
        -: 4945:  /* consumed: 4 bytes (total: 72) */
        1: 4946:  tmp |= (*in32 % (1U << 23)) << (27 - 23);
        1: 4947:  *(out + 20) = base + tmp;
        1: 4948:  tmp = (*in32 >> 23);
        -: 4949:  in32++;
        -: 4950:  /* consumed: 4 bytes (total: 76) */
        1: 4951:  tmp |= (*in32 % (1U << 18)) << (27 - 18);
        1: 4952:  *(out + 21) = base + tmp;
        1: 4953:  tmp = (*in32 >> 18);
        -: 4954:  in32++;
        -: 4955:  /* consumed: 4 bytes (total: 80) */
        1: 4956:  tmp |= (*in32 % (1U << 13)) << (27 - 13);
        1: 4957:  *(out + 22) = base + tmp;
        1: 4958:  tmp = (*in32 >> 13);
        -: 4959:  in32++;
        -: 4960:  /* consumed: 4 bytes (total: 84) */
        1: 4961:  tmp |= (*in32 % (1U << 8)) << (27 - 8);
        1: 4962:  *(out + 23) = base + tmp;
        1: 4963:  tmp = (*in32 >> 8);
        -: 4964:  in32++;
        -: 4965:  /* consumed: 4 bytes (total: 88) */
        1: 4966:  tmp |= (*in32 % (1U << 3)) << (27 - 3);
        1: 4967:  *(out + 24) = base + tmp;
        1: 4968:  *(out + 25)  = base + ((*in32 >> 3) & 134217727);
        1: 4969:  tmp = (*in32 >> 30);
        -: 4970:  in32++;
        -: 4971:  /* consumed: 4 bytes (total: 92) */
        1: 4972:  tmp |= (*in32 % (1U << 25)) << (27 - 25);
        1: 4973:  *(out + 26) = base + tmp;
        1: 4974:  tmp = (*in32 >> 25);
        -: 4975:  in32++;
        -: 4976:  /* consumed: 4 bytes (total: 96) */
        1: 4977:  tmp |= (*in32 % (1U << 20)) << (27 - 20);
        1: 4978:  *(out + 27) = base + tmp;
        1: 4979:  tmp = (*in32 >> 20);
        -: 4980:  in32++;
        -: 4981:  /* consumed: 4 bytes (total: 100) */
        1: 4982:  tmp |= (*in32 % (1U << 15)) << (27 - 15);
        1: 4983:  *(out + 28) = base + tmp;
        1: 4984:  tmp = (*in32 >> 15);
        -: 4985:  in32++;
        -: 4986:  /* consumed: 4 bytes (total: 104) */
        1: 4987:  tmp |= (*in32 % (1U << 10)) << (27 - 10);
        1: 4988:  *(out + 29) = base + tmp;
        1: 4989:  tmp = (*in32 >> 10);
        -: 4990:  in32++;
        -: 4991:  /* consumed: 4 bytes (total: 108) */
        1: 4992:  tmp |= (*in32 % (1U << 5)) << (27 - 5);
        1: 4993:  *(out + 30) = base + tmp;
        1: 4994:  *(out + 31)  = base + ((*in32 >> 5) & 134217727);
        -: 4995:  /* remaining: 0 bits */
        1: 4996:  return 108;
        -: 4997:}
        -: 4998:
        -: 4999:static uint32_t
        1: 5000:pack28_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 5001:  uint32_t tmp, length;
        1: 5002:  tmp  = (*(in + 0) - base) << 0;
        1: 5003:  tmp |= (*(in + 1) - base) << 28;
        1: 5004:  *(uint32_t *)out = tmp;
        -: 5005:  out += sizeof(uint32_t);
        -: 5006:  /* consumed: 4 bytes (total: 4) */
        1: 5007:  tmp  = (*(in + 1) - base) >> (28 - 24);
        1: 5008:  tmp |= (*(in + 2) - base) << 24;
        1: 5009:  *(uint32_t *)out = tmp;
        -: 5010:  out += sizeof(uint32_t);
        -: 5011:  /* consumed: 4 bytes (total: 8) */
        1: 5012:  tmp  = (*(in + 2) - base) >> (28 - 20);
        1: 5013:  tmp |= (*(in + 3) - base) << 20;
        1: 5014:  *(uint32_t *)out = tmp;
        -: 5015:  out += sizeof(uint32_t);
        -: 5016:  /* consumed: 4 bytes (total: 12) */
        1: 5017:  tmp  = (*(in + 3) - base) >> (28 - 16);
        1: 5018:  tmp |= (*(in + 4) - base) << 16;
        1: 5019:  *(uint32_t *)out = tmp;
        -: 5020:  out += sizeof(uint32_t);
        -: 5021:  /* consumed: 4 bytes (total: 16) */
        1: 5022:  tmp  = (*(in + 4) - base) >> (28 - 12);
        1: 5023:  tmp |= (*(in + 5) - base) << 12;
        1: 5024:  *(uint32_t *)out = tmp;
        -: 5025:  out += sizeof(uint32_t);
        -: 5026:  /* consumed: 4 bytes (total: 20) */
        1: 5027:  tmp  = (*(in + 5) - base) >> (28 - 8);
        1: 5028:  tmp |= (*(in + 6) - base) << 8;
        1: 5029:  *(uint32_t *)out = tmp;
        -: 5030:  out += sizeof(uint32_t);
        -: 5031:  /* consumed: 4 bytes (total: 24) */
        1: 5032:  tmp  = (*(in + 6) - base) >> (28 - 4);
        1: 5033:  tmp |= (*(in + 7) - base) << 4;
        1: 5034:  *(uint32_t *)out = tmp;
        -: 5035:  out += sizeof(uint32_t);
        -: 5036:  /* consumed: 4 bytes (total: 28) */
        1: 5037:  tmp  = (*(in + 8) - base) << 0;
        1: 5038:  tmp |= (*(in + 9) - base) << 28;
        1: 5039:  *(uint32_t *)out = tmp;
        -: 5040:  out += sizeof(uint32_t);
        -: 5041:  /* consumed: 4 bytes (total: 32) */
        1: 5042:  tmp  = (*(in + 9) - base) >> (28 - 24);
        1: 5043:  tmp |= (*(in + 10) - base) << 24;
        1: 5044:  *(uint32_t *)out = tmp;
        -: 5045:  out += sizeof(uint32_t);
        -: 5046:  /* consumed: 4 bytes (total: 36) */
        1: 5047:  tmp  = (*(in + 10) - base) >> (28 - 20);
        1: 5048:  tmp |= (*(in + 11) - base) << 20;
        1: 5049:  *(uint32_t *)out = tmp;
        -: 5050:  out += sizeof(uint32_t);
        -: 5051:  /* consumed: 4 bytes (total: 40) */
        1: 5052:  tmp  = (*(in + 11) - base) >> (28 - 16);
        1: 5053:  tmp |= (*(in + 12) - base) << 16;
        1: 5054:  *(uint32_t *)out = tmp;
        -: 5055:  out += sizeof(uint32_t);
        -: 5056:  /* consumed: 4 bytes (total: 44) */
        1: 5057:  tmp  = (*(in + 12) - base) >> (28 - 12);
        1: 5058:  tmp |= (*(in + 13) - base) << 12;
        1: 5059:  *(uint32_t *)out = tmp;
        -: 5060:  out += sizeof(uint32_t);
        -: 5061:  /* consumed: 4 bytes (total: 48) */
        1: 5062:  tmp  = (*(in + 13) - base) >> (28 - 8);
        1: 5063:  tmp |= (*(in + 14) - base) << 8;
        1: 5064:  *(uint32_t *)out = tmp;
        -: 5065:  out += sizeof(uint32_t);
        -: 5066:  /* consumed: 4 bytes (total: 52) */
        1: 5067:  tmp  = (*(in + 14) - base) >> (28 - 4);
        1: 5068:  tmp |= (*(in + 15) - base) << 4;
        1: 5069:  *(uint32_t *)out = tmp;
        -: 5070:  out += sizeof(uint32_t);
        -: 5071:  /* consumed: 4 bytes (total: 56) */
        1: 5072:  tmp  = (*(in + 16) - base) << 0;
        1: 5073:  tmp |= (*(in + 17) - base) << 28;
        1: 5074:  *(uint32_t *)out = tmp;
        -: 5075:  out += sizeof(uint32_t);
        -: 5076:  /* consumed: 4 bytes (total: 60) */
        1: 5077:  tmp  = (*(in + 17) - base) >> (28 - 24);
        1: 5078:  tmp |= (*(in + 18) - base) << 24;
        1: 5079:  *(uint32_t *)out = tmp;
        -: 5080:  out += sizeof(uint32_t);
        -: 5081:  /* consumed: 4 bytes (total: 64) */
        1: 5082:  tmp  = (*(in + 18) - base) >> (28 - 20);
        1: 5083:  tmp |= (*(in + 19) - base) << 20;
        1: 5084:  *(uint32_t *)out = tmp;
        -: 5085:  out += sizeof(uint32_t);
        -: 5086:  /* consumed: 4 bytes (total: 68) */
        1: 5087:  tmp  = (*(in + 19) - base) >> (28 - 16);
        1: 5088:  tmp |= (*(in + 20) - base) << 16;
        1: 5089:  *(uint32_t *)out = tmp;
        -: 5090:  out += sizeof(uint32_t);
        -: 5091:  /* consumed: 4 bytes (total: 72) */
        1: 5092:  tmp  = (*(in + 20) - base) >> (28 - 12);
        1: 5093:  tmp |= (*(in + 21) - base) << 12;
        1: 5094:  *(uint32_t *)out = tmp;
        -: 5095:  out += sizeof(uint32_t);
        -: 5096:  /* consumed: 4 bytes (total: 76) */
        1: 5097:  tmp  = (*(in + 21) - base) >> (28 - 8);
        1: 5098:  tmp |= (*(in + 22) - base) << 8;
        1: 5099:  *(uint32_t *)out = tmp;
        -: 5100:  out += sizeof(uint32_t);
        -: 5101:  /* consumed: 4 bytes (total: 80) */
        1: 5102:  tmp  = (*(in + 22) - base) >> (28 - 4);
        1: 5103:  tmp |= (*(in + 23) - base) << 4;
        1: 5104:  *(uint32_t *)out = tmp;
        -: 5105:  out += sizeof(uint32_t);
        -: 5106:  /* consumed: 4 bytes (total: 84) */
        1: 5107:  tmp  = (*(in + 24) - base) << 0;
        1: 5108:  tmp |= (*(in + 25) - base) << 28;
        1: 5109:  *(uint32_t *)out = tmp;
        -: 5110:  out += sizeof(uint32_t);
        -: 5111:  /* consumed: 4 bytes (total: 88) */
        1: 5112:  tmp  = (*(in + 25) - base) >> (28 - 24);
        1: 5113:  tmp |= (*(in + 26) - base) << 24;
        1: 5114:  *(uint32_t *)out = tmp;
        -: 5115:  out += sizeof(uint32_t);
        -: 5116:  /* consumed: 4 bytes (total: 92) */
        1: 5117:  tmp  = (*(in + 26) - base) >> (28 - 20);
        1: 5118:  tmp |= (*(in + 27) - base) << 20;
        1: 5119:  *(uint32_t *)out = tmp;
        -: 5120:  out += sizeof(uint32_t);
        -: 5121:  /* consumed: 4 bytes (total: 96) */
        1: 5122:  tmp  = (*(in + 27) - base) >> (28 - 16);
        1: 5123:  tmp |= (*(in + 28) - base) << 16;
        1: 5124:  *(uint32_t *)out = tmp;
        -: 5125:  out += sizeof(uint32_t);
        -: 5126:  /* consumed: 4 bytes (total: 100) */
        1: 5127:  tmp  = (*(in + 28) - base) >> (28 - 12);
        1: 5128:  tmp |= (*(in + 29) - base) << 12;
        1: 5129:  *(uint32_t *)out = tmp;
        -: 5130:  out += sizeof(uint32_t);
        -: 5131:  /* consumed: 4 bytes (total: 104) */
        1: 5132:  tmp  = (*(in + 29) - base) >> (28 - 8);
        1: 5133:  tmp |= (*(in + 30) - base) << 8;
        1: 5134:  *(uint32_t *)out = tmp;
        1: 5135:  out += sizeof(uint32_t);
        -: 5136:  /* consumed: 4 bytes (total: 108) */
        1: 5137:  tmp  = (*(in + 30) - base) >> (28 - 4);
        1: 5138:  tmp |= (*(in + 31) - base) << 4;
        -: 5139:  /* remaining: 0 bits */
        -: 5140:  length = (32 / 8) - (32 - 32) / 8;
        -: 5141:  /* consumed: 4 bytes (total: 112) */
        -: 5142:  memcpy(out, &tmp, length);
        1: 5143:  return 112;
        -: 5144:}
        -: 5145:
        -: 5146:static uint32_t
        1: 5147:unpack28_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 5148:  uint32_t *in32 = (uint32_t *)in;
        -: 5149:  uint32_t tmp; (void)tmp;
        1: 5150:  *(out + 0)  = base + ((*in32 >> 0) & 268435455);
        1: 5151:  tmp = (*in32 >> 28);
        -: 5152:  in32++;
        -: 5153:  /* consumed: 4 bytes (total: 8) */
        1: 5154:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1: 5155:  *(out + 1) = base + tmp;
        1: 5156:  tmp = (*in32 >> 24);
        -: 5157:  in32++;
        -: 5158:  /* consumed: 4 bytes (total: 12) */
        1: 5159:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1: 5160:  *(out + 2) = base + tmp;
        1: 5161:  tmp = (*in32 >> 20);
        -: 5162:  in32++;
        -: 5163:  /* consumed: 4 bytes (total: 16) */
        1: 5164:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1: 5165:  *(out + 3) = base + tmp;
        1: 5166:  tmp = (*in32 >> 16);
        -: 5167:  in32++;
        -: 5168:  /* consumed: 4 bytes (total: 20) */
        1: 5169:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1: 5170:  *(out + 4) = base + tmp;
        1: 5171:  tmp = (*in32 >> 12);
        -: 5172:  in32++;
        -: 5173:  /* consumed: 4 bytes (total: 24) */
        1: 5174:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1: 5175:  *(out + 5) = base + tmp;
        1: 5176:  tmp = (*in32 >> 8);
        -: 5177:  in32++;
        -: 5178:  /* consumed: 4 bytes (total: 28) */
        1: 5179:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1: 5180:  *(out + 6) = base + tmp;
        1: 5181:  *(out + 7)  = base + ((*in32 >> 4) & 268435455);
        -: 5182:  in32++;
        -: 5183:  /* consumed: 4 bytes (total: 32) */
        1: 5184:  *(out + 8)  = base + ((*in32 >> 0) & 268435455);
        1: 5185:  tmp = (*in32 >> 28);
        -: 5186:  in32++;
        -: 5187:  /* consumed: 4 bytes (total: 36) */
        1: 5188:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1: 5189:  *(out + 9) = base + tmp;
        1: 5190:  tmp = (*in32 >> 24);
        -: 5191:  in32++;
        -: 5192:  /* consumed: 4 bytes (total: 40) */
        1: 5193:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1: 5194:  *(out + 10) = base + tmp;
        1: 5195:  tmp = (*in32 >> 20);
        -: 5196:  in32++;
        -: 5197:  /* consumed: 4 bytes (total: 44) */
        1: 5198:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1: 5199:  *(out + 11) = base + tmp;
        1: 5200:  tmp = (*in32 >> 16);
        -: 5201:  in32++;
        -: 5202:  /* consumed: 4 bytes (total: 48) */
        1: 5203:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1: 5204:  *(out + 12) = base + tmp;
        1: 5205:  tmp = (*in32 >> 12);
        -: 5206:  in32++;
        -: 5207:  /* consumed: 4 bytes (total: 52) */
        1: 5208:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1: 5209:  *(out + 13) = base + tmp;
        1: 5210:  tmp = (*in32 >> 8);
        -: 5211:  in32++;
        -: 5212:  /* consumed: 4 bytes (total: 56) */
        1: 5213:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1: 5214:  *(out + 14) = base + tmp;
        1: 5215:  *(out + 15)  = base + ((*in32 >> 4) & 268435455);
        -: 5216:  in32++;
        -: 5217:  /* consumed: 4 bytes (total: 60) */
        1: 5218:  *(out + 16)  = base + ((*in32 >> 0) & 268435455);
        1: 5219:  tmp = (*in32 >> 28);
        -: 5220:  in32++;
        -: 5221:  /* consumed: 4 bytes (total: 64) */
        1: 5222:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1: 5223:  *(out + 17) = base + tmp;
        1: 5224:  tmp = (*in32 >> 24);
        -: 5225:  in32++;
        -: 5226:  /* consumed: 4 bytes (total: 68) */
        1: 5227:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1: 5228:  *(out + 18) = base + tmp;
        1: 5229:  tmp = (*in32 >> 20);
        -: 5230:  in32++;
        -: 5231:  /* consumed: 4 bytes (total: 72) */
        1: 5232:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1: 5233:  *(out + 19) = base + tmp;
        1: 5234:  tmp = (*in32 >> 16);
        -: 5235:  in32++;
        -: 5236:  /* consumed: 4 bytes (total: 76) */
        1: 5237:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1: 5238:  *(out + 20) = base + tmp;
        1: 5239:  tmp = (*in32 >> 12);
        -: 5240:  in32++;
        -: 5241:  /* consumed: 4 bytes (total: 80) */
        1: 5242:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1: 5243:  *(out + 21) = base + tmp;
        1: 5244:  tmp = (*in32 >> 8);
        -: 5245:  in32++;
        -: 5246:  /* consumed: 4 bytes (total: 84) */
        1: 5247:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1: 5248:  *(out + 22) = base + tmp;
        1: 5249:  *(out + 23)  = base + ((*in32 >> 4) & 268435455);
        -: 5250:  in32++;
        -: 5251:  /* consumed: 4 bytes (total: 88) */
        1: 5252:  *(out + 24)  = base + ((*in32 >> 0) & 268435455);
        1: 5253:  tmp = (*in32 >> 28);
        -: 5254:  in32++;
        -: 5255:  /* consumed: 4 bytes (total: 92) */
        1: 5256:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1: 5257:  *(out + 25) = base + tmp;
        1: 5258:  tmp = (*in32 >> 24);
        -: 5259:  in32++;
        -: 5260:  /* consumed: 4 bytes (total: 96) */
        1: 5261:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1: 5262:  *(out + 26) = base + tmp;
        1: 5263:  tmp = (*in32 >> 20);
        -: 5264:  in32++;
        -: 5265:  /* consumed: 4 bytes (total: 100) */
        1: 5266:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1: 5267:  *(out + 27) = base + tmp;
        1: 5268:  tmp = (*in32 >> 16);
        -: 5269:  in32++;
        -: 5270:  /* consumed: 4 bytes (total: 104) */
        1: 5271:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1: 5272:  *(out + 28) = base + tmp;
        1: 5273:  tmp = (*in32 >> 12);
        -: 5274:  in32++;
        -: 5275:  /* consumed: 4 bytes (total: 108) */
        1: 5276:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1: 5277:  *(out + 29) = base + tmp;
        1: 5278:  tmp = (*in32 >> 8);
        -: 5279:  in32++;
        -: 5280:  /* consumed: 4 bytes (total: 112) */
        1: 5281:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1: 5282:  *(out + 30) = base + tmp;
        1: 5283:  *(out + 31)  = base + ((*in32 >> 4) & 268435455);
        -: 5284:  /* remaining: 0 bits */
        1: 5285:  return 112;
        -: 5286:}
        -: 5287:
        -: 5288:static uint32_t
        1: 5289:pack29_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 5290:  uint32_t tmp, length;
        1: 5291:  tmp  = (*(in + 0) - base) << 0;
        1: 5292:  tmp |= (*(in + 1) - base) << 29;
        1: 5293:  *(uint32_t *)out = tmp;
        -: 5294:  out += sizeof(uint32_t);
        -: 5295:  /* consumed: 4 bytes (total: 4) */
        1: 5296:  tmp  = (*(in + 1) - base) >> (29 - 26);
        1: 5297:  tmp |= (*(in + 2) - base) << 26;
        1: 5298:  *(uint32_t *)out = tmp;
        -: 5299:  out += sizeof(uint32_t);
        -: 5300:  /* consumed: 4 bytes (total: 8) */
        1: 5301:  tmp  = (*(in + 2) - base) >> (29 - 23);
        1: 5302:  tmp |= (*(in + 3) - base) << 23;
        1: 5303:  *(uint32_t *)out = tmp;
        -: 5304:  out += sizeof(uint32_t);
        -: 5305:  /* consumed: 4 bytes (total: 12) */
        1: 5306:  tmp  = (*(in + 3) - base) >> (29 - 20);
        1: 5307:  tmp |= (*(in + 4) - base) << 20;
        1: 5308:  *(uint32_t *)out = tmp;
        -: 5309:  out += sizeof(uint32_t);
        -: 5310:  /* consumed: 4 bytes (total: 16) */
        1: 5311:  tmp  = (*(in + 4) - base) >> (29 - 17);
        1: 5312:  tmp |= (*(in + 5) - base) << 17;
        1: 5313:  *(uint32_t *)out = tmp;
        -: 5314:  out += sizeof(uint32_t);
        -: 5315:  /* consumed: 4 bytes (total: 20) */
        1: 5316:  tmp  = (*(in + 5) - base) >> (29 - 14);
        1: 5317:  tmp |= (*(in + 6) - base) << 14;
        1: 5318:  *(uint32_t *)out = tmp;
        -: 5319:  out += sizeof(uint32_t);
        -: 5320:  /* consumed: 4 bytes (total: 24) */
        1: 5321:  tmp  = (*(in + 6) - base) >> (29 - 11);
        1: 5322:  tmp |= (*(in + 7) - base) << 11;
        1: 5323:  *(uint32_t *)out = tmp;
        -: 5324:  out += sizeof(uint32_t);
        -: 5325:  /* consumed: 4 bytes (total: 28) */
        1: 5326:  tmp  = (*(in + 7) - base) >> (29 - 8);
        1: 5327:  tmp |= (*(in + 8) - base) << 8;
        1: 5328:  *(uint32_t *)out = tmp;
        -: 5329:  out += sizeof(uint32_t);
        -: 5330:  /* consumed: 4 bytes (total: 32) */
        1: 5331:  tmp  = (*(in + 8) - base) >> (29 - 5);
        1: 5332:  tmp |= (*(in + 9) - base) << 5;
        1: 5333:  *(uint32_t *)out = tmp;
        -: 5334:  out += sizeof(uint32_t);
        -: 5335:  /* consumed: 4 bytes (total: 36) */
        1: 5336:  tmp  = (*(in + 9) - base) >> (29 - 2);
        1: 5337:  tmp |= (*(in + 10) - base) << 2;
        1: 5338:  tmp |= (*(in + 11) - base) << 31;
        1: 5339:  *(uint32_t *)out = tmp;
        -: 5340:  out += sizeof(uint32_t);
        -: 5341:  /* consumed: 4 bytes (total: 40) */
        1: 5342:  tmp  = (*(in + 11) - base) >> (29 - 28);
        1: 5343:  tmp |= (*(in + 12) - base) << 28;
        1: 5344:  *(uint32_t *)out = tmp;
        -: 5345:  out += sizeof(uint32_t);
        -: 5346:  /* consumed: 4 bytes (total: 44) */
        1: 5347:  tmp  = (*(in + 12) - base) >> (29 - 25);
        1: 5348:  tmp |= (*(in + 13) - base) << 25;
        1: 5349:  *(uint32_t *)out = tmp;
        -: 5350:  out += sizeof(uint32_t);
        -: 5351:  /* consumed: 4 bytes (total: 48) */
        1: 5352:  tmp  = (*(in + 13) - base) >> (29 - 22);
        1: 5353:  tmp |= (*(in + 14) - base) << 22;
        1: 5354:  *(uint32_t *)out = tmp;
        -: 5355:  out += sizeof(uint32_t);
        -: 5356:  /* consumed: 4 bytes (total: 52) */
        1: 5357:  tmp  = (*(in + 14) - base) >> (29 - 19);
        1: 5358:  tmp |= (*(in + 15) - base) << 19;
        1: 5359:  *(uint32_t *)out = tmp;
        -: 5360:  out += sizeof(uint32_t);
        -: 5361:  /* consumed: 4 bytes (total: 56) */
        1: 5362:  tmp  = (*(in + 15) - base) >> (29 - 16);
        1: 5363:  tmp |= (*(in + 16) - base) << 16;
        1: 5364:  *(uint32_t *)out = tmp;
        -: 5365:  out += sizeof(uint32_t);
        -: 5366:  /* consumed: 4 bytes (total: 60) */
        1: 5367:  tmp  = (*(in + 16) - base) >> (29 - 13);
        1: 5368:  tmp |= (*(in + 17) - base) << 13;
        1: 5369:  *(uint32_t *)out = tmp;
        -: 5370:  out += sizeof(uint32_t);
        -: 5371:  /* consumed: 4 bytes (total: 64) */
        1: 5372:  tmp  = (*(in + 17) - base) >> (29 - 10);
        1: 5373:  tmp |= (*(in + 18) - base) << 10;
        1: 5374:  *(uint32_t *)out = tmp;
        -: 5375:  out += sizeof(uint32_t);
        -: 5376:  /* consumed: 4 bytes (total: 68) */
        1: 5377:  tmp  = (*(in + 18) - base) >> (29 - 7);
        1: 5378:  tmp |= (*(in + 19) - base) << 7;
        1: 5379:  *(uint32_t *)out = tmp;
        -: 5380:  out += sizeof(uint32_t);
        -: 5381:  /* consumed: 4 bytes (total: 72) */
        1: 5382:  tmp  = (*(in + 19) - base) >> (29 - 4);
        1: 5383:  tmp |= (*(in + 20) - base) << 4;
        1: 5384:  *(uint32_t *)out = tmp;
        -: 5385:  out += sizeof(uint32_t);
        -: 5386:  /* consumed: 4 bytes (total: 76) */
        1: 5387:  tmp  = (*(in + 20) - base) >> (29 - 1);
        1: 5388:  tmp |= (*(in + 21) - base) << 1;
        1: 5389:  tmp |= (*(in + 22) - base) << 30;
        1: 5390:  *(uint32_t *)out = tmp;
        -: 5391:  out += sizeof(uint32_t);
        -: 5392:  /* consumed: 4 bytes (total: 80) */
        1: 5393:  tmp  = (*(in + 22) - base) >> (29 - 27);
        1: 5394:  tmp |= (*(in + 23) - base) << 27;
        1: 5395:  *(uint32_t *)out = tmp;
        -: 5396:  out += sizeof(uint32_t);
        -: 5397:  /* consumed: 4 bytes (total: 84) */
        1: 5398:  tmp  = (*(in + 23) - base) >> (29 - 24);
        1: 5399:  tmp |= (*(in + 24) - base) << 24;
        1: 5400:  *(uint32_t *)out = tmp;
        -: 5401:  out += sizeof(uint32_t);
        -: 5402:  /* consumed: 4 bytes (total: 88) */
        1: 5403:  tmp  = (*(in + 24) - base) >> (29 - 21);
        1: 5404:  tmp |= (*(in + 25) - base) << 21;
        1: 5405:  *(uint32_t *)out = tmp;
        -: 5406:  out += sizeof(uint32_t);
        -: 5407:  /* consumed: 4 bytes (total: 92) */
        1: 5408:  tmp  = (*(in + 25) - base) >> (29 - 18);
        1: 5409:  tmp |= (*(in + 26) - base) << 18;
        1: 5410:  *(uint32_t *)out = tmp;
        -: 5411:  out += sizeof(uint32_t);
        -: 5412:  /* consumed: 4 bytes (total: 96) */
        1: 5413:  tmp  = (*(in + 26) - base) >> (29 - 15);
        1: 5414:  tmp |= (*(in + 27) - base) << 15;
        1: 5415:  *(uint32_t *)out = tmp;
        -: 5416:  out += sizeof(uint32_t);
        -: 5417:  /* consumed: 4 bytes (total: 100) */
        1: 5418:  tmp  = (*(in + 27) - base) >> (29 - 12);
        1: 5419:  tmp |= (*(in + 28) - base) << 12;
        1: 5420:  *(uint32_t *)out = tmp;
        -: 5421:  out += sizeof(uint32_t);
        -: 5422:  /* consumed: 4 bytes (total: 104) */
        1: 5423:  tmp  = (*(in + 28) - base) >> (29 - 9);
        1: 5424:  tmp |= (*(in + 29) - base) << 9;
        1: 5425:  *(uint32_t *)out = tmp;
        -: 5426:  out += sizeof(uint32_t);
        -: 5427:  /* consumed: 4 bytes (total: 108) */
        1: 5428:  tmp  = (*(in + 29) - base) >> (29 - 6);
        1: 5429:  tmp |= (*(in + 30) - base) << 6;
        1: 5430:  *(uint32_t *)out = tmp;
        1: 5431:  out += sizeof(uint32_t);
        -: 5432:  /* consumed: 4 bytes (total: 112) */
        1: 5433:  tmp  = (*(in + 30) - base) >> (29 - 3);
        1: 5434:  tmp |= (*(in + 31) - base) << 3;
        -: 5435:  /* remaining: 0 bits */
        -: 5436:  length = (32 / 8) - (32 - 32) / 8;
        -: 5437:  /* consumed: 4 bytes (total: 116) */
        -: 5438:  memcpy(out, &tmp, length);
        1: 5439:  return 116;
        -: 5440:}
        -: 5441:
        -: 5442:static uint32_t
        1: 5443:unpack29_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 5444:  uint32_t *in32 = (uint32_t *)in;
        -: 5445:  uint32_t tmp; (void)tmp;
        1: 5446:  *(out + 0)  = base + ((*in32 >> 0) & 536870911);
        1: 5447:  tmp = (*in32 >> 29);
        -: 5448:  in32++;
        -: 5449:  /* consumed: 4 bytes (total: 8) */
        1: 5450:  tmp |= (*in32 % (1U << 26)) << (29 - 26);
        1: 5451:  *(out + 1) = base + tmp;
        1: 5452:  tmp = (*in32 >> 26);
        -: 5453:  in32++;
        -: 5454:  /* consumed: 4 bytes (total: 12) */
        1: 5455:  tmp |= (*in32 % (1U << 23)) << (29 - 23);
        1: 5456:  *(out + 2) = base + tmp;
        1: 5457:  tmp = (*in32 >> 23);
        -: 5458:  in32++;
        -: 5459:  /* consumed: 4 bytes (total: 16) */
        1: 5460:  tmp |= (*in32 % (1U << 20)) << (29 - 20);
        1: 5461:  *(out + 3) = base + tmp;
        1: 5462:  tmp = (*in32 >> 20);
        -: 5463:  in32++;
        -: 5464:  /* consumed: 4 bytes (total: 20) */
        1: 5465:  tmp |= (*in32 % (1U << 17)) << (29 - 17);
        1: 5466:  *(out + 4) = base + tmp;
        1: 5467:  tmp = (*in32 >> 17);
        -: 5468:  in32++;
        -: 5469:  /* consumed: 4 bytes (total: 24) */
        1: 5470:  tmp |= (*in32 % (1U << 14)) << (29 - 14);
        1: 5471:  *(out + 5) = base + tmp;
        1: 5472:  tmp = (*in32 >> 14);
        -: 5473:  in32++;
        -: 5474:  /* consumed: 4 bytes (total: 28) */
        1: 5475:  tmp |= (*in32 % (1U << 11)) << (29 - 11);
        1: 5476:  *(out + 6) = base + tmp;
        1: 5477:  tmp = (*in32 >> 11);
        -: 5478:  in32++;
        -: 5479:  /* consumed: 4 bytes (total: 32) */
        1: 5480:  tmp |= (*in32 % (1U << 8)) << (29 - 8);
        1: 5481:  *(out + 7) = base + tmp;
        1: 5482:  tmp = (*in32 >> 8);
        -: 5483:  in32++;
        -: 5484:  /* consumed: 4 bytes (total: 36) */
        1: 5485:  tmp |= (*in32 % (1U << 5)) << (29 - 5);
        1: 5486:  *(out + 8) = base + tmp;
        1: 5487:  tmp = (*in32 >> 5);
        -: 5488:  in32++;
        -: 5489:  /* consumed: 4 bytes (total: 40) */
        1: 5490:  tmp |= (*in32 % (1U << 2)) << (29 - 2);
        1: 5491:  *(out + 9) = base + tmp;
        1: 5492:  *(out + 10)  = base + ((*in32 >> 2) & 536870911);
        1: 5493:  tmp = (*in32 >> 31);
        -: 5494:  in32++;
        -: 5495:  /* consumed: 4 bytes (total: 44) */
        1: 5496:  tmp |= (*in32 % (1U << 28)) << (29 - 28);
        1: 5497:  *(out + 11) = base + tmp;
        1: 5498:  tmp = (*in32 >> 28);
        -: 5499:  in32++;
        -: 5500:  /* consumed: 4 bytes (total: 48) */
        1: 5501:  tmp |= (*in32 % (1U << 25)) << (29 - 25);
        1: 5502:  *(out + 12) = base + tmp;
        1: 5503:  tmp = (*in32 >> 25);
        -: 5504:  in32++;
        -: 5505:  /* consumed: 4 bytes (total: 52) */
        1: 5506:  tmp |= (*in32 % (1U << 22)) << (29 - 22);
        1: 5507:  *(out + 13) = base + tmp;
        1: 5508:  tmp = (*in32 >> 22);
        -: 5509:  in32++;
        -: 5510:  /* consumed: 4 bytes (total: 56) */
        1: 5511:  tmp |= (*in32 % (1U << 19)) << (29 - 19);
        1: 5512:  *(out + 14) = base + tmp;
        1: 5513:  tmp = (*in32 >> 19);
        -: 5514:  in32++;
        -: 5515:  /* consumed: 4 bytes (total: 60) */
        1: 5516:  tmp |= (*in32 % (1U << 16)) << (29 - 16);
        1: 5517:  *(out + 15) = base + tmp;
        1: 5518:  tmp = (*in32 >> 16);
        -: 5519:  in32++;
        -: 5520:  /* consumed: 4 bytes (total: 64) */
        1: 5521:  tmp |= (*in32 % (1U << 13)) << (29 - 13);
        1: 5522:  *(out + 16) = base + tmp;
        1: 5523:  tmp = (*in32 >> 13);
        -: 5524:  in32++;
        -: 5525:  /* consumed: 4 bytes (total: 68) */
        1: 5526:  tmp |= (*in32 % (1U << 10)) << (29 - 10);
        1: 5527:  *(out + 17) = base + tmp;
        1: 5528:  tmp = (*in32 >> 10);
        -: 5529:  in32++;
        -: 5530:  /* consumed: 4 bytes (total: 72) */
        1: 5531:  tmp |= (*in32 % (1U << 7)) << (29 - 7);
        1: 5532:  *(out + 18) = base + tmp;
        1: 5533:  tmp = (*in32 >> 7);
        -: 5534:  in32++;
        -: 5535:  /* consumed: 4 bytes (total: 76) */
        1: 5536:  tmp |= (*in32 % (1U << 4)) << (29 - 4);
        1: 5537:  *(out + 19) = base + tmp;
        1: 5538:  tmp = (*in32 >> 4);
        -: 5539:  in32++;
        -: 5540:  /* consumed: 4 bytes (total: 80) */
        1: 5541:  tmp |= (*in32 % (1U << 1)) << (29 - 1);
        1: 5542:  *(out + 20) = base + tmp;
        1: 5543:  *(out + 21)  = base + ((*in32 >> 1) & 536870911);
        1: 5544:  tmp = (*in32 >> 30);
        -: 5545:  in32++;
        -: 5546:  /* consumed: 4 bytes (total: 84) */
        1: 5547:  tmp |= (*in32 % (1U << 27)) << (29 - 27);
        1: 5548:  *(out + 22) = base + tmp;
        1: 5549:  tmp = (*in32 >> 27);
        -: 5550:  in32++;
        -: 5551:  /* consumed: 4 bytes (total: 88) */
        1: 5552:  tmp |= (*in32 % (1U << 24)) << (29 - 24);
        1: 5553:  *(out + 23) = base + tmp;
        1: 5554:  tmp = (*in32 >> 24);
        -: 5555:  in32++;
        -: 5556:  /* consumed: 4 bytes (total: 92) */
        1: 5557:  tmp |= (*in32 % (1U << 21)) << (29 - 21);
        1: 5558:  *(out + 24) = base + tmp;
        1: 5559:  tmp = (*in32 >> 21);
        -: 5560:  in32++;
        -: 5561:  /* consumed: 4 bytes (total: 96) */
        1: 5562:  tmp |= (*in32 % (1U << 18)) << (29 - 18);
        1: 5563:  *(out + 25) = base + tmp;
        1: 5564:  tmp = (*in32 >> 18);
        -: 5565:  in32++;
        -: 5566:  /* consumed: 4 bytes (total: 100) */
        1: 5567:  tmp |= (*in32 % (1U << 15)) << (29 - 15);
        1: 5568:  *(out + 26) = base + tmp;
        1: 5569:  tmp = (*in32 >> 15);
        -: 5570:  in32++;
        -: 5571:  /* consumed: 4 bytes (total: 104) */
        1: 5572:  tmp |= (*in32 % (1U << 12)) << (29 - 12);
        1: 5573:  *(out + 27) = base + tmp;
        1: 5574:  tmp = (*in32 >> 12);
        -: 5575:  in32++;
        -: 5576:  /* consumed: 4 bytes (total: 108) */
        1: 5577:  tmp |= (*in32 % (1U << 9)) << (29 - 9);
        1: 5578:  *(out + 28) = base + tmp;
        1: 5579:  tmp = (*in32 >> 9);
        -: 5580:  in32++;
        -: 5581:  /* consumed: 4 bytes (total: 112) */
        1: 5582:  tmp |= (*in32 % (1U << 6)) << (29 - 6);
        1: 5583:  *(out + 29) = base + tmp;
        1: 5584:  tmp = (*in32 >> 6);
        -: 5585:  in32++;
        -: 5586:  /* consumed: 4 bytes (total: 116) */
        1: 5587:  tmp |= (*in32 % (1U << 3)) << (29 - 3);
        1: 5588:  *(out + 30) = base + tmp;
        1: 5589:  *(out + 31)  = base + ((*in32 >> 3) & 536870911);
        -: 5590:  /* remaining: 0 bits */
        1: 5591:  return 116;
        -: 5592:}
        -: 5593:
        -: 5594:static uint32_t
        1: 5595:pack30_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 5596:  uint32_t tmp, length;
        1: 5597:  tmp  = (*(in + 0) - base) << 0;
        1: 5598:  tmp |= (*(in + 1) - base) << 30;
        1: 5599:  *(uint32_t *)out = tmp;
        -: 5600:  out += sizeof(uint32_t);
        -: 5601:  /* consumed: 4 bytes (total: 4) */
        1: 5602:  tmp  = (*(in + 1) - base) >> (30 - 28);
        1: 5603:  tmp |= (*(in + 2) - base) << 28;
        1: 5604:  *(uint32_t *)out = tmp;
        -: 5605:  out += sizeof(uint32_t);
        -: 5606:  /* consumed: 4 bytes (total: 8) */
        1: 5607:  tmp  = (*(in + 2) - base) >> (30 - 26);
        1: 5608:  tmp |= (*(in + 3) - base) << 26;
        1: 5609:  *(uint32_t *)out = tmp;
        -: 5610:  out += sizeof(uint32_t);
        -: 5611:  /* consumed: 4 bytes (total: 12) */
        1: 5612:  tmp  = (*(in + 3) - base) >> (30 - 24);
        1: 5613:  tmp |= (*(in + 4) - base) << 24;
        1: 5614:  *(uint32_t *)out = tmp;
        -: 5615:  out += sizeof(uint32_t);
        -: 5616:  /* consumed: 4 bytes (total: 16) */
        1: 5617:  tmp  = (*(in + 4) - base) >> (30 - 22);
        1: 5618:  tmp |= (*(in + 5) - base) << 22;
        1: 5619:  *(uint32_t *)out = tmp;
        -: 5620:  out += sizeof(uint32_t);
        -: 5621:  /* consumed: 4 bytes (total: 20) */
        1: 5622:  tmp  = (*(in + 5) - base) >> (30 - 20);
        1: 5623:  tmp |= (*(in + 6) - base) << 20;
        1: 5624:  *(uint32_t *)out = tmp;
        -: 5625:  out += sizeof(uint32_t);
        -: 5626:  /* consumed: 4 bytes (total: 24) */
        1: 5627:  tmp  = (*(in + 6) - base) >> (30 - 18);
        1: 5628:  tmp |= (*(in + 7) - base) << 18;
        1: 5629:  *(uint32_t *)out = tmp;
        -: 5630:  out += sizeof(uint32_t);
        -: 5631:  /* consumed: 4 bytes (total: 28) */
        1: 5632:  tmp  = (*(in + 7) - base) >> (30 - 16);
        1: 5633:  tmp |= (*(in + 8) - base) << 16;
        1: 5634:  *(uint32_t *)out = tmp;
        -: 5635:  out += sizeof(uint32_t);
        -: 5636:  /* consumed: 4 bytes (total: 32) */
        1: 5637:  tmp  = (*(in + 8) - base) >> (30 - 14);
        1: 5638:  tmp |= (*(in + 9) - base) << 14;
        1: 5639:  *(uint32_t *)out = tmp;
        -: 5640:  out += sizeof(uint32_t);
        -: 5641:  /* consumed: 4 bytes (total: 36) */
        1: 5642:  tmp  = (*(in + 9) - base) >> (30 - 12);
        1: 5643:  tmp |= (*(in + 10) - base) << 12;
        1: 5644:  *(uint32_t *)out = tmp;
        -: 5645:  out += sizeof(uint32_t);
        -: 5646:  /* consumed: 4 bytes (total: 40) */
        1: 5647:  tmp  = (*(in + 10) - base) >> (30 - 10);
        1: 5648:  tmp |= (*(in + 11) - base) << 10;
        1: 5649:  *(uint32_t *)out = tmp;
        -: 5650:  out += sizeof(uint32_t);
        -: 5651:  /* consumed: 4 bytes (total: 44) */
        1: 5652:  tmp  = (*(in + 11) - base) >> (30 - 8);
        1: 5653:  tmp |= (*(in + 12) - base) << 8;
        1: 5654:  *(uint32_t *)out = tmp;
        -: 5655:  out += sizeof(uint32_t);
        -: 5656:  /* consumed: 4 bytes (total: 48) */
        1: 5657:  tmp  = (*(in + 12) - base) >> (30 - 6);
        1: 5658:  tmp |= (*(in + 13) - base) << 6;
        1: 5659:  *(uint32_t *)out = tmp;
        -: 5660:  out += sizeof(uint32_t);
        -: 5661:  /* consumed: 4 bytes (total: 52) */
        1: 5662:  tmp  = (*(in + 13) - base) >> (30 - 4);
        1: 5663:  tmp |= (*(in + 14) - base) << 4;
        1: 5664:  *(uint32_t *)out = tmp;
        -: 5665:  out += sizeof(uint32_t);
        -: 5666:  /* consumed: 4 bytes (total: 56) */
        1: 5667:  tmp  = (*(in + 14) - base) >> (30 - 2);
        1: 5668:  tmp |= (*(in + 15) - base) << 2;
        1: 5669:  *(uint32_t *)out = tmp;
        -: 5670:  out += sizeof(uint32_t);
        -: 5671:  /* consumed: 4 bytes (total: 60) */
        1: 5672:  tmp  = (*(in + 16) - base) << 0;
        1: 5673:  tmp |= (*(in + 17) - base) << 30;
        1: 5674:  *(uint32_t *)out = tmp;
        -: 5675:  out += sizeof(uint32_t);
        -: 5676:  /* consumed: 4 bytes (total: 64) */
        1: 5677:  tmp  = (*(in + 17) - base) >> (30 - 28);
        1: 5678:  tmp |= (*(in + 18) - base) << 28;
        1: 5679:  *(uint32_t *)out = tmp;
        -: 5680:  out += sizeof(uint32_t);
        -: 5681:  /* consumed: 4 bytes (total: 68) */
        1: 5682:  tmp  = (*(in + 18) - base) >> (30 - 26);
        1: 5683:  tmp |= (*(in + 19) - base) << 26;
        1: 5684:  *(uint32_t *)out = tmp;
        -: 5685:  out += sizeof(uint32_t);
        -: 5686:  /* consumed: 4 bytes (total: 72) */
        1: 5687:  tmp  = (*(in + 19) - base) >> (30 - 24);
        1: 5688:  tmp |= (*(in + 20) - base) << 24;
        1: 5689:  *(uint32_t *)out = tmp;
        -: 5690:  out += sizeof(uint32_t);
        -: 5691:  /* consumed: 4 bytes (total: 76) */
        1: 5692:  tmp  = (*(in + 20) - base) >> (30 - 22);
        1: 5693:  tmp |= (*(in + 21) - base) << 22;
        1: 5694:  *(uint32_t *)out = tmp;
        -: 5695:  out += sizeof(uint32_t);
        -: 5696:  /* consumed: 4 bytes (total: 80) */
        1: 5697:  tmp  = (*(in + 21) - base) >> (30 - 20);
        1: 5698:  tmp |= (*(in + 22) - base) << 20;
        1: 5699:  *(uint32_t *)out = tmp;
        -: 5700:  out += sizeof(uint32_t);
        -: 5701:  /* consumed: 4 bytes (total: 84) */
        1: 5702:  tmp  = (*(in + 22) - base) >> (30 - 18);
        1: 5703:  tmp |= (*(in + 23) - base) << 18;
        1: 5704:  *(uint32_t *)out = tmp;
        -: 5705:  out += sizeof(uint32_t);
        -: 5706:  /* consumed: 4 bytes (total: 88) */
        1: 5707:  tmp  = (*(in + 23) - base) >> (30 - 16);
        1: 5708:  tmp |= (*(in + 24) - base) << 16;
        1: 5709:  *(uint32_t *)out = tmp;
        -: 5710:  out += sizeof(uint32_t);
        -: 5711:  /* consumed: 4 bytes (total: 92) */
        1: 5712:  tmp  = (*(in + 24) - base) >> (30 - 14);
        1: 5713:  tmp |= (*(in + 25) - base) << 14;
        1: 5714:  *(uint32_t *)out = tmp;
        -: 5715:  out += sizeof(uint32_t);
        -: 5716:  /* consumed: 4 bytes (total: 96) */
        1: 5717:  tmp  = (*(in + 25) - base) >> (30 - 12);
        1: 5718:  tmp |= (*(in + 26) - base) << 12;
        1: 5719:  *(uint32_t *)out = tmp;
        -: 5720:  out += sizeof(uint32_t);
        -: 5721:  /* consumed: 4 bytes (total: 100) */
        1: 5722:  tmp  = (*(in + 26) - base) >> (30 - 10);
        1: 5723:  tmp |= (*(in + 27) - base) << 10;
        1: 5724:  *(uint32_t *)out = tmp;
        -: 5725:  out += sizeof(uint32_t);
        -: 5726:  /* consumed: 4 bytes (total: 104) */
        1: 5727:  tmp  = (*(in + 27) - base) >> (30 - 8);
        1: 5728:  tmp |= (*(in + 28) - base) << 8;
        1: 5729:  *(uint32_t *)out = tmp;
        -: 5730:  out += sizeof(uint32_t);
        -: 5731:  /* consumed: 4 bytes (total: 108) */
        1: 5732:  tmp  = (*(in + 28) - base) >> (30 - 6);
        1: 5733:  tmp |= (*(in + 29) - base) << 6;
        1: 5734:  *(uint32_t *)out = tmp;
        -: 5735:  out += sizeof(uint32_t);
        -: 5736:  /* consumed: 4 bytes (total: 112) */
        1: 5737:  tmp  = (*(in + 29) - base) >> (30 - 4);
        1: 5738:  tmp |= (*(in + 30) - base) << 4;
        1: 5739:  *(uint32_t *)out = tmp;
        1: 5740:  out += sizeof(uint32_t);
        -: 5741:  /* consumed: 4 bytes (total: 116) */
        1: 5742:  tmp  = (*(in + 30) - base) >> (30 - 2);
        1: 5743:  tmp |= (*(in + 31) - base) << 2;
        -: 5744:  /* remaining: 0 bits */
        -: 5745:  length = (32 / 8) - (32 - 32) / 8;
        -: 5746:  /* consumed: 4 bytes (total: 120) */
        -: 5747:  memcpy(out, &tmp, length);
        1: 5748:  return 120;
        -: 5749:}
        -: 5750:
        -: 5751:static uint32_t
        1: 5752:unpack30_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 5753:  uint32_t *in32 = (uint32_t *)in;
        -: 5754:  uint32_t tmp; (void)tmp;
        1: 5755:  *(out + 0)  = base + ((*in32 >> 0) & 1073741823);
        1: 5756:  tmp = (*in32 >> 30);
        -: 5757:  in32++;
        -: 5758:  /* consumed: 4 bytes (total: 8) */
        1: 5759:  tmp |= (*in32 % (1U << 28)) << (30 - 28);
        1: 5760:  *(out + 1) = base + tmp;
        1: 5761:  tmp = (*in32 >> 28);
        -: 5762:  in32++;
        -: 5763:  /* consumed: 4 bytes (total: 12) */
        1: 5764:  tmp |= (*in32 % (1U << 26)) << (30 - 26);
        1: 5765:  *(out + 2) = base + tmp;
        1: 5766:  tmp = (*in32 >> 26);
        -: 5767:  in32++;
        -: 5768:  /* consumed: 4 bytes (total: 16) */
        1: 5769:  tmp |= (*in32 % (1U << 24)) << (30 - 24);
        1: 5770:  *(out + 3) = base + tmp;
        1: 5771:  tmp = (*in32 >> 24);
        -: 5772:  in32++;
        -: 5773:  /* consumed: 4 bytes (total: 20) */
        1: 5774:  tmp |= (*in32 % (1U << 22)) << (30 - 22);
        1: 5775:  *(out + 4) = base + tmp;
        1: 5776:  tmp = (*in32 >> 22);
        -: 5777:  in32++;
        -: 5778:  /* consumed: 4 bytes (total: 24) */
        1: 5779:  tmp |= (*in32 % (1U << 20)) << (30 - 20);
        1: 5780:  *(out + 5) = base + tmp;
        1: 5781:  tmp = (*in32 >> 20);
        -: 5782:  in32++;
        -: 5783:  /* consumed: 4 bytes (total: 28) */
        1: 5784:  tmp |= (*in32 % (1U << 18)) << (30 - 18);
        1: 5785:  *(out + 6) = base + tmp;
        1: 5786:  tmp = (*in32 >> 18);
        -: 5787:  in32++;
        -: 5788:  /* consumed: 4 bytes (total: 32) */
        1: 5789:  tmp |= (*in32 % (1U << 16)) << (30 - 16);
        1: 5790:  *(out + 7) = base + tmp;
        1: 5791:  tmp = (*in32 >> 16);
        -: 5792:  in32++;
        -: 5793:  /* consumed: 4 bytes (total: 36) */
        1: 5794:  tmp |= (*in32 % (1U << 14)) << (30 - 14);
        1: 5795:  *(out + 8) = base + tmp;
        1: 5796:  tmp = (*in32 >> 14);
        -: 5797:  in32++;
        -: 5798:  /* consumed: 4 bytes (total: 40) */
        1: 5799:  tmp |= (*in32 % (1U << 12)) << (30 - 12);
        1: 5800:  *(out + 9) = base + tmp;
        1: 5801:  tmp = (*in32 >> 12);
        -: 5802:  in32++;
        -: 5803:  /* consumed: 4 bytes (total: 44) */
        1: 5804:  tmp |= (*in32 % (1U << 10)) << (30 - 10);
        1: 5805:  *(out + 10) = base + tmp;
        1: 5806:  tmp = (*in32 >> 10);
        -: 5807:  in32++;
        -: 5808:  /* consumed: 4 bytes (total: 48) */
        1: 5809:  tmp |= (*in32 % (1U << 8)) << (30 - 8);
        1: 5810:  *(out + 11) = base + tmp;
        1: 5811:  tmp = (*in32 >> 8);
        -: 5812:  in32++;
        -: 5813:  /* consumed: 4 bytes (total: 52) */
        1: 5814:  tmp |= (*in32 % (1U << 6)) << (30 - 6);
        1: 5815:  *(out + 12) = base + tmp;
        1: 5816:  tmp = (*in32 >> 6);
        -: 5817:  in32++;
        -: 5818:  /* consumed: 4 bytes (total: 56) */
        1: 5819:  tmp |= (*in32 % (1U << 4)) << (30 - 4);
        1: 5820:  *(out + 13) = base + tmp;
        1: 5821:  tmp = (*in32 >> 4);
        -: 5822:  in32++;
        -: 5823:  /* consumed: 4 bytes (total: 60) */
        1: 5824:  tmp |= (*in32 % (1U << 2)) << (30 - 2);
        1: 5825:  *(out + 14) = base + tmp;
        1: 5826:  *(out + 15)  = base + ((*in32 >> 2) & 1073741823);
        -: 5827:  in32++;
        -: 5828:  /* consumed: 4 bytes (total: 64) */
        1: 5829:  *(out + 16)  = base + ((*in32 >> 0) & 1073741823);
        1: 5830:  tmp = (*in32 >> 30);
        -: 5831:  in32++;
        -: 5832:  /* consumed: 4 bytes (total: 68) */
        1: 5833:  tmp |= (*in32 % (1U << 28)) << (30 - 28);
        1: 5834:  *(out + 17) = base + tmp;
        1: 5835:  tmp = (*in32 >> 28);
        -: 5836:  in32++;
        -: 5837:  /* consumed: 4 bytes (total: 72) */
        1: 5838:  tmp |= (*in32 % (1U << 26)) << (30 - 26);
        1: 5839:  *(out + 18) = base + tmp;
        1: 5840:  tmp = (*in32 >> 26);
        -: 5841:  in32++;
        -: 5842:  /* consumed: 4 bytes (total: 76) */
        1: 5843:  tmp |= (*in32 % (1U << 24)) << (30 - 24);
        1: 5844:  *(out + 19) = base + tmp;
        1: 5845:  tmp = (*in32 >> 24);
        -: 5846:  in32++;
        -: 5847:  /* consumed: 4 bytes (total: 80) */
        1: 5848:  tmp |= (*in32 % (1U << 22)) << (30 - 22);
        1: 5849:  *(out + 20) = base + tmp;
        1: 5850:  tmp = (*in32 >> 22);
        -: 5851:  in32++;
        -: 5852:  /* consumed: 4 bytes (total: 84) */
        1: 5853:  tmp |= (*in32 % (1U << 20)) << (30 - 20);
        1: 5854:  *(out + 21) = base + tmp;
        1: 5855:  tmp = (*in32 >> 20);
        -: 5856:  in32++;
        -: 5857:  /* consumed: 4 bytes (total: 88) */
        1: 5858:  tmp |= (*in32 % (1U << 18)) << (30 - 18);
        1: 5859:  *(out + 22) = base + tmp;
        1: 5860:  tmp = (*in32 >> 18);
        -: 5861:  in32++;
        -: 5862:  /* consumed: 4 bytes (total: 92) */
        1: 5863:  tmp |= (*in32 % (1U << 16)) << (30 - 16);
        1: 5864:  *(out + 23) = base + tmp;
        1: 5865:  tmp = (*in32 >> 16);
        -: 5866:  in32++;
        -: 5867:  /* consumed: 4 bytes (total: 96) */
        1: 5868:  tmp |= (*in32 % (1U << 14)) << (30 - 14);
        1: 5869:  *(out + 24) = base + tmp;
        1: 5870:  tmp = (*in32 >> 14);
        -: 5871:  in32++;
        -: 5872:  /* consumed: 4 bytes (total: 100) */
        1: 5873:  tmp |= (*in32 % (1U << 12)) << (30 - 12);
        1: 5874:  *(out + 25) = base + tmp;
        1: 5875:  tmp = (*in32 >> 12);
        -: 5876:  in32++;
        -: 5877:  /* consumed: 4 bytes (total: 104) */
        1: 5878:  tmp |= (*in32 % (1U << 10)) << (30 - 10);
        1: 5879:  *(out + 26) = base + tmp;
        1: 5880:  tmp = (*in32 >> 10);
        -: 5881:  in32++;
        -: 5882:  /* consumed: 4 bytes (total: 108) */
        1: 5883:  tmp |= (*in32 % (1U << 8)) << (30 - 8);
        1: 5884:  *(out + 27) = base + tmp;
        1: 5885:  tmp = (*in32 >> 8);
        -: 5886:  in32++;
        -: 5887:  /* consumed: 4 bytes (total: 112) */
        1: 5888:  tmp |= (*in32 % (1U << 6)) << (30 - 6);
        1: 5889:  *(out + 28) = base + tmp;
        1: 5890:  tmp = (*in32 >> 6);
        -: 5891:  in32++;
        -: 5892:  /* consumed: 4 bytes (total: 116) */
        1: 5893:  tmp |= (*in32 % (1U << 4)) << (30 - 4);
        1: 5894:  *(out + 29) = base + tmp;
        1: 5895:  tmp = (*in32 >> 4);
        -: 5896:  in32++;
        -: 5897:  /* consumed: 4 bytes (total: 120) */
        1: 5898:  tmp |= (*in32 % (1U << 2)) << (30 - 2);
        1: 5899:  *(out + 30) = base + tmp;
        1: 5900:  *(out + 31)  = base + ((*in32 >> 2) & 1073741823);
        -: 5901:  /* remaining: 0 bits */
        1: 5902:  return 120;
        -: 5903:}
        -: 5904:
        -: 5905:static uint32_t
        1: 5906:pack31_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 5907:  uint32_t tmp, length;
        1: 5908:  tmp  = (*(in + 0) - base) << 0;
        1: 5909:  tmp |= (*(in + 1) - base) << 31;
        1: 5910:  *(uint32_t *)out = tmp;
        -: 5911:  out += sizeof(uint32_t);
        -: 5912:  /* consumed: 4 bytes (total: 4) */
        1: 5913:  tmp  = (*(in + 1) - base) >> (31 - 30);
        1: 5914:  tmp |= (*(in + 2) - base) << 30;
        1: 5915:  *(uint32_t *)out = tmp;
        -: 5916:  out += sizeof(uint32_t);
        -: 5917:  /* consumed: 4 bytes (total: 8) */
        1: 5918:  tmp  = (*(in + 2) - base) >> (31 - 29);
        1: 5919:  tmp |= (*(in + 3) - base) << 29;
        1: 5920:  *(uint32_t *)out = tmp;
        -: 5921:  out += sizeof(uint32_t);
        -: 5922:  /* consumed: 4 bytes (total: 12) */
        1: 5923:  tmp  = (*(in + 3) - base) >> (31 - 28);
        1: 5924:  tmp |= (*(in + 4) - base) << 28;
        1: 5925:  *(uint32_t *)out = tmp;
        -: 5926:  out += sizeof(uint32_t);
        -: 5927:  /* consumed: 4 bytes (total: 16) */
        1: 5928:  tmp  = (*(in + 4) - base) >> (31 - 27);
        1: 5929:  tmp |= (*(in + 5) - base) << 27;
        1: 5930:  *(uint32_t *)out = tmp;
        -: 5931:  out += sizeof(uint32_t);
        -: 5932:  /* consumed: 4 bytes (total: 20) */
        1: 5933:  tmp  = (*(in + 5) - base) >> (31 - 26);
        1: 5934:  tmp |= (*(in + 6) - base) << 26;
        1: 5935:  *(uint32_t *)out = tmp;
        -: 5936:  out += sizeof(uint32_t);
        -: 5937:  /* consumed: 4 bytes (total: 24) */
        1: 5938:  tmp  = (*(in + 6) - base) >> (31 - 25);
        1: 5939:  tmp |= (*(in + 7) - base) << 25;
        1: 5940:  *(uint32_t *)out = tmp;
        -: 5941:  out += sizeof(uint32_t);
        -: 5942:  /* consumed: 4 bytes (total: 28) */
        1: 5943:  tmp  = (*(in + 7) - base) >> (31 - 24);
        1: 5944:  tmp |= (*(in + 8) - base) << 24;
        1: 5945:  *(uint32_t *)out = tmp;
        -: 5946:  out += sizeof(uint32_t);
        -: 5947:  /* consumed: 4 bytes (total: 32) */
        1: 5948:  tmp  = (*(in + 8) - base) >> (31 - 23);
        1: 5949:  tmp |= (*(in + 9) - base) << 23;
        1: 5950:  *(uint32_t *)out = tmp;
        -: 5951:  out += sizeof(uint32_t);
        -: 5952:  /* consumed: 4 bytes (total: 36) */
        1: 5953:  tmp  = (*(in + 9) - base) >> (31 - 22);
        1: 5954:  tmp |= (*(in + 10) - base) << 22;
        1: 5955:  *(uint32_t *)out = tmp;
        -: 5956:  out += sizeof(uint32_t);
        -: 5957:  /* consumed: 4 bytes (total: 40) */
        1: 5958:  tmp  = (*(in + 10) - base) >> (31 - 21);
        1: 5959:  tmp |= (*(in + 11) - base) << 21;
        1: 5960:  *(uint32_t *)out = tmp;
        -: 5961:  out += sizeof(uint32_t);
        -: 5962:  /* consumed: 4 bytes (total: 44) */
        1: 5963:  tmp  = (*(in + 11) - base) >> (31 - 20);
        1: 5964:  tmp |= (*(in + 12) - base) << 20;
        1: 5965:  *(uint32_t *)out = tmp;
        -: 5966:  out += sizeof(uint32_t);
        -: 5967:  /* consumed: 4 bytes (total: 48) */
        1: 5968:  tmp  = (*(in + 12) - base) >> (31 - 19);
        1: 5969:  tmp |= (*(in + 13) - base) << 19;
        1: 5970:  *(uint32_t *)out = tmp;
        -: 5971:  out += sizeof(uint32_t);
        -: 5972:  /* consumed: 4 bytes (total: 52) */
        1: 5973:  tmp  = (*(in + 13) - base) >> (31 - 18);
        1: 5974:  tmp |= (*(in + 14) - base) << 18;
        1: 5975:  *(uint32_t *)out = tmp;
        -: 5976:  out += sizeof(uint32_t);
        -: 5977:  /* consumed: 4 bytes (total: 56) */
        1: 5978:  tmp  = (*(in + 14) - base) >> (31 - 17);
        1: 5979:  tmp |= (*(in + 15) - base) << 17;
        1: 5980:  *(uint32_t *)out = tmp;
        -: 5981:  out += sizeof(uint32_t);
        -: 5982:  /* consumed: 4 bytes (total: 60) */
        1: 5983:  tmp  = (*(in + 15) - base) >> (31 - 16);
        1: 5984:  tmp |= (*(in + 16) - base) << 16;
        1: 5985:  *(uint32_t *)out = tmp;
        -: 5986:  out += sizeof(uint32_t);
        -: 5987:  /* consumed: 4 bytes (total: 64) */
        1: 5988:  tmp  = (*(in + 16) - base) >> (31 - 15);
        1: 5989:  tmp |= (*(in + 17) - base) << 15;
        1: 5990:  *(uint32_t *)out = tmp;
        -: 5991:  out += sizeof(uint32_t);
        -: 5992:  /* consumed: 4 bytes (total: 68) */
        1: 5993:  tmp  = (*(in + 17) - base) >> (31 - 14);
        1: 5994:  tmp |= (*(in + 18) - base) << 14;
        1: 5995:  *(uint32_t *)out = tmp;
        -: 5996:  out += sizeof(uint32_t);
        -: 5997:  /* consumed: 4 bytes (total: 72) */
        1: 5998:  tmp  = (*(in + 18) - base) >> (31 - 13);
        1: 5999:  tmp |= (*(in + 19) - base) << 13;
        1: 6000:  *(uint32_t *)out = tmp;
        -: 6001:  out += sizeof(uint32_t);
        -: 6002:  /* consumed: 4 bytes (total: 76) */
        1: 6003:  tmp  = (*(in + 19) - base) >> (31 - 12);
        1: 6004:  tmp |= (*(in + 20) - base) << 12;
        1: 6005:  *(uint32_t *)out = tmp;
        -: 6006:  out += sizeof(uint32_t);
        -: 6007:  /* consumed: 4 bytes (total: 80) */
        1: 6008:  tmp  = (*(in + 20) - base) >> (31 - 11);
        1: 6009:  tmp |= (*(in + 21) - base) << 11;
        1: 6010:  *(uint32_t *)out = tmp;
        -: 6011:  out += sizeof(uint32_t);
        -: 6012:  /* consumed: 4 bytes (total: 84) */
        1: 6013:  tmp  = (*(in + 21) - base) >> (31 - 10);
        1: 6014:  tmp |= (*(in + 22) - base) << 10;
        1: 6015:  *(uint32_t *)out = tmp;
        -: 6016:  out += sizeof(uint32_t);
        -: 6017:  /* consumed: 4 bytes (total: 88) */
        1: 6018:  tmp  = (*(in + 22) - base) >> (31 - 9);
        1: 6019:  tmp |= (*(in + 23) - base) << 9;
        1: 6020:  *(uint32_t *)out = tmp;
        -: 6021:  out += sizeof(uint32_t);
        -: 6022:  /* consumed: 4 bytes (total: 92) */
        1: 6023:  tmp  = (*(in + 23) - base) >> (31 - 8);
        1: 6024:  tmp |= (*(in + 24) - base) << 8;
        1: 6025:  *(uint32_t *)out = tmp;
        -: 6026:  out += sizeof(uint32_t);
        -: 6027:  /* consumed: 4 bytes (total: 96) */
        1: 6028:  tmp  = (*(in + 24) - base) >> (31 - 7);
        1: 6029:  tmp |= (*(in + 25) - base) << 7;
        1: 6030:  *(uint32_t *)out = tmp;
        -: 6031:  out += sizeof(uint32_t);
        -: 6032:  /* consumed: 4 bytes (total: 100) */
        1: 6033:  tmp  = (*(in + 25) - base) >> (31 - 6);
        1: 6034:  tmp |= (*(in + 26) - base) << 6;
        1: 6035:  *(uint32_t *)out = tmp;
        -: 6036:  out += sizeof(uint32_t);
        -: 6037:  /* consumed: 4 bytes (total: 104) */
        1: 6038:  tmp  = (*(in + 26) - base) >> (31 - 5);
        1: 6039:  tmp |= (*(in + 27) - base) << 5;
        1: 6040:  *(uint32_t *)out = tmp;
        -: 6041:  out += sizeof(uint32_t);
        -: 6042:  /* consumed: 4 bytes (total: 108) */
        1: 6043:  tmp  = (*(in + 27) - base) >> (31 - 4);
        1: 6044:  tmp |= (*(in + 28) - base) << 4;
        1: 6045:  *(uint32_t *)out = tmp;
        -: 6046:  out += sizeof(uint32_t);
        -: 6047:  /* consumed: 4 bytes (total: 112) */
        1: 6048:  tmp  = (*(in + 28) - base) >> (31 - 3);
        1: 6049:  tmp |= (*(in + 29) - base) << 3;
        1: 6050:  *(uint32_t *)out = tmp;
        -: 6051:  out += sizeof(uint32_t);
        -: 6052:  /* consumed: 4 bytes (total: 116) */
        1: 6053:  tmp  = (*(in + 29) - base) >> (31 - 2);
        1: 6054:  tmp |= (*(in + 30) - base) << 2;
        1: 6055:  *(uint32_t *)out = tmp;
        1: 6056:  out += sizeof(uint32_t);
        -: 6057:  /* consumed: 4 bytes (total: 120) */
        1: 6058:  tmp  = (*(in + 30) - base) >> (31 - 1);
        1: 6059:  tmp |= (*(in + 31) - base) << 1;
        -: 6060:  /* remaining: 0 bits */
        -: 6061:  length = (32 / 8) - (32 - 32) / 8;
        -: 6062:  /* consumed: 4 bytes (total: 124) */
        -: 6063:  memcpy(out, &tmp, length);
        1: 6064:  return 124;
        -: 6065:}
        -: 6066:
        -: 6067:static uint32_t
        1: 6068:unpack31_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6069:  uint32_t *in32 = (uint32_t *)in;
        -: 6070:  uint32_t tmp; (void)tmp;
        1: 6071:  *(out + 0)  = base + ((*in32 >> 0) & 2147483647);
        1: 6072:  tmp = (*in32 >> 31);
        -: 6073:  in32++;
        -: 6074:  /* consumed: 4 bytes (total: 8) */
        1: 6075:  tmp |= (*in32 % (1U << 30)) << (31 - 30);
        1: 6076:  *(out + 1) = base + tmp;
        1: 6077:  tmp = (*in32 >> 30);
        -: 6078:  in32++;
        -: 6079:  /* consumed: 4 bytes (total: 12) */
        1: 6080:  tmp |= (*in32 % (1U << 29)) << (31 - 29);
        1: 6081:  *(out + 2) = base + tmp;
        1: 6082:  tmp = (*in32 >> 29);
        -: 6083:  in32++;
        -: 6084:  /* consumed: 4 bytes (total: 16) */
        1: 6085:  tmp |= (*in32 % (1U << 28)) << (31 - 28);
        1: 6086:  *(out + 3) = base + tmp;
        1: 6087:  tmp = (*in32 >> 28);
        -: 6088:  in32++;
        -: 6089:  /* consumed: 4 bytes (total: 20) */
        1: 6090:  tmp |= (*in32 % (1U << 27)) << (31 - 27);
        1: 6091:  *(out + 4) = base + tmp;
        1: 6092:  tmp = (*in32 >> 27);
        -: 6093:  in32++;
        -: 6094:  /* consumed: 4 bytes (total: 24) */
        1: 6095:  tmp |= (*in32 % (1U << 26)) << (31 - 26);
        1: 6096:  *(out + 5) = base + tmp;
        1: 6097:  tmp = (*in32 >> 26);
        -: 6098:  in32++;
        -: 6099:  /* consumed: 4 bytes (total: 28) */
        1: 6100:  tmp |= (*in32 % (1U << 25)) << (31 - 25);
        1: 6101:  *(out + 6) = base + tmp;
        1: 6102:  tmp = (*in32 >> 25);
        -: 6103:  in32++;
        -: 6104:  /* consumed: 4 bytes (total: 32) */
        1: 6105:  tmp |= (*in32 % (1U << 24)) << (31 - 24);
        1: 6106:  *(out + 7) = base + tmp;
        1: 6107:  tmp = (*in32 >> 24);
        -: 6108:  in32++;
        -: 6109:  /* consumed: 4 bytes (total: 36) */
        1: 6110:  tmp |= (*in32 % (1U << 23)) << (31 - 23);
        1: 6111:  *(out + 8) = base + tmp;
        1: 6112:  tmp = (*in32 >> 23);
        -: 6113:  in32++;
        -: 6114:  /* consumed: 4 bytes (total: 40) */
        1: 6115:  tmp |= (*in32 % (1U << 22)) << (31 - 22);
        1: 6116:  *(out + 9) = base + tmp;
        1: 6117:  tmp = (*in32 >> 22);
        -: 6118:  in32++;
        -: 6119:  /* consumed: 4 bytes (total: 44) */
        1: 6120:  tmp |= (*in32 % (1U << 21)) << (31 - 21);
        1: 6121:  *(out + 10) = base + tmp;
        1: 6122:  tmp = (*in32 >> 21);
        -: 6123:  in32++;
        -: 6124:  /* consumed: 4 bytes (total: 48) */
        1: 6125:  tmp |= (*in32 % (1U << 20)) << (31 - 20);
        1: 6126:  *(out + 11) = base + tmp;
        1: 6127:  tmp = (*in32 >> 20);
        -: 6128:  in32++;
        -: 6129:  /* consumed: 4 bytes (total: 52) */
        1: 6130:  tmp |= (*in32 % (1U << 19)) << (31 - 19);
        1: 6131:  *(out + 12) = base + tmp;
        1: 6132:  tmp = (*in32 >> 19);
        -: 6133:  in32++;
        -: 6134:  /* consumed: 4 bytes (total: 56) */
        1: 6135:  tmp |= (*in32 % (1U << 18)) << (31 - 18);
        1: 6136:  *(out + 13) = base + tmp;
        1: 6137:  tmp = (*in32 >> 18);
        -: 6138:  in32++;
        -: 6139:  /* consumed: 4 bytes (total: 60) */
        1: 6140:  tmp |= (*in32 % (1U << 17)) << (31 - 17);
        1: 6141:  *(out + 14) = base + tmp;
        1: 6142:  tmp = (*in32 >> 17);
        -: 6143:  in32++;
        -: 6144:  /* consumed: 4 bytes (total: 64) */
        1: 6145:  tmp |= (*in32 % (1U << 16)) << (31 - 16);
        1: 6146:  *(out + 15) = base + tmp;
        1: 6147:  tmp = (*in32 >> 16);
        -: 6148:  in32++;
        -: 6149:  /* consumed: 4 bytes (total: 68) */
        1: 6150:  tmp |= (*in32 % (1U << 15)) << (31 - 15);
        1: 6151:  *(out + 16) = base + tmp;
        1: 6152:  tmp = (*in32 >> 15);
        -: 6153:  in32++;
        -: 6154:  /* consumed: 4 bytes (total: 72) */
        1: 6155:  tmp |= (*in32 % (1U << 14)) << (31 - 14);
        1: 6156:  *(out + 17) = base + tmp;
        1: 6157:  tmp = (*in32 >> 14);
        -: 6158:  in32++;
        -: 6159:  /* consumed: 4 bytes (total: 76) */
        1: 6160:  tmp |= (*in32 % (1U << 13)) << (31 - 13);
        1: 6161:  *(out + 18) = base + tmp;
        1: 6162:  tmp = (*in32 >> 13);
        -: 6163:  in32++;
        -: 6164:  /* consumed: 4 bytes (total: 80) */
        1: 6165:  tmp |= (*in32 % (1U << 12)) << (31 - 12);
        1: 6166:  *(out + 19) = base + tmp;
        1: 6167:  tmp = (*in32 >> 12);
        -: 6168:  in32++;
        -: 6169:  /* consumed: 4 bytes (total: 84) */
        1: 6170:  tmp |= (*in32 % (1U << 11)) << (31 - 11);
        1: 6171:  *(out + 20) = base + tmp;
        1: 6172:  tmp = (*in32 >> 11);
        -: 6173:  in32++;
        -: 6174:  /* consumed: 4 bytes (total: 88) */
        1: 6175:  tmp |= (*in32 % (1U << 10)) << (31 - 10);
        1: 6176:  *(out + 21) = base + tmp;
        1: 6177:  tmp = (*in32 >> 10);
        -: 6178:  in32++;
        -: 6179:  /* consumed: 4 bytes (total: 92) */
        1: 6180:  tmp |= (*in32 % (1U << 9)) << (31 - 9);
        1: 6181:  *(out + 22) = base + tmp;
        1: 6182:  tmp = (*in32 >> 9);
        -: 6183:  in32++;
        -: 6184:  /* consumed: 4 bytes (total: 96) */
        1: 6185:  tmp |= (*in32 % (1U << 8)) << (31 - 8);
        1: 6186:  *(out + 23) = base + tmp;
        1: 6187:  tmp = (*in32 >> 8);
        -: 6188:  in32++;
        -: 6189:  /* consumed: 4 bytes (total: 100) */
        1: 6190:  tmp |= (*in32 % (1U << 7)) << (31 - 7);
        1: 6191:  *(out + 24) = base + tmp;
        1: 6192:  tmp = (*in32 >> 7);
        -: 6193:  in32++;
        -: 6194:  /* consumed: 4 bytes (total: 104) */
        1: 6195:  tmp |= (*in32 % (1U << 6)) << (31 - 6);
        1: 6196:  *(out + 25) = base + tmp;
        1: 6197:  tmp = (*in32 >> 6);
        -: 6198:  in32++;
        -: 6199:  /* consumed: 4 bytes (total: 108) */
        1: 6200:  tmp |= (*in32 % (1U << 5)) << (31 - 5);
        1: 6201:  *(out + 26) = base + tmp;
        1: 6202:  tmp = (*in32 >> 5);
        -: 6203:  in32++;
        -: 6204:  /* consumed: 4 bytes (total: 112) */
        1: 6205:  tmp |= (*in32 % (1U << 4)) << (31 - 4);
        1: 6206:  *(out + 27) = base + tmp;
        1: 6207:  tmp = (*in32 >> 4);
        -: 6208:  in32++;
        -: 6209:  /* consumed: 4 bytes (total: 116) */
        1: 6210:  tmp |= (*in32 % (1U << 3)) << (31 - 3);
        1: 6211:  *(out + 28) = base + tmp;
        1: 6212:  tmp = (*in32 >> 3);
        -: 6213:  in32++;
        -: 6214:  /* consumed: 4 bytes (total: 120) */
        1: 6215:  tmp |= (*in32 % (1U << 2)) << (31 - 2);
        1: 6216:  *(out + 29) = base + tmp;
        1: 6217:  tmp = (*in32 >> 2);
        -: 6218:  in32++;
        -: 6219:  /* consumed: 4 bytes (total: 124) */
        1: 6220:  tmp |= (*in32 % (1U << 1)) << (31 - 1);
        1: 6221:  *(out + 30) = base + tmp;
        1: 6222:  *(out + 31)  = base + ((*in32 >> 1) & 2147483647);
        -: 6223:  /* remaining: 0 bits */
        1: 6224:  return 124;
        -: 6225:}
        -: 6226:
        -: 6227:static uint32_t
        1: 6228:pack32_32(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6229:  uint32_t i;
        -: 6230:  uint32_t *out32 = (uint32_t *)out;
       33: 6231:  for (i = 0; i < 32; i++)
       32: 6232:    out32[i] = in[i] - base;
        1: 6233:  return 32 * sizeof(uint32_t);
        -: 6234:}
        -: 6235:
        -: 6236:static uint32_t
        1: 6237:unpack32_32(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6238:  uint32_t i;
        -: 6239:  uint32_t *in32 = (uint32_t *)in;
       33: 6240:  for (i = 0; i < 32; i++)
       32: 6241:    out[i] = base + in32[i];
        1: 6242:  return 32 * sizeof(uint32_t);
        -: 6243:}
        -: 6244:
        -: 6245:for_packfunc_t for_pack32[33] = {
        -: 6246:                       pack0_32,
        -: 6247:                       pack1_32,
        -: 6248:                       pack2_32,
        -: 6249:                       pack3_32,
        -: 6250:                       pack4_32,
        -: 6251:                       pack5_32,
        -: 6252:                       pack6_32,
        -: 6253:                       pack7_32,
        -: 6254:                       pack8_32,
        -: 6255:                       pack9_32,
        -: 6256:                       pack10_32,
        -: 6257:                       pack11_32,
        -: 6258:                       pack12_32,
        -: 6259:                       pack13_32,
        -: 6260:                       pack14_32,
        -: 6261:                       pack15_32,
        -: 6262:                       pack16_32,
        -: 6263:                       pack17_32,
        -: 6264:                       pack18_32,
        -: 6265:                       pack19_32,
        -: 6266:                       pack20_32,
        -: 6267:                       pack21_32,
        -: 6268:                       pack22_32,
        -: 6269:                       pack23_32,
        -: 6270:                       pack24_32,
        -: 6271:                       pack25_32,
        -: 6272:                       pack26_32,
        -: 6273:                       pack27_32,
        -: 6274:                       pack28_32,
        -: 6275:                       pack29_32,
        -: 6276:                       pack30_32,
        -: 6277:                       pack31_32,
        -: 6278:                       pack32_32
        -: 6279:};
        -: 6280:
        -: 6281:for_unpackfunc_t for_unpack32[33] = {
        -: 6282:                       unpack0_32,
        -: 6283:                       unpack1_32,
        -: 6284:                       unpack2_32,
        -: 6285:                       unpack3_32,
        -: 6286:                       unpack4_32,
        -: 6287:                       unpack5_32,
        -: 6288:                       unpack6_32,
        -: 6289:                       unpack7_32,
        -: 6290:                       unpack8_32,
        -: 6291:                       unpack9_32,
        -: 6292:                       unpack10_32,
        -: 6293:                       unpack11_32,
        -: 6294:                       unpack12_32,
        -: 6295:                       unpack13_32,
        -: 6296:                       unpack14_32,
        -: 6297:                       unpack15_32,
        -: 6298:                       unpack16_32,
        -: 6299:                       unpack17_32,
        -: 6300:                       unpack18_32,
        -: 6301:                       unpack19_32,
        -: 6302:                       unpack20_32,
        -: 6303:                       unpack21_32,
        -: 6304:                       unpack22_32,
        -: 6305:                       unpack23_32,
        -: 6306:                       unpack24_32,
        -: 6307:                       unpack25_32,
        -: 6308:                       unpack26_32,
        -: 6309:                       unpack27_32,
        -: 6310:                       unpack28_32,
        -: 6311:                       unpack29_32,
        -: 6312:                       unpack30_32,
        -: 6313:                       unpack31_32,
        -: 6314:                       unpack32_32
        -: 6315:};
        -: 6316:
        -: 6317:static uint32_t
        1: 6318:pack1_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6319:  uint32_t tmp, length;
        1: 6320:  tmp  = (*(in + 0) - base) << 0;
        1: 6321:  tmp |= (*(in + 1) - base) << 1;
        1: 6322:  tmp |= (*(in + 2) - base) << 2;
        1: 6323:  tmp |= (*(in + 3) - base) << 3;
        1: 6324:  tmp |= (*(in + 4) - base) << 4;
        1: 6325:  tmp |= (*(in + 5) - base) << 5;
        1: 6326:  tmp |= (*(in + 6) - base) << 6;
        1: 6327:  tmp |= (*(in + 7) - base) << 7;
        1: 6328:  tmp |= (*(in + 8) - base) << 8;
        1: 6329:  tmp |= (*(in + 9) - base) << 9;
        1: 6330:  tmp |= (*(in + 10) - base) << 10;
        1: 6331:  tmp |= (*(in + 11) - base) << 11;
        1: 6332:  tmp |= (*(in + 12) - base) << 12;
        1: 6333:  tmp |= (*(in + 13) - base) << 13;
        1: 6334:  tmp |= (*(in + 14) - base) << 14;
        1: 6335:  tmp |= (*(in + 15) - base) << 15;
        -: 6336:  /* remaining: 16 bits */
        -: 6337:  length = (32 / 8) - (32 - 16) / 8;
        -: 6338:  /* consumed: 2 bytes (total: 2) */
        -: 6339:  memcpy(out, &tmp, length);
        1: 6340:  return 2;
        -: 6341:}
        -: 6342:
        -: 6343:static uint32_t
        1: 6344:unpack1_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6345:  uint32_t *in32 = (uint32_t *)in;
        -: 6346:  uint32_t tmp; (void)tmp;
        1: 6347:  *(out + 0)  = base + ((*in32 >> 0) & 1);
        1: 6348:  *(out + 1)  = base + ((*in32 >> 1) & 1);
        1: 6349:  *(out + 2)  = base + ((*in32 >> 2) & 1);
        1: 6350:  *(out + 3)  = base + ((*in32 >> 3) & 1);
        1: 6351:  *(out + 4)  = base + ((*in32 >> 4) & 1);
        1: 6352:  *(out + 5)  = base + ((*in32 >> 5) & 1);
        1: 6353:  *(out + 6)  = base + ((*in32 >> 6) & 1);
        1: 6354:  *(out + 7)  = base + ((*in32 >> 7) & 1);
        1: 6355:  *(out + 8)  = base + ((*in32 >> 8) & 1);
        1: 6356:  *(out + 9)  = base + ((*in32 >> 9) & 1);
        1: 6357:  *(out + 10)  = base + ((*in32 >> 10) & 1);
        1: 6358:  *(out + 11)  = base + ((*in32 >> 11) & 1);
        1: 6359:  *(out + 12)  = base + ((*in32 >> 12) & 1);
        1: 6360:  *(out + 13)  = base + ((*in32 >> 13) & 1);
        1: 6361:  *(out + 14)  = base + ((*in32 >> 14) & 1);
        1: 6362:  *(out + 15)  = base + ((*in32 >> 15) & 1);
        -: 6363:  /* remaining: 16 bits */
        1: 6364:  return 2;
        -: 6365:}
        -: 6366:
        -: 6367:static uint32_t
        1: 6368:pack2_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6369:  uint32_t tmp, length;
        1: 6370:  tmp  = (*(in + 0) - base) << 0;
        1: 6371:  tmp |= (*(in + 1) - base) << 2;
        1: 6372:  tmp |= (*(in + 2) - base) << 4;
        1: 6373:  tmp |= (*(in + 3) - base) << 6;
        1: 6374:  tmp |= (*(in + 4) - base) << 8;
        1: 6375:  tmp |= (*(in + 5) - base) << 10;
        1: 6376:  tmp |= (*(in + 6) - base) << 12;
        1: 6377:  tmp |= (*(in + 7) - base) << 14;
        1: 6378:  tmp |= (*(in + 8) - base) << 16;
        1: 6379:  tmp |= (*(in + 9) - base) << 18;
        1: 6380:  tmp |= (*(in + 10) - base) << 20;
        1: 6381:  tmp |= (*(in + 11) - base) << 22;
        1: 6382:  tmp |= (*(in + 12) - base) << 24;
        1: 6383:  tmp |= (*(in + 13) - base) << 26;
        1: 6384:  tmp |= (*(in + 14) - base) << 28;
        1: 6385:  tmp |= (*(in + 15) - base) << 30;
        -: 6386:  /* remaining: 0 bits */
        -: 6387:  length = (32 / 8) - (32 - 32) / 8;
        -: 6388:  /* consumed: 4 bytes (total: 4) */
        -: 6389:  memcpy(out, &tmp, length);
        1: 6390:  return 4;
        -: 6391:}
        -: 6392:
        -: 6393:static uint32_t
        1: 6394:unpack2_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6395:  uint32_t *in32 = (uint32_t *)in;
        -: 6396:  uint32_t tmp; (void)tmp;
        1: 6397:  *(out + 0)  = base + ((*in32 >> 0) & 3);
        1: 6398:  *(out + 1)  = base + ((*in32 >> 2) & 3);
        1: 6399:  *(out + 2)  = base + ((*in32 >> 4) & 3);
        1: 6400:  *(out + 3)  = base + ((*in32 >> 6) & 3);
        1: 6401:  *(out + 4)  = base + ((*in32 >> 8) & 3);
        1: 6402:  *(out + 5)  = base + ((*in32 >> 10) & 3);
        1: 6403:  *(out + 6)  = base + ((*in32 >> 12) & 3);
        1: 6404:  *(out + 7)  = base + ((*in32 >> 14) & 3);
        1: 6405:  *(out + 8)  = base + ((*in32 >> 16) & 3);
        1: 6406:  *(out + 9)  = base + ((*in32 >> 18) & 3);
        1: 6407:  *(out + 10)  = base + ((*in32 >> 20) & 3);
        1: 6408:  *(out + 11)  = base + ((*in32 >> 22) & 3);
        1: 6409:  *(out + 12)  = base + ((*in32 >> 24) & 3);
        1: 6410:  *(out + 13)  = base + ((*in32 >> 26) & 3);
        1: 6411:  *(out + 14)  = base + ((*in32 >> 28) & 3);
        1: 6412:  *(out + 15)  = base + ((*in32 >> 30) & 3);
        -: 6413:  /* remaining: 0 bits */
        1: 6414:  return 4;
        -: 6415:}
        -: 6416:
        -: 6417:static uint32_t
        1: 6418:pack3_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6419:  uint32_t tmp, length;
        1: 6420:  tmp  = (*(in + 0) - base) << 0;
        1: 6421:  tmp |= (*(in + 1) - base) << 3;
        1: 6422:  tmp |= (*(in + 2) - base) << 6;
        1: 6423:  tmp |= (*(in + 3) - base) << 9;
        1: 6424:  tmp |= (*(in + 4) - base) << 12;
        1: 6425:  tmp |= (*(in + 5) - base) << 15;
        1: 6426:  tmp |= (*(in + 6) - base) << 18;
        1: 6427:  tmp |= (*(in + 7) - base) << 21;
        1: 6428:  tmp |= (*(in + 8) - base) << 24;
        1: 6429:  tmp |= (*(in + 9) - base) << 27;
        1: 6430:  tmp |= (*(in + 10) - base) << 30;
        1: 6431:  *(uint32_t *)out = tmp;
        1: 6432:  out += sizeof(uint32_t);
        -: 6433:  /* consumed: 4 bytes (total: 4) */
        1: 6434:  tmp  = (*(in + 10) - base) >> (3 - 1);
        1: 6435:  tmp |= (*(in + 11) - base) << 1;
        1: 6436:  tmp |= (*(in + 12) - base) << 4;
        1: 6437:  tmp |= (*(in + 13) - base) << 7;
        1: 6438:  tmp |= (*(in + 14) - base) << 10;
        1: 6439:  tmp |= (*(in + 15) - base) << 13;
        -: 6440:  /* remaining: 16 bits */
        -: 6441:  length = (32 / 8) - (32 - 16) / 8;
        -: 6442:  /* consumed: 2 bytes (total: 6) */
        -: 6443:  memcpy(out, &tmp, length);
        1: 6444:  return 6;
        -: 6445:}
        -: 6446:
        -: 6447:static uint32_t
        1: 6448:unpack3_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6449:  uint32_t *in32 = (uint32_t *)in;
        -: 6450:  uint32_t tmp; (void)tmp;
        1: 6451:  *(out + 0)  = base + ((*in32 >> 0) & 7);
        1: 6452:  *(out + 1)  = base + ((*in32 >> 3) & 7);
        1: 6453:  *(out + 2)  = base + ((*in32 >> 6) & 7);
        1: 6454:  *(out + 3)  = base + ((*in32 >> 9) & 7);
        1: 6455:  *(out + 4)  = base + ((*in32 >> 12) & 7);
        1: 6456:  *(out + 5)  = base + ((*in32 >> 15) & 7);
        1: 6457:  *(out + 6)  = base + ((*in32 >> 18) & 7);
        1: 6458:  *(out + 7)  = base + ((*in32 >> 21) & 7);
        1: 6459:  *(out + 8)  = base + ((*in32 >> 24) & 7);
        1: 6460:  *(out + 9)  = base + ((*in32 >> 27) & 7);
        1: 6461:  tmp = (*in32 >> 30);
        -: 6462:  in32++;
        -: 6463:  /* consumed: 4 bytes (total: 8) */
        1: 6464:  tmp |= (*in32 % (1U << 1)) << (3 - 1);
        1: 6465:  *(out + 10) = base + tmp;
        1: 6466:  *(out + 11)  = base + ((*in32 >> 1) & 7);
        1: 6467:  *(out + 12)  = base + ((*in32 >> 4) & 7);
        1: 6468:  *(out + 13)  = base + ((*in32 >> 7) & 7);
        1: 6469:  *(out + 14)  = base + ((*in32 >> 10) & 7);
        1: 6470:  *(out + 15)  = base + ((*in32 >> 13) & 7);
        -: 6471:  /* remaining: 16 bits */
        1: 6472:  return 6;
        -: 6473:}
        -: 6474:
        -: 6475:static uint32_t
        3: 6476:pack4_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6477:  uint32_t tmp, length;
        3: 6478:  tmp  = (*(in + 0) - base) << 0;
        3: 6479:  tmp |= (*(in + 1) - base) << 4;
        3: 6480:  tmp |= (*(in + 2) - base) << 8;
        3: 6481:  tmp |= (*(in + 3) - base) << 12;
        3: 6482:  tmp |= (*(in + 4) - base) << 16;
        3: 6483:  tmp |= (*(in + 5) - base) << 20;
        3: 6484:  tmp |= (*(in + 6) - base) << 24;
        3: 6485:  tmp |= (*(in + 7) - base) << 28;
        3: 6486:  *(uint32_t *)out = tmp;
        3: 6487:  out += sizeof(uint32_t);
        -: 6488:  /* consumed: 4 bytes (total: 4) */
        3: 6489:  tmp  = (*(in + 8) - base) << 0;
        3: 6490:  tmp |= (*(in + 9) - base) << 4;
        3: 6491:  tmp |= (*(in + 10) - base) << 8;
        3: 6492:  tmp |= (*(in + 11) - base) << 12;
        3: 6493:  tmp |= (*(in + 12) - base) << 16;
        3: 6494:  tmp |= (*(in + 13) - base) << 20;
        3: 6495:  tmp |= (*(in + 14) - base) << 24;
        3: 6496:  tmp |= (*(in + 15) - base) << 28;
        -: 6497:  /* remaining: 0 bits */
        -: 6498:  length = (32 / 8) - (32 - 32) / 8;
        -: 6499:  /* consumed: 4 bytes (total: 8) */
        -: 6500:  memcpy(out, &tmp, length);
        3: 6501:  return 8;
        -: 6502:}
        -: 6503:
        -: 6504:static uint32_t
        3: 6505:unpack4_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6506:  uint32_t *in32 = (uint32_t *)in;
        -: 6507:  uint32_t tmp; (void)tmp;
        3: 6508:  *(out + 0)  = base + ((*in32 >> 0) & 15);
        3: 6509:  *(out + 1)  = base + ((*in32 >> 4) & 15);
        3: 6510:  *(out + 2)  = base + ((*in32 >> 8) & 15);
        3: 6511:  *(out + 3)  = base + ((*in32 >> 12) & 15);
        3: 6512:  *(out + 4)  = base + ((*in32 >> 16) & 15);
        3: 6513:  *(out + 5)  = base + ((*in32 >> 20) & 15);
        3: 6514:  *(out + 6)  = base + ((*in32 >> 24) & 15);
        3: 6515:  *(out + 7)  = base + ((*in32 >> 28) & 15);
        -: 6516:  in32++;
        -: 6517:  /* consumed: 4 bytes (total: 8) */
        3: 6518:  *(out + 8)  = base + ((*in32 >> 0) & 15);
        3: 6519:  *(out + 9)  = base + ((*in32 >> 4) & 15);
        3: 6520:  *(out + 10)  = base + ((*in32 >> 8) & 15);
        3: 6521:  *(out + 11)  = base + ((*in32 >> 12) & 15);
        3: 6522:  *(out + 12)  = base + ((*in32 >> 16) & 15);
        3: 6523:  *(out + 13)  = base + ((*in32 >> 20) & 15);
        3: 6524:  *(out + 14)  = base + ((*in32 >> 24) & 15);
        3: 6525:  *(out + 15)  = base + ((*in32 >> 28) & 15);
        -: 6526:  /* remaining: 0 bits */
        3: 6527:  return 8;
        -: 6528:}
        -: 6529:
        -: 6530:static uint32_t
       18: 6531:pack5_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6532:  uint32_t tmp, length;
       18: 6533:  tmp  = (*(in + 0) - base) << 0;
       18: 6534:  tmp |= (*(in + 1) - base) << 5;
       18: 6535:  tmp |= (*(in + 2) - base) << 10;
       18: 6536:  tmp |= (*(in + 3) - base) << 15;
       18: 6537:  tmp |= (*(in + 4) - base) << 20;
       18: 6538:  tmp |= (*(in + 5) - base) << 25;
       18: 6539:  tmp |= (*(in + 6) - base) << 30;
       18: 6540:  *(uint32_t *)out = tmp;
        -: 6541:  out += sizeof(uint32_t);
        -: 6542:  /* consumed: 4 bytes (total: 4) */
       18: 6543:  tmp  = (*(in + 6) - base) >> (5 - 3);
       18: 6544:  tmp |= (*(in + 7) - base) << 3;
       18: 6545:  tmp |= (*(in + 8) - base) << 8;
       18: 6546:  tmp |= (*(in + 9) - base) << 13;
       18: 6547:  tmp |= (*(in + 10) - base) << 18;
       18: 6548:  tmp |= (*(in + 11) - base) << 23;
       18: 6549:  tmp |= (*(in + 12) - base) << 28;
       18: 6550:  *(uint32_t *)out = tmp;
       18: 6551:  out += sizeof(uint32_t);
        -: 6552:  /* consumed: 4 bytes (total: 8) */
       18: 6553:  tmp  = (*(in + 12) - base) >> (5 - 1);
       18: 6554:  tmp |= (*(in + 13) - base) << 1;
       18: 6555:  tmp |= (*(in + 14) - base) << 6;
       18: 6556:  tmp |= (*(in + 15) - base) << 11;
        -: 6557:  /* remaining: 16 bits */
        -: 6558:  length = (32 / 8) - (32 - 16) / 8;
        -: 6559:  /* consumed: 2 bytes (total: 10) */
        -: 6560:  memcpy(out, &tmp, length);
       18: 6561:  return 10;
        -: 6562:}
        -: 6563:
        -: 6564:static uint32_t
        2: 6565:unpack5_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6566:  uint32_t *in32 = (uint32_t *)in;
        -: 6567:  uint32_t tmp; (void)tmp;
        2: 6568:  *(out + 0)  = base + ((*in32 >> 0) & 31);
        2: 6569:  *(out + 1)  = base + ((*in32 >> 5) & 31);
        2: 6570:  *(out + 2)  = base + ((*in32 >> 10) & 31);
        2: 6571:  *(out + 3)  = base + ((*in32 >> 15) & 31);
        2: 6572:  *(out + 4)  = base + ((*in32 >> 20) & 31);
        2: 6573:  *(out + 5)  = base + ((*in32 >> 25) & 31);
        2: 6574:  tmp = (*in32 >> 30);
        -: 6575:  in32++;
        -: 6576:  /* consumed: 4 bytes (total: 8) */
        2: 6577:  tmp |= (*in32 % (1U << 3)) << (5 - 3);
        2: 6578:  *(out + 6) = base + tmp;
        2: 6579:  *(out + 7)  = base + ((*in32 >> 3) & 31);
        2: 6580:  *(out + 8)  = base + ((*in32 >> 8) & 31);
        2: 6581:  *(out + 9)  = base + ((*in32 >> 13) & 31);
        2: 6582:  *(out + 10)  = base + ((*in32 >> 18) & 31);
        2: 6583:  *(out + 11)  = base + ((*in32 >> 23) & 31);
        2: 6584:  tmp = (*in32 >> 28);
        -: 6585:  in32++;
        -: 6586:  /* consumed: 4 bytes (total: 12) */
        2: 6587:  tmp |= (*in32 % (1U << 1)) << (5 - 1);
        2: 6588:  *(out + 12) = base + tmp;
        2: 6589:  *(out + 13)  = base + ((*in32 >> 1) & 31);
        2: 6590:  *(out + 14)  = base + ((*in32 >> 6) & 31);
        2: 6591:  *(out + 15)  = base + ((*in32 >> 11) & 31);
        -: 6592:  /* remaining: 16 bits */
        2: 6593:  return 10;
        -: 6594:}
        -: 6595:
        -: 6596:static uint32_t
       17: 6597:pack6_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6598:  uint32_t tmp, length;
       17: 6599:  tmp  = (*(in + 0) - base) << 0;
       17: 6600:  tmp |= (*(in + 1) - base) << 6;
       17: 6601:  tmp |= (*(in + 2) - base) << 12;
       17: 6602:  tmp |= (*(in + 3) - base) << 18;
       17: 6603:  tmp |= (*(in + 4) - base) << 24;
       17: 6604:  tmp |= (*(in + 5) - base) << 30;
       17: 6605:  *(uint32_t *)out = tmp;
        -: 6606:  out += sizeof(uint32_t);
        -: 6607:  /* consumed: 4 bytes (total: 4) */
       17: 6608:  tmp  = (*(in + 5) - base) >> (6 - 4);
       17: 6609:  tmp |= (*(in + 6) - base) << 4;
       17: 6610:  tmp |= (*(in + 7) - base) << 10;
       17: 6611:  tmp |= (*(in + 8) - base) << 16;
       17: 6612:  tmp |= (*(in + 9) - base) << 22;
       17: 6613:  tmp |= (*(in + 10) - base) << 28;
       17: 6614:  *(uint32_t *)out = tmp;
       17: 6615:  out += sizeof(uint32_t);
        -: 6616:  /* consumed: 4 bytes (total: 8) */
       17: 6617:  tmp  = (*(in + 10) - base) >> (6 - 2);
       17: 6618:  tmp |= (*(in + 11) - base) << 2;
       17: 6619:  tmp |= (*(in + 12) - base) << 8;
       17: 6620:  tmp |= (*(in + 13) - base) << 14;
       17: 6621:  tmp |= (*(in + 14) - base) << 20;
       17: 6622:  tmp |= (*(in + 15) - base) << 26;
        -: 6623:  /* remaining: 0 bits */
        -: 6624:  length = (32 / 8) - (32 - 32) / 8;
        -: 6625:  /* consumed: 4 bytes (total: 12) */
        -: 6626:  memcpy(out, &tmp, length);
       17: 6627:  return 12;
        -: 6628:}
        -: 6629:
        -: 6630:static uint32_t
        1: 6631:unpack6_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6632:  uint32_t *in32 = (uint32_t *)in;
        -: 6633:  uint32_t tmp; (void)tmp;
        1: 6634:  *(out + 0)  = base + ((*in32 >> 0) & 63);
        1: 6635:  *(out + 1)  = base + ((*in32 >> 6) & 63);
        1: 6636:  *(out + 2)  = base + ((*in32 >> 12) & 63);
        1: 6637:  *(out + 3)  = base + ((*in32 >> 18) & 63);
        1: 6638:  *(out + 4)  = base + ((*in32 >> 24) & 63);
        1: 6639:  tmp = (*in32 >> 30);
        -: 6640:  in32++;
        -: 6641:  /* consumed: 4 bytes (total: 8) */
        1: 6642:  tmp |= (*in32 % (1U << 4)) << (6 - 4);
        1: 6643:  *(out + 5) = base + tmp;
        1: 6644:  *(out + 6)  = base + ((*in32 >> 4) & 63);
        1: 6645:  *(out + 7)  = base + ((*in32 >> 10) & 63);
        1: 6646:  *(out + 8)  = base + ((*in32 >> 16) & 63);
        1: 6647:  *(out + 9)  = base + ((*in32 >> 22) & 63);
        1: 6648:  tmp = (*in32 >> 28);
        -: 6649:  in32++;
        -: 6650:  /* consumed: 4 bytes (total: 12) */
        1: 6651:  tmp |= (*in32 % (1U << 2)) << (6 - 2);
        1: 6652:  *(out + 10) = base + tmp;
        1: 6653:  *(out + 11)  = base + ((*in32 >> 2) & 63);
        1: 6654:  *(out + 12)  = base + ((*in32 >> 8) & 63);
        1: 6655:  *(out + 13)  = base + ((*in32 >> 14) & 63);
        1: 6656:  *(out + 14)  = base + ((*in32 >> 20) & 63);
        1: 6657:  *(out + 15)  = base + ((*in32 >> 26) & 63);
        -: 6658:  /* remaining: 0 bits */
        1: 6659:  return 12;
        -: 6660:}
        -: 6661:
        -: 6662:static uint32_t
       33: 6663:pack7_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6664:  uint32_t tmp, length;
       33: 6665:  tmp  = (*(in + 0) - base) << 0;
       33: 6666:  tmp |= (*(in + 1) - base) << 7;
       33: 6667:  tmp |= (*(in + 2) - base) << 14;
       33: 6668:  tmp |= (*(in + 3) - base) << 21;
       33: 6669:  tmp |= (*(in + 4) - base) << 28;
       33: 6670:  *(uint32_t *)out = tmp;
        -: 6671:  out += sizeof(uint32_t);
        -: 6672:  /* consumed: 4 bytes (total: 4) */
       33: 6673:  tmp  = (*(in + 4) - base) >> (7 - 3);
       33: 6674:  tmp |= (*(in + 5) - base) << 3;
       33: 6675:  tmp |= (*(in + 6) - base) << 10;
       33: 6676:  tmp |= (*(in + 7) - base) << 17;
       33: 6677:  tmp |= (*(in + 8) - base) << 24;
       33: 6678:  tmp |= (*(in + 9) - base) << 31;
       33: 6679:  *(uint32_t *)out = tmp;
        -: 6680:  out += sizeof(uint32_t);
        -: 6681:  /* consumed: 4 bytes (total: 8) */
       33: 6682:  tmp  = (*(in + 9) - base) >> (7 - 6);
       33: 6683:  tmp |= (*(in + 10) - base) << 6;
       33: 6684:  tmp |= (*(in + 11) - base) << 13;
       33: 6685:  tmp |= (*(in + 12) - base) << 20;
       33: 6686:  tmp |= (*(in + 13) - base) << 27;
       33: 6687:  *(uint32_t *)out = tmp;
       33: 6688:  out += sizeof(uint32_t);
        -: 6689:  /* consumed: 4 bytes (total: 12) */
       33: 6690:  tmp  = (*(in + 13) - base) >> (7 - 2);
       33: 6691:  tmp |= (*(in + 14) - base) << 2;
       33: 6692:  tmp |= (*(in + 15) - base) << 9;
        -: 6693:  /* remaining: 16 bits */
        -: 6694:  length = (32 / 8) - (32 - 16) / 8;
        -: 6695:  /* consumed: 2 bytes (total: 14) */
        -: 6696:  memcpy(out, &tmp, length);
       33: 6697:  return 14;
        -: 6698:}
        -: 6699:
        -: 6700:static uint32_t
        1: 6701:unpack7_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6702:  uint32_t *in32 = (uint32_t *)in;
        -: 6703:  uint32_t tmp; (void)tmp;
        1: 6704:  *(out + 0)  = base + ((*in32 >> 0) & 127);
        1: 6705:  *(out + 1)  = base + ((*in32 >> 7) & 127);
        1: 6706:  *(out + 2)  = base + ((*in32 >> 14) & 127);
        1: 6707:  *(out + 3)  = base + ((*in32 >> 21) & 127);
        1: 6708:  tmp = (*in32 >> 28);
        -: 6709:  in32++;
        -: 6710:  /* consumed: 4 bytes (total: 8) */
        1: 6711:  tmp |= (*in32 % (1U << 3)) << (7 - 3);
        1: 6712:  *(out + 4) = base + tmp;
        1: 6713:  *(out + 5)  = base + ((*in32 >> 3) & 127);
        1: 6714:  *(out + 6)  = base + ((*in32 >> 10) & 127);
        1: 6715:  *(out + 7)  = base + ((*in32 >> 17) & 127);
        1: 6716:  *(out + 8)  = base + ((*in32 >> 24) & 127);
        1: 6717:  tmp = (*in32 >> 31);
        -: 6718:  in32++;
        -: 6719:  /* consumed: 4 bytes (total: 12) */
        1: 6720:  tmp |= (*in32 % (1U << 6)) << (7 - 6);
        1: 6721:  *(out + 9) = base + tmp;
        1: 6722:  *(out + 10)  = base + ((*in32 >> 6) & 127);
        1: 6723:  *(out + 11)  = base + ((*in32 >> 13) & 127);
        1: 6724:  *(out + 12)  = base + ((*in32 >> 20) & 127);
        1: 6725:  tmp = (*in32 >> 27);
        -: 6726:  in32++;
        -: 6727:  /* consumed: 4 bytes (total: 16) */
        1: 6728:  tmp |= (*in32 % (1U << 2)) << (7 - 2);
        1: 6729:  *(out + 13) = base + tmp;
        1: 6730:  *(out + 14)  = base + ((*in32 >> 2) & 127);
        1: 6731:  *(out + 15)  = base + ((*in32 >> 9) & 127);
        -: 6732:  /* remaining: 16 bits */
        1: 6733:  return 14;
        -: 6734:}
        -: 6735:
        -: 6736:static uint32_t
       65: 6737:pack8_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6738:  uint32_t tmp, length;
       65: 6739:  tmp  = (*(in + 0) - base) << 0;
       65: 6740:  tmp |= (*(in + 1) - base) << 8;
       65: 6741:  tmp |= (*(in + 2) - base) << 16;
       65: 6742:  tmp |= (*(in + 3) - base) << 24;
       65: 6743:  *(uint32_t *)out = tmp;
        -: 6744:  out += sizeof(uint32_t);
        -: 6745:  /* consumed: 4 bytes (total: 4) */
       65: 6746:  tmp  = (*(in + 4) - base) << 0;
       65: 6747:  tmp |= (*(in + 5) - base) << 8;
       65: 6748:  tmp |= (*(in + 6) - base) << 16;
       65: 6749:  tmp |= (*(in + 7) - base) << 24;
       65: 6750:  *(uint32_t *)out = tmp;
        -: 6751:  out += sizeof(uint32_t);
        -: 6752:  /* consumed: 4 bytes (total: 8) */
       65: 6753:  tmp  = (*(in + 8) - base) << 0;
       65: 6754:  tmp |= (*(in + 9) - base) << 8;
       65: 6755:  tmp |= (*(in + 10) - base) << 16;
       65: 6756:  tmp |= (*(in + 11) - base) << 24;
       65: 6757:  *(uint32_t *)out = tmp;
       65: 6758:  out += sizeof(uint32_t);
        -: 6759:  /* consumed: 4 bytes (total: 12) */
       65: 6760:  tmp  = (*(in + 12) - base) << 0;
       65: 6761:  tmp |= (*(in + 13) - base) << 8;
       65: 6762:  tmp |= (*(in + 14) - base) << 16;
       65: 6763:  tmp |= (*(in + 15) - base) << 24;
        -: 6764:  /* remaining: 0 bits */
        -: 6765:  length = (32 / 8) - (32 - 32) / 8;
        -: 6766:  /* consumed: 4 bytes (total: 16) */
        -: 6767:  memcpy(out, &tmp, length);
       65: 6768:  return 16;
        -: 6769:}
        -: 6770:
        -: 6771:static uint32_t
        1: 6772:unpack8_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6773:  uint32_t *in32 = (uint32_t *)in;
        -: 6774:  uint32_t tmp; (void)tmp;
        1: 6775:  *(out + 0)  = base + ((*in32 >> 0) & 255);
        1: 6776:  *(out + 1)  = base + ((*in32 >> 8) & 255);
        1: 6777:  *(out + 2)  = base + ((*in32 >> 16) & 255);
        1: 6778:  *(out + 3)  = base + ((*in32 >> 24) & 255);
        -: 6779:  in32++;
        -: 6780:  /* consumed: 4 bytes (total: 8) */
        1: 6781:  *(out + 4)  = base + ((*in32 >> 0) & 255);
        1: 6782:  *(out + 5)  = base + ((*in32 >> 8) & 255);
        1: 6783:  *(out + 6)  = base + ((*in32 >> 16) & 255);
        1: 6784:  *(out + 7)  = base + ((*in32 >> 24) & 255);
        -: 6785:  in32++;
        -: 6786:  /* consumed: 4 bytes (total: 12) */
        1: 6787:  *(out + 8)  = base + ((*in32 >> 0) & 255);
        1: 6788:  *(out + 9)  = base + ((*in32 >> 8) & 255);
        1: 6789:  *(out + 10)  = base + ((*in32 >> 16) & 255);
        1: 6790:  *(out + 11)  = base + ((*in32 >> 24) & 255);
        -: 6791:  in32++;
        -: 6792:  /* consumed: 4 bytes (total: 16) */
        1: 6793:  *(out + 12)  = base + ((*in32 >> 0) & 255);
        1: 6794:  *(out + 13)  = base + ((*in32 >> 8) & 255);
        1: 6795:  *(out + 14)  = base + ((*in32 >> 16) & 255);
        1: 6796:  *(out + 15)  = base + ((*in32 >> 24) & 255);
        -: 6797:  /* remaining: 0 bits */
        1: 6798:  return 16;
        -: 6799:}
        -: 6800:
        -: 6801:static uint32_t
      129: 6802:pack9_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6803:  uint32_t tmp, length;
      129: 6804:  tmp  = (*(in + 0) - base) << 0;
      129: 6805:  tmp |= (*(in + 1) - base) << 9;
      129: 6806:  tmp |= (*(in + 2) - base) << 18;
      129: 6807:  tmp |= (*(in + 3) - base) << 27;
      129: 6808:  *(uint32_t *)out = tmp;
        -: 6809:  out += sizeof(uint32_t);
        -: 6810:  /* consumed: 4 bytes (total: 4) */
      129: 6811:  tmp  = (*(in + 3) - base) >> (9 - 4);
      129: 6812:  tmp |= (*(in + 4) - base) << 4;
      129: 6813:  tmp |= (*(in + 5) - base) << 13;
      129: 6814:  tmp |= (*(in + 6) - base) << 22;
      129: 6815:  tmp |= (*(in + 7) - base) << 31;
      129: 6816:  *(uint32_t *)out = tmp;
        -: 6817:  out += sizeof(uint32_t);
        -: 6818:  /* consumed: 4 bytes (total: 8) */
      129: 6819:  tmp  = (*(in + 7) - base) >> (9 - 8);
      129: 6820:  tmp |= (*(in + 8) - base) << 8;
      129: 6821:  tmp |= (*(in + 9) - base) << 17;
      129: 6822:  tmp |= (*(in + 10) - base) << 26;
      129: 6823:  *(uint32_t *)out = tmp;
        -: 6824:  out += sizeof(uint32_t);
        -: 6825:  /* consumed: 4 bytes (total: 12) */
      129: 6826:  tmp  = (*(in + 10) - base) >> (9 - 3);
      129: 6827:  tmp |= (*(in + 11) - base) << 3;
      129: 6828:  tmp |= (*(in + 12) - base) << 12;
      129: 6829:  tmp |= (*(in + 13) - base) << 21;
      129: 6830:  tmp |= (*(in + 14) - base) << 30;
      129: 6831:  *(uint32_t *)out = tmp;
      129: 6832:  out += sizeof(uint32_t);
        -: 6833:  /* consumed: 4 bytes (total: 16) */
      129: 6834:  tmp  = (*(in + 14) - base) >> (9 - 7);
      129: 6835:  tmp |= (*(in + 15) - base) << 7;
        -: 6836:  /* remaining: 16 bits */
        -: 6837:  length = (32 / 8) - (32 - 16) / 8;
        -: 6838:  /* consumed: 2 bytes (total: 18) */
        -: 6839:  memcpy(out, &tmp, length);
      129: 6840:  return 18;
        -: 6841:}
        -: 6842:
        -: 6843:static uint32_t
        1: 6844:unpack9_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6845:  uint32_t *in32 = (uint32_t *)in;
        -: 6846:  uint32_t tmp; (void)tmp;
        1: 6847:  *(out + 0)  = base + ((*in32 >> 0) & 511);
        1: 6848:  *(out + 1)  = base + ((*in32 >> 9) & 511);
        1: 6849:  *(out + 2)  = base + ((*in32 >> 18) & 511);
        1: 6850:  tmp = (*in32 >> 27);
        -: 6851:  in32++;
        -: 6852:  /* consumed: 4 bytes (total: 8) */
        1: 6853:  tmp |= (*in32 % (1U << 4)) << (9 - 4);
        1: 6854:  *(out + 3) = base + tmp;
        1: 6855:  *(out + 4)  = base + ((*in32 >> 4) & 511);
        1: 6856:  *(out + 5)  = base + ((*in32 >> 13) & 511);
        1: 6857:  *(out + 6)  = base + ((*in32 >> 22) & 511);
        1: 6858:  tmp = (*in32 >> 31);
        -: 6859:  in32++;
        -: 6860:  /* consumed: 4 bytes (total: 12) */
        1: 6861:  tmp |= (*in32 % (1U << 8)) << (9 - 8);
        1: 6862:  *(out + 7) = base + tmp;
        1: 6863:  *(out + 8)  = base + ((*in32 >> 8) & 511);
        1: 6864:  *(out + 9)  = base + ((*in32 >> 17) & 511);
        1: 6865:  tmp = (*in32 >> 26);
        -: 6866:  in32++;
        -: 6867:  /* consumed: 4 bytes (total: 16) */
        1: 6868:  tmp |= (*in32 % (1U << 3)) << (9 - 3);
        1: 6869:  *(out + 10) = base + tmp;
        1: 6870:  *(out + 11)  = base + ((*in32 >> 3) & 511);
        1: 6871:  *(out + 12)  = base + ((*in32 >> 12) & 511);
        1: 6872:  *(out + 13)  = base + ((*in32 >> 21) & 511);
        1: 6873:  tmp = (*in32 >> 30);
        -: 6874:  in32++;
        -: 6875:  /* consumed: 4 bytes (total: 20) */
        1: 6876:  tmp |= (*in32 % (1U << 7)) << (9 - 7);
        1: 6877:  *(out + 14) = base + tmp;
        1: 6878:  *(out + 15)  = base + ((*in32 >> 7) & 511);
        -: 6879:  /* remaining: 16 bits */
        1: 6880:  return 18;
        -: 6881:}
        -: 6882:
        -: 6883:static uint32_t
      257: 6884:pack10_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6885:  uint32_t tmp, length;
      257: 6886:  tmp  = (*(in + 0) - base) << 0;
      257: 6887:  tmp |= (*(in + 1) - base) << 10;
      257: 6888:  tmp |= (*(in + 2) - base) << 20;
      257: 6889:  tmp |= (*(in + 3) - base) << 30;
      257: 6890:  *(uint32_t *)out = tmp;
        -: 6891:  out += sizeof(uint32_t);
        -: 6892:  /* consumed: 4 bytes (total: 4) */
      257: 6893:  tmp  = (*(in + 3) - base) >> (10 - 8);
      257: 6894:  tmp |= (*(in + 4) - base) << 8;
      257: 6895:  tmp |= (*(in + 5) - base) << 18;
      257: 6896:  tmp |= (*(in + 6) - base) << 28;
      257: 6897:  *(uint32_t *)out = tmp;
        -: 6898:  out += sizeof(uint32_t);
        -: 6899:  /* consumed: 4 bytes (total: 8) */
      257: 6900:  tmp  = (*(in + 6) - base) >> (10 - 6);
      257: 6901:  tmp |= (*(in + 7) - base) << 6;
      257: 6902:  tmp |= (*(in + 8) - base) << 16;
      257: 6903:  tmp |= (*(in + 9) - base) << 26;
      257: 6904:  *(uint32_t *)out = tmp;
        -: 6905:  out += sizeof(uint32_t);
        -: 6906:  /* consumed: 4 bytes (total: 12) */
      257: 6907:  tmp  = (*(in + 9) - base) >> (10 - 4);
      257: 6908:  tmp |= (*(in + 10) - base) << 4;
      257: 6909:  tmp |= (*(in + 11) - base) << 14;
      257: 6910:  tmp |= (*(in + 12) - base) << 24;
      257: 6911:  *(uint32_t *)out = tmp;
      257: 6912:  out += sizeof(uint32_t);
        -: 6913:  /* consumed: 4 bytes (total: 16) */
      257: 6914:  tmp  = (*(in + 12) - base) >> (10 - 2);
      257: 6915:  tmp |= (*(in + 13) - base) << 2;
      257: 6916:  tmp |= (*(in + 14) - base) << 12;
      257: 6917:  tmp |= (*(in + 15) - base) << 22;
        -: 6918:  /* remaining: 0 bits */
        -: 6919:  length = (32 / 8) - (32 - 32) / 8;
        -: 6920:  /* consumed: 4 bytes (total: 20) */
        -: 6921:  memcpy(out, &tmp, length);
      257: 6922:  return 20;
        -: 6923:}
        -: 6924:
        -: 6925:static uint32_t
        1: 6926:unpack10_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 6927:  uint32_t *in32 = (uint32_t *)in;
        -: 6928:  uint32_t tmp; (void)tmp;
        1: 6929:  *(out + 0)  = base + ((*in32 >> 0) & 1023);
        1: 6930:  *(out + 1)  = base + ((*in32 >> 10) & 1023);
        1: 6931:  *(out + 2)  = base + ((*in32 >> 20) & 1023);
        1: 6932:  tmp = (*in32 >> 30);
        -: 6933:  in32++;
        -: 6934:  /* consumed: 4 bytes (total: 8) */
        1: 6935:  tmp |= (*in32 % (1U << 8)) << (10 - 8);
        1: 6936:  *(out + 3) = base + tmp;
        1: 6937:  *(out + 4)  = base + ((*in32 >> 8) & 1023);
        1: 6938:  *(out + 5)  = base + ((*in32 >> 18) & 1023);
        1: 6939:  tmp = (*in32 >> 28);
        -: 6940:  in32++;
        -: 6941:  /* consumed: 4 bytes (total: 12) */
        1: 6942:  tmp |= (*in32 % (1U << 6)) << (10 - 6);
        1: 6943:  *(out + 6) = base + tmp;
        1: 6944:  *(out + 7)  = base + ((*in32 >> 6) & 1023);
        1: 6945:  *(out + 8)  = base + ((*in32 >> 16) & 1023);
        1: 6946:  tmp = (*in32 >> 26);
        -: 6947:  in32++;
        -: 6948:  /* consumed: 4 bytes (total: 16) */
        1: 6949:  tmp |= (*in32 % (1U << 4)) << (10 - 4);
        1: 6950:  *(out + 9) = base + tmp;
        1: 6951:  *(out + 10)  = base + ((*in32 >> 4) & 1023);
        1: 6952:  *(out + 11)  = base + ((*in32 >> 14) & 1023);
        1: 6953:  tmp = (*in32 >> 24);
        -: 6954:  in32++;
        -: 6955:  /* consumed: 4 bytes (total: 20) */
        1: 6956:  tmp |= (*in32 % (1U << 2)) << (10 - 2);
        1: 6957:  *(out + 12) = base + tmp;
        1: 6958:  *(out + 13)  = base + ((*in32 >> 2) & 1023);
        1: 6959:  *(out + 14)  = base + ((*in32 >> 12) & 1023);
        1: 6960:  *(out + 15)  = base + ((*in32 >> 22) & 1023);
        -: 6961:  /* remaining: 0 bits */
        1: 6962:  return 20;
        -: 6963:}
        -: 6964:
        -: 6965:static uint32_t
      514: 6966:pack11_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 6967:  uint32_t tmp, length;
      514: 6968:  tmp  = (*(in + 0) - base) << 0;
      514: 6969:  tmp |= (*(in + 1) - base) << 11;
      514: 6970:  tmp |= (*(in + 2) - base) << 22;
      514: 6971:  *(uint32_t *)out = tmp;
        -: 6972:  out += sizeof(uint32_t);
        -: 6973:  /* consumed: 4 bytes (total: 4) */
      514: 6974:  tmp  = (*(in + 2) - base) >> (11 - 1);
      514: 6975:  tmp |= (*(in + 3) - base) << 1;
      514: 6976:  tmp |= (*(in + 4) - base) << 12;
      514: 6977:  tmp |= (*(in + 5) - base) << 23;
      514: 6978:  *(uint32_t *)out = tmp;
        -: 6979:  out += sizeof(uint32_t);
        -: 6980:  /* consumed: 4 bytes (total: 8) */
      514: 6981:  tmp  = (*(in + 5) - base) >> (11 - 2);
      514: 6982:  tmp |= (*(in + 6) - base) << 2;
      514: 6983:  tmp |= (*(in + 7) - base) << 13;
      514: 6984:  tmp |= (*(in + 8) - base) << 24;
      514: 6985:  *(uint32_t *)out = tmp;
        -: 6986:  out += sizeof(uint32_t);
        -: 6987:  /* consumed: 4 bytes (total: 12) */
      514: 6988:  tmp  = (*(in + 8) - base) >> (11 - 3);
      514: 6989:  tmp |= (*(in + 9) - base) << 3;
      514: 6990:  tmp |= (*(in + 10) - base) << 14;
      514: 6991:  tmp |= (*(in + 11) - base) << 25;
      514: 6992:  *(uint32_t *)out = tmp;
        -: 6993:  out += sizeof(uint32_t);
        -: 6994:  /* consumed: 4 bytes (total: 16) */
      514: 6995:  tmp  = (*(in + 11) - base) >> (11 - 4);
      514: 6996:  tmp |= (*(in + 12) - base) << 4;
      514: 6997:  tmp |= (*(in + 13) - base) << 15;
      514: 6998:  tmp |= (*(in + 14) - base) << 26;
      514: 6999:  *(uint32_t *)out = tmp;
      514: 7000:  out += sizeof(uint32_t);
        -: 7001:  /* consumed: 4 bytes (total: 20) */
      514: 7002:  tmp  = (*(in + 14) - base) >> (11 - 5);
      514: 7003:  tmp |= (*(in + 15) - base) << 5;
        -: 7004:  /* remaining: 16 bits */
        -: 7005:  length = (32 / 8) - (32 - 16) / 8;
        -: 7006:  /* consumed: 2 bytes (total: 22) */
        -: 7007:  memcpy(out, &tmp, length);
      514: 7008:  return 22;
        -: 7009:}
        -: 7010:
        -: 7011:static uint32_t
        2: 7012:unpack11_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7013:  uint32_t *in32 = (uint32_t *)in;
        -: 7014:  uint32_t tmp; (void)tmp;
        2: 7015:  *(out + 0)  = base + ((*in32 >> 0) & 2047);
        2: 7016:  *(out + 1)  = base + ((*in32 >> 11) & 2047);
        2: 7017:  tmp = (*in32 >> 22);
        -: 7018:  in32++;
        -: 7019:  /* consumed: 4 bytes (total: 8) */
        2: 7020:  tmp |= (*in32 % (1U << 1)) << (11 - 1);
        2: 7021:  *(out + 2) = base + tmp;
        2: 7022:  *(out + 3)  = base + ((*in32 >> 1) & 2047);
        2: 7023:  *(out + 4)  = base + ((*in32 >> 12) & 2047);
        2: 7024:  tmp = (*in32 >> 23);
        -: 7025:  in32++;
        -: 7026:  /* consumed: 4 bytes (total: 12) */
        2: 7027:  tmp |= (*in32 % (1U << 2)) << (11 - 2);
        2: 7028:  *(out + 5) = base + tmp;
        2: 7029:  *(out + 6)  = base + ((*in32 >> 2) & 2047);
        2: 7030:  *(out + 7)  = base + ((*in32 >> 13) & 2047);
        2: 7031:  tmp = (*in32 >> 24);
        -: 7032:  in32++;
        -: 7033:  /* consumed: 4 bytes (total: 16) */
        2: 7034:  tmp |= (*in32 % (1U << 3)) << (11 - 3);
        2: 7035:  *(out + 8) = base + tmp;
        2: 7036:  *(out + 9)  = base + ((*in32 >> 3) & 2047);
        2: 7037:  *(out + 10)  = base + ((*in32 >> 14) & 2047);
        2: 7038:  tmp = (*in32 >> 25);
        -: 7039:  in32++;
        -: 7040:  /* consumed: 4 bytes (total: 20) */
        2: 7041:  tmp |= (*in32 % (1U << 4)) << (11 - 4);
        2: 7042:  *(out + 11) = base + tmp;
        2: 7043:  *(out + 12)  = base + ((*in32 >> 4) & 2047);
        2: 7044:  *(out + 13)  = base + ((*in32 >> 15) & 2047);
        2: 7045:  tmp = (*in32 >> 26);
        -: 7046:  in32++;
        -: 7047:  /* consumed: 4 bytes (total: 24) */
        2: 7048:  tmp |= (*in32 % (1U << 5)) << (11 - 5);
        2: 7049:  *(out + 14) = base + tmp;
        2: 7050:  *(out + 15)  = base + ((*in32 >> 5) & 2047);
        -: 7051:  /* remaining: 16 bits */
        2: 7052:  return 22;
        -: 7053:}
        -: 7054:
        -: 7055:static uint32_t
     1025: 7056:pack12_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7057:  uint32_t tmp, length;
     1025: 7058:  tmp  = (*(in + 0) - base) << 0;
     1025: 7059:  tmp |= (*(in + 1) - base) << 12;
     1025: 7060:  tmp |= (*(in + 2) - base) << 24;
     1025: 7061:  *(uint32_t *)out = tmp;
        -: 7062:  out += sizeof(uint32_t);
        -: 7063:  /* consumed: 4 bytes (total: 4) */
     1025: 7064:  tmp  = (*(in + 2) - base) >> (12 - 4);
     1025: 7065:  tmp |= (*(in + 3) - base) << 4;
     1025: 7066:  tmp |= (*(in + 4) - base) << 16;
     1025: 7067:  tmp |= (*(in + 5) - base) << 28;
     1025: 7068:  *(uint32_t *)out = tmp;
        -: 7069:  out += sizeof(uint32_t);
        -: 7070:  /* consumed: 4 bytes (total: 8) */
     1025: 7071:  tmp  = (*(in + 5) - base) >> (12 - 8);
     1025: 7072:  tmp |= (*(in + 6) - base) << 8;
     1025: 7073:  tmp |= (*(in + 7) - base) << 20;
     1025: 7074:  *(uint32_t *)out = tmp;
        -: 7075:  out += sizeof(uint32_t);
        -: 7076:  /* consumed: 4 bytes (total: 12) */
     1025: 7077:  tmp  = (*(in + 8) - base) << 0;
     1025: 7078:  tmp |= (*(in + 9) - base) << 12;
     1025: 7079:  tmp |= (*(in + 10) - base) << 24;
     1025: 7080:  *(uint32_t *)out = tmp;
        -: 7081:  out += sizeof(uint32_t);
        -: 7082:  /* consumed: 4 bytes (total: 16) */
     1025: 7083:  tmp  = (*(in + 10) - base) >> (12 - 4);
     1025: 7084:  tmp |= (*(in + 11) - base) << 4;
     1025: 7085:  tmp |= (*(in + 12) - base) << 16;
     1025: 7086:  tmp |= (*(in + 13) - base) << 28;
     1025: 7087:  *(uint32_t *)out = tmp;
     1025: 7088:  out += sizeof(uint32_t);
        -: 7089:  /* consumed: 4 bytes (total: 20) */
     1025: 7090:  tmp  = (*(in + 13) - base) >> (12 - 8);
     1025: 7091:  tmp |= (*(in + 14) - base) << 8;
     1025: 7092:  tmp |= (*(in + 15) - base) << 20;
        -: 7093:  /* remaining: 0 bits */
        -: 7094:  length = (32 / 8) - (32 - 32) / 8;
        -: 7095:  /* consumed: 4 bytes (total: 24) */
        -: 7096:  memcpy(out, &tmp, length);
     1025: 7097:  return 24;
        -: 7098:}
        -: 7099:
        -: 7100:static uint32_t
        1: 7101:unpack12_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7102:  uint32_t *in32 = (uint32_t *)in;
        -: 7103:  uint32_t tmp; (void)tmp;
        1: 7104:  *(out + 0)  = base + ((*in32 >> 0) & 4095);
        1: 7105:  *(out + 1)  = base + ((*in32 >> 12) & 4095);
        1: 7106:  tmp = (*in32 >> 24);
        -: 7107:  in32++;
        -: 7108:  /* consumed: 4 bytes (total: 8) */
        1: 7109:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
        1: 7110:  *(out + 2) = base + tmp;
        1: 7111:  *(out + 3)  = base + ((*in32 >> 4) & 4095);
        1: 7112:  *(out + 4)  = base + ((*in32 >> 16) & 4095);
        1: 7113:  tmp = (*in32 >> 28);
        -: 7114:  in32++;
        -: 7115:  /* consumed: 4 bytes (total: 12) */
        1: 7116:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
        1: 7117:  *(out + 5) = base + tmp;
        1: 7118:  *(out + 6)  = base + ((*in32 >> 8) & 4095);
        1: 7119:  *(out + 7)  = base + ((*in32 >> 20) & 4095);
        -: 7120:  in32++;
        -: 7121:  /* consumed: 4 bytes (total: 16) */
        1: 7122:  *(out + 8)  = base + ((*in32 >> 0) & 4095);
        1: 7123:  *(out + 9)  = base + ((*in32 >> 12) & 4095);
        1: 7124:  tmp = (*in32 >> 24);
        -: 7125:  in32++;
        -: 7126:  /* consumed: 4 bytes (total: 20) */
        1: 7127:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
        1: 7128:  *(out + 10) = base + tmp;
        1: 7129:  *(out + 11)  = base + ((*in32 >> 4) & 4095);
        1: 7130:  *(out + 12)  = base + ((*in32 >> 16) & 4095);
        1: 7131:  tmp = (*in32 >> 28);
        -: 7132:  in32++;
        -: 7133:  /* consumed: 4 bytes (total: 24) */
        1: 7134:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
        1: 7135:  *(out + 13) = base + tmp;
        1: 7136:  *(out + 14)  = base + ((*in32 >> 8) & 4095);
        1: 7137:  *(out + 15)  = base + ((*in32 >> 20) & 4095);
        -: 7138:  /* remaining: 0 bits */
        1: 7139:  return 24;
        -: 7140:}
        -: 7141:
        -: 7142:static uint32_t
     2049: 7143:pack13_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7144:  uint32_t tmp, length;
     2049: 7145:  tmp  = (*(in + 0) - base) << 0;
     2049: 7146:  tmp |= (*(in + 1) - base) << 13;
     2049: 7147:  tmp |= (*(in + 2) - base) << 26;
     2049: 7148:  *(uint32_t *)out = tmp;
        -: 7149:  out += sizeof(uint32_t);
        -: 7150:  /* consumed: 4 bytes (total: 4) */
     2049: 7151:  tmp  = (*(in + 2) - base) >> (13 - 7);
     2049: 7152:  tmp |= (*(in + 3) - base) << 7;
     2049: 7153:  tmp |= (*(in + 4) - base) << 20;
     2049: 7154:  *(uint32_t *)out = tmp;
        -: 7155:  out += sizeof(uint32_t);
        -: 7156:  /* consumed: 4 bytes (total: 8) */
     2049: 7157:  tmp  = (*(in + 4) - base) >> (13 - 1);
     2049: 7158:  tmp |= (*(in + 5) - base) << 1;
     2049: 7159:  tmp |= (*(in + 6) - base) << 14;
     2049: 7160:  tmp |= (*(in + 7) - base) << 27;
     2049: 7161:  *(uint32_t *)out = tmp;
        -: 7162:  out += sizeof(uint32_t);
        -: 7163:  /* consumed: 4 bytes (total: 12) */
     2049: 7164:  tmp  = (*(in + 7) - base) >> (13 - 8);
     2049: 7165:  tmp |= (*(in + 8) - base) << 8;
     2049: 7166:  tmp |= (*(in + 9) - base) << 21;
     2049: 7167:  *(uint32_t *)out = tmp;
        -: 7168:  out += sizeof(uint32_t);
        -: 7169:  /* consumed: 4 bytes (total: 16) */
     2049: 7170:  tmp  = (*(in + 9) - base) >> (13 - 2);
     2049: 7171:  tmp |= (*(in + 10) - base) << 2;
     2049: 7172:  tmp |= (*(in + 11) - base) << 15;
     2049: 7173:  tmp |= (*(in + 12) - base) << 28;
     2049: 7174:  *(uint32_t *)out = tmp;
        -: 7175:  out += sizeof(uint32_t);
        -: 7176:  /* consumed: 4 bytes (total: 20) */
     2049: 7177:  tmp  = (*(in + 12) - base) >> (13 - 9);
     2049: 7178:  tmp |= (*(in + 13) - base) << 9;
     2049: 7179:  tmp |= (*(in + 14) - base) << 22;
     2049: 7180:  *(uint32_t *)out = tmp;
     2049: 7181:  out += sizeof(uint32_t);
        -: 7182:  /* consumed: 4 bytes (total: 24) */
     2049: 7183:  tmp  = (*(in + 14) - base) >> (13 - 3);
     2049: 7184:  tmp |= (*(in + 15) - base) << 3;
        -: 7185:  /* remaining: 16 bits */
        -: 7186:  length = (32 / 8) - (32 - 16) / 8;
        -: 7187:  /* consumed: 2 bytes (total: 26) */
        -: 7188:  memcpy(out, &tmp, length);
     2049: 7189:  return 26;
        -: 7190:}
        -: 7191:
        -: 7192:static uint32_t
        1: 7193:unpack13_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7194:  uint32_t *in32 = (uint32_t *)in;
        -: 7195:  uint32_t tmp; (void)tmp;
        1: 7196:  *(out + 0)  = base + ((*in32 >> 0) & 8191);
        1: 7197:  *(out + 1)  = base + ((*in32 >> 13) & 8191);
        1: 7198:  tmp = (*in32 >> 26);
        -: 7199:  in32++;
        -: 7200:  /* consumed: 4 bytes (total: 8) */
        1: 7201:  tmp |= (*in32 % (1U << 7)) << (13 - 7);
        1: 7202:  *(out + 2) = base + tmp;
        1: 7203:  *(out + 3)  = base + ((*in32 >> 7) & 8191);
        1: 7204:  tmp = (*in32 >> 20);
        -: 7205:  in32++;
        -: 7206:  /* consumed: 4 bytes (total: 12) */
        1: 7207:  tmp |= (*in32 % (1U << 1)) << (13 - 1);
        1: 7208:  *(out + 4) = base + tmp;
        1: 7209:  *(out + 5)  = base + ((*in32 >> 1) & 8191);
        1: 7210:  *(out + 6)  = base + ((*in32 >> 14) & 8191);
        1: 7211:  tmp = (*in32 >> 27);
        -: 7212:  in32++;
        -: 7213:  /* consumed: 4 bytes (total: 16) */
        1: 7214:  tmp |= (*in32 % (1U << 8)) << (13 - 8);
        1: 7215:  *(out + 7) = base + tmp;
        1: 7216:  *(out + 8)  = base + ((*in32 >> 8) & 8191);
        1: 7217:  tmp = (*in32 >> 21);
        -: 7218:  in32++;
        -: 7219:  /* consumed: 4 bytes (total: 20) */
        1: 7220:  tmp |= (*in32 % (1U << 2)) << (13 - 2);
        1: 7221:  *(out + 9) = base + tmp;
        1: 7222:  *(out + 10)  = base + ((*in32 >> 2) & 8191);
        1: 7223:  *(out + 11)  = base + ((*in32 >> 15) & 8191);
        1: 7224:  tmp = (*in32 >> 28);
        -: 7225:  in32++;
        -: 7226:  /* consumed: 4 bytes (total: 24) */
        1: 7227:  tmp |= (*in32 % (1U << 9)) << (13 - 9);
        1: 7228:  *(out + 12) = base + tmp;
        1: 7229:  *(out + 13)  = base + ((*in32 >> 9) & 8191);
        1: 7230:  tmp = (*in32 >> 22);
        -: 7231:  in32++;
        -: 7232:  /* consumed: 4 bytes (total: 28) */
        1: 7233:  tmp |= (*in32 % (1U << 3)) << (13 - 3);
        1: 7234:  *(out + 14) = base + tmp;
        1: 7235:  *(out + 15)  = base + ((*in32 >> 3) & 8191);
        -: 7236:  /* remaining: 16 bits */
        1: 7237:  return 26;
        -: 7238:}
        -: 7239:
        -: 7240:static uint32_t
      898: 7241:pack14_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7242:  uint32_t tmp, length;
      898: 7243:  tmp  = (*(in + 0) - base) << 0;
      898: 7244:  tmp |= (*(in + 1) - base) << 14;
      898: 7245:  tmp |= (*(in + 2) - base) << 28;
      898: 7246:  *(uint32_t *)out = tmp;
        -: 7247:  out += sizeof(uint32_t);
        -: 7248:  /* consumed: 4 bytes (total: 4) */
      898: 7249:  tmp  = (*(in + 2) - base) >> (14 - 10);
      898: 7250:  tmp |= (*(in + 3) - base) << 10;
      898: 7251:  tmp |= (*(in + 4) - base) << 24;
      898: 7252:  *(uint32_t *)out = tmp;
        -: 7253:  out += sizeof(uint32_t);
        -: 7254:  /* consumed: 4 bytes (total: 8) */
      898: 7255:  tmp  = (*(in + 4) - base) >> (14 - 6);
      898: 7256:  tmp |= (*(in + 5) - base) << 6;
      898: 7257:  tmp |= (*(in + 6) - base) << 20;
      898: 7258:  *(uint32_t *)out = tmp;
        -: 7259:  out += sizeof(uint32_t);
        -: 7260:  /* consumed: 4 bytes (total: 12) */
      898: 7261:  tmp  = (*(in + 6) - base) >> (14 - 2);
      898: 7262:  tmp |= (*(in + 7) - base) << 2;
      898: 7263:  tmp |= (*(in + 8) - base) << 16;
      898: 7264:  tmp |= (*(in + 9) - base) << 30;
      898: 7265:  *(uint32_t *)out = tmp;
        -: 7266:  out += sizeof(uint32_t);
        -: 7267:  /* consumed: 4 bytes (total: 16) */
      898: 7268:  tmp  = (*(in + 9) - base) >> (14 - 12);
      898: 7269:  tmp |= (*(in + 10) - base) << 12;
      898: 7270:  tmp |= (*(in + 11) - base) << 26;
      898: 7271:  *(uint32_t *)out = tmp;
        -: 7272:  out += sizeof(uint32_t);
        -: 7273:  /* consumed: 4 bytes (total: 20) */
      898: 7274:  tmp  = (*(in + 11) - base) >> (14 - 8);
      898: 7275:  tmp |= (*(in + 12) - base) << 8;
      898: 7276:  tmp |= (*(in + 13) - base) << 22;
      898: 7277:  *(uint32_t *)out = tmp;
      898: 7278:  out += sizeof(uint32_t);
        -: 7279:  /* consumed: 4 bytes (total: 24) */
      898: 7280:  tmp  = (*(in + 13) - base) >> (14 - 4);
      898: 7281:  tmp |= (*(in + 14) - base) << 4;
      898: 7282:  tmp |= (*(in + 15) - base) << 18;
        -: 7283:  /* remaining: 0 bits */
        -: 7284:  length = (32 / 8) - (32 - 32) / 8;
        -: 7285:  /* consumed: 4 bytes (total: 28) */
        -: 7286:  memcpy(out, &tmp, length);
      898: 7287:  return 28;
        -: 7288:}
        -: 7289:
        -: 7290:static uint32_t
        1: 7291:unpack14_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7292:  uint32_t *in32 = (uint32_t *)in;
        -: 7293:  uint32_t tmp; (void)tmp;
        1: 7294:  *(out + 0)  = base + ((*in32 >> 0) & 16383);
        1: 7295:  *(out + 1)  = base + ((*in32 >> 14) & 16383);
        1: 7296:  tmp = (*in32 >> 28);
        -: 7297:  in32++;
        -: 7298:  /* consumed: 4 bytes (total: 8) */
        1: 7299:  tmp |= (*in32 % (1U << 10)) << (14 - 10);
        1: 7300:  *(out + 2) = base + tmp;
        1: 7301:  *(out + 3)  = base + ((*in32 >> 10) & 16383);
        1: 7302:  tmp = (*in32 >> 24);
        -: 7303:  in32++;
        -: 7304:  /* consumed: 4 bytes (total: 12) */
        1: 7305:  tmp |= (*in32 % (1U << 6)) << (14 - 6);
        1: 7306:  *(out + 4) = base + tmp;
        1: 7307:  *(out + 5)  = base + ((*in32 >> 6) & 16383);
        1: 7308:  tmp = (*in32 >> 20);
        -: 7309:  in32++;
        -: 7310:  /* consumed: 4 bytes (total: 16) */
        1: 7311:  tmp |= (*in32 % (1U << 2)) << (14 - 2);
        1: 7312:  *(out + 6) = base + tmp;
        1: 7313:  *(out + 7)  = base + ((*in32 >> 2) & 16383);
        1: 7314:  *(out + 8)  = base + ((*in32 >> 16) & 16383);
        1: 7315:  tmp = (*in32 >> 30);
        -: 7316:  in32++;
        -: 7317:  /* consumed: 4 bytes (total: 20) */
        1: 7318:  tmp |= (*in32 % (1U << 12)) << (14 - 12);
        1: 7319:  *(out + 9) = base + tmp;
        1: 7320:  *(out + 10)  = base + ((*in32 >> 12) & 16383);
        1: 7321:  tmp = (*in32 >> 26);
        -: 7322:  in32++;
        -: 7323:  /* consumed: 4 bytes (total: 24) */
        1: 7324:  tmp |= (*in32 % (1U << 8)) << (14 - 8);
        1: 7325:  *(out + 11) = base + tmp;
        1: 7326:  *(out + 12)  = base + ((*in32 >> 8) & 16383);
        1: 7327:  tmp = (*in32 >> 22);
        -: 7328:  in32++;
        -: 7329:  /* consumed: 4 bytes (total: 28) */
        1: 7330:  tmp |= (*in32 % (1U << 4)) << (14 - 4);
        1: 7331:  *(out + 13) = base + tmp;
        1: 7332:  *(out + 14)  = base + ((*in32 >> 4) & 16383);
        1: 7333:  *(out + 15)  = base + ((*in32 >> 18) & 16383);
        -: 7334:  /* remaining: 0 bits */
        1: 7335:  return 28;
        -: 7336:}
        -: 7337:
        -: 7338:static uint32_t
     4998: 7339:pack15_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7340:  uint32_t tmp, length;
     4998: 7341:  tmp  = (*(in + 0) - base) << 0;
     4998: 7342:  tmp |= (*(in + 1) - base) << 15;
     4998: 7343:  tmp |= (*(in + 2) - base) << 30;
     4998: 7344:  *(uint32_t *)out = tmp;
        -: 7345:  out += sizeof(uint32_t);
        -: 7346:  /* consumed: 4 bytes (total: 4) */
     4998: 7347:  tmp  = (*(in + 2) - base) >> (15 - 13);
     4998: 7348:  tmp |= (*(in + 3) - base) << 13;
     4998: 7349:  tmp |= (*(in + 4) - base) << 28;
     4998: 7350:  *(uint32_t *)out = tmp;
        -: 7351:  out += sizeof(uint32_t);
        -: 7352:  /* consumed: 4 bytes (total: 8) */
     4998: 7353:  tmp  = (*(in + 4) - base) >> (15 - 11);
     4998: 7354:  tmp |= (*(in + 5) - base) << 11;
     4998: 7355:  tmp |= (*(in + 6) - base) << 26;
     4998: 7356:  *(uint32_t *)out = tmp;
        -: 7357:  out += sizeof(uint32_t);
        -: 7358:  /* consumed: 4 bytes (total: 12) */
     4998: 7359:  tmp  = (*(in + 6) - base) >> (15 - 9);
     4998: 7360:  tmp |= (*(in + 7) - base) << 9;
     4998: 7361:  tmp |= (*(in + 8) - base) << 24;
     4998: 7362:  *(uint32_t *)out = tmp;
        -: 7363:  out += sizeof(uint32_t);
        -: 7364:  /* consumed: 4 bytes (total: 16) */
     4998: 7365:  tmp  = (*(in + 8) - base) >> (15 - 7);
     4998: 7366:  tmp |= (*(in + 9) - base) << 7;
     4998: 7367:  tmp |= (*(in + 10) - base) << 22;
     4998: 7368:  *(uint32_t *)out = tmp;
        -: 7369:  out += sizeof(uint32_t);
        -: 7370:  /* consumed: 4 bytes (total: 20) */
     4998: 7371:  tmp  = (*(in + 10) - base) >> (15 - 5);
     4998: 7372:  tmp |= (*(in + 11) - base) << 5;
     4998: 7373:  tmp |= (*(in + 12) - base) << 20;
     4998: 7374:  *(uint32_t *)out = tmp;
        -: 7375:  out += sizeof(uint32_t);
        -: 7376:  /* consumed: 4 bytes (total: 24) */
     4998: 7377:  tmp  = (*(in + 12) - base) >> (15 - 3);
     4998: 7378:  tmp |= (*(in + 13) - base) << 3;
     4998: 7379:  tmp |= (*(in + 14) - base) << 18;
     4998: 7380:  *(uint32_t *)out = tmp;
     4998: 7381:  out += sizeof(uint32_t);
        -: 7382:  /* consumed: 4 bytes (total: 28) */
     4998: 7383:  tmp  = (*(in + 14) - base) >> (15 - 1);
     4998: 7384:  tmp |= (*(in + 15) - base) << 1;
        -: 7385:  /* remaining: 16 bits */
        -: 7386:  length = (32 / 8) - (32 - 16) / 8;
        -: 7387:  /* consumed: 2 bytes (total: 30) */
        -: 7388:  memcpy(out, &tmp, length);
     4998: 7389:  return 30;
        -: 7390:}
        -: 7391:
        -: 7392:static uint32_t
        5: 7393:unpack15_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7394:  uint32_t *in32 = (uint32_t *)in;
        -: 7395:  uint32_t tmp; (void)tmp;
        5: 7396:  *(out + 0)  = base + ((*in32 >> 0) & 32767);
        5: 7397:  *(out + 1)  = base + ((*in32 >> 15) & 32767);
        5: 7398:  tmp = (*in32 >> 30);
        -: 7399:  in32++;
        -: 7400:  /* consumed: 4 bytes (total: 8) */
        5: 7401:  tmp |= (*in32 % (1U << 13)) << (15 - 13);
        5: 7402:  *(out + 2) = base + tmp;
        5: 7403:  *(out + 3)  = base + ((*in32 >> 13) & 32767);
        5: 7404:  tmp = (*in32 >> 28);
        -: 7405:  in32++;
        -: 7406:  /* consumed: 4 bytes (total: 12) */
        5: 7407:  tmp |= (*in32 % (1U << 11)) << (15 - 11);
        5: 7408:  *(out + 4) = base + tmp;
        5: 7409:  *(out + 5)  = base + ((*in32 >> 11) & 32767);
        5: 7410:  tmp = (*in32 >> 26);
        -: 7411:  in32++;
        -: 7412:  /* consumed: 4 bytes (total: 16) */
        5: 7413:  tmp |= (*in32 % (1U << 9)) << (15 - 9);
        5: 7414:  *(out + 6) = base + tmp;
        5: 7415:  *(out + 7)  = base + ((*in32 >> 9) & 32767);
        5: 7416:  tmp = (*in32 >> 24);
        -: 7417:  in32++;
        -: 7418:  /* consumed: 4 bytes (total: 20) */
        5: 7419:  tmp |= (*in32 % (1U << 7)) << (15 - 7);
        5: 7420:  *(out + 8) = base + tmp;
        5: 7421:  *(out + 9)  = base + ((*in32 >> 7) & 32767);
        5: 7422:  tmp = (*in32 >> 22);
        -: 7423:  in32++;
        -: 7424:  /* consumed: 4 bytes (total: 24) */
        5: 7425:  tmp |= (*in32 % (1U << 5)) << (15 - 5);
        5: 7426:  *(out + 10) = base + tmp;
        5: 7427:  *(out + 11)  = base + ((*in32 >> 5) & 32767);
        5: 7428:  tmp = (*in32 >> 20);
        -: 7429:  in32++;
        -: 7430:  /* consumed: 4 bytes (total: 28) */
        5: 7431:  tmp |= (*in32 % (1U << 3)) << (15 - 3);
        5: 7432:  *(out + 12) = base + tmp;
        5: 7433:  *(out + 13)  = base + ((*in32 >> 3) & 32767);
        5: 7434:  tmp = (*in32 >> 18);
        -: 7435:  in32++;
        -: 7436:  /* consumed: 4 bytes (total: 32) */
        5: 7437:  tmp |= (*in32 % (1U << 1)) << (15 - 1);
        5: 7438:  *(out + 14) = base + tmp;
        5: 7439:  *(out + 15)  = base + ((*in32 >> 1) & 32767);
        -: 7440:  /* remaining: 16 bits */
        5: 7441:  return 30;
        -: 7442:}
        -: 7443:
        -: 7444:static uint32_t
        1: 7445:pack16_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7446:  uint32_t tmp, length;
        1: 7447:  tmp  = (*(in + 0) - base) << 0;
        1: 7448:  tmp |= (*(in + 1) - base) << 16;
        1: 7449:  *(uint32_t *)out = tmp;
        -: 7450:  out += sizeof(uint32_t);
        -: 7451:  /* consumed: 4 bytes (total: 4) */
        1: 7452:  tmp  = (*(in + 2) - base) << 0;
        1: 7453:  tmp |= (*(in + 3) - base) << 16;
        1: 7454:  *(uint32_t *)out = tmp;
        -: 7455:  out += sizeof(uint32_t);
        -: 7456:  /* consumed: 4 bytes (total: 8) */
        1: 7457:  tmp  = (*(in + 4) - base) << 0;
        1: 7458:  tmp |= (*(in + 5) - base) << 16;
        1: 7459:  *(uint32_t *)out = tmp;
        -: 7460:  out += sizeof(uint32_t);
        -: 7461:  /* consumed: 4 bytes (total: 12) */
        1: 7462:  tmp  = (*(in + 6) - base) << 0;
        1: 7463:  tmp |= (*(in + 7) - base) << 16;
        1: 7464:  *(uint32_t *)out = tmp;
        -: 7465:  out += sizeof(uint32_t);
        -: 7466:  /* consumed: 4 bytes (total: 16) */
        1: 7467:  tmp  = (*(in + 8) - base) << 0;
        1: 7468:  tmp |= (*(in + 9) - base) << 16;
        1: 7469:  *(uint32_t *)out = tmp;
        -: 7470:  out += sizeof(uint32_t);
        -: 7471:  /* consumed: 4 bytes (total: 20) */
        1: 7472:  tmp  = (*(in + 10) - base) << 0;
        1: 7473:  tmp |= (*(in + 11) - base) << 16;
        1: 7474:  *(uint32_t *)out = tmp;
        -: 7475:  out += sizeof(uint32_t);
        -: 7476:  /* consumed: 4 bytes (total: 24) */
        1: 7477:  tmp  = (*(in + 12) - base) << 0;
        1: 7478:  tmp |= (*(in + 13) - base) << 16;
        1: 7479:  *(uint32_t *)out = tmp;
        1: 7480:  out += sizeof(uint32_t);
        -: 7481:  /* consumed: 4 bytes (total: 28) */
        1: 7482:  tmp  = (*(in + 14) - base) << 0;
        1: 7483:  tmp |= (*(in + 15) - base) << 16;
        -: 7484:  /* remaining: 0 bits */
        -: 7485:  length = (32 / 8) - (32 - 32) / 8;
        -: 7486:  /* consumed: 4 bytes (total: 32) */
        -: 7487:  memcpy(out, &tmp, length);
        1: 7488:  return 32;
        -: 7489:}
        -: 7490:
        -: 7491:static uint32_t
        1: 7492:unpack16_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7493:  uint32_t *in32 = (uint32_t *)in;
        -: 7494:  uint32_t tmp; (void)tmp;
        1: 7495:  *(out + 0)  = base + ((*in32 >> 0) & 65535);
        1: 7496:  *(out + 1)  = base + ((*in32 >> 16) & 65535);
        -: 7497:  in32++;
        -: 7498:  /* consumed: 4 bytes (total: 8) */
        1: 7499:  *(out + 2)  = base + ((*in32 >> 0) & 65535);
        1: 7500:  *(out + 3)  = base + ((*in32 >> 16) & 65535);
        -: 7501:  in32++;
        -: 7502:  /* consumed: 4 bytes (total: 12) */
        1: 7503:  *(out + 4)  = base + ((*in32 >> 0) & 65535);
        1: 7504:  *(out + 5)  = base + ((*in32 >> 16) & 65535);
        -: 7505:  in32++;
        -: 7506:  /* consumed: 4 bytes (total: 16) */
        1: 7507:  *(out + 6)  = base + ((*in32 >> 0) & 65535);
        1: 7508:  *(out + 7)  = base + ((*in32 >> 16) & 65535);
        -: 7509:  in32++;
        -: 7510:  /* consumed: 4 bytes (total: 20) */
        1: 7511:  *(out + 8)  = base + ((*in32 >> 0) & 65535);
        1: 7512:  *(out + 9)  = base + ((*in32 >> 16) & 65535);
        -: 7513:  in32++;
        -: 7514:  /* consumed: 4 bytes (total: 24) */
        1: 7515:  *(out + 10)  = base + ((*in32 >> 0) & 65535);
        1: 7516:  *(out + 11)  = base + ((*in32 >> 16) & 65535);
        -: 7517:  in32++;
        -: 7518:  /* consumed: 4 bytes (total: 28) */
        1: 7519:  *(out + 12)  = base + ((*in32 >> 0) & 65535);
        1: 7520:  *(out + 13)  = base + ((*in32 >> 16) & 65535);
        -: 7521:  in32++;
        -: 7522:  /* consumed: 4 bytes (total: 32) */
        1: 7523:  *(out + 14)  = base + ((*in32 >> 0) & 65535);
        1: 7524:  *(out + 15)  = base + ((*in32 >> 16) & 65535);
        -: 7525:  /* remaining: 0 bits */
        1: 7526:  return 32;
        -: 7527:}
        -: 7528:
        -: 7529:static uint32_t
        1: 7530:pack17_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7531:  uint32_t tmp, length;
        1: 7532:  tmp  = (*(in + 0) - base) << 0;
        1: 7533:  tmp |= (*(in + 1) - base) << 17;
        1: 7534:  *(uint32_t *)out = tmp;
        -: 7535:  out += sizeof(uint32_t);
        -: 7536:  /* consumed: 4 bytes (total: 4) */
        1: 7537:  tmp  = (*(in + 1) - base) >> (17 - 2);
        1: 7538:  tmp |= (*(in + 2) - base) << 2;
        1: 7539:  tmp |= (*(in + 3) - base) << 19;
        1: 7540:  *(uint32_t *)out = tmp;
        -: 7541:  out += sizeof(uint32_t);
        -: 7542:  /* consumed: 4 bytes (total: 8) */
        1: 7543:  tmp  = (*(in + 3) - base) >> (17 - 4);
        1: 7544:  tmp |= (*(in + 4) - base) << 4;
        1: 7545:  tmp |= (*(in + 5) - base) << 21;
        1: 7546:  *(uint32_t *)out = tmp;
        -: 7547:  out += sizeof(uint32_t);
        -: 7548:  /* consumed: 4 bytes (total: 12) */
        1: 7549:  tmp  = (*(in + 5) - base) >> (17 - 6);
        1: 7550:  tmp |= (*(in + 6) - base) << 6;
        1: 7551:  tmp |= (*(in + 7) - base) << 23;
        1: 7552:  *(uint32_t *)out = tmp;
        -: 7553:  out += sizeof(uint32_t);
        -: 7554:  /* consumed: 4 bytes (total: 16) */
        1: 7555:  tmp  = (*(in + 7) - base) >> (17 - 8);
        1: 7556:  tmp |= (*(in + 8) - base) << 8;
        1: 7557:  tmp |= (*(in + 9) - base) << 25;
        1: 7558:  *(uint32_t *)out = tmp;
        -: 7559:  out += sizeof(uint32_t);
        -: 7560:  /* consumed: 4 bytes (total: 20) */
        1: 7561:  tmp  = (*(in + 9) - base) >> (17 - 10);
        1: 7562:  tmp |= (*(in + 10) - base) << 10;
        1: 7563:  tmp |= (*(in + 11) - base) << 27;
        1: 7564:  *(uint32_t *)out = tmp;
        -: 7565:  out += sizeof(uint32_t);
        -: 7566:  /* consumed: 4 bytes (total: 24) */
        1: 7567:  tmp  = (*(in + 11) - base) >> (17 - 12);
        1: 7568:  tmp |= (*(in + 12) - base) << 12;
        1: 7569:  tmp |= (*(in + 13) - base) << 29;
        1: 7570:  *(uint32_t *)out = tmp;
        -: 7571:  out += sizeof(uint32_t);
        -: 7572:  /* consumed: 4 bytes (total: 28) */
        1: 7573:  tmp  = (*(in + 13) - base) >> (17 - 14);
        1: 7574:  tmp |= (*(in + 14) - base) << 14;
        1: 7575:  tmp |= (*(in + 15) - base) << 31;
        1: 7576:  *(uint32_t *)out = tmp;
        1: 7577:  out += sizeof(uint32_t);
        -: 7578:  /* consumed: 4 bytes (total: 32) */
        1: 7579:  tmp  = (*(in + 15) - base) >> (17 - 16);
        -: 7580:  /* remaining: 16 bits */
        -: 7581:  length = (32 / 8) - (32 - 16) / 8;
        -: 7582:  /* consumed: 2 bytes (total: 34) */
        -: 7583:  memcpy(out, &tmp, length);
        1: 7584:  return 34;
        -: 7585:}
        -: 7586:
        -: 7587:static uint32_t
        1: 7588:unpack17_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7589:  uint32_t *in32 = (uint32_t *)in;
        -: 7590:  uint32_t tmp; (void)tmp;
        1: 7591:  *(out + 0)  = base + ((*in32 >> 0) & 131071);
        1: 7592:  tmp = (*in32 >> 17);
        -: 7593:  in32++;
        -: 7594:  /* consumed: 4 bytes (total: 8) */
        1: 7595:  tmp |= (*in32 % (1U << 2)) << (17 - 2);
        1: 7596:  *(out + 1) = base + tmp;
        1: 7597:  *(out + 2)  = base + ((*in32 >> 2) & 131071);
        1: 7598:  tmp = (*in32 >> 19);
        -: 7599:  in32++;
        -: 7600:  /* consumed: 4 bytes (total: 12) */
        1: 7601:  tmp |= (*in32 % (1U << 4)) << (17 - 4);
        1: 7602:  *(out + 3) = base + tmp;
        1: 7603:  *(out + 4)  = base + ((*in32 >> 4) & 131071);
        1: 7604:  tmp = (*in32 >> 21);
        -: 7605:  in32++;
        -: 7606:  /* consumed: 4 bytes (total: 16) */
        1: 7607:  tmp |= (*in32 % (1U << 6)) << (17 - 6);
        1: 7608:  *(out + 5) = base + tmp;
        1: 7609:  *(out + 6)  = base + ((*in32 >> 6) & 131071);
        1: 7610:  tmp = (*in32 >> 23);
        -: 7611:  in32++;
        -: 7612:  /* consumed: 4 bytes (total: 20) */
        1: 7613:  tmp |= (*in32 % (1U << 8)) << (17 - 8);
        1: 7614:  *(out + 7) = base + tmp;
        1: 7615:  *(out + 8)  = base + ((*in32 >> 8) & 131071);
        1: 7616:  tmp = (*in32 >> 25);
        -: 7617:  in32++;
        -: 7618:  /* consumed: 4 bytes (total: 24) */
        1: 7619:  tmp |= (*in32 % (1U << 10)) << (17 - 10);
        1: 7620:  *(out + 9) = base + tmp;
        1: 7621:  *(out + 10)  = base + ((*in32 >> 10) & 131071);
        1: 7622:  tmp = (*in32 >> 27);
        -: 7623:  in32++;
        -: 7624:  /* consumed: 4 bytes (total: 28) */
        1: 7625:  tmp |= (*in32 % (1U << 12)) << (17 - 12);
        1: 7626:  *(out + 11) = base + tmp;
        1: 7627:  *(out + 12)  = base + ((*in32 >> 12) & 131071);
        1: 7628:  tmp = (*in32 >> 29);
        -: 7629:  in32++;
        -: 7630:  /* consumed: 4 bytes (total: 32) */
        1: 7631:  tmp |= (*in32 % (1U << 14)) << (17 - 14);
        1: 7632:  *(out + 13) = base + tmp;
        1: 7633:  *(out + 14)  = base + ((*in32 >> 14) & 131071);
        1: 7634:  tmp = (*in32 >> 31);
        -: 7635:  in32++;
        -: 7636:  /* consumed: 4 bytes (total: 36) */
        1: 7637:  tmp |= (*in32 % (1U << 16)) << (17 - 16);
        1: 7638:  *(out + 15) = base + tmp;
        -: 7639:  /* remaining: 16 bits */
        1: 7640:  return 34;
        -: 7641:}
        -: 7642:
        -: 7643:static uint32_t
        1: 7644:pack18_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7645:  uint32_t tmp, length;
        1: 7646:  tmp  = (*(in + 0) - base) << 0;
        1: 7647:  tmp |= (*(in + 1) - base) << 18;
        1: 7648:  *(uint32_t *)out = tmp;
        -: 7649:  out += sizeof(uint32_t);
        -: 7650:  /* consumed: 4 bytes (total: 4) */
        1: 7651:  tmp  = (*(in + 1) - base) >> (18 - 4);
        1: 7652:  tmp |= (*(in + 2) - base) << 4;
        1: 7653:  tmp |= (*(in + 3) - base) << 22;
        1: 7654:  *(uint32_t *)out = tmp;
        -: 7655:  out += sizeof(uint32_t);
        -: 7656:  /* consumed: 4 bytes (total: 8) */
        1: 7657:  tmp  = (*(in + 3) - base) >> (18 - 8);
        1: 7658:  tmp |= (*(in + 4) - base) << 8;
        1: 7659:  tmp |= (*(in + 5) - base) << 26;
        1: 7660:  *(uint32_t *)out = tmp;
        -: 7661:  out += sizeof(uint32_t);
        -: 7662:  /* consumed: 4 bytes (total: 12) */
        1: 7663:  tmp  = (*(in + 5) - base) >> (18 - 12);
        1: 7664:  tmp |= (*(in + 6) - base) << 12;
        1: 7665:  tmp |= (*(in + 7) - base) << 30;
        1: 7666:  *(uint32_t *)out = tmp;
        -: 7667:  out += sizeof(uint32_t);
        -: 7668:  /* consumed: 4 bytes (total: 16) */
        1: 7669:  tmp  = (*(in + 7) - base) >> (18 - 16);
        1: 7670:  tmp |= (*(in + 8) - base) << 16;
        1: 7671:  *(uint32_t *)out = tmp;
        -: 7672:  out += sizeof(uint32_t);
        -: 7673:  /* consumed: 4 bytes (total: 20) */
        1: 7674:  tmp  = (*(in + 8) - base) >> (18 - 2);
        1: 7675:  tmp |= (*(in + 9) - base) << 2;
        1: 7676:  tmp |= (*(in + 10) - base) << 20;
        1: 7677:  *(uint32_t *)out = tmp;
        -: 7678:  out += sizeof(uint32_t);
        -: 7679:  /* consumed: 4 bytes (total: 24) */
        1: 7680:  tmp  = (*(in + 10) - base) >> (18 - 6);
        1: 7681:  tmp |= (*(in + 11) - base) << 6;
        1: 7682:  tmp |= (*(in + 12) - base) << 24;
        1: 7683:  *(uint32_t *)out = tmp;
        -: 7684:  out += sizeof(uint32_t);
        -: 7685:  /* consumed: 4 bytes (total: 28) */
        1: 7686:  tmp  = (*(in + 12) - base) >> (18 - 10);
        1: 7687:  tmp |= (*(in + 13) - base) << 10;
        1: 7688:  tmp |= (*(in + 14) - base) << 28;
        1: 7689:  *(uint32_t *)out = tmp;
        1: 7690:  out += sizeof(uint32_t);
        -: 7691:  /* consumed: 4 bytes (total: 32) */
        1: 7692:  tmp  = (*(in + 14) - base) >> (18 - 14);
        1: 7693:  tmp |= (*(in + 15) - base) << 14;
        -: 7694:  /* remaining: 0 bits */
        -: 7695:  length = (32 / 8) - (32 - 32) / 8;
        -: 7696:  /* consumed: 4 bytes (total: 36) */
        -: 7697:  memcpy(out, &tmp, length);
        1: 7698:  return 36;
        -: 7699:}
        -: 7700:
        -: 7701:static uint32_t
        1: 7702:unpack18_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7703:  uint32_t *in32 = (uint32_t *)in;
        -: 7704:  uint32_t tmp; (void)tmp;
        1: 7705:  *(out + 0)  = base + ((*in32 >> 0) & 262143);
        1: 7706:  tmp = (*in32 >> 18);
        -: 7707:  in32++;
        -: 7708:  /* consumed: 4 bytes (total: 8) */
        1: 7709:  tmp |= (*in32 % (1U << 4)) << (18 - 4);
        1: 7710:  *(out + 1) = base + tmp;
        1: 7711:  *(out + 2)  = base + ((*in32 >> 4) & 262143);
        1: 7712:  tmp = (*in32 >> 22);
        -: 7713:  in32++;
        -: 7714:  /* consumed: 4 bytes (total: 12) */
        1: 7715:  tmp |= (*in32 % (1U << 8)) << (18 - 8);
        1: 7716:  *(out + 3) = base + tmp;
        1: 7717:  *(out + 4)  = base + ((*in32 >> 8) & 262143);
        1: 7718:  tmp = (*in32 >> 26);
        -: 7719:  in32++;
        -: 7720:  /* consumed: 4 bytes (total: 16) */
        1: 7721:  tmp |= (*in32 % (1U << 12)) << (18 - 12);
        1: 7722:  *(out + 5) = base + tmp;
        1: 7723:  *(out + 6)  = base + ((*in32 >> 12) & 262143);
        1: 7724:  tmp = (*in32 >> 30);
        -: 7725:  in32++;
        -: 7726:  /* consumed: 4 bytes (total: 20) */
        1: 7727:  tmp |= (*in32 % (1U << 16)) << (18 - 16);
        1: 7728:  *(out + 7) = base + tmp;
        1: 7729:  tmp = (*in32 >> 16);
        -: 7730:  in32++;
        -: 7731:  /* consumed: 4 bytes (total: 24) */
        1: 7732:  tmp |= (*in32 % (1U << 2)) << (18 - 2);
        1: 7733:  *(out + 8) = base + tmp;
        1: 7734:  *(out + 9)  = base + ((*in32 >> 2) & 262143);
        1: 7735:  tmp = (*in32 >> 20);
        -: 7736:  in32++;
        -: 7737:  /* consumed: 4 bytes (total: 28) */
        1: 7738:  tmp |= (*in32 % (1U << 6)) << (18 - 6);
        1: 7739:  *(out + 10) = base + tmp;
        1: 7740:  *(out + 11)  = base + ((*in32 >> 6) & 262143);
        1: 7741:  tmp = (*in32 >> 24);
        -: 7742:  in32++;
        -: 7743:  /* consumed: 4 bytes (total: 32) */
        1: 7744:  tmp |= (*in32 % (1U << 10)) << (18 - 10);
        1: 7745:  *(out + 12) = base + tmp;
        1: 7746:  *(out + 13)  = base + ((*in32 >> 10) & 262143);
        1: 7747:  tmp = (*in32 >> 28);
        -: 7748:  in32++;
        -: 7749:  /* consumed: 4 bytes (total: 36) */
        1: 7750:  tmp |= (*in32 % (1U << 14)) << (18 - 14);
        1: 7751:  *(out + 14) = base + tmp;
        1: 7752:  *(out + 15)  = base + ((*in32 >> 14) & 262143);
        -: 7753:  /* remaining: 0 bits */
        1: 7754:  return 36;
        -: 7755:}
        -: 7756:
        -: 7757:static uint32_t
        1: 7758:pack19_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7759:  uint32_t tmp, length;
        1: 7760:  tmp  = (*(in + 0) - base) << 0;
        1: 7761:  tmp |= (*(in + 1) - base) << 19;
        1: 7762:  *(uint32_t *)out = tmp;
        -: 7763:  out += sizeof(uint32_t);
        -: 7764:  /* consumed: 4 bytes (total: 4) */
        1: 7765:  tmp  = (*(in + 1) - base) >> (19 - 6);
        1: 7766:  tmp |= (*(in + 2) - base) << 6;
        1: 7767:  tmp |= (*(in + 3) - base) << 25;
        1: 7768:  *(uint32_t *)out = tmp;
        -: 7769:  out += sizeof(uint32_t);
        -: 7770:  /* consumed: 4 bytes (total: 8) */
        1: 7771:  tmp  = (*(in + 3) - base) >> (19 - 12);
        1: 7772:  tmp |= (*(in + 4) - base) << 12;
        1: 7773:  tmp |= (*(in + 5) - base) << 31;
        1: 7774:  *(uint32_t *)out = tmp;
        -: 7775:  out += sizeof(uint32_t);
        -: 7776:  /* consumed: 4 bytes (total: 12) */
        1: 7777:  tmp  = (*(in + 5) - base) >> (19 - 18);
        1: 7778:  tmp |= (*(in + 6) - base) << 18;
        1: 7779:  *(uint32_t *)out = tmp;
        -: 7780:  out += sizeof(uint32_t);
        -: 7781:  /* consumed: 4 bytes (total: 16) */
        1: 7782:  tmp  = (*(in + 6) - base) >> (19 - 5);
        1: 7783:  tmp |= (*(in + 7) - base) << 5;
        1: 7784:  tmp |= (*(in + 8) - base) << 24;
        1: 7785:  *(uint32_t *)out = tmp;
        -: 7786:  out += sizeof(uint32_t);
        -: 7787:  /* consumed: 4 bytes (total: 20) */
        1: 7788:  tmp  = (*(in + 8) - base) >> (19 - 11);
        1: 7789:  tmp |= (*(in + 9) - base) << 11;
        1: 7790:  tmp |= (*(in + 10) - base) << 30;
        1: 7791:  *(uint32_t *)out = tmp;
        -: 7792:  out += sizeof(uint32_t);
        -: 7793:  /* consumed: 4 bytes (total: 24) */
        1: 7794:  tmp  = (*(in + 10) - base) >> (19 - 17);
        1: 7795:  tmp |= (*(in + 11) - base) << 17;
        1: 7796:  *(uint32_t *)out = tmp;
        -: 7797:  out += sizeof(uint32_t);
        -: 7798:  /* consumed: 4 bytes (total: 28) */
        1: 7799:  tmp  = (*(in + 11) - base) >> (19 - 4);
        1: 7800:  tmp |= (*(in + 12) - base) << 4;
        1: 7801:  tmp |= (*(in + 13) - base) << 23;
        1: 7802:  *(uint32_t *)out = tmp;
        -: 7803:  out += sizeof(uint32_t);
        -: 7804:  /* consumed: 4 bytes (total: 32) */
        1: 7805:  tmp  = (*(in + 13) - base) >> (19 - 10);
        1: 7806:  tmp |= (*(in + 14) - base) << 10;
        1: 7807:  tmp |= (*(in + 15) - base) << 29;
        1: 7808:  *(uint32_t *)out = tmp;
        1: 7809:  out += sizeof(uint32_t);
        -: 7810:  /* consumed: 4 bytes (total: 36) */
        1: 7811:  tmp  = (*(in + 15) - base) >> (19 - 16);
        -: 7812:  /* remaining: 16 bits */
        -: 7813:  length = (32 / 8) - (32 - 16) / 8;
        -: 7814:  /* consumed: 2 bytes (total: 38) */
        -: 7815:  memcpy(out, &tmp, length);
        1: 7816:  return 38;
        -: 7817:}
        -: 7818:
        -: 7819:static uint32_t
        1: 7820:unpack19_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7821:  uint32_t *in32 = (uint32_t *)in;
        -: 7822:  uint32_t tmp; (void)tmp;
        1: 7823:  *(out + 0)  = base + ((*in32 >> 0) & 524287);
        1: 7824:  tmp = (*in32 >> 19);
        -: 7825:  in32++;
        -: 7826:  /* consumed: 4 bytes (total: 8) */
        1: 7827:  tmp |= (*in32 % (1U << 6)) << (19 - 6);
        1: 7828:  *(out + 1) = base + tmp;
        1: 7829:  *(out + 2)  = base + ((*in32 >> 6) & 524287);
        1: 7830:  tmp = (*in32 >> 25);
        -: 7831:  in32++;
        -: 7832:  /* consumed: 4 bytes (total: 12) */
        1: 7833:  tmp |= (*in32 % (1U << 12)) << (19 - 12);
        1: 7834:  *(out + 3) = base + tmp;
        1: 7835:  *(out + 4)  = base + ((*in32 >> 12) & 524287);
        1: 7836:  tmp = (*in32 >> 31);
        -: 7837:  in32++;
        -: 7838:  /* consumed: 4 bytes (total: 16) */
        1: 7839:  tmp |= (*in32 % (1U << 18)) << (19 - 18);
        1: 7840:  *(out + 5) = base + tmp;
        1: 7841:  tmp = (*in32 >> 18);
        -: 7842:  in32++;
        -: 7843:  /* consumed: 4 bytes (total: 20) */
        1: 7844:  tmp |= (*in32 % (1U << 5)) << (19 - 5);
        1: 7845:  *(out + 6) = base + tmp;
        1: 7846:  *(out + 7)  = base + ((*in32 >> 5) & 524287);
        1: 7847:  tmp = (*in32 >> 24);
        -: 7848:  in32++;
        -: 7849:  /* consumed: 4 bytes (total: 24) */
        1: 7850:  tmp |= (*in32 % (1U << 11)) << (19 - 11);
        1: 7851:  *(out + 8) = base + tmp;
        1: 7852:  *(out + 9)  = base + ((*in32 >> 11) & 524287);
        1: 7853:  tmp = (*in32 >> 30);
        -: 7854:  in32++;
        -: 7855:  /* consumed: 4 bytes (total: 28) */
        1: 7856:  tmp |= (*in32 % (1U << 17)) << (19 - 17);
        1: 7857:  *(out + 10) = base + tmp;
        1: 7858:  tmp = (*in32 >> 17);
        -: 7859:  in32++;
        -: 7860:  /* consumed: 4 bytes (total: 32) */
        1: 7861:  tmp |= (*in32 % (1U << 4)) << (19 - 4);
        1: 7862:  *(out + 11) = base + tmp;
        1: 7863:  *(out + 12)  = base + ((*in32 >> 4) & 524287);
        1: 7864:  tmp = (*in32 >> 23);
        -: 7865:  in32++;
        -: 7866:  /* consumed: 4 bytes (total: 36) */
        1: 7867:  tmp |= (*in32 % (1U << 10)) << (19 - 10);
        1: 7868:  *(out + 13) = base + tmp;
        1: 7869:  *(out + 14)  = base + ((*in32 >> 10) & 524287);
        1: 7870:  tmp = (*in32 >> 29);
        -: 7871:  in32++;
        -: 7872:  /* consumed: 4 bytes (total: 40) */
        1: 7873:  tmp |= (*in32 % (1U << 16)) << (19 - 16);
        1: 7874:  *(out + 15) = base + tmp;
        -: 7875:  /* remaining: 16 bits */
        1: 7876:  return 38;
        -: 7877:}
        -: 7878:
        -: 7879:static uint32_t
        1: 7880:pack20_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 7881:  uint32_t tmp, length;
        1: 7882:  tmp  = (*(in + 0) - base) << 0;
        1: 7883:  tmp |= (*(in + 1) - base) << 20;
        1: 7884:  *(uint32_t *)out = tmp;
        -: 7885:  out += sizeof(uint32_t);
        -: 7886:  /* consumed: 4 bytes (total: 4) */
        1: 7887:  tmp  = (*(in + 1) - base) >> (20 - 8);
        1: 7888:  tmp |= (*(in + 2) - base) << 8;
        1: 7889:  tmp |= (*(in + 3) - base) << 28;
        1: 7890:  *(uint32_t *)out = tmp;
        -: 7891:  out += sizeof(uint32_t);
        -: 7892:  /* consumed: 4 bytes (total: 8) */
        1: 7893:  tmp  = (*(in + 3) - base) >> (20 - 16);
        1: 7894:  tmp |= (*(in + 4) - base) << 16;
        1: 7895:  *(uint32_t *)out = tmp;
        -: 7896:  out += sizeof(uint32_t);
        -: 7897:  /* consumed: 4 bytes (total: 12) */
        1: 7898:  tmp  = (*(in + 4) - base) >> (20 - 4);
        1: 7899:  tmp |= (*(in + 5) - base) << 4;
        1: 7900:  tmp |= (*(in + 6) - base) << 24;
        1: 7901:  *(uint32_t *)out = tmp;
        -: 7902:  out += sizeof(uint32_t);
        -: 7903:  /* consumed: 4 bytes (total: 16) */
        1: 7904:  tmp  = (*(in + 6) - base) >> (20 - 12);
        1: 7905:  tmp |= (*(in + 7) - base) << 12;
        1: 7906:  *(uint32_t *)out = tmp;
        -: 7907:  out += sizeof(uint32_t);
        -: 7908:  /* consumed: 4 bytes (total: 20) */
        1: 7909:  tmp  = (*(in + 8) - base) << 0;
        1: 7910:  tmp |= (*(in + 9) - base) << 20;
        1: 7911:  *(uint32_t *)out = tmp;
        -: 7912:  out += sizeof(uint32_t);
        -: 7913:  /* consumed: 4 bytes (total: 24) */
        1: 7914:  tmp  = (*(in + 9) - base) >> (20 - 8);
        1: 7915:  tmp |= (*(in + 10) - base) << 8;
        1: 7916:  tmp |= (*(in + 11) - base) << 28;
        1: 7917:  *(uint32_t *)out = tmp;
        -: 7918:  out += sizeof(uint32_t);
        -: 7919:  /* consumed: 4 bytes (total: 28) */
        1: 7920:  tmp  = (*(in + 11) - base) >> (20 - 16);
        1: 7921:  tmp |= (*(in + 12) - base) << 16;
        1: 7922:  *(uint32_t *)out = tmp;
        -: 7923:  out += sizeof(uint32_t);
        -: 7924:  /* consumed: 4 bytes (total: 32) */
        1: 7925:  tmp  = (*(in + 12) - base) >> (20 - 4);
        1: 7926:  tmp |= (*(in + 13) - base) << 4;
        1: 7927:  tmp |= (*(in + 14) - base) << 24;
        1: 7928:  *(uint32_t *)out = tmp;
        1: 7929:  out += sizeof(uint32_t);
        -: 7930:  /* consumed: 4 bytes (total: 36) */
        1: 7931:  tmp  = (*(in + 14) - base) >> (20 - 12);
        1: 7932:  tmp |= (*(in + 15) - base) << 12;
        -: 7933:  /* remaining: 0 bits */
        -: 7934:  length = (32 / 8) - (32 - 32) / 8;
        -: 7935:  /* consumed: 4 bytes (total: 40) */
        -: 7936:  memcpy(out, &tmp, length);
        1: 7937:  return 40;
        -: 7938:}
        -: 7939:
        -: 7940:static uint32_t
        1: 7941:unpack20_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 7942:  uint32_t *in32 = (uint32_t *)in;
        -: 7943:  uint32_t tmp; (void)tmp;
        1: 7944:  *(out + 0)  = base + ((*in32 >> 0) & 1048575);
        1: 7945:  tmp = (*in32 >> 20);
        -: 7946:  in32++;
        -: 7947:  /* consumed: 4 bytes (total: 8) */
        1: 7948:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1: 7949:  *(out + 1) = base + tmp;
        1: 7950:  *(out + 2)  = base + ((*in32 >> 8) & 1048575);
        1: 7951:  tmp = (*in32 >> 28);
        -: 7952:  in32++;
        -: 7953:  /* consumed: 4 bytes (total: 12) */
        1: 7954:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1: 7955:  *(out + 3) = base + tmp;
        1: 7956:  tmp = (*in32 >> 16);
        -: 7957:  in32++;
        -: 7958:  /* consumed: 4 bytes (total: 16) */
        1: 7959:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1: 7960:  *(out + 4) = base + tmp;
        1: 7961:  *(out + 5)  = base + ((*in32 >> 4) & 1048575);
        1: 7962:  tmp = (*in32 >> 24);
        -: 7963:  in32++;
        -: 7964:  /* consumed: 4 bytes (total: 20) */
        1: 7965:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1: 7966:  *(out + 6) = base + tmp;
        1: 7967:  *(out + 7)  = base + ((*in32 >> 12) & 1048575);
        -: 7968:  in32++;
        -: 7969:  /* consumed: 4 bytes (total: 24) */
        1: 7970:  *(out + 8)  = base + ((*in32 >> 0) & 1048575);
        1: 7971:  tmp = (*in32 >> 20);
        -: 7972:  in32++;
        -: 7973:  /* consumed: 4 bytes (total: 28) */
        1: 7974:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1: 7975:  *(out + 9) = base + tmp;
        1: 7976:  *(out + 10)  = base + ((*in32 >> 8) & 1048575);
        1: 7977:  tmp = (*in32 >> 28);
        -: 7978:  in32++;
        -: 7979:  /* consumed: 4 bytes (total: 32) */
        1: 7980:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1: 7981:  *(out + 11) = base + tmp;
        1: 7982:  tmp = (*in32 >> 16);
        -: 7983:  in32++;
        -: 7984:  /* consumed: 4 bytes (total: 36) */
        1: 7985:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1: 7986:  *(out + 12) = base + tmp;
        1: 7987:  *(out + 13)  = base + ((*in32 >> 4) & 1048575);
        1: 7988:  tmp = (*in32 >> 24);
        -: 7989:  in32++;
        -: 7990:  /* consumed: 4 bytes (total: 40) */
        1: 7991:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1: 7992:  *(out + 14) = base + tmp;
        1: 7993:  *(out + 15)  = base + ((*in32 >> 12) & 1048575);
        -: 7994:  /* remaining: 0 bits */
        1: 7995:  return 40;
        -: 7996:}
        -: 7997:
        -: 7998:static uint32_t
        1: 7999:pack21_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8000:  uint32_t tmp, length;
        1: 8001:  tmp  = (*(in + 0) - base) << 0;
        1: 8002:  tmp |= (*(in + 1) - base) << 21;
        1: 8003:  *(uint32_t *)out = tmp;
        -: 8004:  out += sizeof(uint32_t);
        -: 8005:  /* consumed: 4 bytes (total: 4) */
        1: 8006:  tmp  = (*(in + 1) - base) >> (21 - 10);
        1: 8007:  tmp |= (*(in + 2) - base) << 10;
        1: 8008:  tmp |= (*(in + 3) - base) << 31;
        1: 8009:  *(uint32_t *)out = tmp;
        -: 8010:  out += sizeof(uint32_t);
        -: 8011:  /* consumed: 4 bytes (total: 8) */
        1: 8012:  tmp  = (*(in + 3) - base) >> (21 - 20);
        1: 8013:  tmp |= (*(in + 4) - base) << 20;
        1: 8014:  *(uint32_t *)out = tmp;
        -: 8015:  out += sizeof(uint32_t);
        -: 8016:  /* consumed: 4 bytes (total: 12) */
        1: 8017:  tmp  = (*(in + 4) - base) >> (21 - 9);
        1: 8018:  tmp |= (*(in + 5) - base) << 9;
        1: 8019:  tmp |= (*(in + 6) - base) << 30;
        1: 8020:  *(uint32_t *)out = tmp;
        -: 8021:  out += sizeof(uint32_t);
        -: 8022:  /* consumed: 4 bytes (total: 16) */
        1: 8023:  tmp  = (*(in + 6) - base) >> (21 - 19);
        1: 8024:  tmp |= (*(in + 7) - base) << 19;
        1: 8025:  *(uint32_t *)out = tmp;
        -: 8026:  out += sizeof(uint32_t);
        -: 8027:  /* consumed: 4 bytes (total: 20) */
        1: 8028:  tmp  = (*(in + 7) - base) >> (21 - 8);
        1: 8029:  tmp |= (*(in + 8) - base) << 8;
        1: 8030:  tmp |= (*(in + 9) - base) << 29;
        1: 8031:  *(uint32_t *)out = tmp;
        -: 8032:  out += sizeof(uint32_t);
        -: 8033:  /* consumed: 4 bytes (total: 24) */
        1: 8034:  tmp  = (*(in + 9) - base) >> (21 - 18);
        1: 8035:  tmp |= (*(in + 10) - base) << 18;
        1: 8036:  *(uint32_t *)out = tmp;
        -: 8037:  out += sizeof(uint32_t);
        -: 8038:  /* consumed: 4 bytes (total: 28) */
        1: 8039:  tmp  = (*(in + 10) - base) >> (21 - 7);
        1: 8040:  tmp |= (*(in + 11) - base) << 7;
        1: 8041:  tmp |= (*(in + 12) - base) << 28;
        1: 8042:  *(uint32_t *)out = tmp;
        -: 8043:  out += sizeof(uint32_t);
        -: 8044:  /* consumed: 4 bytes (total: 32) */
        1: 8045:  tmp  = (*(in + 12) - base) >> (21 - 17);
        1: 8046:  tmp |= (*(in + 13) - base) << 17;
        1: 8047:  *(uint32_t *)out = tmp;
        -: 8048:  out += sizeof(uint32_t);
        -: 8049:  /* consumed: 4 bytes (total: 36) */
        1: 8050:  tmp  = (*(in + 13) - base) >> (21 - 6);
        1: 8051:  tmp |= (*(in + 14) - base) << 6;
        1: 8052:  tmp |= (*(in + 15) - base) << 27;
        1: 8053:  *(uint32_t *)out = tmp;
        1: 8054:  out += sizeof(uint32_t);
        -: 8055:  /* consumed: 4 bytes (total: 40) */
        1: 8056:  tmp  = (*(in + 15) - base) >> (21 - 16);
        -: 8057:  /* remaining: 16 bits */
        -: 8058:  length = (32 / 8) - (32 - 16) / 8;
        -: 8059:  /* consumed: 2 bytes (total: 42) */
        -: 8060:  memcpy(out, &tmp, length);
        1: 8061:  return 42;
        -: 8062:}
        -: 8063:
        -: 8064:static uint32_t
        1: 8065:unpack21_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8066:  uint32_t *in32 = (uint32_t *)in;
        -: 8067:  uint32_t tmp; (void)tmp;
        1: 8068:  *(out + 0)  = base + ((*in32 >> 0) & 2097151);
        1: 8069:  tmp = (*in32 >> 21);
        -: 8070:  in32++;
        -: 8071:  /* consumed: 4 bytes (total: 8) */
        1: 8072:  tmp |= (*in32 % (1U << 10)) << (21 - 10);
        1: 8073:  *(out + 1) = base + tmp;
        1: 8074:  *(out + 2)  = base + ((*in32 >> 10) & 2097151);
        1: 8075:  tmp = (*in32 >> 31);
        -: 8076:  in32++;
        -: 8077:  /* consumed: 4 bytes (total: 12) */
        1: 8078:  tmp |= (*in32 % (1U << 20)) << (21 - 20);
        1: 8079:  *(out + 3) = base + tmp;
        1: 8080:  tmp = (*in32 >> 20);
        -: 8081:  in32++;
        -: 8082:  /* consumed: 4 bytes (total: 16) */
        1: 8083:  tmp |= (*in32 % (1U << 9)) << (21 - 9);
        1: 8084:  *(out + 4) = base + tmp;
        1: 8085:  *(out + 5)  = base + ((*in32 >> 9) & 2097151);
        1: 8086:  tmp = (*in32 >> 30);
        -: 8087:  in32++;
        -: 8088:  /* consumed: 4 bytes (total: 20) */
        1: 8089:  tmp |= (*in32 % (1U << 19)) << (21 - 19);
        1: 8090:  *(out + 6) = base + tmp;
        1: 8091:  tmp = (*in32 >> 19);
        -: 8092:  in32++;
        -: 8093:  /* consumed: 4 bytes (total: 24) */
        1: 8094:  tmp |= (*in32 % (1U << 8)) << (21 - 8);
        1: 8095:  *(out + 7) = base + tmp;
        1: 8096:  *(out + 8)  = base + ((*in32 >> 8) & 2097151);
        1: 8097:  tmp = (*in32 >> 29);
        -: 8098:  in32++;
        -: 8099:  /* consumed: 4 bytes (total: 28) */
        1: 8100:  tmp |= (*in32 % (1U << 18)) << (21 - 18);
        1: 8101:  *(out + 9) = base + tmp;
        1: 8102:  tmp = (*in32 >> 18);
        -: 8103:  in32++;
        -: 8104:  /* consumed: 4 bytes (total: 32) */
        1: 8105:  tmp |= (*in32 % (1U << 7)) << (21 - 7);
        1: 8106:  *(out + 10) = base + tmp;
        1: 8107:  *(out + 11)  = base + ((*in32 >> 7) & 2097151);
        1: 8108:  tmp = (*in32 >> 28);
        -: 8109:  in32++;
        -: 8110:  /* consumed: 4 bytes (total: 36) */
        1: 8111:  tmp |= (*in32 % (1U << 17)) << (21 - 17);
        1: 8112:  *(out + 12) = base + tmp;
        1: 8113:  tmp = (*in32 >> 17);
        -: 8114:  in32++;
        -: 8115:  /* consumed: 4 bytes (total: 40) */
        1: 8116:  tmp |= (*in32 % (1U << 6)) << (21 - 6);
        1: 8117:  *(out + 13) = base + tmp;
        1: 8118:  *(out + 14)  = base + ((*in32 >> 6) & 2097151);
        1: 8119:  tmp = (*in32 >> 27);
        -: 8120:  in32++;
        -: 8121:  /* consumed: 4 bytes (total: 44) */
        1: 8122:  tmp |= (*in32 % (1U << 16)) << (21 - 16);
        1: 8123:  *(out + 15) = base + tmp;
        -: 8124:  /* remaining: 16 bits */
        1: 8125:  return 42;
        -: 8126:}
        -: 8127:
        -: 8128:static uint32_t
        1: 8129:pack22_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8130:  uint32_t tmp, length;
        1: 8131:  tmp  = (*(in + 0) - base) << 0;
        1: 8132:  tmp |= (*(in + 1) - base) << 22;
        1: 8133:  *(uint32_t *)out = tmp;
        -: 8134:  out += sizeof(uint32_t);
        -: 8135:  /* consumed: 4 bytes (total: 4) */
        1: 8136:  tmp  = (*(in + 1) - base) >> (22 - 12);
        1: 8137:  tmp |= (*(in + 2) - base) << 12;
        1: 8138:  *(uint32_t *)out = tmp;
        -: 8139:  out += sizeof(uint32_t);
        -: 8140:  /* consumed: 4 bytes (total: 8) */
        1: 8141:  tmp  = (*(in + 2) - base) >> (22 - 2);
        1: 8142:  tmp |= (*(in + 3) - base) << 2;
        1: 8143:  tmp |= (*(in + 4) - base) << 24;
        1: 8144:  *(uint32_t *)out = tmp;
        -: 8145:  out += sizeof(uint32_t);
        -: 8146:  /* consumed: 4 bytes (total: 12) */
        1: 8147:  tmp  = (*(in + 4) - base) >> (22 - 14);
        1: 8148:  tmp |= (*(in + 5) - base) << 14;
        1: 8149:  *(uint32_t *)out = tmp;
        -: 8150:  out += sizeof(uint32_t);
        -: 8151:  /* consumed: 4 bytes (total: 16) */
        1: 8152:  tmp  = (*(in + 5) - base) >> (22 - 4);
        1: 8153:  tmp |= (*(in + 6) - base) << 4;
        1: 8154:  tmp |= (*(in + 7) - base) << 26;
        1: 8155:  *(uint32_t *)out = tmp;
        -: 8156:  out += sizeof(uint32_t);
        -: 8157:  /* consumed: 4 bytes (total: 20) */
        1: 8158:  tmp  = (*(in + 7) - base) >> (22 - 16);
        1: 8159:  tmp |= (*(in + 8) - base) << 16;
        1: 8160:  *(uint32_t *)out = tmp;
        -: 8161:  out += sizeof(uint32_t);
        -: 8162:  /* consumed: 4 bytes (total: 24) */
        1: 8163:  tmp  = (*(in + 8) - base) >> (22 - 6);
        1: 8164:  tmp |= (*(in + 9) - base) << 6;
        1: 8165:  tmp |= (*(in + 10) - base) << 28;
        1: 8166:  *(uint32_t *)out = tmp;
        -: 8167:  out += sizeof(uint32_t);
        -: 8168:  /* consumed: 4 bytes (total: 28) */
        1: 8169:  tmp  = (*(in + 10) - base) >> (22 - 18);
        1: 8170:  tmp |= (*(in + 11) - base) << 18;
        1: 8171:  *(uint32_t *)out = tmp;
        -: 8172:  out += sizeof(uint32_t);
        -: 8173:  /* consumed: 4 bytes (total: 32) */
        1: 8174:  tmp  = (*(in + 11) - base) >> (22 - 8);
        1: 8175:  tmp |= (*(in + 12) - base) << 8;
        1: 8176:  tmp |= (*(in + 13) - base) << 30;
        1: 8177:  *(uint32_t *)out = tmp;
        -: 8178:  out += sizeof(uint32_t);
        -: 8179:  /* consumed: 4 bytes (total: 36) */
        1: 8180:  tmp  = (*(in + 13) - base) >> (22 - 20);
        1: 8181:  tmp |= (*(in + 14) - base) << 20;
        1: 8182:  *(uint32_t *)out = tmp;
        1: 8183:  out += sizeof(uint32_t);
        -: 8184:  /* consumed: 4 bytes (total: 40) */
        1: 8185:  tmp  = (*(in + 14) - base) >> (22 - 10);
        1: 8186:  tmp |= (*(in + 15) - base) << 10;
        -: 8187:  /* remaining: 0 bits */
        -: 8188:  length = (32 / 8) - (32 - 32) / 8;
        -: 8189:  /* consumed: 4 bytes (total: 44) */
        -: 8190:  memcpy(out, &tmp, length);
        1: 8191:  return 44;
        -: 8192:}
        -: 8193:
        -: 8194:static uint32_t
        1: 8195:unpack22_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8196:  uint32_t *in32 = (uint32_t *)in;
        -: 8197:  uint32_t tmp; (void)tmp;
        1: 8198:  *(out + 0)  = base + ((*in32 >> 0) & 4194303);
        1: 8199:  tmp = (*in32 >> 22);
        -: 8200:  in32++;
        -: 8201:  /* consumed: 4 bytes (total: 8) */
        1: 8202:  tmp |= (*in32 % (1U << 12)) << (22 - 12);
        1: 8203:  *(out + 1) = base + tmp;
        1: 8204:  tmp = (*in32 >> 12);
        -: 8205:  in32++;
        -: 8206:  /* consumed: 4 bytes (total: 12) */
        1: 8207:  tmp |= (*in32 % (1U << 2)) << (22 - 2);
        1: 8208:  *(out + 2) = base + tmp;
        1: 8209:  *(out + 3)  = base + ((*in32 >> 2) & 4194303);
        1: 8210:  tmp = (*in32 >> 24);
        -: 8211:  in32++;
        -: 8212:  /* consumed: 4 bytes (total: 16) */
        1: 8213:  tmp |= (*in32 % (1U << 14)) << (22 - 14);
        1: 8214:  *(out + 4) = base + tmp;
        1: 8215:  tmp = (*in32 >> 14);
        -: 8216:  in32++;
        -: 8217:  /* consumed: 4 bytes (total: 20) */
        1: 8218:  tmp |= (*in32 % (1U << 4)) << (22 - 4);
        1: 8219:  *(out + 5) = base + tmp;
        1: 8220:  *(out + 6)  = base + ((*in32 >> 4) & 4194303);
        1: 8221:  tmp = (*in32 >> 26);
        -: 8222:  in32++;
        -: 8223:  /* consumed: 4 bytes (total: 24) */
        1: 8224:  tmp |= (*in32 % (1U << 16)) << (22 - 16);
        1: 8225:  *(out + 7) = base + tmp;
        1: 8226:  tmp = (*in32 >> 16);
        -: 8227:  in32++;
        -: 8228:  /* consumed: 4 bytes (total: 28) */
        1: 8229:  tmp |= (*in32 % (1U << 6)) << (22 - 6);
        1: 8230:  *(out + 8) = base + tmp;
        1: 8231:  *(out + 9)  = base + ((*in32 >> 6) & 4194303);
        1: 8232:  tmp = (*in32 >> 28);
        -: 8233:  in32++;
        -: 8234:  /* consumed: 4 bytes (total: 32) */
        1: 8235:  tmp |= (*in32 % (1U << 18)) << (22 - 18);
        1: 8236:  *(out + 10) = base + tmp;
        1: 8237:  tmp = (*in32 >> 18);
        -: 8238:  in32++;
        -: 8239:  /* consumed: 4 bytes (total: 36) */
        1: 8240:  tmp |= (*in32 % (1U << 8)) << (22 - 8);
        1: 8241:  *(out + 11) = base + tmp;
        1: 8242:  *(out + 12)  = base + ((*in32 >> 8) & 4194303);
        1: 8243:  tmp = (*in32 >> 30);
        -: 8244:  in32++;
        -: 8245:  /* consumed: 4 bytes (total: 40) */
        1: 8246:  tmp |= (*in32 % (1U << 20)) << (22 - 20);
        1: 8247:  *(out + 13) = base + tmp;
        1: 8248:  tmp = (*in32 >> 20);
        -: 8249:  in32++;
        -: 8250:  /* consumed: 4 bytes (total: 44) */
        1: 8251:  tmp |= (*in32 % (1U << 10)) << (22 - 10);
        1: 8252:  *(out + 14) = base + tmp;
        1: 8253:  *(out + 15)  = base + ((*in32 >> 10) & 4194303);
        -: 8254:  /* remaining: 0 bits */
        1: 8255:  return 44;
        -: 8256:}
        -: 8257:
        -: 8258:static uint32_t
        1: 8259:pack23_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8260:  uint32_t tmp, length;
        1: 8261:  tmp  = (*(in + 0) - base) << 0;
        1: 8262:  tmp |= (*(in + 1) - base) << 23;
        1: 8263:  *(uint32_t *)out = tmp;
        -: 8264:  out += sizeof(uint32_t);
        -: 8265:  /* consumed: 4 bytes (total: 4) */
        1: 8266:  tmp  = (*(in + 1) - base) >> (23 - 14);
        1: 8267:  tmp |= (*(in + 2) - base) << 14;
        1: 8268:  *(uint32_t *)out = tmp;
        -: 8269:  out += sizeof(uint32_t);
        -: 8270:  /* consumed: 4 bytes (total: 8) */
        1: 8271:  tmp  = (*(in + 2) - base) >> (23 - 5);
        1: 8272:  tmp |= (*(in + 3) - base) << 5;
        1: 8273:  tmp |= (*(in + 4) - base) << 28;
        1: 8274:  *(uint32_t *)out = tmp;
        -: 8275:  out += sizeof(uint32_t);
        -: 8276:  /* consumed: 4 bytes (total: 12) */
        1: 8277:  tmp  = (*(in + 4) - base) >> (23 - 19);
        1: 8278:  tmp |= (*(in + 5) - base) << 19;
        1: 8279:  *(uint32_t *)out = tmp;
        -: 8280:  out += sizeof(uint32_t);
        -: 8281:  /* consumed: 4 bytes (total: 16) */
        1: 8282:  tmp  = (*(in + 5) - base) >> (23 - 10);
        1: 8283:  tmp |= (*(in + 6) - base) << 10;
        1: 8284:  *(uint32_t *)out = tmp;
        -: 8285:  out += sizeof(uint32_t);
        -: 8286:  /* consumed: 4 bytes (total: 20) */
        1: 8287:  tmp  = (*(in + 6) - base) >> (23 - 1);
        1: 8288:  tmp |= (*(in + 7) - base) << 1;
        1: 8289:  tmp |= (*(in + 8) - base) << 24;
        1: 8290:  *(uint32_t *)out = tmp;
        -: 8291:  out += sizeof(uint32_t);
        -: 8292:  /* consumed: 4 bytes (total: 24) */
        1: 8293:  tmp  = (*(in + 8) - base) >> (23 - 15);
        1: 8294:  tmp |= (*(in + 9) - base) << 15;
        1: 8295:  *(uint32_t *)out = tmp;
        -: 8296:  out += sizeof(uint32_t);
        -: 8297:  /* consumed: 4 bytes (total: 28) */
        1: 8298:  tmp  = (*(in + 9) - base) >> (23 - 6);
        1: 8299:  tmp |= (*(in + 10) - base) << 6;
        1: 8300:  tmp |= (*(in + 11) - base) << 29;
        1: 8301:  *(uint32_t *)out = tmp;
        -: 8302:  out += sizeof(uint32_t);
        -: 8303:  /* consumed: 4 bytes (total: 32) */
        1: 8304:  tmp  = (*(in + 11) - base) >> (23 - 20);
        1: 8305:  tmp |= (*(in + 12) - base) << 20;
        1: 8306:  *(uint32_t *)out = tmp;
        -: 8307:  out += sizeof(uint32_t);
        -: 8308:  /* consumed: 4 bytes (total: 36) */
        1: 8309:  tmp  = (*(in + 12) - base) >> (23 - 11);
        1: 8310:  tmp |= (*(in + 13) - base) << 11;
        1: 8311:  *(uint32_t *)out = tmp;
        -: 8312:  out += sizeof(uint32_t);
        -: 8313:  /* consumed: 4 bytes (total: 40) */
        1: 8314:  tmp  = (*(in + 13) - base) >> (23 - 2);
        1: 8315:  tmp |= (*(in + 14) - base) << 2;
        1: 8316:  tmp |= (*(in + 15) - base) << 25;
        1: 8317:  *(uint32_t *)out = tmp;
        1: 8318:  out += sizeof(uint32_t);
        -: 8319:  /* consumed: 4 bytes (total: 44) */
        1: 8320:  tmp  = (*(in + 15) - base) >> (23 - 16);
        -: 8321:  /* remaining: 16 bits */
        -: 8322:  length = (32 / 8) - (32 - 16) / 8;
        -: 8323:  /* consumed: 2 bytes (total: 46) */
        -: 8324:  memcpy(out, &tmp, length);
        1: 8325:  return 46;
        -: 8326:}
        -: 8327:
        -: 8328:static uint32_t
        1: 8329:unpack23_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8330:  uint32_t *in32 = (uint32_t *)in;
        -: 8331:  uint32_t tmp; (void)tmp;
        1: 8332:  *(out + 0)  = base + ((*in32 >> 0) & 8388607);
        1: 8333:  tmp = (*in32 >> 23);
        -: 8334:  in32++;
        -: 8335:  /* consumed: 4 bytes (total: 8) */
        1: 8336:  tmp |= (*in32 % (1U << 14)) << (23 - 14);
        1: 8337:  *(out + 1) = base + tmp;
        1: 8338:  tmp = (*in32 >> 14);
        -: 8339:  in32++;
        -: 8340:  /* consumed: 4 bytes (total: 12) */
        1: 8341:  tmp |= (*in32 % (1U << 5)) << (23 - 5);
        1: 8342:  *(out + 2) = base + tmp;
        1: 8343:  *(out + 3)  = base + ((*in32 >> 5) & 8388607);
        1: 8344:  tmp = (*in32 >> 28);
        -: 8345:  in32++;
        -: 8346:  /* consumed: 4 bytes (total: 16) */
        1: 8347:  tmp |= (*in32 % (1U << 19)) << (23 - 19);
        1: 8348:  *(out + 4) = base + tmp;
        1: 8349:  tmp = (*in32 >> 19);
        -: 8350:  in32++;
        -: 8351:  /* consumed: 4 bytes (total: 20) */
        1: 8352:  tmp |= (*in32 % (1U << 10)) << (23 - 10);
        1: 8353:  *(out + 5) = base + tmp;
        1: 8354:  tmp = (*in32 >> 10);
        -: 8355:  in32++;
        -: 8356:  /* consumed: 4 bytes (total: 24) */
        1: 8357:  tmp |= (*in32 % (1U << 1)) << (23 - 1);
        1: 8358:  *(out + 6) = base + tmp;
        1: 8359:  *(out + 7)  = base + ((*in32 >> 1) & 8388607);
        1: 8360:  tmp = (*in32 >> 24);
        -: 8361:  in32++;
        -: 8362:  /* consumed: 4 bytes (total: 28) */
        1: 8363:  tmp |= (*in32 % (1U << 15)) << (23 - 15);
        1: 8364:  *(out + 8) = base + tmp;
        1: 8365:  tmp = (*in32 >> 15);
        -: 8366:  in32++;
        -: 8367:  /* consumed: 4 bytes (total: 32) */
        1: 8368:  tmp |= (*in32 % (1U << 6)) << (23 - 6);
        1: 8369:  *(out + 9) = base + tmp;
        1: 8370:  *(out + 10)  = base + ((*in32 >> 6) & 8388607);
        1: 8371:  tmp = (*in32 >> 29);
        -: 8372:  in32++;
        -: 8373:  /* consumed: 4 bytes (total: 36) */
        1: 8374:  tmp |= (*in32 % (1U << 20)) << (23 - 20);
        1: 8375:  *(out + 11) = base + tmp;
        1: 8376:  tmp = (*in32 >> 20);
        -: 8377:  in32++;
        -: 8378:  /* consumed: 4 bytes (total: 40) */
        1: 8379:  tmp |= (*in32 % (1U << 11)) << (23 - 11);
        1: 8380:  *(out + 12) = base + tmp;
        1: 8381:  tmp = (*in32 >> 11);
        -: 8382:  in32++;
        -: 8383:  /* consumed: 4 bytes (total: 44) */
        1: 8384:  tmp |= (*in32 % (1U << 2)) << (23 - 2);
        1: 8385:  *(out + 13) = base + tmp;
        1: 8386:  *(out + 14)  = base + ((*in32 >> 2) & 8388607);
        1: 8387:  tmp = (*in32 >> 25);
        -: 8388:  in32++;
        -: 8389:  /* consumed: 4 bytes (total: 48) */
        1: 8390:  tmp |= (*in32 % (1U << 16)) << (23 - 16);
        1: 8391:  *(out + 15) = base + tmp;
        -: 8392:  /* remaining: 16 bits */
        1: 8393:  return 46;
        -: 8394:}
        -: 8395:
        -: 8396:static uint32_t
        1: 8397:pack24_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8398:  uint32_t tmp, length;
        1: 8399:  tmp  = (*(in + 0) - base) << 0;
        1: 8400:  tmp |= (*(in + 1) - base) << 24;
        1: 8401:  *(uint32_t *)out = tmp;
        -: 8402:  out += sizeof(uint32_t);
        -: 8403:  /* consumed: 4 bytes (total: 4) */
        1: 8404:  tmp  = (*(in + 1) - base) >> (24 - 16);
        1: 8405:  tmp |= (*(in + 2) - base) << 16;
        1: 8406:  *(uint32_t *)out = tmp;
        -: 8407:  out += sizeof(uint32_t);
        -: 8408:  /* consumed: 4 bytes (total: 8) */
        1: 8409:  tmp  = (*(in + 2) - base) >> (24 - 8);
        1: 8410:  tmp |= (*(in + 3) - base) << 8;
        1: 8411:  *(uint32_t *)out = tmp;
        -: 8412:  out += sizeof(uint32_t);
        -: 8413:  /* consumed: 4 bytes (total: 12) */
        1: 8414:  tmp  = (*(in + 4) - base) << 0;
        1: 8415:  tmp |= (*(in + 5) - base) << 24;
        1: 8416:  *(uint32_t *)out = tmp;
        -: 8417:  out += sizeof(uint32_t);
        -: 8418:  /* consumed: 4 bytes (total: 16) */
        1: 8419:  tmp  = (*(in + 5) - base) >> (24 - 16);
        1: 8420:  tmp |= (*(in + 6) - base) << 16;
        1: 8421:  *(uint32_t *)out = tmp;
        -: 8422:  out += sizeof(uint32_t);
        -: 8423:  /* consumed: 4 bytes (total: 20) */
        1: 8424:  tmp  = (*(in + 6) - base) >> (24 - 8);
        1: 8425:  tmp |= (*(in + 7) - base) << 8;
        1: 8426:  *(uint32_t *)out = tmp;
        -: 8427:  out += sizeof(uint32_t);
        -: 8428:  /* consumed: 4 bytes (total: 24) */
        1: 8429:  tmp  = (*(in + 8) - base) << 0;
        1: 8430:  tmp |= (*(in + 9) - base) << 24;
        1: 8431:  *(uint32_t *)out = tmp;
        -: 8432:  out += sizeof(uint32_t);
        -: 8433:  /* consumed: 4 bytes (total: 28) */
        1: 8434:  tmp  = (*(in + 9) - base) >> (24 - 16);
        1: 8435:  tmp |= (*(in + 10) - base) << 16;
        1: 8436:  *(uint32_t *)out = tmp;
        -: 8437:  out += sizeof(uint32_t);
        -: 8438:  /* consumed: 4 bytes (total: 32) */
        1: 8439:  tmp  = (*(in + 10) - base) >> (24 - 8);
        1: 8440:  tmp |= (*(in + 11) - base) << 8;
        1: 8441:  *(uint32_t *)out = tmp;
        -: 8442:  out += sizeof(uint32_t);
        -: 8443:  /* consumed: 4 bytes (total: 36) */
        1: 8444:  tmp  = (*(in + 12) - base) << 0;
        1: 8445:  tmp |= (*(in + 13) - base) << 24;
        1: 8446:  *(uint32_t *)out = tmp;
        -: 8447:  out += sizeof(uint32_t);
        -: 8448:  /* consumed: 4 bytes (total: 40) */
        1: 8449:  tmp  = (*(in + 13) - base) >> (24 - 16);
        1: 8450:  tmp |= (*(in + 14) - base) << 16;
        1: 8451:  *(uint32_t *)out = tmp;
        1: 8452:  out += sizeof(uint32_t);
        -: 8453:  /* consumed: 4 bytes (total: 44) */
        1: 8454:  tmp  = (*(in + 14) - base) >> (24 - 8);
        1: 8455:  tmp |= (*(in + 15) - base) << 8;
        -: 8456:  /* remaining: 0 bits */
        -: 8457:  length = (32 / 8) - (32 - 32) / 8;
        -: 8458:  /* consumed: 4 bytes (total: 48) */
        -: 8459:  memcpy(out, &tmp, length);
        1: 8460:  return 48;
        -: 8461:}
        -: 8462:
        -: 8463:static uint32_t
        1: 8464:unpack24_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8465:  uint32_t *in32 = (uint32_t *)in;
        -: 8466:  uint32_t tmp; (void)tmp;
        1: 8467:  *(out + 0)  = base + ((*in32 >> 0) & 16777215);
        1: 8468:  tmp = (*in32 >> 24);
        -: 8469:  in32++;
        -: 8470:  /* consumed: 4 bytes (total: 8) */
        1: 8471:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 8472:  *(out + 1) = base + tmp;
        1: 8473:  tmp = (*in32 >> 16);
        -: 8474:  in32++;
        -: 8475:  /* consumed: 4 bytes (total: 12) */
        1: 8476:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 8477:  *(out + 2) = base + tmp;
        1: 8478:  *(out + 3)  = base + ((*in32 >> 8) & 16777215);
        -: 8479:  in32++;
        -: 8480:  /* consumed: 4 bytes (total: 16) */
        1: 8481:  *(out + 4)  = base + ((*in32 >> 0) & 16777215);
        1: 8482:  tmp = (*in32 >> 24);
        -: 8483:  in32++;
        -: 8484:  /* consumed: 4 bytes (total: 20) */
        1: 8485:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 8486:  *(out + 5) = base + tmp;
        1: 8487:  tmp = (*in32 >> 16);
        -: 8488:  in32++;
        -: 8489:  /* consumed: 4 bytes (total: 24) */
        1: 8490:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 8491:  *(out + 6) = base + tmp;
        1: 8492:  *(out + 7)  = base + ((*in32 >> 8) & 16777215);
        -: 8493:  in32++;
        -: 8494:  /* consumed: 4 bytes (total: 28) */
        1: 8495:  *(out + 8)  = base + ((*in32 >> 0) & 16777215);
        1: 8496:  tmp = (*in32 >> 24);
        -: 8497:  in32++;
        -: 8498:  /* consumed: 4 bytes (total: 32) */
        1: 8499:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 8500:  *(out + 9) = base + tmp;
        1: 8501:  tmp = (*in32 >> 16);
        -: 8502:  in32++;
        -: 8503:  /* consumed: 4 bytes (total: 36) */
        1: 8504:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 8505:  *(out + 10) = base + tmp;
        1: 8506:  *(out + 11)  = base + ((*in32 >> 8) & 16777215);
        -: 8507:  in32++;
        -: 8508:  /* consumed: 4 bytes (total: 40) */
        1: 8509:  *(out + 12)  = base + ((*in32 >> 0) & 16777215);
        1: 8510:  tmp = (*in32 >> 24);
        -: 8511:  in32++;
        -: 8512:  /* consumed: 4 bytes (total: 44) */
        1: 8513:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        1: 8514:  *(out + 13) = base + tmp;
        1: 8515:  tmp = (*in32 >> 16);
        -: 8516:  in32++;
        -: 8517:  /* consumed: 4 bytes (total: 48) */
        1: 8518:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        1: 8519:  *(out + 14) = base + tmp;
        1: 8520:  *(out + 15)  = base + ((*in32 >> 8) & 16777215);
        -: 8521:  /* remaining: 0 bits */
        1: 8522:  return 48;
        -: 8523:}
        -: 8524:
        -: 8525:static uint32_t
        1: 8526:pack25_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8527:  uint32_t tmp, length;
        1: 8528:  tmp  = (*(in + 0) - base) << 0;
        1: 8529:  tmp |= (*(in + 1) - base) << 25;
        1: 8530:  *(uint32_t *)out = tmp;
        -: 8531:  out += sizeof(uint32_t);
        -: 8532:  /* consumed: 4 bytes (total: 4) */
        1: 8533:  tmp  = (*(in + 1) - base) >> (25 - 18);
        1: 8534:  tmp |= (*(in + 2) - base) << 18;
        1: 8535:  *(uint32_t *)out = tmp;
        -: 8536:  out += sizeof(uint32_t);
        -: 8537:  /* consumed: 4 bytes (total: 8) */
        1: 8538:  tmp  = (*(in + 2) - base) >> (25 - 11);
        1: 8539:  tmp |= (*(in + 3) - base) << 11;
        1: 8540:  *(uint32_t *)out = tmp;
        -: 8541:  out += sizeof(uint32_t);
        -: 8542:  /* consumed: 4 bytes (total: 12) */
        1: 8543:  tmp  = (*(in + 3) - base) >> (25 - 4);
        1: 8544:  tmp |= (*(in + 4) - base) << 4;
        1: 8545:  tmp |= (*(in + 5) - base) << 29;
        1: 8546:  *(uint32_t *)out = tmp;
        -: 8547:  out += sizeof(uint32_t);
        -: 8548:  /* consumed: 4 bytes (total: 16) */
        1: 8549:  tmp  = (*(in + 5) - base) >> (25 - 22);
        1: 8550:  tmp |= (*(in + 6) - base) << 22;
        1: 8551:  *(uint32_t *)out = tmp;
        -: 8552:  out += sizeof(uint32_t);
        -: 8553:  /* consumed: 4 bytes (total: 20) */
        1: 8554:  tmp  = (*(in + 6) - base) >> (25 - 15);
        1: 8555:  tmp |= (*(in + 7) - base) << 15;
        1: 8556:  *(uint32_t *)out = tmp;
        -: 8557:  out += sizeof(uint32_t);
        -: 8558:  /* consumed: 4 bytes (total: 24) */
        1: 8559:  tmp  = (*(in + 7) - base) >> (25 - 8);
        1: 8560:  tmp |= (*(in + 8) - base) << 8;
        1: 8561:  *(uint32_t *)out = tmp;
        -: 8562:  out += sizeof(uint32_t);
        -: 8563:  /* consumed: 4 bytes (total: 28) */
        1: 8564:  tmp  = (*(in + 8) - base) >> (25 - 1);
        1: 8565:  tmp |= (*(in + 9) - base) << 1;
        1: 8566:  tmp |= (*(in + 10) - base) << 26;
        1: 8567:  *(uint32_t *)out = tmp;
        -: 8568:  out += sizeof(uint32_t);
        -: 8569:  /* consumed: 4 bytes (total: 32) */
        1: 8570:  tmp  = (*(in + 10) - base) >> (25 - 19);
        1: 8571:  tmp |= (*(in + 11) - base) << 19;
        1: 8572:  *(uint32_t *)out = tmp;
        -: 8573:  out += sizeof(uint32_t);
        -: 8574:  /* consumed: 4 bytes (total: 36) */
        1: 8575:  tmp  = (*(in + 11) - base) >> (25 - 12);
        1: 8576:  tmp |= (*(in + 12) - base) << 12;
        1: 8577:  *(uint32_t *)out = tmp;
        -: 8578:  out += sizeof(uint32_t);
        -: 8579:  /* consumed: 4 bytes (total: 40) */
        1: 8580:  tmp  = (*(in + 12) - base) >> (25 - 5);
        1: 8581:  tmp |= (*(in + 13) - base) << 5;
        1: 8582:  tmp |= (*(in + 14) - base) << 30;
        1: 8583:  *(uint32_t *)out = tmp;
        -: 8584:  out += sizeof(uint32_t);
        -: 8585:  /* consumed: 4 bytes (total: 44) */
        1: 8586:  tmp  = (*(in + 14) - base) >> (25 - 23);
        1: 8587:  tmp |= (*(in + 15) - base) << 23;
        1: 8588:  *(uint32_t *)out = tmp;
        1: 8589:  out += sizeof(uint32_t);
        -: 8590:  /* consumed: 4 bytes (total: 48) */
        1: 8591:  tmp  = (*(in + 15) - base) >> (25 - 16);
        -: 8592:  /* remaining: 16 bits */
        -: 8593:  length = (32 / 8) - (32 - 16) / 8;
        -: 8594:  /* consumed: 2 bytes (total: 50) */
        -: 8595:  memcpy(out, &tmp, length);
        1: 8596:  return 50;
        -: 8597:}
        -: 8598:
        -: 8599:static uint32_t
        1: 8600:unpack25_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8601:  uint32_t *in32 = (uint32_t *)in;
        -: 8602:  uint32_t tmp; (void)tmp;
        1: 8603:  *(out + 0)  = base + ((*in32 >> 0) & 33554431);
        1: 8604:  tmp = (*in32 >> 25);
        -: 8605:  in32++;
        -: 8606:  /* consumed: 4 bytes (total: 8) */
        1: 8607:  tmp |= (*in32 % (1U << 18)) << (25 - 18);
        1: 8608:  *(out + 1) = base + tmp;
        1: 8609:  tmp = (*in32 >> 18);
        -: 8610:  in32++;
        -: 8611:  /* consumed: 4 bytes (total: 12) */
        1: 8612:  tmp |= (*in32 % (1U << 11)) << (25 - 11);
        1: 8613:  *(out + 2) = base + tmp;
        1: 8614:  tmp = (*in32 >> 11);
        -: 8615:  in32++;
        -: 8616:  /* consumed: 4 bytes (total: 16) */
        1: 8617:  tmp |= (*in32 % (1U << 4)) << (25 - 4);
        1: 8618:  *(out + 3) = base + tmp;
        1: 8619:  *(out + 4)  = base + ((*in32 >> 4) & 33554431);
        1: 8620:  tmp = (*in32 >> 29);
        -: 8621:  in32++;
        -: 8622:  /* consumed: 4 bytes (total: 20) */
        1: 8623:  tmp |= (*in32 % (1U << 22)) << (25 - 22);
        1: 8624:  *(out + 5) = base + tmp;
        1: 8625:  tmp = (*in32 >> 22);
        -: 8626:  in32++;
        -: 8627:  /* consumed: 4 bytes (total: 24) */
        1: 8628:  tmp |= (*in32 % (1U << 15)) << (25 - 15);
        1: 8629:  *(out + 6) = base + tmp;
        1: 8630:  tmp = (*in32 >> 15);
        -: 8631:  in32++;
        -: 8632:  /* consumed: 4 bytes (total: 28) */
        1: 8633:  tmp |= (*in32 % (1U << 8)) << (25 - 8);
        1: 8634:  *(out + 7) = base + tmp;
        1: 8635:  tmp = (*in32 >> 8);
        -: 8636:  in32++;
        -: 8637:  /* consumed: 4 bytes (total: 32) */
        1: 8638:  tmp |= (*in32 % (1U << 1)) << (25 - 1);
        1: 8639:  *(out + 8) = base + tmp;
        1: 8640:  *(out + 9)  = base + ((*in32 >> 1) & 33554431);
        1: 8641:  tmp = (*in32 >> 26);
        -: 8642:  in32++;
        -: 8643:  /* consumed: 4 bytes (total: 36) */
        1: 8644:  tmp |= (*in32 % (1U << 19)) << (25 - 19);
        1: 8645:  *(out + 10) = base + tmp;
        1: 8646:  tmp = (*in32 >> 19);
        -: 8647:  in32++;
        -: 8648:  /* consumed: 4 bytes (total: 40) */
        1: 8649:  tmp |= (*in32 % (1U << 12)) << (25 - 12);
        1: 8650:  *(out + 11) = base + tmp;
        1: 8651:  tmp = (*in32 >> 12);
        -: 8652:  in32++;
        -: 8653:  /* consumed: 4 bytes (total: 44) */
        1: 8654:  tmp |= (*in32 % (1U << 5)) << (25 - 5);
        1: 8655:  *(out + 12) = base + tmp;
        1: 8656:  *(out + 13)  = base + ((*in32 >> 5) & 33554431);
        1: 8657:  tmp = (*in32 >> 30);
        -: 8658:  in32++;
        -: 8659:  /* consumed: 4 bytes (total: 48) */
        1: 8660:  tmp |= (*in32 % (1U << 23)) << (25 - 23);
        1: 8661:  *(out + 14) = base + tmp;
        1: 8662:  tmp = (*in32 >> 23);
        -: 8663:  in32++;
        -: 8664:  /* consumed: 4 bytes (total: 52) */
        1: 8665:  tmp |= (*in32 % (1U << 16)) << (25 - 16);
        1: 8666:  *(out + 15) = base + tmp;
        -: 8667:  /* remaining: 16 bits */
        1: 8668:  return 50;
        -: 8669:}
        -: 8670:
        -: 8671:static uint32_t
        1: 8672:pack26_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8673:  uint32_t tmp, length;
        1: 8674:  tmp  = (*(in + 0) - base) << 0;
        1: 8675:  tmp |= (*(in + 1) - base) << 26;
        1: 8676:  *(uint32_t *)out = tmp;
        -: 8677:  out += sizeof(uint32_t);
        -: 8678:  /* consumed: 4 bytes (total: 4) */
        1: 8679:  tmp  = (*(in + 1) - base) >> (26 - 20);
        1: 8680:  tmp |= (*(in + 2) - base) << 20;
        1: 8681:  *(uint32_t *)out = tmp;
        -: 8682:  out += sizeof(uint32_t);
        -: 8683:  /* consumed: 4 bytes (total: 8) */
        1: 8684:  tmp  = (*(in + 2) - base) >> (26 - 14);
        1: 8685:  tmp |= (*(in + 3) - base) << 14;
        1: 8686:  *(uint32_t *)out = tmp;
        -: 8687:  out += sizeof(uint32_t);
        -: 8688:  /* consumed: 4 bytes (total: 12) */
        1: 8689:  tmp  = (*(in + 3) - base) >> (26 - 8);
        1: 8690:  tmp |= (*(in + 4) - base) << 8;
        1: 8691:  *(uint32_t *)out = tmp;
        -: 8692:  out += sizeof(uint32_t);
        -: 8693:  /* consumed: 4 bytes (total: 16) */
        1: 8694:  tmp  = (*(in + 4) - base) >> (26 - 2);
        1: 8695:  tmp |= (*(in + 5) - base) << 2;
        1: 8696:  tmp |= (*(in + 6) - base) << 28;
        1: 8697:  *(uint32_t *)out = tmp;
        -: 8698:  out += sizeof(uint32_t);
        -: 8699:  /* consumed: 4 bytes (total: 20) */
        1: 8700:  tmp  = (*(in + 6) - base) >> (26 - 22);
        1: 8701:  tmp |= (*(in + 7) - base) << 22;
        1: 8702:  *(uint32_t *)out = tmp;
        -: 8703:  out += sizeof(uint32_t);
        -: 8704:  /* consumed: 4 bytes (total: 24) */
        1: 8705:  tmp  = (*(in + 7) - base) >> (26 - 16);
        1: 8706:  tmp |= (*(in + 8) - base) << 16;
        1: 8707:  *(uint32_t *)out = tmp;
        -: 8708:  out += sizeof(uint32_t);
        -: 8709:  /* consumed: 4 bytes (total: 28) */
        1: 8710:  tmp  = (*(in + 8) - base) >> (26 - 10);
        1: 8711:  tmp |= (*(in + 9) - base) << 10;
        1: 8712:  *(uint32_t *)out = tmp;
        -: 8713:  out += sizeof(uint32_t);
        -: 8714:  /* consumed: 4 bytes (total: 32) */
        1: 8715:  tmp  = (*(in + 9) - base) >> (26 - 4);
        1: 8716:  tmp |= (*(in + 10) - base) << 4;
        1: 8717:  tmp |= (*(in + 11) - base) << 30;
        1: 8718:  *(uint32_t *)out = tmp;
        -: 8719:  out += sizeof(uint32_t);
        -: 8720:  /* consumed: 4 bytes (total: 36) */
        1: 8721:  tmp  = (*(in + 11) - base) >> (26 - 24);
        1: 8722:  tmp |= (*(in + 12) - base) << 24;
        1: 8723:  *(uint32_t *)out = tmp;
        -: 8724:  out += sizeof(uint32_t);
        -: 8725:  /* consumed: 4 bytes (total: 40) */
        1: 8726:  tmp  = (*(in + 12) - base) >> (26 - 18);
        1: 8727:  tmp |= (*(in + 13) - base) << 18;
        1: 8728:  *(uint32_t *)out = tmp;
        -: 8729:  out += sizeof(uint32_t);
        -: 8730:  /* consumed: 4 bytes (total: 44) */
        1: 8731:  tmp  = (*(in + 13) - base) >> (26 - 12);
        1: 8732:  tmp |= (*(in + 14) - base) << 12;
        1: 8733:  *(uint32_t *)out = tmp;
        1: 8734:  out += sizeof(uint32_t);
        -: 8735:  /* consumed: 4 bytes (total: 48) */
        1: 8736:  tmp  = (*(in + 14) - base) >> (26 - 6);
        1: 8737:  tmp |= (*(in + 15) - base) << 6;
        -: 8738:  /* remaining: 0 bits */
        -: 8739:  length = (32 / 8) - (32 - 32) / 8;
        -: 8740:  /* consumed: 4 bytes (total: 52) */
        -: 8741:  memcpy(out, &tmp, length);
        1: 8742:  return 52;
        -: 8743:}
        -: 8744:
        -: 8745:static uint32_t
        1: 8746:unpack26_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8747:  uint32_t *in32 = (uint32_t *)in;
        -: 8748:  uint32_t tmp; (void)tmp;
        1: 8749:  *(out + 0)  = base + ((*in32 >> 0) & 67108863);
        1: 8750:  tmp = (*in32 >> 26);
        -: 8751:  in32++;
        -: 8752:  /* consumed: 4 bytes (total: 8) */
        1: 8753:  tmp |= (*in32 % (1U << 20)) << (26 - 20);
        1: 8754:  *(out + 1) = base + tmp;
        1: 8755:  tmp = (*in32 >> 20);
        -: 8756:  in32++;
        -: 8757:  /* consumed: 4 bytes (total: 12) */
        1: 8758:  tmp |= (*in32 % (1U << 14)) << (26 - 14);
        1: 8759:  *(out + 2) = base + tmp;
        1: 8760:  tmp = (*in32 >> 14);
        -: 8761:  in32++;
        -: 8762:  /* consumed: 4 bytes (total: 16) */
        1: 8763:  tmp |= (*in32 % (1U << 8)) << (26 - 8);
        1: 8764:  *(out + 3) = base + tmp;
        1: 8765:  tmp = (*in32 >> 8);
        -: 8766:  in32++;
        -: 8767:  /* consumed: 4 bytes (total: 20) */
        1: 8768:  tmp |= (*in32 % (1U << 2)) << (26 - 2);
        1: 8769:  *(out + 4) = base + tmp;
        1: 8770:  *(out + 5)  = base + ((*in32 >> 2) & 67108863);
        1: 8771:  tmp = (*in32 >> 28);
        -: 8772:  in32++;
        -: 8773:  /* consumed: 4 bytes (total: 24) */
        1: 8774:  tmp |= (*in32 % (1U << 22)) << (26 - 22);
        1: 8775:  *(out + 6) = base + tmp;
        1: 8776:  tmp = (*in32 >> 22);
        -: 8777:  in32++;
        -: 8778:  /* consumed: 4 bytes (total: 28) */
        1: 8779:  tmp |= (*in32 % (1U << 16)) << (26 - 16);
        1: 8780:  *(out + 7) = base + tmp;
        1: 8781:  tmp = (*in32 >> 16);
        -: 8782:  in32++;
        -: 8783:  /* consumed: 4 bytes (total: 32) */
        1: 8784:  tmp |= (*in32 % (1U << 10)) << (26 - 10);
        1: 8785:  *(out + 8) = base + tmp;
        1: 8786:  tmp = (*in32 >> 10);
        -: 8787:  in32++;
        -: 8788:  /* consumed: 4 bytes (total: 36) */
        1: 8789:  tmp |= (*in32 % (1U << 4)) << (26 - 4);
        1: 8790:  *(out + 9) = base + tmp;
        1: 8791:  *(out + 10)  = base + ((*in32 >> 4) & 67108863);
        1: 8792:  tmp = (*in32 >> 30);
        -: 8793:  in32++;
        -: 8794:  /* consumed: 4 bytes (total: 40) */
        1: 8795:  tmp |= (*in32 % (1U << 24)) << (26 - 24);
        1: 8796:  *(out + 11) = base + tmp;
        1: 8797:  tmp = (*in32 >> 24);
        -: 8798:  in32++;
        -: 8799:  /* consumed: 4 bytes (total: 44) */
        1: 8800:  tmp |= (*in32 % (1U << 18)) << (26 - 18);
        1: 8801:  *(out + 12) = base + tmp;
        1: 8802:  tmp = (*in32 >> 18);
        -: 8803:  in32++;
        -: 8804:  /* consumed: 4 bytes (total: 48) */
        1: 8805:  tmp |= (*in32 % (1U << 12)) << (26 - 12);
        1: 8806:  *(out + 13) = base + tmp;
        1: 8807:  tmp = (*in32 >> 12);
        -: 8808:  in32++;
        -: 8809:  /* consumed: 4 bytes (total: 52) */
        1: 8810:  tmp |= (*in32 % (1U << 6)) << (26 - 6);
        1: 8811:  *(out + 14) = base + tmp;
        1: 8812:  *(out + 15)  = base + ((*in32 >> 6) & 67108863);
        -: 8813:  /* remaining: 0 bits */
        1: 8814:  return 52;
        -: 8815:}
        -: 8816:
        -: 8817:static uint32_t
        1: 8818:pack27_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8819:  uint32_t tmp, length;
        1: 8820:  tmp  = (*(in + 0) - base) << 0;
        1: 8821:  tmp |= (*(in + 1) - base) << 27;
        1: 8822:  *(uint32_t *)out = tmp;
        -: 8823:  out += sizeof(uint32_t);
        -: 8824:  /* consumed: 4 bytes (total: 4) */
        1: 8825:  tmp  = (*(in + 1) - base) >> (27 - 22);
        1: 8826:  tmp |= (*(in + 2) - base) << 22;
        1: 8827:  *(uint32_t *)out = tmp;
        -: 8828:  out += sizeof(uint32_t);
        -: 8829:  /* consumed: 4 bytes (total: 8) */
        1: 8830:  tmp  = (*(in + 2) - base) >> (27 - 17);
        1: 8831:  tmp |= (*(in + 3) - base) << 17;
        1: 8832:  *(uint32_t *)out = tmp;
        -: 8833:  out += sizeof(uint32_t);
        -: 8834:  /* consumed: 4 bytes (total: 12) */
        1: 8835:  tmp  = (*(in + 3) - base) >> (27 - 12);
        1: 8836:  tmp |= (*(in + 4) - base) << 12;
        1: 8837:  *(uint32_t *)out = tmp;
        -: 8838:  out += sizeof(uint32_t);
        -: 8839:  /* consumed: 4 bytes (total: 16) */
        1: 8840:  tmp  = (*(in + 4) - base) >> (27 - 7);
        1: 8841:  tmp |= (*(in + 5) - base) << 7;
        1: 8842:  *(uint32_t *)out = tmp;
        -: 8843:  out += sizeof(uint32_t);
        -: 8844:  /* consumed: 4 bytes (total: 20) */
        1: 8845:  tmp  = (*(in + 5) - base) >> (27 - 2);
        1: 8846:  tmp |= (*(in + 6) - base) << 2;
        1: 8847:  tmp |= (*(in + 7) - base) << 29;
        1: 8848:  *(uint32_t *)out = tmp;
        -: 8849:  out += sizeof(uint32_t);
        -: 8850:  /* consumed: 4 bytes (total: 24) */
        1: 8851:  tmp  = (*(in + 7) - base) >> (27 - 24);
        1: 8852:  tmp |= (*(in + 8) - base) << 24;
        1: 8853:  *(uint32_t *)out = tmp;
        -: 8854:  out += sizeof(uint32_t);
        -: 8855:  /* consumed: 4 bytes (total: 28) */
        1: 8856:  tmp  = (*(in + 8) - base) >> (27 - 19);
        1: 8857:  tmp |= (*(in + 9) - base) << 19;
        1: 8858:  *(uint32_t *)out = tmp;
        -: 8859:  out += sizeof(uint32_t);
        -: 8860:  /* consumed: 4 bytes (total: 32) */
        1: 8861:  tmp  = (*(in + 9) - base) >> (27 - 14);
        1: 8862:  tmp |= (*(in + 10) - base) << 14;
        1: 8863:  *(uint32_t *)out = tmp;
        -: 8864:  out += sizeof(uint32_t);
        -: 8865:  /* consumed: 4 bytes (total: 36) */
        1: 8866:  tmp  = (*(in + 10) - base) >> (27 - 9);
        1: 8867:  tmp |= (*(in + 11) - base) << 9;
        1: 8868:  *(uint32_t *)out = tmp;
        -: 8869:  out += sizeof(uint32_t);
        -: 8870:  /* consumed: 4 bytes (total: 40) */
        1: 8871:  tmp  = (*(in + 11) - base) >> (27 - 4);
        1: 8872:  tmp |= (*(in + 12) - base) << 4;
        1: 8873:  tmp |= (*(in + 13) - base) << 31;
        1: 8874:  *(uint32_t *)out = tmp;
        -: 8875:  out += sizeof(uint32_t);
        -: 8876:  /* consumed: 4 bytes (total: 44) */
        1: 8877:  tmp  = (*(in + 13) - base) >> (27 - 26);
        1: 8878:  tmp |= (*(in + 14) - base) << 26;
        1: 8879:  *(uint32_t *)out = tmp;
        -: 8880:  out += sizeof(uint32_t);
        -: 8881:  /* consumed: 4 bytes (total: 48) */
        1: 8882:  tmp  = (*(in + 14) - base) >> (27 - 21);
        1: 8883:  tmp |= (*(in + 15) - base) << 21;
        1: 8884:  *(uint32_t *)out = tmp;
        1: 8885:  out += sizeof(uint32_t);
        -: 8886:  /* consumed: 4 bytes (total: 52) */
        1: 8887:  tmp  = (*(in + 15) - base) >> (27 - 16);
        -: 8888:  /* remaining: 16 bits */
        -: 8889:  length = (32 / 8) - (32 - 16) / 8;
        -: 8890:  /* consumed: 2 bytes (total: 54) */
        -: 8891:  memcpy(out, &tmp, length);
        1: 8892:  return 54;
        -: 8893:}
        -: 8894:
        -: 8895:static uint32_t
        1: 8896:unpack27_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 8897:  uint32_t *in32 = (uint32_t *)in;
        -: 8898:  uint32_t tmp; (void)tmp;
        1: 8899:  *(out + 0)  = base + ((*in32 >> 0) & 134217727);
        1: 8900:  tmp = (*in32 >> 27);
        -: 8901:  in32++;
        -: 8902:  /* consumed: 4 bytes (total: 8) */
        1: 8903:  tmp |= (*in32 % (1U << 22)) << (27 - 22);
        1: 8904:  *(out + 1) = base + tmp;
        1: 8905:  tmp = (*in32 >> 22);
        -: 8906:  in32++;
        -: 8907:  /* consumed: 4 bytes (total: 12) */
        1: 8908:  tmp |= (*in32 % (1U << 17)) << (27 - 17);
        1: 8909:  *(out + 2) = base + tmp;
        1: 8910:  tmp = (*in32 >> 17);
        -: 8911:  in32++;
        -: 8912:  /* consumed: 4 bytes (total: 16) */
        1: 8913:  tmp |= (*in32 % (1U << 12)) << (27 - 12);
        1: 8914:  *(out + 3) = base + tmp;
        1: 8915:  tmp = (*in32 >> 12);
        -: 8916:  in32++;
        -: 8917:  /* consumed: 4 bytes (total: 20) */
        1: 8918:  tmp |= (*in32 % (1U << 7)) << (27 - 7);
        1: 8919:  *(out + 4) = base + tmp;
        1: 8920:  tmp = (*in32 >> 7);
        -: 8921:  in32++;
        -: 8922:  /* consumed: 4 bytes (total: 24) */
        1: 8923:  tmp |= (*in32 % (1U << 2)) << (27 - 2);
        1: 8924:  *(out + 5) = base + tmp;
        1: 8925:  *(out + 6)  = base + ((*in32 >> 2) & 134217727);
        1: 8926:  tmp = (*in32 >> 29);
        -: 8927:  in32++;
        -: 8928:  /* consumed: 4 bytes (total: 28) */
        1: 8929:  tmp |= (*in32 % (1U << 24)) << (27 - 24);
        1: 8930:  *(out + 7) = base + tmp;
        1: 8931:  tmp = (*in32 >> 24);
        -: 8932:  in32++;
        -: 8933:  /* consumed: 4 bytes (total: 32) */
        1: 8934:  tmp |= (*in32 % (1U << 19)) << (27 - 19);
        1: 8935:  *(out + 8) = base + tmp;
        1: 8936:  tmp = (*in32 >> 19);
        -: 8937:  in32++;
        -: 8938:  /* consumed: 4 bytes (total: 36) */
        1: 8939:  tmp |= (*in32 % (1U << 14)) << (27 - 14);
        1: 8940:  *(out + 9) = base + tmp;
        1: 8941:  tmp = (*in32 >> 14);
        -: 8942:  in32++;
        -: 8943:  /* consumed: 4 bytes (total: 40) */
        1: 8944:  tmp |= (*in32 % (1U << 9)) << (27 - 9);
        1: 8945:  *(out + 10) = base + tmp;
        1: 8946:  tmp = (*in32 >> 9);
        -: 8947:  in32++;
        -: 8948:  /* consumed: 4 bytes (total: 44) */
        1: 8949:  tmp |= (*in32 % (1U << 4)) << (27 - 4);
        1: 8950:  *(out + 11) = base + tmp;
        1: 8951:  *(out + 12)  = base + ((*in32 >> 4) & 134217727);
        1: 8952:  tmp = (*in32 >> 31);
        -: 8953:  in32++;
        -: 8954:  /* consumed: 4 bytes (total: 48) */
        1: 8955:  tmp |= (*in32 % (1U << 26)) << (27 - 26);
        1: 8956:  *(out + 13) = base + tmp;
        1: 8957:  tmp = (*in32 >> 26);
        -: 8958:  in32++;
        -: 8959:  /* consumed: 4 bytes (total: 52) */
        1: 8960:  tmp |= (*in32 % (1U << 21)) << (27 - 21);
        1: 8961:  *(out + 14) = base + tmp;
        1: 8962:  tmp = (*in32 >> 21);
        -: 8963:  in32++;
        -: 8964:  /* consumed: 4 bytes (total: 56) */
        1: 8965:  tmp |= (*in32 % (1U << 16)) << (27 - 16);
        1: 8966:  *(out + 15) = base + tmp;
        -: 8967:  /* remaining: 16 bits */
        1: 8968:  return 54;
        -: 8969:}
        -: 8970:
        -: 8971:static uint32_t
        1: 8972:pack28_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 8973:  uint32_t tmp, length;
        1: 8974:  tmp  = (*(in + 0) - base) << 0;
        1: 8975:  tmp |= (*(in + 1) - base) << 28;
        1: 8976:  *(uint32_t *)out = tmp;
        -: 8977:  out += sizeof(uint32_t);
        -: 8978:  /* consumed: 4 bytes (total: 4) */
        1: 8979:  tmp  = (*(in + 1) - base) >> (28 - 24);
        1: 8980:  tmp |= (*(in + 2) - base) << 24;
        1: 8981:  *(uint32_t *)out = tmp;
        -: 8982:  out += sizeof(uint32_t);
        -: 8983:  /* consumed: 4 bytes (total: 8) */
        1: 8984:  tmp  = (*(in + 2) - base) >> (28 - 20);
        1: 8985:  tmp |= (*(in + 3) - base) << 20;
        1: 8986:  *(uint32_t *)out = tmp;
        -: 8987:  out += sizeof(uint32_t);
        -: 8988:  /* consumed: 4 bytes (total: 12) */
        1: 8989:  tmp  = (*(in + 3) - base) >> (28 - 16);
        1: 8990:  tmp |= (*(in + 4) - base) << 16;
        1: 8991:  *(uint32_t *)out = tmp;
        -: 8992:  out += sizeof(uint32_t);
        -: 8993:  /* consumed: 4 bytes (total: 16) */
        1: 8994:  tmp  = (*(in + 4) - base) >> (28 - 12);
        1: 8995:  tmp |= (*(in + 5) - base) << 12;
        1: 8996:  *(uint32_t *)out = tmp;
        -: 8997:  out += sizeof(uint32_t);
        -: 8998:  /* consumed: 4 bytes (total: 20) */
        1: 8999:  tmp  = (*(in + 5) - base) >> (28 - 8);
        1: 9000:  tmp |= (*(in + 6) - base) << 8;
        1: 9001:  *(uint32_t *)out = tmp;
        -: 9002:  out += sizeof(uint32_t);
        -: 9003:  /* consumed: 4 bytes (total: 24) */
        1: 9004:  tmp  = (*(in + 6) - base) >> (28 - 4);
        1: 9005:  tmp |= (*(in + 7) - base) << 4;
        1: 9006:  *(uint32_t *)out = tmp;
        -: 9007:  out += sizeof(uint32_t);
        -: 9008:  /* consumed: 4 bytes (total: 28) */
        1: 9009:  tmp  = (*(in + 8) - base) << 0;
        1: 9010:  tmp |= (*(in + 9) - base) << 28;
        1: 9011:  *(uint32_t *)out = tmp;
        -: 9012:  out += sizeof(uint32_t);
        -: 9013:  /* consumed: 4 bytes (total: 32) */
        1: 9014:  tmp  = (*(in + 9) - base) >> (28 - 24);
        1: 9015:  tmp |= (*(in + 10) - base) << 24;
        1: 9016:  *(uint32_t *)out = tmp;
        -: 9017:  out += sizeof(uint32_t);
        -: 9018:  /* consumed: 4 bytes (total: 36) */
        1: 9019:  tmp  = (*(in + 10) - base) >> (28 - 20);
        1: 9020:  tmp |= (*(in + 11) - base) << 20;
        1: 9021:  *(uint32_t *)out = tmp;
        -: 9022:  out += sizeof(uint32_t);
        -: 9023:  /* consumed: 4 bytes (total: 40) */
        1: 9024:  tmp  = (*(in + 11) - base) >> (28 - 16);
        1: 9025:  tmp |= (*(in + 12) - base) << 16;
        1: 9026:  *(uint32_t *)out = tmp;
        -: 9027:  out += sizeof(uint32_t);
        -: 9028:  /* consumed: 4 bytes (total: 44) */
        1: 9029:  tmp  = (*(in + 12) - base) >> (28 - 12);
        1: 9030:  tmp |= (*(in + 13) - base) << 12;
        1: 9031:  *(uint32_t *)out = tmp;
        -: 9032:  out += sizeof(uint32_t);
        -: 9033:  /* consumed: 4 bytes (total: 48) */
        1: 9034:  tmp  = (*(in + 13) - base) >> (28 - 8);
        1: 9035:  tmp |= (*(in + 14) - base) << 8;
        1: 9036:  *(uint32_t *)out = tmp;
        1: 9037:  out += sizeof(uint32_t);
        -: 9038:  /* consumed: 4 bytes (total: 52) */
        1: 9039:  tmp  = (*(in + 14) - base) >> (28 - 4);
        1: 9040:  tmp |= (*(in + 15) - base) << 4;
        -: 9041:  /* remaining: 0 bits */
        -: 9042:  length = (32 / 8) - (32 - 32) / 8;
        -: 9043:  /* consumed: 4 bytes (total: 56) */
        -: 9044:  memcpy(out, &tmp, length);
        1: 9045:  return 56;
        -: 9046:}
        -: 9047:
        -: 9048:static uint32_t
        1: 9049:unpack28_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9050:  uint32_t *in32 = (uint32_t *)in;
        -: 9051:  uint32_t tmp; (void)tmp;
        1: 9052:  *(out + 0)  = base + ((*in32 >> 0) & 268435455);
        1: 9053:  tmp = (*in32 >> 28);
        -: 9054:  in32++;
        -: 9055:  /* consumed: 4 bytes (total: 8) */
        1: 9056:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1: 9057:  *(out + 1) = base + tmp;
        1: 9058:  tmp = (*in32 >> 24);
        -: 9059:  in32++;
        -: 9060:  /* consumed: 4 bytes (total: 12) */
        1: 9061:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1: 9062:  *(out + 2) = base + tmp;
        1: 9063:  tmp = (*in32 >> 20);
        -: 9064:  in32++;
        -: 9065:  /* consumed: 4 bytes (total: 16) */
        1: 9066:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1: 9067:  *(out + 3) = base + tmp;
        1: 9068:  tmp = (*in32 >> 16);
        -: 9069:  in32++;
        -: 9070:  /* consumed: 4 bytes (total: 20) */
        1: 9071:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1: 9072:  *(out + 4) = base + tmp;
        1: 9073:  tmp = (*in32 >> 12);
        -: 9074:  in32++;
        -: 9075:  /* consumed: 4 bytes (total: 24) */
        1: 9076:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1: 9077:  *(out + 5) = base + tmp;
        1: 9078:  tmp = (*in32 >> 8);
        -: 9079:  in32++;
        -: 9080:  /* consumed: 4 bytes (total: 28) */
        1: 9081:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1: 9082:  *(out + 6) = base + tmp;
        1: 9083:  *(out + 7)  = base + ((*in32 >> 4) & 268435455);
        -: 9084:  in32++;
        -: 9085:  /* consumed: 4 bytes (total: 32) */
        1: 9086:  *(out + 8)  = base + ((*in32 >> 0) & 268435455);
        1: 9087:  tmp = (*in32 >> 28);
        -: 9088:  in32++;
        -: 9089:  /* consumed: 4 bytes (total: 36) */
        1: 9090:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1: 9091:  *(out + 9) = base + tmp;
        1: 9092:  tmp = (*in32 >> 24);
        -: 9093:  in32++;
        -: 9094:  /* consumed: 4 bytes (total: 40) */
        1: 9095:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1: 9096:  *(out + 10) = base + tmp;
        1: 9097:  tmp = (*in32 >> 20);
        -: 9098:  in32++;
        -: 9099:  /* consumed: 4 bytes (total: 44) */
        1: 9100:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1: 9101:  *(out + 11) = base + tmp;
        1: 9102:  tmp = (*in32 >> 16);
        -: 9103:  in32++;
        -: 9104:  /* consumed: 4 bytes (total: 48) */
        1: 9105:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1: 9106:  *(out + 12) = base + tmp;
        1: 9107:  tmp = (*in32 >> 12);
        -: 9108:  in32++;
        -: 9109:  /* consumed: 4 bytes (total: 52) */
        1: 9110:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1: 9111:  *(out + 13) = base + tmp;
        1: 9112:  tmp = (*in32 >> 8);
        -: 9113:  in32++;
        -: 9114:  /* consumed: 4 bytes (total: 56) */
        1: 9115:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1: 9116:  *(out + 14) = base + tmp;
        1: 9117:  *(out + 15)  = base + ((*in32 >> 4) & 268435455);
        -: 9118:  /* remaining: 0 bits */
        1: 9119:  return 56;
        -: 9120:}
        -: 9121:
        -: 9122:static uint32_t
        1: 9123:pack29_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9124:  uint32_t tmp, length;
        1: 9125:  tmp  = (*(in + 0) - base) << 0;
        1: 9126:  tmp |= (*(in + 1) - base) << 29;
        1: 9127:  *(uint32_t *)out = tmp;
        -: 9128:  out += sizeof(uint32_t);
        -: 9129:  /* consumed: 4 bytes (total: 4) */
        1: 9130:  tmp  = (*(in + 1) - base) >> (29 - 26);
        1: 9131:  tmp |= (*(in + 2) - base) << 26;
        1: 9132:  *(uint32_t *)out = tmp;
        -: 9133:  out += sizeof(uint32_t);
        -: 9134:  /* consumed: 4 bytes (total: 8) */
        1: 9135:  tmp  = (*(in + 2) - base) >> (29 - 23);
        1: 9136:  tmp |= (*(in + 3) - base) << 23;
        1: 9137:  *(uint32_t *)out = tmp;
        -: 9138:  out += sizeof(uint32_t);
        -: 9139:  /* consumed: 4 bytes (total: 12) */
        1: 9140:  tmp  = (*(in + 3) - base) >> (29 - 20);
        1: 9141:  tmp |= (*(in + 4) - base) << 20;
        1: 9142:  *(uint32_t *)out = tmp;
        -: 9143:  out += sizeof(uint32_t);
        -: 9144:  /* consumed: 4 bytes (total: 16) */
        1: 9145:  tmp  = (*(in + 4) - base) >> (29 - 17);
        1: 9146:  tmp |= (*(in + 5) - base) << 17;
        1: 9147:  *(uint32_t *)out = tmp;
        -: 9148:  out += sizeof(uint32_t);
        -: 9149:  /* consumed: 4 bytes (total: 20) */
        1: 9150:  tmp  = (*(in + 5) - base) >> (29 - 14);
        1: 9151:  tmp |= (*(in + 6) - base) << 14;
        1: 9152:  *(uint32_t *)out = tmp;
        -: 9153:  out += sizeof(uint32_t);
        -: 9154:  /* consumed: 4 bytes (total: 24) */
        1: 9155:  tmp  = (*(in + 6) - base) >> (29 - 11);
        1: 9156:  tmp |= (*(in + 7) - base) << 11;
        1: 9157:  *(uint32_t *)out = tmp;
        -: 9158:  out += sizeof(uint32_t);
        -: 9159:  /* consumed: 4 bytes (total: 28) */
        1: 9160:  tmp  = (*(in + 7) - base) >> (29 - 8);
        1: 9161:  tmp |= (*(in + 8) - base) << 8;
        1: 9162:  *(uint32_t *)out = tmp;
        -: 9163:  out += sizeof(uint32_t);
        -: 9164:  /* consumed: 4 bytes (total: 32) */
        1: 9165:  tmp  = (*(in + 8) - base) >> (29 - 5);
        1: 9166:  tmp |= (*(in + 9) - base) << 5;
        1: 9167:  *(uint32_t *)out = tmp;
        -: 9168:  out += sizeof(uint32_t);
        -: 9169:  /* consumed: 4 bytes (total: 36) */
        1: 9170:  tmp  = (*(in + 9) - base) >> (29 - 2);
        1: 9171:  tmp |= (*(in + 10) - base) << 2;
        1: 9172:  tmp |= (*(in + 11) - base) << 31;
        1: 9173:  *(uint32_t *)out = tmp;
        -: 9174:  out += sizeof(uint32_t);
        -: 9175:  /* consumed: 4 bytes (total: 40) */
        1: 9176:  tmp  = (*(in + 11) - base) >> (29 - 28);
        1: 9177:  tmp |= (*(in + 12) - base) << 28;
        1: 9178:  *(uint32_t *)out = tmp;
        -: 9179:  out += sizeof(uint32_t);
        -: 9180:  /* consumed: 4 bytes (total: 44) */
        1: 9181:  tmp  = (*(in + 12) - base) >> (29 - 25);
        1: 9182:  tmp |= (*(in + 13) - base) << 25;
        1: 9183:  *(uint32_t *)out = tmp;
        -: 9184:  out += sizeof(uint32_t);
        -: 9185:  /* consumed: 4 bytes (total: 48) */
        1: 9186:  tmp  = (*(in + 13) - base) >> (29 - 22);
        1: 9187:  tmp |= (*(in + 14) - base) << 22;
        1: 9188:  *(uint32_t *)out = tmp;
        -: 9189:  out += sizeof(uint32_t);
        -: 9190:  /* consumed: 4 bytes (total: 52) */
        1: 9191:  tmp  = (*(in + 14) - base) >> (29 - 19);
        1: 9192:  tmp |= (*(in + 15) - base) << 19;
        1: 9193:  *(uint32_t *)out = tmp;
        1: 9194:  out += sizeof(uint32_t);
        -: 9195:  /* consumed: 4 bytes (total: 56) */
        1: 9196:  tmp  = (*(in + 15) - base) >> (29 - 16);
        -: 9197:  /* remaining: 16 bits */
        -: 9198:  length = (32 / 8) - (32 - 16) / 8;
        -: 9199:  /* consumed: 2 bytes (total: 58) */
        -: 9200:  memcpy(out, &tmp, length);
        1: 9201:  return 58;
        -: 9202:}
        -: 9203:
        -: 9204:static uint32_t
        1: 9205:unpack29_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9206:  uint32_t *in32 = (uint32_t *)in;
        -: 9207:  uint32_t tmp; (void)tmp;
        1: 9208:  *(out + 0)  = base + ((*in32 >> 0) & 536870911);
        1: 9209:  tmp = (*in32 >> 29);
        -: 9210:  in32++;
        -: 9211:  /* consumed: 4 bytes (total: 8) */
        1: 9212:  tmp |= (*in32 % (1U << 26)) << (29 - 26);
        1: 9213:  *(out + 1) = base + tmp;
        1: 9214:  tmp = (*in32 >> 26);
        -: 9215:  in32++;
        -: 9216:  /* consumed: 4 bytes (total: 12) */
        1: 9217:  tmp |= (*in32 % (1U << 23)) << (29 - 23);
        1: 9218:  *(out + 2) = base + tmp;
        1: 9219:  tmp = (*in32 >> 23);
        -: 9220:  in32++;
        -: 9221:  /* consumed: 4 bytes (total: 16) */
        1: 9222:  tmp |= (*in32 % (1U << 20)) << (29 - 20);
        1: 9223:  *(out + 3) = base + tmp;
        1: 9224:  tmp = (*in32 >> 20);
        -: 9225:  in32++;
        -: 9226:  /* consumed: 4 bytes (total: 20) */
        1: 9227:  tmp |= (*in32 % (1U << 17)) << (29 - 17);
        1: 9228:  *(out + 4) = base + tmp;
        1: 9229:  tmp = (*in32 >> 17);
        -: 9230:  in32++;
        -: 9231:  /* consumed: 4 bytes (total: 24) */
        1: 9232:  tmp |= (*in32 % (1U << 14)) << (29 - 14);
        1: 9233:  *(out + 5) = base + tmp;
        1: 9234:  tmp = (*in32 >> 14);
        -: 9235:  in32++;
        -: 9236:  /* consumed: 4 bytes (total: 28) */
        1: 9237:  tmp |= (*in32 % (1U << 11)) << (29 - 11);
        1: 9238:  *(out + 6) = base + tmp;
        1: 9239:  tmp = (*in32 >> 11);
        -: 9240:  in32++;
        -: 9241:  /* consumed: 4 bytes (total: 32) */
        1: 9242:  tmp |= (*in32 % (1U << 8)) << (29 - 8);
        1: 9243:  *(out + 7) = base + tmp;
        1: 9244:  tmp = (*in32 >> 8);
        -: 9245:  in32++;
        -: 9246:  /* consumed: 4 bytes (total: 36) */
        1: 9247:  tmp |= (*in32 % (1U << 5)) << (29 - 5);
        1: 9248:  *(out + 8) = base + tmp;
        1: 9249:  tmp = (*in32 >> 5);
        -: 9250:  in32++;
        -: 9251:  /* consumed: 4 bytes (total: 40) */
        1: 9252:  tmp |= (*in32 % (1U << 2)) << (29 - 2);
        1: 9253:  *(out + 9) = base + tmp;
        1: 9254:  *(out + 10)  = base + ((*in32 >> 2) & 536870911);
        1: 9255:  tmp = (*in32 >> 31);
        -: 9256:  in32++;
        -: 9257:  /* consumed: 4 bytes (total: 44) */
        1: 9258:  tmp |= (*in32 % (1U << 28)) << (29 - 28);
        1: 9259:  *(out + 11) = base + tmp;
        1: 9260:  tmp = (*in32 >> 28);
        -: 9261:  in32++;
        -: 9262:  /* consumed: 4 bytes (total: 48) */
        1: 9263:  tmp |= (*in32 % (1U << 25)) << (29 - 25);
        1: 9264:  *(out + 12) = base + tmp;
        1: 9265:  tmp = (*in32 >> 25);
        -: 9266:  in32++;
        -: 9267:  /* consumed: 4 bytes (total: 52) */
        1: 9268:  tmp |= (*in32 % (1U << 22)) << (29 - 22);
        1: 9269:  *(out + 13) = base + tmp;
        1: 9270:  tmp = (*in32 >> 22);
        -: 9271:  in32++;
        -: 9272:  /* consumed: 4 bytes (total: 56) */
        1: 9273:  tmp |= (*in32 % (1U << 19)) << (29 - 19);
        1: 9274:  *(out + 14) = base + tmp;
        1: 9275:  tmp = (*in32 >> 19);
        -: 9276:  in32++;
        -: 9277:  /* consumed: 4 bytes (total: 60) */
        1: 9278:  tmp |= (*in32 % (1U << 16)) << (29 - 16);
        1: 9279:  *(out + 15) = base + tmp;
        -: 9280:  /* remaining: 16 bits */
        1: 9281:  return 58;
        -: 9282:}
        -: 9283:
        -: 9284:static uint32_t
        1: 9285:pack30_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9286:  uint32_t tmp, length;
        1: 9287:  tmp  = (*(in + 0) - base) << 0;
        1: 9288:  tmp |= (*(in + 1) - base) << 30;
        1: 9289:  *(uint32_t *)out = tmp;
        -: 9290:  out += sizeof(uint32_t);
        -: 9291:  /* consumed: 4 bytes (total: 4) */
        1: 9292:  tmp  = (*(in + 1) - base) >> (30 - 28);
        1: 9293:  tmp |= (*(in + 2) - base) << 28;
        1: 9294:  *(uint32_t *)out = tmp;
        -: 9295:  out += sizeof(uint32_t);
        -: 9296:  /* consumed: 4 bytes (total: 8) */
        1: 9297:  tmp  = (*(in + 2) - base) >> (30 - 26);
        1: 9298:  tmp |= (*(in + 3) - base) << 26;
        1: 9299:  *(uint32_t *)out = tmp;
        -: 9300:  out += sizeof(uint32_t);
        -: 9301:  /* consumed: 4 bytes (total: 12) */
        1: 9302:  tmp  = (*(in + 3) - base) >> (30 - 24);
        1: 9303:  tmp |= (*(in + 4) - base) << 24;
        1: 9304:  *(uint32_t *)out = tmp;
        -: 9305:  out += sizeof(uint32_t);
        -: 9306:  /* consumed: 4 bytes (total: 16) */
        1: 9307:  tmp  = (*(in + 4) - base) >> (30 - 22);
        1: 9308:  tmp |= (*(in + 5) - base) << 22;
        1: 9309:  *(uint32_t *)out = tmp;
        -: 9310:  out += sizeof(uint32_t);
        -: 9311:  /* consumed: 4 bytes (total: 20) */
        1: 9312:  tmp  = (*(in + 5) - base) >> (30 - 20);
        1: 9313:  tmp |= (*(in + 6) - base) << 20;
        1: 9314:  *(uint32_t *)out = tmp;
        -: 9315:  out += sizeof(uint32_t);
        -: 9316:  /* consumed: 4 bytes (total: 24) */
        1: 9317:  tmp  = (*(in + 6) - base) >> (30 - 18);
        1: 9318:  tmp |= (*(in + 7) - base) << 18;
        1: 9319:  *(uint32_t *)out = tmp;
        -: 9320:  out += sizeof(uint32_t);
        -: 9321:  /* consumed: 4 bytes (total: 28) */
        1: 9322:  tmp  = (*(in + 7) - base) >> (30 - 16);
        1: 9323:  tmp |= (*(in + 8) - base) << 16;
        1: 9324:  *(uint32_t *)out = tmp;
        -: 9325:  out += sizeof(uint32_t);
        -: 9326:  /* consumed: 4 bytes (total: 32) */
        1: 9327:  tmp  = (*(in + 8) - base) >> (30 - 14);
        1: 9328:  tmp |= (*(in + 9) - base) << 14;
        1: 9329:  *(uint32_t *)out = tmp;
        -: 9330:  out += sizeof(uint32_t);
        -: 9331:  /* consumed: 4 bytes (total: 36) */
        1: 9332:  tmp  = (*(in + 9) - base) >> (30 - 12);
        1: 9333:  tmp |= (*(in + 10) - base) << 12;
        1: 9334:  *(uint32_t *)out = tmp;
        -: 9335:  out += sizeof(uint32_t);
        -: 9336:  /* consumed: 4 bytes (total: 40) */
        1: 9337:  tmp  = (*(in + 10) - base) >> (30 - 10);
        1: 9338:  tmp |= (*(in + 11) - base) << 10;
        1: 9339:  *(uint32_t *)out = tmp;
        -: 9340:  out += sizeof(uint32_t);
        -: 9341:  /* consumed: 4 bytes (total: 44) */
        1: 9342:  tmp  = (*(in + 11) - base) >> (30 - 8);
        1: 9343:  tmp |= (*(in + 12) - base) << 8;
        1: 9344:  *(uint32_t *)out = tmp;
        -: 9345:  out += sizeof(uint32_t);
        -: 9346:  /* consumed: 4 bytes (total: 48) */
        1: 9347:  tmp  = (*(in + 12) - base) >> (30 - 6);
        1: 9348:  tmp |= (*(in + 13) - base) << 6;
        1: 9349:  *(uint32_t *)out = tmp;
        -: 9350:  out += sizeof(uint32_t);
        -: 9351:  /* consumed: 4 bytes (total: 52) */
        1: 9352:  tmp  = (*(in + 13) - base) >> (30 - 4);
        1: 9353:  tmp |= (*(in + 14) - base) << 4;
        1: 9354:  *(uint32_t *)out = tmp;
        1: 9355:  out += sizeof(uint32_t);
        -: 9356:  /* consumed: 4 bytes (total: 56) */
        1: 9357:  tmp  = (*(in + 14) - base) >> (30 - 2);
        1: 9358:  tmp |= (*(in + 15) - base) << 2;
        -: 9359:  /* remaining: 0 bits */
        -: 9360:  length = (32 / 8) - (32 - 32) / 8;
        -: 9361:  /* consumed: 4 bytes (total: 60) */
        -: 9362:  memcpy(out, &tmp, length);
        1: 9363:  return 60;
        -: 9364:}
        -: 9365:
        -: 9366:static uint32_t
        1: 9367:unpack30_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9368:  uint32_t *in32 = (uint32_t *)in;
        -: 9369:  uint32_t tmp; (void)tmp;
        1: 9370:  *(out + 0)  = base + ((*in32 >> 0) & 1073741823);
        1: 9371:  tmp = (*in32 >> 30);
        -: 9372:  in32++;
        -: 9373:  /* consumed: 4 bytes (total: 8) */
        1: 9374:  tmp |= (*in32 % (1U << 28)) << (30 - 28);
        1: 9375:  *(out + 1) = base + tmp;
        1: 9376:  tmp = (*in32 >> 28);
        -: 9377:  in32++;
        -: 9378:  /* consumed: 4 bytes (total: 12) */
        1: 9379:  tmp |= (*in32 % (1U << 26)) << (30 - 26);
        1: 9380:  *(out + 2) = base + tmp;
        1: 9381:  tmp = (*in32 >> 26);
        -: 9382:  in32++;
        -: 9383:  /* consumed: 4 bytes (total: 16) */
        1: 9384:  tmp |= (*in32 % (1U << 24)) << (30 - 24);
        1: 9385:  *(out + 3) = base + tmp;
        1: 9386:  tmp = (*in32 >> 24);
        -: 9387:  in32++;
        -: 9388:  /* consumed: 4 bytes (total: 20) */
        1: 9389:  tmp |= (*in32 % (1U << 22)) << (30 - 22);
        1: 9390:  *(out + 4) = base + tmp;
        1: 9391:  tmp = (*in32 >> 22);
        -: 9392:  in32++;
        -: 9393:  /* consumed: 4 bytes (total: 24) */
        1: 9394:  tmp |= (*in32 % (1U << 20)) << (30 - 20);
        1: 9395:  *(out + 5) = base + tmp;
        1: 9396:  tmp = (*in32 >> 20);
        -: 9397:  in32++;
        -: 9398:  /* consumed: 4 bytes (total: 28) */
        1: 9399:  tmp |= (*in32 % (1U << 18)) << (30 - 18);
        1: 9400:  *(out + 6) = base + tmp;
        1: 9401:  tmp = (*in32 >> 18);
        -: 9402:  in32++;
        -: 9403:  /* consumed: 4 bytes (total: 32) */
        1: 9404:  tmp |= (*in32 % (1U << 16)) << (30 - 16);
        1: 9405:  *(out + 7) = base + tmp;
        1: 9406:  tmp = (*in32 >> 16);
        -: 9407:  in32++;
        -: 9408:  /* consumed: 4 bytes (total: 36) */
        1: 9409:  tmp |= (*in32 % (1U << 14)) << (30 - 14);
        1: 9410:  *(out + 8) = base + tmp;
        1: 9411:  tmp = (*in32 >> 14);
        -: 9412:  in32++;
        -: 9413:  /* consumed: 4 bytes (total: 40) */
        1: 9414:  tmp |= (*in32 % (1U << 12)) << (30 - 12);
        1: 9415:  *(out + 9) = base + tmp;
        1: 9416:  tmp = (*in32 >> 12);
        -: 9417:  in32++;
        -: 9418:  /* consumed: 4 bytes (total: 44) */
        1: 9419:  tmp |= (*in32 % (1U << 10)) << (30 - 10);
        1: 9420:  *(out + 10) = base + tmp;
        1: 9421:  tmp = (*in32 >> 10);
        -: 9422:  in32++;
        -: 9423:  /* consumed: 4 bytes (total: 48) */
        1: 9424:  tmp |= (*in32 % (1U << 8)) << (30 - 8);
        1: 9425:  *(out + 11) = base + tmp;
        1: 9426:  tmp = (*in32 >> 8);
        -: 9427:  in32++;
        -: 9428:  /* consumed: 4 bytes (total: 52) */
        1: 9429:  tmp |= (*in32 % (1U << 6)) << (30 - 6);
        1: 9430:  *(out + 12) = base + tmp;
        1: 9431:  tmp = (*in32 >> 6);
        -: 9432:  in32++;
        -: 9433:  /* consumed: 4 bytes (total: 56) */
        1: 9434:  tmp |= (*in32 % (1U << 4)) << (30 - 4);
        1: 9435:  *(out + 13) = base + tmp;
        1: 9436:  tmp = (*in32 >> 4);
        -: 9437:  in32++;
        -: 9438:  /* consumed: 4 bytes (total: 60) */
        1: 9439:  tmp |= (*in32 % (1U << 2)) << (30 - 2);
        1: 9440:  *(out + 14) = base + tmp;
        1: 9441:  *(out + 15)  = base + ((*in32 >> 2) & 1073741823);
        -: 9442:  /* remaining: 0 bits */
        1: 9443:  return 60;
        -: 9444:}
        -: 9445:
        -: 9446:static uint32_t
        1: 9447:pack31_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9448:  uint32_t tmp, length;
        1: 9449:  tmp  = (*(in + 0) - base) << 0;
        1: 9450:  tmp |= (*(in + 1) - base) << 31;
        1: 9451:  *(uint32_t *)out = tmp;
        -: 9452:  out += sizeof(uint32_t);
        -: 9453:  /* consumed: 4 bytes (total: 4) */
        1: 9454:  tmp  = (*(in + 1) - base) >> (31 - 30);
        1: 9455:  tmp |= (*(in + 2) - base) << 30;
        1: 9456:  *(uint32_t *)out = tmp;
        -: 9457:  out += sizeof(uint32_t);
        -: 9458:  /* consumed: 4 bytes (total: 8) */
        1: 9459:  tmp  = (*(in + 2) - base) >> (31 - 29);
        1: 9460:  tmp |= (*(in + 3) - base) << 29;
        1: 9461:  *(uint32_t *)out = tmp;
        -: 9462:  out += sizeof(uint32_t);
        -: 9463:  /* consumed: 4 bytes (total: 12) */
        1: 9464:  tmp  = (*(in + 3) - base) >> (31 - 28);
        1: 9465:  tmp |= (*(in + 4) - base) << 28;
        1: 9466:  *(uint32_t *)out = tmp;
        -: 9467:  out += sizeof(uint32_t);
        -: 9468:  /* consumed: 4 bytes (total: 16) */
        1: 9469:  tmp  = (*(in + 4) - base) >> (31 - 27);
        1: 9470:  tmp |= (*(in + 5) - base) << 27;
        1: 9471:  *(uint32_t *)out = tmp;
        -: 9472:  out += sizeof(uint32_t);
        -: 9473:  /* consumed: 4 bytes (total: 20) */
        1: 9474:  tmp  = (*(in + 5) - base) >> (31 - 26);
        1: 9475:  tmp |= (*(in + 6) - base) << 26;
        1: 9476:  *(uint32_t *)out = tmp;
        -: 9477:  out += sizeof(uint32_t);
        -: 9478:  /* consumed: 4 bytes (total: 24) */
        1: 9479:  tmp  = (*(in + 6) - base) >> (31 - 25);
        1: 9480:  tmp |= (*(in + 7) - base) << 25;
        1: 9481:  *(uint32_t *)out = tmp;
        -: 9482:  out += sizeof(uint32_t);
        -: 9483:  /* consumed: 4 bytes (total: 28) */
        1: 9484:  tmp  = (*(in + 7) - base) >> (31 - 24);
        1: 9485:  tmp |= (*(in + 8) - base) << 24;
        1: 9486:  *(uint32_t *)out = tmp;
        -: 9487:  out += sizeof(uint32_t);
        -: 9488:  /* consumed: 4 bytes (total: 32) */
        1: 9489:  tmp  = (*(in + 8) - base) >> (31 - 23);
        1: 9490:  tmp |= (*(in + 9) - base) << 23;
        1: 9491:  *(uint32_t *)out = tmp;
        -: 9492:  out += sizeof(uint32_t);
        -: 9493:  /* consumed: 4 bytes (total: 36) */
        1: 9494:  tmp  = (*(in + 9) - base) >> (31 - 22);
        1: 9495:  tmp |= (*(in + 10) - base) << 22;
        1: 9496:  *(uint32_t *)out = tmp;
        -: 9497:  out += sizeof(uint32_t);
        -: 9498:  /* consumed: 4 bytes (total: 40) */
        1: 9499:  tmp  = (*(in + 10) - base) >> (31 - 21);
        1: 9500:  tmp |= (*(in + 11) - base) << 21;
        1: 9501:  *(uint32_t *)out = tmp;
        -: 9502:  out += sizeof(uint32_t);
        -: 9503:  /* consumed: 4 bytes (total: 44) */
        1: 9504:  tmp  = (*(in + 11) - base) >> (31 - 20);
        1: 9505:  tmp |= (*(in + 12) - base) << 20;
        1: 9506:  *(uint32_t *)out = tmp;
        -: 9507:  out += sizeof(uint32_t);
        -: 9508:  /* consumed: 4 bytes (total: 48) */
        1: 9509:  tmp  = (*(in + 12) - base) >> (31 - 19);
        1: 9510:  tmp |= (*(in + 13) - base) << 19;
        1: 9511:  *(uint32_t *)out = tmp;
        -: 9512:  out += sizeof(uint32_t);
        -: 9513:  /* consumed: 4 bytes (total: 52) */
        1: 9514:  tmp  = (*(in + 13) - base) >> (31 - 18);
        1: 9515:  tmp |= (*(in + 14) - base) << 18;
        1: 9516:  *(uint32_t *)out = tmp;
        -: 9517:  out += sizeof(uint32_t);
        -: 9518:  /* consumed: 4 bytes (total: 56) */
        1: 9519:  tmp  = (*(in + 14) - base) >> (31 - 17);
        1: 9520:  tmp |= (*(in + 15) - base) << 17;
        1: 9521:  *(uint32_t *)out = tmp;
        1: 9522:  out += sizeof(uint32_t);
        -: 9523:  /* consumed: 4 bytes (total: 60) */
        1: 9524:  tmp  = (*(in + 15) - base) >> (31 - 16);
        -: 9525:  /* remaining: 16 bits */
        -: 9526:  length = (32 / 8) - (32 - 16) / 8;
        -: 9527:  /* consumed: 2 bytes (total: 62) */
        -: 9528:  memcpy(out, &tmp, length);
        1: 9529:  return 62;
        -: 9530:}
        -: 9531:
        -: 9532:static uint32_t
        1: 9533:unpack31_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9534:  uint32_t *in32 = (uint32_t *)in;
        -: 9535:  uint32_t tmp; (void)tmp;
        1: 9536:  *(out + 0)  = base + ((*in32 >> 0) & 2147483647);
        1: 9537:  tmp = (*in32 >> 31);
        -: 9538:  in32++;
        -: 9539:  /* consumed: 4 bytes (total: 8) */
        1: 9540:  tmp |= (*in32 % (1U << 30)) << (31 - 30);
        1: 9541:  *(out + 1) = base + tmp;
        1: 9542:  tmp = (*in32 >> 30);
        -: 9543:  in32++;
        -: 9544:  /* consumed: 4 bytes (total: 12) */
        1: 9545:  tmp |= (*in32 % (1U << 29)) << (31 - 29);
        1: 9546:  *(out + 2) = base + tmp;
        1: 9547:  tmp = (*in32 >> 29);
        -: 9548:  in32++;
        -: 9549:  /* consumed: 4 bytes (total: 16) */
        1: 9550:  tmp |= (*in32 % (1U << 28)) << (31 - 28);
        1: 9551:  *(out + 3) = base + tmp;
        1: 9552:  tmp = (*in32 >> 28);
        -: 9553:  in32++;
        -: 9554:  /* consumed: 4 bytes (total: 20) */
        1: 9555:  tmp |= (*in32 % (1U << 27)) << (31 - 27);
        1: 9556:  *(out + 4) = base + tmp;
        1: 9557:  tmp = (*in32 >> 27);
        -: 9558:  in32++;
        -: 9559:  /* consumed: 4 bytes (total: 24) */
        1: 9560:  tmp |= (*in32 % (1U << 26)) << (31 - 26);
        1: 9561:  *(out + 5) = base + tmp;
        1: 9562:  tmp = (*in32 >> 26);
        -: 9563:  in32++;
        -: 9564:  /* consumed: 4 bytes (total: 28) */
        1: 9565:  tmp |= (*in32 % (1U << 25)) << (31 - 25);
        1: 9566:  *(out + 6) = base + tmp;
        1: 9567:  tmp = (*in32 >> 25);
        -: 9568:  in32++;
        -: 9569:  /* consumed: 4 bytes (total: 32) */
        1: 9570:  tmp |= (*in32 % (1U << 24)) << (31 - 24);
        1: 9571:  *(out + 7) = base + tmp;
        1: 9572:  tmp = (*in32 >> 24);
        -: 9573:  in32++;
        -: 9574:  /* consumed: 4 bytes (total: 36) */
        1: 9575:  tmp |= (*in32 % (1U << 23)) << (31 - 23);
        1: 9576:  *(out + 8) = base + tmp;
        1: 9577:  tmp = (*in32 >> 23);
        -: 9578:  in32++;
        -: 9579:  /* consumed: 4 bytes (total: 40) */
        1: 9580:  tmp |= (*in32 % (1U << 22)) << (31 - 22);
        1: 9581:  *(out + 9) = base + tmp;
        1: 9582:  tmp = (*in32 >> 22);
        -: 9583:  in32++;
        -: 9584:  /* consumed: 4 bytes (total: 44) */
        1: 9585:  tmp |= (*in32 % (1U << 21)) << (31 - 21);
        1: 9586:  *(out + 10) = base + tmp;
        1: 9587:  tmp = (*in32 >> 21);
        -: 9588:  in32++;
        -: 9589:  /* consumed: 4 bytes (total: 48) */
        1: 9590:  tmp |= (*in32 % (1U << 20)) << (31 - 20);
        1: 9591:  *(out + 11) = base + tmp;
        1: 9592:  tmp = (*in32 >> 20);
        -: 9593:  in32++;
        -: 9594:  /* consumed: 4 bytes (total: 52) */
        1: 9595:  tmp |= (*in32 % (1U << 19)) << (31 - 19);
        1: 9596:  *(out + 12) = base + tmp;
        1: 9597:  tmp = (*in32 >> 19);
        -: 9598:  in32++;
        -: 9599:  /* consumed: 4 bytes (total: 56) */
        1: 9600:  tmp |= (*in32 % (1U << 18)) << (31 - 18);
        1: 9601:  *(out + 13) = base + tmp;
        1: 9602:  tmp = (*in32 >> 18);
        -: 9603:  in32++;
        -: 9604:  /* consumed: 4 bytes (total: 60) */
        1: 9605:  tmp |= (*in32 % (1U << 17)) << (31 - 17);
        1: 9606:  *(out + 14) = base + tmp;
        1: 9607:  tmp = (*in32 >> 17);
        -: 9608:  in32++;
        -: 9609:  /* consumed: 4 bytes (total: 64) */
        1: 9610:  tmp |= (*in32 % (1U << 16)) << (31 - 16);
        1: 9611:  *(out + 15) = base + tmp;
        -: 9612:  /* remaining: 16 bits */
        1: 9613:  return 62;
        -: 9614:}
        -: 9615:
        -: 9616:static uint32_t
        1: 9617:pack32_16(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9618:  uint32_t i;
        -: 9619:  uint32_t *out32 = (uint32_t *)out;
       17: 9620:  for (i = 0; i < 16; i++)
       16: 9621:    out32[i] = in[i] - base;
        1: 9622:  return 16 * sizeof(uint32_t);
        -: 9623:}
        -: 9624:
        -: 9625:static uint32_t
        1: 9626:unpack32_16(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9627:  uint32_t i;
        -: 9628:  uint32_t *in32 = (uint32_t *)in;
       17: 9629:  for (i = 0; i < 16; i++)
       16: 9630:    out[i] = base + in32[i];
        1: 9631:  return 16 * sizeof(uint32_t);
        -: 9632:}
        -: 9633:
        -: 9634:for_packfunc_t for_pack16[33] = {
        -: 9635:                       pack0_16,
        -: 9636:                       pack1_16,
        -: 9637:                       pack2_16,
        -: 9638:                       pack3_16,
        -: 9639:                       pack4_16,
        -: 9640:                       pack5_16,
        -: 9641:                       pack6_16,
        -: 9642:                       pack7_16,
        -: 9643:                       pack8_16,
        -: 9644:                       pack9_16,
        -: 9645:                       pack10_16,
        -: 9646:                       pack11_16,
        -: 9647:                       pack12_16,
        -: 9648:                       pack13_16,
        -: 9649:                       pack14_16,
        -: 9650:                       pack15_16,
        -: 9651:                       pack16_16,
        -: 9652:                       pack17_16,
        -: 9653:                       pack18_16,
        -: 9654:                       pack19_16,
        -: 9655:                       pack20_16,
        -: 9656:                       pack21_16,
        -: 9657:                       pack22_16,
        -: 9658:                       pack23_16,
        -: 9659:                       pack24_16,
        -: 9660:                       pack25_16,
        -: 9661:                       pack26_16,
        -: 9662:                       pack27_16,
        -: 9663:                       pack28_16,
        -: 9664:                       pack29_16,
        -: 9665:                       pack30_16,
        -: 9666:                       pack31_16,
        -: 9667:                       pack32_16
        -: 9668:};
        -: 9669:
        -: 9670:for_unpackfunc_t for_unpack16[33] = {
        -: 9671:                       unpack0_16,
        -: 9672:                       unpack1_16,
        -: 9673:                       unpack2_16,
        -: 9674:                       unpack3_16,
        -: 9675:                       unpack4_16,
        -: 9676:                       unpack5_16,
        -: 9677:                       unpack6_16,
        -: 9678:                       unpack7_16,
        -: 9679:                       unpack8_16,
        -: 9680:                       unpack9_16,
        -: 9681:                       unpack10_16,
        -: 9682:                       unpack11_16,
        -: 9683:                       unpack12_16,
        -: 9684:                       unpack13_16,
        -: 9685:                       unpack14_16,
        -: 9686:                       unpack15_16,
        -: 9687:                       unpack16_16,
        -: 9688:                       unpack17_16,
        -: 9689:                       unpack18_16,
        -: 9690:                       unpack19_16,
        -: 9691:                       unpack20_16,
        -: 9692:                       unpack21_16,
        -: 9693:                       unpack22_16,
        -: 9694:                       unpack23_16,
        -: 9695:                       unpack24_16,
        -: 9696:                       unpack25_16,
        -: 9697:                       unpack26_16,
        -: 9698:                       unpack27_16,
        -: 9699:                       unpack28_16,
        -: 9700:                       unpack29_16,
        -: 9701:                       unpack30_16,
        -: 9702:                       unpack31_16,
        -: 9703:                       unpack32_16
        -: 9704:};
        -: 9705:
        -: 9706:static uint32_t
        1: 9707:pack1_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9708:  uint32_t tmp, length;
        1: 9709:  tmp  = (*(in + 0) - base) << 0;
        1: 9710:  tmp |= (*(in + 1) - base) << 1;
        1: 9711:  tmp |= (*(in + 2) - base) << 2;
        1: 9712:  tmp |= (*(in + 3) - base) << 3;
        1: 9713:  tmp |= (*(in + 4) - base) << 4;
        1: 9714:  tmp |= (*(in + 5) - base) << 5;
        1: 9715:  tmp |= (*(in + 6) - base) << 6;
        1: 9716:  tmp |= (*(in + 7) - base) << 7;
        -: 9717:  /* remaining: 24 bits */
        -: 9718:  length = (32 / 8) - (32 - 8) / 8;
        -: 9719:  /* consumed: 1 bytes (total: 1) */
        -: 9720:  memcpy(out, &tmp, length);
        1: 9721:  return 1;
        -: 9722:}
        -: 9723:
        -: 9724:static uint32_t
        1: 9725:unpack1_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9726:  uint32_t *in32 = (uint32_t *)in;
        -: 9727:  uint32_t tmp; (void)tmp;
        1: 9728:  *(out + 0)  = base + ((*in32 >> 0) & 1);
        1: 9729:  *(out + 1)  = base + ((*in32 >> 1) & 1);
        1: 9730:  *(out + 2)  = base + ((*in32 >> 2) & 1);
        1: 9731:  *(out + 3)  = base + ((*in32 >> 3) & 1);
        1: 9732:  *(out + 4)  = base + ((*in32 >> 4) & 1);
        1: 9733:  *(out + 5)  = base + ((*in32 >> 5) & 1);
        1: 9734:  *(out + 6)  = base + ((*in32 >> 6) & 1);
        1: 9735:  *(out + 7)  = base + ((*in32 >> 7) & 1);
        -: 9736:  /* remaining: 24 bits */
        1: 9737:  return 1;
        -: 9738:}
        -: 9739:
        -: 9740:static uint32_t
        1: 9741:pack2_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9742:  uint32_t tmp, length;
        1: 9743:  tmp  = (*(in + 0) - base) << 0;
        1: 9744:  tmp |= (*(in + 1) - base) << 2;
        1: 9745:  tmp |= (*(in + 2) - base) << 4;
        1: 9746:  tmp |= (*(in + 3) - base) << 6;
        1: 9747:  tmp |= (*(in + 4) - base) << 8;
        1: 9748:  tmp |= (*(in + 5) - base) << 10;
        1: 9749:  tmp |= (*(in + 6) - base) << 12;
        1: 9750:  tmp |= (*(in + 7) - base) << 14;
        -: 9751:  /* remaining: 16 bits */
        -: 9752:  length = (32 / 8) - (32 - 16) / 8;
        -: 9753:  /* consumed: 2 bytes (total: 2) */
        -: 9754:  memcpy(out, &tmp, length);
        1: 9755:  return 2;
        -: 9756:}
        -: 9757:
        -: 9758:static uint32_t
        1: 9759:unpack2_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9760:  uint32_t *in32 = (uint32_t *)in;
        -: 9761:  uint32_t tmp; (void)tmp;
        1: 9762:  *(out + 0)  = base + ((*in32 >> 0) & 3);
        1: 9763:  *(out + 1)  = base + ((*in32 >> 2) & 3);
        1: 9764:  *(out + 2)  = base + ((*in32 >> 4) & 3);
        1: 9765:  *(out + 3)  = base + ((*in32 >> 6) & 3);
        1: 9766:  *(out + 4)  = base + ((*in32 >> 8) & 3);
        1: 9767:  *(out + 5)  = base + ((*in32 >> 10) & 3);
        1: 9768:  *(out + 6)  = base + ((*in32 >> 12) & 3);
        1: 9769:  *(out + 7)  = base + ((*in32 >> 14) & 3);
        -: 9770:  /* remaining: 16 bits */
        1: 9771:  return 2;
        -: 9772:}
        -: 9773:
        -: 9774:static uint32_t
        2: 9775:pack3_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9776:  uint32_t tmp, length;
        2: 9777:  tmp  = (*(in + 0) - base) << 0;
        2: 9778:  tmp |= (*(in + 1) - base) << 3;
        2: 9779:  tmp |= (*(in + 2) - base) << 6;
        2: 9780:  tmp |= (*(in + 3) - base) << 9;
        2: 9781:  tmp |= (*(in + 4) - base) << 12;
        2: 9782:  tmp |= (*(in + 5) - base) << 15;
        2: 9783:  tmp |= (*(in + 6) - base) << 18;
        2: 9784:  tmp |= (*(in + 7) - base) << 21;
        -: 9785:  /* remaining: 8 bits */
        -: 9786:  length = (32 / 8) - (32 - 24) / 8;
        -: 9787:  /* consumed: 3 bytes (total: 3) */
        -: 9788:  memcpy(out, &tmp, length);
        2: 9789:  return 3;
        -: 9790:}
        -: 9791:
        -: 9792:static uint32_t
        2: 9793:unpack3_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9794:  uint32_t *in32 = (uint32_t *)in;
        -: 9795:  uint32_t tmp; (void)tmp;
        2: 9796:  *(out + 0)  = base + ((*in32 >> 0) & 7);
        2: 9797:  *(out + 1)  = base + ((*in32 >> 3) & 7);
        2: 9798:  *(out + 2)  = base + ((*in32 >> 6) & 7);
        2: 9799:  *(out + 3)  = base + ((*in32 >> 9) & 7);
        2: 9800:  *(out + 4)  = base + ((*in32 >> 12) & 7);
        2: 9801:  *(out + 5)  = base + ((*in32 >> 15) & 7);
        2: 9802:  *(out + 6)  = base + ((*in32 >> 18) & 7);
        2: 9803:  *(out + 7)  = base + ((*in32 >> 21) & 7);
        -: 9804:  /* remaining: 8 bits */
        2: 9805:  return 3;
        -: 9806:}
        -: 9807:
        -: 9808:static uint32_t
        9: 9809:pack4_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9810:  uint32_t tmp, length;
        9: 9811:  tmp  = (*(in + 0) - base) << 0;
        9: 9812:  tmp |= (*(in + 1) - base) << 4;
        9: 9813:  tmp |= (*(in + 2) - base) << 8;
        9: 9814:  tmp |= (*(in + 3) - base) << 12;
        9: 9815:  tmp |= (*(in + 4) - base) << 16;
        9: 9816:  tmp |= (*(in + 5) - base) << 20;
        9: 9817:  tmp |= (*(in + 6) - base) << 24;
        9: 9818:  tmp |= (*(in + 7) - base) << 28;
        -: 9819:  /* remaining: 0 bits */
        -: 9820:  length = (32 / 8) - (32 - 32) / 8;
        -: 9821:  /* consumed: 4 bytes (total: 4) */
        -: 9822:  memcpy(out, &tmp, length);
        9: 9823:  return 4;
        -: 9824:}
        -: 9825:
        -: 9826:static uint32_t
        1: 9827:unpack4_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9828:  uint32_t *in32 = (uint32_t *)in;
        -: 9829:  uint32_t tmp; (void)tmp;
        1: 9830:  *(out + 0)  = base + ((*in32 >> 0) & 15);
        1: 9831:  *(out + 1)  = base + ((*in32 >> 4) & 15);
        1: 9832:  *(out + 2)  = base + ((*in32 >> 8) & 15);
        1: 9833:  *(out + 3)  = base + ((*in32 >> 12) & 15);
        1: 9834:  *(out + 4)  = base + ((*in32 >> 16) & 15);
        1: 9835:  *(out + 5)  = base + ((*in32 >> 20) & 15);
        1: 9836:  *(out + 6)  = base + ((*in32 >> 24) & 15);
        1: 9837:  *(out + 7)  = base + ((*in32 >> 28) & 15);
        -: 9838:  /* remaining: 0 bits */
        1: 9839:  return 4;
        -: 9840:}
        -: 9841:
        -: 9842:static uint32_t
        9: 9843:pack5_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9844:  uint32_t tmp, length;
        9: 9845:  tmp  = (*(in + 0) - base) << 0;
        9: 9846:  tmp |= (*(in + 1) - base) << 5;
        9: 9847:  tmp |= (*(in + 2) - base) << 10;
        9: 9848:  tmp |= (*(in + 3) - base) << 15;
        9: 9849:  tmp |= (*(in + 4) - base) << 20;
        9: 9850:  tmp |= (*(in + 5) - base) << 25;
        9: 9851:  tmp |= (*(in + 6) - base) << 30;
        9: 9852:  *(uint32_t *)out = tmp;
        9: 9853:  out += sizeof(uint32_t);
        -: 9854:  /* consumed: 4 bytes (total: 4) */
        9: 9855:  tmp  = (*(in + 6) - base) >> (5 - 3);
        9: 9856:  tmp |= (*(in + 7) - base) << 3;
        -: 9857:  /* remaining: 24 bits */
        -: 9858:  length = (32 / 8) - (32 - 8) / 8;
        -: 9859:  /* consumed: 1 bytes (total: 5) */
        -: 9860:  memcpy(out, &tmp, length);
        9: 9861:  return 5;
        -: 9862:}
        -: 9863:
        -: 9864:static uint32_t
        1: 9865:unpack5_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9866:  uint32_t *in32 = (uint32_t *)in;
        -: 9867:  uint32_t tmp; (void)tmp;
        1: 9868:  *(out + 0)  = base + ((*in32 >> 0) & 31);
        1: 9869:  *(out + 1)  = base + ((*in32 >> 5) & 31);
        1: 9870:  *(out + 2)  = base + ((*in32 >> 10) & 31);
        1: 9871:  *(out + 3)  = base + ((*in32 >> 15) & 31);
        1: 9872:  *(out + 4)  = base + ((*in32 >> 20) & 31);
        1: 9873:  *(out + 5)  = base + ((*in32 >> 25) & 31);
        1: 9874:  tmp = (*in32 >> 30);
        -: 9875:  in32++;
        -: 9876:  /* consumed: 4 bytes (total: 8) */
        1: 9877:  tmp |= (*in32 % (1U << 3)) << (5 - 3);
        1: 9878:  *(out + 6) = base + tmp;
        1: 9879:  *(out + 7)  = base + ((*in32 >> 3) & 31);
        -: 9880:  /* remaining: 24 bits */
        1: 9881:  return 5;
        -: 9882:}
        -: 9883:
        -: 9884:static uint32_t
       17: 9885:pack6_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9886:  uint32_t tmp, length;
       17: 9887:  tmp  = (*(in + 0) - base) << 0;
       17: 9888:  tmp |= (*(in + 1) - base) << 6;
       17: 9889:  tmp |= (*(in + 2) - base) << 12;
       17: 9890:  tmp |= (*(in + 3) - base) << 18;
       17: 9891:  tmp |= (*(in + 4) - base) << 24;
       17: 9892:  tmp |= (*(in + 5) - base) << 30;
       17: 9893:  *(uint32_t *)out = tmp;
       17: 9894:  out += sizeof(uint32_t);
        -: 9895:  /* consumed: 4 bytes (total: 4) */
       17: 9896:  tmp  = (*(in + 5) - base) >> (6 - 4);
       17: 9897:  tmp |= (*(in + 6) - base) << 4;
       17: 9898:  tmp |= (*(in + 7) - base) << 10;
        -: 9899:  /* remaining: 16 bits */
        -: 9900:  length = (32 / 8) - (32 - 16) / 8;
        -: 9901:  /* consumed: 2 bytes (total: 6) */
        -: 9902:  memcpy(out, &tmp, length);
       17: 9903:  return 6;
        -: 9904:}
        -: 9905:
        -: 9906:static uint32_t
        1: 9907:unpack6_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9908:  uint32_t *in32 = (uint32_t *)in;
        -: 9909:  uint32_t tmp; (void)tmp;
        1: 9910:  *(out + 0)  = base + ((*in32 >> 0) & 63);
        1: 9911:  *(out + 1)  = base + ((*in32 >> 6) & 63);
        1: 9912:  *(out + 2)  = base + ((*in32 >> 12) & 63);
        1: 9913:  *(out + 3)  = base + ((*in32 >> 18) & 63);
        1: 9914:  *(out + 4)  = base + ((*in32 >> 24) & 63);
        1: 9915:  tmp = (*in32 >> 30);
        -: 9916:  in32++;
        -: 9917:  /* consumed: 4 bytes (total: 8) */
        1: 9918:  tmp |= (*in32 % (1U << 4)) << (6 - 4);
        1: 9919:  *(out + 5) = base + tmp;
        1: 9920:  *(out + 6)  = base + ((*in32 >> 4) & 63);
        1: 9921:  *(out + 7)  = base + ((*in32 >> 10) & 63);
        -: 9922:  /* remaining: 16 bits */
        1: 9923:  return 6;
        -: 9924:}
        -: 9925:
        -: 9926:static uint32_t
       33: 9927:pack7_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9928:  uint32_t tmp, length;
       33: 9929:  tmp  = (*(in + 0) - base) << 0;
       33: 9930:  tmp |= (*(in + 1) - base) << 7;
       33: 9931:  tmp |= (*(in + 2) - base) << 14;
       33: 9932:  tmp |= (*(in + 3) - base) << 21;
       33: 9933:  tmp |= (*(in + 4) - base) << 28;
       33: 9934:  *(uint32_t *)out = tmp;
       33: 9935:  out += sizeof(uint32_t);
        -: 9936:  /* consumed: 4 bytes (total: 4) */
       33: 9937:  tmp  = (*(in + 4) - base) >> (7 - 3);
       33: 9938:  tmp |= (*(in + 5) - base) << 3;
       33: 9939:  tmp |= (*(in + 6) - base) << 10;
       33: 9940:  tmp |= (*(in + 7) - base) << 17;
        -: 9941:  /* remaining: 8 bits */
        -: 9942:  length = (32 / 8) - (32 - 24) / 8;
        -: 9943:  /* consumed: 3 bytes (total: 7) */
        -: 9944:  memcpy(out, &tmp, length);
       33: 9945:  return 7;
        -: 9946:}
        -: 9947:
        -: 9948:static uint32_t
        1: 9949:unpack7_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9950:  uint32_t *in32 = (uint32_t *)in;
        -: 9951:  uint32_t tmp; (void)tmp;
        1: 9952:  *(out + 0)  = base + ((*in32 >> 0) & 127);
        1: 9953:  *(out + 1)  = base + ((*in32 >> 7) & 127);
        1: 9954:  *(out + 2)  = base + ((*in32 >> 14) & 127);
        1: 9955:  *(out + 3)  = base + ((*in32 >> 21) & 127);
        1: 9956:  tmp = (*in32 >> 28);
        -: 9957:  in32++;
        -: 9958:  /* consumed: 4 bytes (total: 8) */
        1: 9959:  tmp |= (*in32 % (1U << 3)) << (7 - 3);
        1: 9960:  *(out + 4) = base + tmp;
        1: 9961:  *(out + 5)  = base + ((*in32 >> 3) & 127);
        1: 9962:  *(out + 6)  = base + ((*in32 >> 10) & 127);
        1: 9963:  *(out + 7)  = base + ((*in32 >> 17) & 127);
        -: 9964:  /* remaining: 8 bits */
        1: 9965:  return 7;
        -: 9966:}
        -: 9967:
        -: 9968:static uint32_t
       65: 9969:pack8_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -: 9970:  uint32_t tmp, length;
       65: 9971:  tmp  = (*(in + 0) - base) << 0;
       65: 9972:  tmp |= (*(in + 1) - base) << 8;
       65: 9973:  tmp |= (*(in + 2) - base) << 16;
       65: 9974:  tmp |= (*(in + 3) - base) << 24;
       65: 9975:  *(uint32_t *)out = tmp;
       65: 9976:  out += sizeof(uint32_t);
        -: 9977:  /* consumed: 4 bytes (total: 4) */
       65: 9978:  tmp  = (*(in + 4) - base) << 0;
       65: 9979:  tmp |= (*(in + 5) - base) << 8;
       65: 9980:  tmp |= (*(in + 6) - base) << 16;
       65: 9981:  tmp |= (*(in + 7) - base) << 24;
        -: 9982:  /* remaining: 0 bits */
        -: 9983:  length = (32 / 8) - (32 - 32) / 8;
        -: 9984:  /* consumed: 4 bytes (total: 8) */
        -: 9985:  memcpy(out, &tmp, length);
       65: 9986:  return 8;
        -: 9987:}
        -: 9988:
        -: 9989:static uint32_t
        1: 9990:unpack8_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -: 9991:  uint32_t *in32 = (uint32_t *)in;
        -: 9992:  uint32_t tmp; (void)tmp;
        1: 9993:  *(out + 0)  = base + ((*in32 >> 0) & 255);
        1: 9994:  *(out + 1)  = base + ((*in32 >> 8) & 255);
        1: 9995:  *(out + 2)  = base + ((*in32 >> 16) & 255);
        1: 9996:  *(out + 3)  = base + ((*in32 >> 24) & 255);
        -: 9997:  in32++;
        -: 9998:  /* consumed: 4 bytes (total: 8) */
        1: 9999:  *(out + 4)  = base + ((*in32 >> 0) & 255);
        1:10000:  *(out + 5)  = base + ((*in32 >> 8) & 255);
        1:10001:  *(out + 6)  = base + ((*in32 >> 16) & 255);
        1:10002:  *(out + 7)  = base + ((*in32 >> 24) & 255);
        -:10003:  /* remaining: 0 bits */
        1:10004:  return 8;
        -:10005:}
        -:10006:
        -:10007:static uint32_t
      129:10008:pack9_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10009:  uint32_t tmp, length;
      129:10010:  tmp  = (*(in + 0) - base) << 0;
      129:10011:  tmp |= (*(in + 1) - base) << 9;
      129:10012:  tmp |= (*(in + 2) - base) << 18;
      129:10013:  tmp |= (*(in + 3) - base) << 27;
      129:10014:  *(uint32_t *)out = tmp;
        -:10015:  out += sizeof(uint32_t);
        -:10016:  /* consumed: 4 bytes (total: 4) */
      129:10017:  tmp  = (*(in + 3) - base) >> (9 - 4);
      129:10018:  tmp |= (*(in + 4) - base) << 4;
      129:10019:  tmp |= (*(in + 5) - base) << 13;
      129:10020:  tmp |= (*(in + 6) - base) << 22;
      129:10021:  tmp |= (*(in + 7) - base) << 31;
      129:10022:  *(uint32_t *)out = tmp;
      129:10023:  out += sizeof(uint32_t);
        -:10024:  /* consumed: 4 bytes (total: 8) */
      129:10025:  tmp  = (*(in + 7) - base) >> (9 - 8);
        -:10026:  /* remaining: 24 bits */
        -:10027:  length = (32 / 8) - (32 - 8) / 8;
        -:10028:  /* consumed: 1 bytes (total: 9) */
        -:10029:  memcpy(out, &tmp, length);
      129:10030:  return 9;
        -:10031:}
        -:10032:
        -:10033:static uint32_t
        1:10034:unpack9_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10035:  uint32_t *in32 = (uint32_t *)in;
        -:10036:  uint32_t tmp; (void)tmp;
        1:10037:  *(out + 0)  = base + ((*in32 >> 0) & 511);
        1:10038:  *(out + 1)  = base + ((*in32 >> 9) & 511);
        1:10039:  *(out + 2)  = base + ((*in32 >> 18) & 511);
        1:10040:  tmp = (*in32 >> 27);
        -:10041:  in32++;
        -:10042:  /* consumed: 4 bytes (total: 8) */
        1:10043:  tmp |= (*in32 % (1U << 4)) << (9 - 4);
        1:10044:  *(out + 3) = base + tmp;
        1:10045:  *(out + 4)  = base + ((*in32 >> 4) & 511);
        1:10046:  *(out + 5)  = base + ((*in32 >> 13) & 511);
        1:10047:  *(out + 6)  = base + ((*in32 >> 22) & 511);
        1:10048:  tmp = (*in32 >> 31);
        -:10049:  in32++;
        -:10050:  /* consumed: 4 bytes (total: 12) */
        1:10051:  tmp |= (*in32 % (1U << 8)) << (9 - 8);
        1:10052:  *(out + 7) = base + tmp;
        -:10053:  /* remaining: 24 bits */
        1:10054:  return 9;
        -:10055:}
        -:10056:
        -:10057:static uint32_t
      257:10058:pack10_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10059:  uint32_t tmp, length;
      257:10060:  tmp  = (*(in + 0) - base) << 0;
      257:10061:  tmp |= (*(in + 1) - base) << 10;
      257:10062:  tmp |= (*(in + 2) - base) << 20;
      257:10063:  tmp |= (*(in + 3) - base) << 30;
      257:10064:  *(uint32_t *)out = tmp;
        -:10065:  out += sizeof(uint32_t);
        -:10066:  /* consumed: 4 bytes (total: 4) */
      257:10067:  tmp  = (*(in + 3) - base) >> (10 - 8);
      257:10068:  tmp |= (*(in + 4) - base) << 8;
      257:10069:  tmp |= (*(in + 5) - base) << 18;
      257:10070:  tmp |= (*(in + 6) - base) << 28;
      257:10071:  *(uint32_t *)out = tmp;
      257:10072:  out += sizeof(uint32_t);
        -:10073:  /* consumed: 4 bytes (total: 8) */
      257:10074:  tmp  = (*(in + 6) - base) >> (10 - 6);
      257:10075:  tmp |= (*(in + 7) - base) << 6;
        -:10076:  /* remaining: 16 bits */
        -:10077:  length = (32 / 8) - (32 - 16) / 8;
        -:10078:  /* consumed: 2 bytes (total: 10) */
        -:10079:  memcpy(out, &tmp, length);
      257:10080:  return 10;
        -:10081:}
        -:10082:
        -:10083:static uint32_t
        1:10084:unpack10_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10085:  uint32_t *in32 = (uint32_t *)in;
        -:10086:  uint32_t tmp; (void)tmp;
        1:10087:  *(out + 0)  = base + ((*in32 >> 0) & 1023);
        1:10088:  *(out + 1)  = base + ((*in32 >> 10) & 1023);
        1:10089:  *(out + 2)  = base + ((*in32 >> 20) & 1023);
        1:10090:  tmp = (*in32 >> 30);
        -:10091:  in32++;
        -:10092:  /* consumed: 4 bytes (total: 8) */
        1:10093:  tmp |= (*in32 % (1U << 8)) << (10 - 8);
        1:10094:  *(out + 3) = base + tmp;
        1:10095:  *(out + 4)  = base + ((*in32 >> 8) & 1023);
        1:10096:  *(out + 5)  = base + ((*in32 >> 18) & 1023);
        1:10097:  tmp = (*in32 >> 28);
        -:10098:  in32++;
        -:10099:  /* consumed: 4 bytes (total: 12) */
        1:10100:  tmp |= (*in32 % (1U << 6)) << (10 - 6);
        1:10101:  *(out + 6) = base + tmp;
        1:10102:  *(out + 7)  = base + ((*in32 >> 6) & 1023);
        -:10103:  /* remaining: 16 bits */
        1:10104:  return 10;
        -:10105:}
        -:10106:
        -:10107:static uint32_t
      513:10108:pack11_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10109:  uint32_t tmp, length;
      513:10110:  tmp  = (*(in + 0) - base) << 0;
      513:10111:  tmp |= (*(in + 1) - base) << 11;
      513:10112:  tmp |= (*(in + 2) - base) << 22;
      513:10113:  *(uint32_t *)out = tmp;
        -:10114:  out += sizeof(uint32_t);
        -:10115:  /* consumed: 4 bytes (total: 4) */
      513:10116:  tmp  = (*(in + 2) - base) >> (11 - 1);
      513:10117:  tmp |= (*(in + 3) - base) << 1;
      513:10118:  tmp |= (*(in + 4) - base) << 12;
      513:10119:  tmp |= (*(in + 5) - base) << 23;
      513:10120:  *(uint32_t *)out = tmp;
      513:10121:  out += sizeof(uint32_t);
        -:10122:  /* consumed: 4 bytes (total: 8) */
      513:10123:  tmp  = (*(in + 5) - base) >> (11 - 2);
      513:10124:  tmp |= (*(in + 6) - base) << 2;
      513:10125:  tmp |= (*(in + 7) - base) << 13;
        -:10126:  /* remaining: 8 bits */
        -:10127:  length = (32 / 8) - (32 - 24) / 8;
        -:10128:  /* consumed: 3 bytes (total: 11) */
        -:10129:  memcpy(out, &tmp, length);
      513:10130:  return 11;
        -:10131:}
        -:10132:
        -:10133:static uint32_t
        1:10134:unpack11_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10135:  uint32_t *in32 = (uint32_t *)in;
        -:10136:  uint32_t tmp; (void)tmp;
        1:10137:  *(out + 0)  = base + ((*in32 >> 0) & 2047);
        1:10138:  *(out + 1)  = base + ((*in32 >> 11) & 2047);
        1:10139:  tmp = (*in32 >> 22);
        -:10140:  in32++;
        -:10141:  /* consumed: 4 bytes (total: 8) */
        1:10142:  tmp |= (*in32 % (1U << 1)) << (11 - 1);
        1:10143:  *(out + 2) = base + tmp;
        1:10144:  *(out + 3)  = base + ((*in32 >> 1) & 2047);
        1:10145:  *(out + 4)  = base + ((*in32 >> 12) & 2047);
        1:10146:  tmp = (*in32 >> 23);
        -:10147:  in32++;
        -:10148:  /* consumed: 4 bytes (total: 12) */
        1:10149:  tmp |= (*in32 % (1U << 2)) << (11 - 2);
        1:10150:  *(out + 5) = base + tmp;
        1:10151:  *(out + 6)  = base + ((*in32 >> 2) & 2047);
        1:10152:  *(out + 7)  = base + ((*in32 >> 13) & 2047);
        -:10153:  /* remaining: 8 bits */
        1:10154:  return 11;
        -:10155:}
        -:10156:
        -:10157:static uint32_t
     1025:10158:pack12_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10159:  uint32_t tmp, length;
     1025:10160:  tmp  = (*(in + 0) - base) << 0;
     1025:10161:  tmp |= (*(in + 1) - base) << 12;
     1025:10162:  tmp |= (*(in + 2) - base) << 24;
     1025:10163:  *(uint32_t *)out = tmp;
        -:10164:  out += sizeof(uint32_t);
        -:10165:  /* consumed: 4 bytes (total: 4) */
     1025:10166:  tmp  = (*(in + 2) - base) >> (12 - 4);
     1025:10167:  tmp |= (*(in + 3) - base) << 4;
     1025:10168:  tmp |= (*(in + 4) - base) << 16;
     1025:10169:  tmp |= (*(in + 5) - base) << 28;
     1025:10170:  *(uint32_t *)out = tmp;
     1025:10171:  out += sizeof(uint32_t);
        -:10172:  /* consumed: 4 bytes (total: 8) */
     1025:10173:  tmp  = (*(in + 5) - base) >> (12 - 8);
     1025:10174:  tmp |= (*(in + 6) - base) << 8;
     1025:10175:  tmp |= (*(in + 7) - base) << 20;
        -:10176:  /* remaining: 0 bits */
        -:10177:  length = (32 / 8) - (32 - 32) / 8;
        -:10178:  /* consumed: 4 bytes (total: 12) */
        -:10179:  memcpy(out, &tmp, length);
     1025:10180:  return 12;
        -:10181:}
        -:10182:
        -:10183:static uint32_t
        1:10184:unpack12_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10185:  uint32_t *in32 = (uint32_t *)in;
        -:10186:  uint32_t tmp; (void)tmp;
        1:10187:  *(out + 0)  = base + ((*in32 >> 0) & 4095);
        1:10188:  *(out + 1)  = base + ((*in32 >> 12) & 4095);
        1:10189:  tmp = (*in32 >> 24);
        -:10190:  in32++;
        -:10191:  /* consumed: 4 bytes (total: 8) */
        1:10192:  tmp |= (*in32 % (1U << 4)) << (12 - 4);
        1:10193:  *(out + 2) = base + tmp;
        1:10194:  *(out + 3)  = base + ((*in32 >> 4) & 4095);
        1:10195:  *(out + 4)  = base + ((*in32 >> 16) & 4095);
        1:10196:  tmp = (*in32 >> 28);
        -:10197:  in32++;
        -:10198:  /* consumed: 4 bytes (total: 12) */
        1:10199:  tmp |= (*in32 % (1U << 8)) << (12 - 8);
        1:10200:  *(out + 5) = base + tmp;
        1:10201:  *(out + 6)  = base + ((*in32 >> 8) & 4095);
        1:10202:  *(out + 7)  = base + ((*in32 >> 20) & 4095);
        -:10203:  /* remaining: 0 bits */
        1:10204:  return 12;
        -:10205:}
        -:10206:
        -:10207:static uint32_t
     2049:10208:pack13_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10209:  uint32_t tmp, length;
     2049:10210:  tmp  = (*(in + 0) - base) << 0;
     2049:10211:  tmp |= (*(in + 1) - base) << 13;
     2049:10212:  tmp |= (*(in + 2) - base) << 26;
     2049:10213:  *(uint32_t *)out = tmp;
        -:10214:  out += sizeof(uint32_t);
        -:10215:  /* consumed: 4 bytes (total: 4) */
     2049:10216:  tmp  = (*(in + 2) - base) >> (13 - 7);
     2049:10217:  tmp |= (*(in + 3) - base) << 7;
     2049:10218:  tmp |= (*(in + 4) - base) << 20;
     2049:10219:  *(uint32_t *)out = tmp;
        -:10220:  out += sizeof(uint32_t);
        -:10221:  /* consumed: 4 bytes (total: 8) */
     2049:10222:  tmp  = (*(in + 4) - base) >> (13 - 1);
     2049:10223:  tmp |= (*(in + 5) - base) << 1;
     2049:10224:  tmp |= (*(in + 6) - base) << 14;
     2049:10225:  tmp |= (*(in + 7) - base) << 27;
     2049:10226:  *(uint32_t *)out = tmp;
     2049:10227:  out += sizeof(uint32_t);
        -:10228:  /* consumed: 4 bytes (total: 12) */
     2049:10229:  tmp  = (*(in + 7) - base) >> (13 - 8);
        -:10230:  /* remaining: 24 bits */
        -:10231:  length = (32 / 8) - (32 - 8) / 8;
        -:10232:  /* consumed: 1 bytes (total: 13) */
        -:10233:  memcpy(out, &tmp, length);
     2049:10234:  return 13;
        -:10235:}
        -:10236:
        -:10237:static uint32_t
        1:10238:unpack13_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10239:  uint32_t *in32 = (uint32_t *)in;
        -:10240:  uint32_t tmp; (void)tmp;
        1:10241:  *(out + 0)  = base + ((*in32 >> 0) & 8191);
        1:10242:  *(out + 1)  = base + ((*in32 >> 13) & 8191);
        1:10243:  tmp = (*in32 >> 26);
        -:10244:  in32++;
        -:10245:  /* consumed: 4 bytes (total: 8) */
        1:10246:  tmp |= (*in32 % (1U << 7)) << (13 - 7);
        1:10247:  *(out + 2) = base + tmp;
        1:10248:  *(out + 3)  = base + ((*in32 >> 7) & 8191);
        1:10249:  tmp = (*in32 >> 20);
        -:10250:  in32++;
        -:10251:  /* consumed: 4 bytes (total: 12) */
        1:10252:  tmp |= (*in32 % (1U << 1)) << (13 - 1);
        1:10253:  *(out + 4) = base + tmp;
        1:10254:  *(out + 5)  = base + ((*in32 >> 1) & 8191);
        1:10255:  *(out + 6)  = base + ((*in32 >> 14) & 8191);
        1:10256:  tmp = (*in32 >> 27);
        -:10257:  in32++;
        -:10258:  /* consumed: 4 bytes (total: 16) */
        1:10259:  tmp |= (*in32 % (1U << 8)) << (13 - 8);
        1:10260:  *(out + 7) = base + tmp;
        -:10261:  /* remaining: 24 bits */
        1:10262:  return 13;
        -:10263:}
        -:10264:
        -:10265:static uint32_t
      905:10266:pack14_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10267:  uint32_t tmp, length;
      905:10268:  tmp  = (*(in + 0) - base) << 0;
      905:10269:  tmp |= (*(in + 1) - base) << 14;
      905:10270:  tmp |= (*(in + 2) - base) << 28;
      905:10271:  *(uint32_t *)out = tmp;
        -:10272:  out += sizeof(uint32_t);
        -:10273:  /* consumed: 4 bytes (total: 4) */
      905:10274:  tmp  = (*(in + 2) - base) >> (14 - 10);
      905:10275:  tmp |= (*(in + 3) - base) << 10;
      905:10276:  tmp |= (*(in + 4) - base) << 24;
      905:10277:  *(uint32_t *)out = tmp;
        -:10278:  out += sizeof(uint32_t);
        -:10279:  /* consumed: 4 bytes (total: 8) */
      905:10280:  tmp  = (*(in + 4) - base) >> (14 - 6);
      905:10281:  tmp |= (*(in + 5) - base) << 6;
      905:10282:  tmp |= (*(in + 6) - base) << 20;
      905:10283:  *(uint32_t *)out = tmp;
      905:10284:  out += sizeof(uint32_t);
        -:10285:  /* consumed: 4 bytes (total: 12) */
      905:10286:  tmp  = (*(in + 6) - base) >> (14 - 2);
      905:10287:  tmp |= (*(in + 7) - base) << 2;
        -:10288:  /* remaining: 16 bits */
        -:10289:  length = (32 / 8) - (32 - 16) / 8;
        -:10290:  /* consumed: 2 bytes (total: 14) */
        -:10291:  memcpy(out, &tmp, length);
      905:10292:  return 14;
        -:10293:}
        -:10294:
        -:10295:static uint32_t
        1:10296:unpack14_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10297:  uint32_t *in32 = (uint32_t *)in;
        -:10298:  uint32_t tmp; (void)tmp;
        1:10299:  *(out + 0)  = base + ((*in32 >> 0) & 16383);
        1:10300:  *(out + 1)  = base + ((*in32 >> 14) & 16383);
        1:10301:  tmp = (*in32 >> 28);
        -:10302:  in32++;
        -:10303:  /* consumed: 4 bytes (total: 8) */
        1:10304:  tmp |= (*in32 % (1U << 10)) << (14 - 10);
        1:10305:  *(out + 2) = base + tmp;
        1:10306:  *(out + 3)  = base + ((*in32 >> 10) & 16383);
        1:10307:  tmp = (*in32 >> 24);
        -:10308:  in32++;
        -:10309:  /* consumed: 4 bytes (total: 12) */
        1:10310:  tmp |= (*in32 % (1U << 6)) << (14 - 6);
        1:10311:  *(out + 4) = base + tmp;
        1:10312:  *(out + 5)  = base + ((*in32 >> 6) & 16383);
        1:10313:  tmp = (*in32 >> 20);
        -:10314:  in32++;
        -:10315:  /* consumed: 4 bytes (total: 16) */
        1:10316:  tmp |= (*in32 % (1U << 2)) << (14 - 2);
        1:10317:  *(out + 6) = base + tmp;
        1:10318:  *(out + 7)  = base + ((*in32 >> 2) & 16383);
        -:10319:  /* remaining: 16 bits */
        1:10320:  return 14;
        -:10321:}
        -:10322:
        -:10323:static uint32_t
     5003:10324:pack15_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10325:  uint32_t tmp, length;
     5003:10326:  tmp  = (*(in + 0) - base) << 0;
     5003:10327:  tmp |= (*(in + 1) - base) << 15;
     5003:10328:  tmp |= (*(in + 2) - base) << 30;
     5003:10329:  *(uint32_t *)out = tmp;
        -:10330:  out += sizeof(uint32_t);
        -:10331:  /* consumed: 4 bytes (total: 4) */
     5003:10332:  tmp  = (*(in + 2) - base) >> (15 - 13);
     5003:10333:  tmp |= (*(in + 3) - base) << 13;
     5003:10334:  tmp |= (*(in + 4) - base) << 28;
     5003:10335:  *(uint32_t *)out = tmp;
        -:10336:  out += sizeof(uint32_t);
        -:10337:  /* consumed: 4 bytes (total: 8) */
     5003:10338:  tmp  = (*(in + 4) - base) >> (15 - 11);
     5003:10339:  tmp |= (*(in + 5) - base) << 11;
     5003:10340:  tmp |= (*(in + 6) - base) << 26;
     5003:10341:  *(uint32_t *)out = tmp;
     5003:10342:  out += sizeof(uint32_t);
        -:10343:  /* consumed: 4 bytes (total: 12) */
     5003:10344:  tmp  = (*(in + 6) - base) >> (15 - 9);
     5003:10345:  tmp |= (*(in + 7) - base) << 9;
        -:10346:  /* remaining: 8 bits */
        -:10347:  length = (32 / 8) - (32 - 24) / 8;
        -:10348:  /* consumed: 3 bytes (total: 15) */
        -:10349:  memcpy(out, &tmp, length);
     5003:10350:  return 15;
        -:10351:}
        -:10352:
        -:10353:static uint32_t
        2:10354:unpack15_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10355:  uint32_t *in32 = (uint32_t *)in;
        -:10356:  uint32_t tmp; (void)tmp;
        2:10357:  *(out + 0)  = base + ((*in32 >> 0) & 32767);
        2:10358:  *(out + 1)  = base + ((*in32 >> 15) & 32767);
        2:10359:  tmp = (*in32 >> 30);
        -:10360:  in32++;
        -:10361:  /* consumed: 4 bytes (total: 8) */
        2:10362:  tmp |= (*in32 % (1U << 13)) << (15 - 13);
        2:10363:  *(out + 2) = base + tmp;
        2:10364:  *(out + 3)  = base + ((*in32 >> 13) & 32767);
        2:10365:  tmp = (*in32 >> 28);
        -:10366:  in32++;
        -:10367:  /* consumed: 4 bytes (total: 12) */
        2:10368:  tmp |= (*in32 % (1U << 11)) << (15 - 11);
        2:10369:  *(out + 4) = base + tmp;
        2:10370:  *(out + 5)  = base + ((*in32 >> 11) & 32767);
        2:10371:  tmp = (*in32 >> 26);
        -:10372:  in32++;
        -:10373:  /* consumed: 4 bytes (total: 16) */
        2:10374:  tmp |= (*in32 % (1U << 9)) << (15 - 9);
        2:10375:  *(out + 6) = base + tmp;
        2:10376:  *(out + 7)  = base + ((*in32 >> 9) & 32767);
        -:10377:  /* remaining: 8 bits */
        2:10378:  return 15;
        -:10379:}
        -:10380:
        -:10381:static uint32_t
        1:10382:pack16_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10383:  uint32_t tmp, length;
        1:10384:  tmp  = (*(in + 0) - base) << 0;
        1:10385:  tmp |= (*(in + 1) - base) << 16;
        1:10386:  *(uint32_t *)out = tmp;
        -:10387:  out += sizeof(uint32_t);
        -:10388:  /* consumed: 4 bytes (total: 4) */
        1:10389:  tmp  = (*(in + 2) - base) << 0;
        1:10390:  tmp |= (*(in + 3) - base) << 16;
        1:10391:  *(uint32_t *)out = tmp;
        -:10392:  out += sizeof(uint32_t);
        -:10393:  /* consumed: 4 bytes (total: 8) */
        1:10394:  tmp  = (*(in + 4) - base) << 0;
        1:10395:  tmp |= (*(in + 5) - base) << 16;
        1:10396:  *(uint32_t *)out = tmp;
        1:10397:  out += sizeof(uint32_t);
        -:10398:  /* consumed: 4 bytes (total: 12) */
        1:10399:  tmp  = (*(in + 6) - base) << 0;
        1:10400:  tmp |= (*(in + 7) - base) << 16;
        -:10401:  /* remaining: 0 bits */
        -:10402:  length = (32 / 8) - (32 - 32) / 8;
        -:10403:  /* consumed: 4 bytes (total: 16) */
        -:10404:  memcpy(out, &tmp, length);
        1:10405:  return 16;
        -:10406:}
        -:10407:
        -:10408:static uint32_t
        1:10409:unpack16_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10410:  uint32_t *in32 = (uint32_t *)in;
        -:10411:  uint32_t tmp; (void)tmp;
        1:10412:  *(out + 0)  = base + ((*in32 >> 0) & 65535);
        1:10413:  *(out + 1)  = base + ((*in32 >> 16) & 65535);
        -:10414:  in32++;
        -:10415:  /* consumed: 4 bytes (total: 8) */
        1:10416:  *(out + 2)  = base + ((*in32 >> 0) & 65535);
        1:10417:  *(out + 3)  = base + ((*in32 >> 16) & 65535);
        -:10418:  in32++;
        -:10419:  /* consumed: 4 bytes (total: 12) */
        1:10420:  *(out + 4)  = base + ((*in32 >> 0) & 65535);
        1:10421:  *(out + 5)  = base + ((*in32 >> 16) & 65535);
        -:10422:  in32++;
        -:10423:  /* consumed: 4 bytes (total: 16) */
        1:10424:  *(out + 6)  = base + ((*in32 >> 0) & 65535);
        1:10425:  *(out + 7)  = base + ((*in32 >> 16) & 65535);
        -:10426:  /* remaining: 0 bits */
        1:10427:  return 16;
        -:10428:}
        -:10429:
        -:10430:static uint32_t
        1:10431:pack17_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10432:  uint32_t tmp, length;
        1:10433:  tmp  = (*(in + 0) - base) << 0;
        1:10434:  tmp |= (*(in + 1) - base) << 17;
        1:10435:  *(uint32_t *)out = tmp;
        -:10436:  out += sizeof(uint32_t);
        -:10437:  /* consumed: 4 bytes (total: 4) */
        1:10438:  tmp  = (*(in + 1) - base) >> (17 - 2);
        1:10439:  tmp |= (*(in + 2) - base) << 2;
        1:10440:  tmp |= (*(in + 3) - base) << 19;
        1:10441:  *(uint32_t *)out = tmp;
        -:10442:  out += sizeof(uint32_t);
        -:10443:  /* consumed: 4 bytes (total: 8) */
        1:10444:  tmp  = (*(in + 3) - base) >> (17 - 4);
        1:10445:  tmp |= (*(in + 4) - base) << 4;
        1:10446:  tmp |= (*(in + 5) - base) << 21;
        1:10447:  *(uint32_t *)out = tmp;
        -:10448:  out += sizeof(uint32_t);
        -:10449:  /* consumed: 4 bytes (total: 12) */
        1:10450:  tmp  = (*(in + 5) - base) >> (17 - 6);
        1:10451:  tmp |= (*(in + 6) - base) << 6;
        1:10452:  tmp |= (*(in + 7) - base) << 23;
        1:10453:  *(uint32_t *)out = tmp;
        1:10454:  out += sizeof(uint32_t);
        -:10455:  /* consumed: 4 bytes (total: 16) */
        1:10456:  tmp  = (*(in + 7) - base) >> (17 - 8);
        -:10457:  /* remaining: 24 bits */
        -:10458:  length = (32 / 8) - (32 - 8) / 8;
        -:10459:  /* consumed: 1 bytes (total: 17) */
        -:10460:  memcpy(out, &tmp, length);
        1:10461:  return 17;
        -:10462:}
        -:10463:
        -:10464:static uint32_t
        1:10465:unpack17_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10466:  uint32_t *in32 = (uint32_t *)in;
        -:10467:  uint32_t tmp; (void)tmp;
        1:10468:  *(out + 0)  = base + ((*in32 >> 0) & 131071);
        1:10469:  tmp = (*in32 >> 17);
        -:10470:  in32++;
        -:10471:  /* consumed: 4 bytes (total: 8) */
        1:10472:  tmp |= (*in32 % (1U << 2)) << (17 - 2);
        1:10473:  *(out + 1) = base + tmp;
        1:10474:  *(out + 2)  = base + ((*in32 >> 2) & 131071);
        1:10475:  tmp = (*in32 >> 19);
        -:10476:  in32++;
        -:10477:  /* consumed: 4 bytes (total: 12) */
        1:10478:  tmp |= (*in32 % (1U << 4)) << (17 - 4);
        1:10479:  *(out + 3) = base + tmp;
        1:10480:  *(out + 4)  = base + ((*in32 >> 4) & 131071);
        1:10481:  tmp = (*in32 >> 21);
        -:10482:  in32++;
        -:10483:  /* consumed: 4 bytes (total: 16) */
        1:10484:  tmp |= (*in32 % (1U << 6)) << (17 - 6);
        1:10485:  *(out + 5) = base + tmp;
        1:10486:  *(out + 6)  = base + ((*in32 >> 6) & 131071);
        1:10487:  tmp = (*in32 >> 23);
        -:10488:  in32++;
        -:10489:  /* consumed: 4 bytes (total: 20) */
        1:10490:  tmp |= (*in32 % (1U << 8)) << (17 - 8);
        1:10491:  *(out + 7) = base + tmp;
        -:10492:  /* remaining: 24 bits */
        1:10493:  return 17;
        -:10494:}
        -:10495:
        -:10496:static uint32_t
        1:10497:pack18_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10498:  uint32_t tmp, length;
        1:10499:  tmp  = (*(in + 0) - base) << 0;
        1:10500:  tmp |= (*(in + 1) - base) << 18;
        1:10501:  *(uint32_t *)out = tmp;
        -:10502:  out += sizeof(uint32_t);
        -:10503:  /* consumed: 4 bytes (total: 4) */
        1:10504:  tmp  = (*(in + 1) - base) >> (18 - 4);
        1:10505:  tmp |= (*(in + 2) - base) << 4;
        1:10506:  tmp |= (*(in + 3) - base) << 22;
        1:10507:  *(uint32_t *)out = tmp;
        -:10508:  out += sizeof(uint32_t);
        -:10509:  /* consumed: 4 bytes (total: 8) */
        1:10510:  tmp  = (*(in + 3) - base) >> (18 - 8);
        1:10511:  tmp |= (*(in + 4) - base) << 8;
        1:10512:  tmp |= (*(in + 5) - base) << 26;
        1:10513:  *(uint32_t *)out = tmp;
        -:10514:  out += sizeof(uint32_t);
        -:10515:  /* consumed: 4 bytes (total: 12) */
        1:10516:  tmp  = (*(in + 5) - base) >> (18 - 12);
        1:10517:  tmp |= (*(in + 6) - base) << 12;
        1:10518:  tmp |= (*(in + 7) - base) << 30;
        1:10519:  *(uint32_t *)out = tmp;
        1:10520:  out += sizeof(uint32_t);
        -:10521:  /* consumed: 4 bytes (total: 16) */
        1:10522:  tmp  = (*(in + 7) - base) >> (18 - 16);
        -:10523:  /* remaining: 16 bits */
        -:10524:  length = (32 / 8) - (32 - 16) / 8;
        -:10525:  /* consumed: 2 bytes (total: 18) */
        -:10526:  memcpy(out, &tmp, length);
        1:10527:  return 18;
        -:10528:}
        -:10529:
        -:10530:static uint32_t
        1:10531:unpack18_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10532:  uint32_t *in32 = (uint32_t *)in;
        -:10533:  uint32_t tmp; (void)tmp;
        1:10534:  *(out + 0)  = base + ((*in32 >> 0) & 262143);
        1:10535:  tmp = (*in32 >> 18);
        -:10536:  in32++;
        -:10537:  /* consumed: 4 bytes (total: 8) */
        1:10538:  tmp |= (*in32 % (1U << 4)) << (18 - 4);
        1:10539:  *(out + 1) = base + tmp;
        1:10540:  *(out + 2)  = base + ((*in32 >> 4) & 262143);
        1:10541:  tmp = (*in32 >> 22);
        -:10542:  in32++;
        -:10543:  /* consumed: 4 bytes (total: 12) */
        1:10544:  tmp |= (*in32 % (1U << 8)) << (18 - 8);
        1:10545:  *(out + 3) = base + tmp;
        1:10546:  *(out + 4)  = base + ((*in32 >> 8) & 262143);
        1:10547:  tmp = (*in32 >> 26);
        -:10548:  in32++;
        -:10549:  /* consumed: 4 bytes (total: 16) */
        1:10550:  tmp |= (*in32 % (1U << 12)) << (18 - 12);
        1:10551:  *(out + 5) = base + tmp;
        1:10552:  *(out + 6)  = base + ((*in32 >> 12) & 262143);
        1:10553:  tmp = (*in32 >> 30);
        -:10554:  in32++;
        -:10555:  /* consumed: 4 bytes (total: 20) */
        1:10556:  tmp |= (*in32 % (1U << 16)) << (18 - 16);
        1:10557:  *(out + 7) = base + tmp;
        -:10558:  /* remaining: 16 bits */
        1:10559:  return 18;
        -:10560:}
        -:10561:
        -:10562:static uint32_t
        1:10563:pack19_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10564:  uint32_t tmp, length;
        1:10565:  tmp  = (*(in + 0) - base) << 0;
        1:10566:  tmp |= (*(in + 1) - base) << 19;
        1:10567:  *(uint32_t *)out = tmp;
        -:10568:  out += sizeof(uint32_t);
        -:10569:  /* consumed: 4 bytes (total: 4) */
        1:10570:  tmp  = (*(in + 1) - base) >> (19 - 6);
        1:10571:  tmp |= (*(in + 2) - base) << 6;
        1:10572:  tmp |= (*(in + 3) - base) << 25;
        1:10573:  *(uint32_t *)out = tmp;
        -:10574:  out += sizeof(uint32_t);
        -:10575:  /* consumed: 4 bytes (total: 8) */
        1:10576:  tmp  = (*(in + 3) - base) >> (19 - 12);
        1:10577:  tmp |= (*(in + 4) - base) << 12;
        1:10578:  tmp |= (*(in + 5) - base) << 31;
        1:10579:  *(uint32_t *)out = tmp;
        -:10580:  out += sizeof(uint32_t);
        -:10581:  /* consumed: 4 bytes (total: 12) */
        1:10582:  tmp  = (*(in + 5) - base) >> (19 - 18);
        1:10583:  tmp |= (*(in + 6) - base) << 18;
        1:10584:  *(uint32_t *)out = tmp;
        1:10585:  out += sizeof(uint32_t);
        -:10586:  /* consumed: 4 bytes (total: 16) */
        1:10587:  tmp  = (*(in + 6) - base) >> (19 - 5);
        1:10588:  tmp |= (*(in + 7) - base) << 5;
        -:10589:  /* remaining: 8 bits */
        -:10590:  length = (32 / 8) - (32 - 24) / 8;
        -:10591:  /* consumed: 3 bytes (total: 19) */
        -:10592:  memcpy(out, &tmp, length);
        1:10593:  return 19;
        -:10594:}
        -:10595:
        -:10596:static uint32_t
        1:10597:unpack19_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10598:  uint32_t *in32 = (uint32_t *)in;
        -:10599:  uint32_t tmp; (void)tmp;
        1:10600:  *(out + 0)  = base + ((*in32 >> 0) & 524287);
        1:10601:  tmp = (*in32 >> 19);
        -:10602:  in32++;
        -:10603:  /* consumed: 4 bytes (total: 8) */
        1:10604:  tmp |= (*in32 % (1U << 6)) << (19 - 6);
        1:10605:  *(out + 1) = base + tmp;
        1:10606:  *(out + 2)  = base + ((*in32 >> 6) & 524287);
        1:10607:  tmp = (*in32 >> 25);
        -:10608:  in32++;
        -:10609:  /* consumed: 4 bytes (total: 12) */
        1:10610:  tmp |= (*in32 % (1U << 12)) << (19 - 12);
        1:10611:  *(out + 3) = base + tmp;
        1:10612:  *(out + 4)  = base + ((*in32 >> 12) & 524287);
        1:10613:  tmp = (*in32 >> 31);
        -:10614:  in32++;
        -:10615:  /* consumed: 4 bytes (total: 16) */
        1:10616:  tmp |= (*in32 % (1U << 18)) << (19 - 18);
        1:10617:  *(out + 5) = base + tmp;
        1:10618:  tmp = (*in32 >> 18);
        -:10619:  in32++;
        -:10620:  /* consumed: 4 bytes (total: 20) */
        1:10621:  tmp |= (*in32 % (1U << 5)) << (19 - 5);
        1:10622:  *(out + 6) = base + tmp;
        1:10623:  *(out + 7)  = base + ((*in32 >> 5) & 524287);
        -:10624:  /* remaining: 8 bits */
        1:10625:  return 19;
        -:10626:}
        -:10627:
        -:10628:static uint32_t
        1:10629:pack20_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10630:  uint32_t tmp, length;
        1:10631:  tmp  = (*(in + 0) - base) << 0;
        1:10632:  tmp |= (*(in + 1) - base) << 20;
        1:10633:  *(uint32_t *)out = tmp;
        -:10634:  out += sizeof(uint32_t);
        -:10635:  /* consumed: 4 bytes (total: 4) */
        1:10636:  tmp  = (*(in + 1) - base) >> (20 - 8);
        1:10637:  tmp |= (*(in + 2) - base) << 8;
        1:10638:  tmp |= (*(in + 3) - base) << 28;
        1:10639:  *(uint32_t *)out = tmp;
        -:10640:  out += sizeof(uint32_t);
        -:10641:  /* consumed: 4 bytes (total: 8) */
        1:10642:  tmp  = (*(in + 3) - base) >> (20 - 16);
        1:10643:  tmp |= (*(in + 4) - base) << 16;
        1:10644:  *(uint32_t *)out = tmp;
        -:10645:  out += sizeof(uint32_t);
        -:10646:  /* consumed: 4 bytes (total: 12) */
        1:10647:  tmp  = (*(in + 4) - base) >> (20 - 4);
        1:10648:  tmp |= (*(in + 5) - base) << 4;
        1:10649:  tmp |= (*(in + 6) - base) << 24;
        1:10650:  *(uint32_t *)out = tmp;
        1:10651:  out += sizeof(uint32_t);
        -:10652:  /* consumed: 4 bytes (total: 16) */
        1:10653:  tmp  = (*(in + 6) - base) >> (20 - 12);
        1:10654:  tmp |= (*(in + 7) - base) << 12;
        -:10655:  /* remaining: 0 bits */
        -:10656:  length = (32 / 8) - (32 - 32) / 8;
        -:10657:  /* consumed: 4 bytes (total: 20) */
        -:10658:  memcpy(out, &tmp, length);
        1:10659:  return 20;
        -:10660:}
        -:10661:
        -:10662:static uint32_t
        1:10663:unpack20_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10664:  uint32_t *in32 = (uint32_t *)in;
        -:10665:  uint32_t tmp; (void)tmp;
        1:10666:  *(out + 0)  = base + ((*in32 >> 0) & 1048575);
        1:10667:  tmp = (*in32 >> 20);
        -:10668:  in32++;
        -:10669:  /* consumed: 4 bytes (total: 8) */
        1:10670:  tmp |= (*in32 % (1U << 8)) << (20 - 8);
        1:10671:  *(out + 1) = base + tmp;
        1:10672:  *(out + 2)  = base + ((*in32 >> 8) & 1048575);
        1:10673:  tmp = (*in32 >> 28);
        -:10674:  in32++;
        -:10675:  /* consumed: 4 bytes (total: 12) */
        1:10676:  tmp |= (*in32 % (1U << 16)) << (20 - 16);
        1:10677:  *(out + 3) = base + tmp;
        1:10678:  tmp = (*in32 >> 16);
        -:10679:  in32++;
        -:10680:  /* consumed: 4 bytes (total: 16) */
        1:10681:  tmp |= (*in32 % (1U << 4)) << (20 - 4);
        1:10682:  *(out + 4) = base + tmp;
        1:10683:  *(out + 5)  = base + ((*in32 >> 4) & 1048575);
        1:10684:  tmp = (*in32 >> 24);
        -:10685:  in32++;
        -:10686:  /* consumed: 4 bytes (total: 20) */
        1:10687:  tmp |= (*in32 % (1U << 12)) << (20 - 12);
        1:10688:  *(out + 6) = base + tmp;
        1:10689:  *(out + 7)  = base + ((*in32 >> 12) & 1048575);
        -:10690:  /* remaining: 0 bits */
        1:10691:  return 20;
        -:10692:}
        -:10693:
        -:10694:static uint32_t
        1:10695:pack21_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10696:  uint32_t tmp, length;
        1:10697:  tmp  = (*(in + 0) - base) << 0;
        1:10698:  tmp |= (*(in + 1) - base) << 21;
        1:10699:  *(uint32_t *)out = tmp;
        -:10700:  out += sizeof(uint32_t);
        -:10701:  /* consumed: 4 bytes (total: 4) */
        1:10702:  tmp  = (*(in + 1) - base) >> (21 - 10);
        1:10703:  tmp |= (*(in + 2) - base) << 10;
        1:10704:  tmp |= (*(in + 3) - base) << 31;
        1:10705:  *(uint32_t *)out = tmp;
        -:10706:  out += sizeof(uint32_t);
        -:10707:  /* consumed: 4 bytes (total: 8) */
        1:10708:  tmp  = (*(in + 3) - base) >> (21 - 20);
        1:10709:  tmp |= (*(in + 4) - base) << 20;
        1:10710:  *(uint32_t *)out = tmp;
        -:10711:  out += sizeof(uint32_t);
        -:10712:  /* consumed: 4 bytes (total: 12) */
        1:10713:  tmp  = (*(in + 4) - base) >> (21 - 9);
        1:10714:  tmp |= (*(in + 5) - base) << 9;
        1:10715:  tmp |= (*(in + 6) - base) << 30;
        1:10716:  *(uint32_t *)out = tmp;
        -:10717:  out += sizeof(uint32_t);
        -:10718:  /* consumed: 4 bytes (total: 16) */
        1:10719:  tmp  = (*(in + 6) - base) >> (21 - 19);
        1:10720:  tmp |= (*(in + 7) - base) << 19;
        1:10721:  *(uint32_t *)out = tmp;
        1:10722:  out += sizeof(uint32_t);
        -:10723:  /* consumed: 4 bytes (total: 20) */
        1:10724:  tmp  = (*(in + 7) - base) >> (21 - 8);
        -:10725:  /* remaining: 24 bits */
        -:10726:  length = (32 / 8) - (32 - 8) / 8;
        -:10727:  /* consumed: 1 bytes (total: 21) */
        -:10728:  memcpy(out, &tmp, length);
        1:10729:  return 21;
        -:10730:}
        -:10731:
        -:10732:static uint32_t
        1:10733:unpack21_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10734:  uint32_t *in32 = (uint32_t *)in;
        -:10735:  uint32_t tmp; (void)tmp;
        1:10736:  *(out + 0)  = base + ((*in32 >> 0) & 2097151);
        1:10737:  tmp = (*in32 >> 21);
        -:10738:  in32++;
        -:10739:  /* consumed: 4 bytes (total: 8) */
        1:10740:  tmp |= (*in32 % (1U << 10)) << (21 - 10);
        1:10741:  *(out + 1) = base + tmp;
        1:10742:  *(out + 2)  = base + ((*in32 >> 10) & 2097151);
        1:10743:  tmp = (*in32 >> 31);
        -:10744:  in32++;
        -:10745:  /* consumed: 4 bytes (total: 12) */
        1:10746:  tmp |= (*in32 % (1U << 20)) << (21 - 20);
        1:10747:  *(out + 3) = base + tmp;
        1:10748:  tmp = (*in32 >> 20);
        -:10749:  in32++;
        -:10750:  /* consumed: 4 bytes (total: 16) */
        1:10751:  tmp |= (*in32 % (1U << 9)) << (21 - 9);
        1:10752:  *(out + 4) = base + tmp;
        1:10753:  *(out + 5)  = base + ((*in32 >> 9) & 2097151);
        1:10754:  tmp = (*in32 >> 30);
        -:10755:  in32++;
        -:10756:  /* consumed: 4 bytes (total: 20) */
        1:10757:  tmp |= (*in32 % (1U << 19)) << (21 - 19);
        1:10758:  *(out + 6) = base + tmp;
        1:10759:  tmp = (*in32 >> 19);
        -:10760:  in32++;
        -:10761:  /* consumed: 4 bytes (total: 24) */
        1:10762:  tmp |= (*in32 % (1U << 8)) << (21 - 8);
        1:10763:  *(out + 7) = base + tmp;
        -:10764:  /* remaining: 24 bits */
        1:10765:  return 21;
        -:10766:}
        -:10767:
        -:10768:static uint32_t
        1:10769:pack22_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10770:  uint32_t tmp, length;
        1:10771:  tmp  = (*(in + 0) - base) << 0;
        1:10772:  tmp |= (*(in + 1) - base) << 22;
        1:10773:  *(uint32_t *)out = tmp;
        -:10774:  out += sizeof(uint32_t);
        -:10775:  /* consumed: 4 bytes (total: 4) */
        1:10776:  tmp  = (*(in + 1) - base) >> (22 - 12);
        1:10777:  tmp |= (*(in + 2) - base) << 12;
        1:10778:  *(uint32_t *)out = tmp;
        -:10779:  out += sizeof(uint32_t);
        -:10780:  /* consumed: 4 bytes (total: 8) */
        1:10781:  tmp  = (*(in + 2) - base) >> (22 - 2);
        1:10782:  tmp |= (*(in + 3) - base) << 2;
        1:10783:  tmp |= (*(in + 4) - base) << 24;
        1:10784:  *(uint32_t *)out = tmp;
        -:10785:  out += sizeof(uint32_t);
        -:10786:  /* consumed: 4 bytes (total: 12) */
        1:10787:  tmp  = (*(in + 4) - base) >> (22 - 14);
        1:10788:  tmp |= (*(in + 5) - base) << 14;
        1:10789:  *(uint32_t *)out = tmp;
        -:10790:  out += sizeof(uint32_t);
        -:10791:  /* consumed: 4 bytes (total: 16) */
        1:10792:  tmp  = (*(in + 5) - base) >> (22 - 4);
        1:10793:  tmp |= (*(in + 6) - base) << 4;
        1:10794:  tmp |= (*(in + 7) - base) << 26;
        1:10795:  *(uint32_t *)out = tmp;
        1:10796:  out += sizeof(uint32_t);
        -:10797:  /* consumed: 4 bytes (total: 20) */
        1:10798:  tmp  = (*(in + 7) - base) >> (22 - 16);
        -:10799:  /* remaining: 16 bits */
        -:10800:  length = (32 / 8) - (32 - 16) / 8;
        -:10801:  /* consumed: 2 bytes (total: 22) */
        -:10802:  memcpy(out, &tmp, length);
        1:10803:  return 22;
        -:10804:}
        -:10805:
        -:10806:static uint32_t
        1:10807:unpack22_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10808:  uint32_t *in32 = (uint32_t *)in;
        -:10809:  uint32_t tmp; (void)tmp;
        1:10810:  *(out + 0)  = base + ((*in32 >> 0) & 4194303);
        1:10811:  tmp = (*in32 >> 22);
        -:10812:  in32++;
        -:10813:  /* consumed: 4 bytes (total: 8) */
        1:10814:  tmp |= (*in32 % (1U << 12)) << (22 - 12);
        1:10815:  *(out + 1) = base + tmp;
        1:10816:  tmp = (*in32 >> 12);
        -:10817:  in32++;
        -:10818:  /* consumed: 4 bytes (total: 12) */
        1:10819:  tmp |= (*in32 % (1U << 2)) << (22 - 2);
        1:10820:  *(out + 2) = base + tmp;
        1:10821:  *(out + 3)  = base + ((*in32 >> 2) & 4194303);
        1:10822:  tmp = (*in32 >> 24);
        -:10823:  in32++;
        -:10824:  /* consumed: 4 bytes (total: 16) */
        1:10825:  tmp |= (*in32 % (1U << 14)) << (22 - 14);
        1:10826:  *(out + 4) = base + tmp;
        1:10827:  tmp = (*in32 >> 14);
        -:10828:  in32++;
        -:10829:  /* consumed: 4 bytes (total: 20) */
        1:10830:  tmp |= (*in32 % (1U << 4)) << (22 - 4);
        1:10831:  *(out + 5) = base + tmp;
        1:10832:  *(out + 6)  = base + ((*in32 >> 4) & 4194303);
        1:10833:  tmp = (*in32 >> 26);
        -:10834:  in32++;
        -:10835:  /* consumed: 4 bytes (total: 24) */
        1:10836:  tmp |= (*in32 % (1U << 16)) << (22 - 16);
        1:10837:  *(out + 7) = base + tmp;
        -:10838:  /* remaining: 16 bits */
        1:10839:  return 22;
        -:10840:}
        -:10841:
        -:10842:static uint32_t
        1:10843:pack23_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10844:  uint32_t tmp, length;
        1:10845:  tmp  = (*(in + 0) - base) << 0;
        1:10846:  tmp |= (*(in + 1) - base) << 23;
        1:10847:  *(uint32_t *)out = tmp;
        -:10848:  out += sizeof(uint32_t);
        -:10849:  /* consumed: 4 bytes (total: 4) */
        1:10850:  tmp  = (*(in + 1) - base) >> (23 - 14);
        1:10851:  tmp |= (*(in + 2) - base) << 14;
        1:10852:  *(uint32_t *)out = tmp;
        -:10853:  out += sizeof(uint32_t);
        -:10854:  /* consumed: 4 bytes (total: 8) */
        1:10855:  tmp  = (*(in + 2) - base) >> (23 - 5);
        1:10856:  tmp |= (*(in + 3) - base) << 5;
        1:10857:  tmp |= (*(in + 4) - base) << 28;
        1:10858:  *(uint32_t *)out = tmp;
        -:10859:  out += sizeof(uint32_t);
        -:10860:  /* consumed: 4 bytes (total: 12) */
        1:10861:  tmp  = (*(in + 4) - base) >> (23 - 19);
        1:10862:  tmp |= (*(in + 5) - base) << 19;
        1:10863:  *(uint32_t *)out = tmp;
        -:10864:  out += sizeof(uint32_t);
        -:10865:  /* consumed: 4 bytes (total: 16) */
        1:10866:  tmp  = (*(in + 5) - base) >> (23 - 10);
        1:10867:  tmp |= (*(in + 6) - base) << 10;
        1:10868:  *(uint32_t *)out = tmp;
        1:10869:  out += sizeof(uint32_t);
        -:10870:  /* consumed: 4 bytes (total: 20) */
        1:10871:  tmp  = (*(in + 6) - base) >> (23 - 1);
        1:10872:  tmp |= (*(in + 7) - base) << 1;
        -:10873:  /* remaining: 8 bits */
        -:10874:  length = (32 / 8) - (32 - 24) / 8;
        -:10875:  /* consumed: 3 bytes (total: 23) */
        -:10876:  memcpy(out, &tmp, length);
        1:10877:  return 23;
        -:10878:}
        -:10879:
        -:10880:static uint32_t
        1:10881:unpack23_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10882:  uint32_t *in32 = (uint32_t *)in;
        -:10883:  uint32_t tmp; (void)tmp;
        1:10884:  *(out + 0)  = base + ((*in32 >> 0) & 8388607);
        1:10885:  tmp = (*in32 >> 23);
        -:10886:  in32++;
        -:10887:  /* consumed: 4 bytes (total: 8) */
        1:10888:  tmp |= (*in32 % (1U << 14)) << (23 - 14);
        1:10889:  *(out + 1) = base + tmp;
        1:10890:  tmp = (*in32 >> 14);
        -:10891:  in32++;
        -:10892:  /* consumed: 4 bytes (total: 12) */
        1:10893:  tmp |= (*in32 % (1U << 5)) << (23 - 5);
        1:10894:  *(out + 2) = base + tmp;
        1:10895:  *(out + 3)  = base + ((*in32 >> 5) & 8388607);
        1:10896:  tmp = (*in32 >> 28);
        -:10897:  in32++;
        -:10898:  /* consumed: 4 bytes (total: 16) */
        1:10899:  tmp |= (*in32 % (1U << 19)) << (23 - 19);
        1:10900:  *(out + 4) = base + tmp;
        1:10901:  tmp = (*in32 >> 19);
        -:10902:  in32++;
        -:10903:  /* consumed: 4 bytes (total: 20) */
        1:10904:  tmp |= (*in32 % (1U << 10)) << (23 - 10);
        1:10905:  *(out + 5) = base + tmp;
        1:10906:  tmp = (*in32 >> 10);
        -:10907:  in32++;
        -:10908:  /* consumed: 4 bytes (total: 24) */
        1:10909:  tmp |= (*in32 % (1U << 1)) << (23 - 1);
        1:10910:  *(out + 6) = base + tmp;
        1:10911:  *(out + 7)  = base + ((*in32 >> 1) & 8388607);
        -:10912:  /* remaining: 8 bits */
        1:10913:  return 23;
        -:10914:}
        -:10915:
        -:10916:static uint32_t
        3:10917:pack24_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10918:  uint32_t tmp, length;
        3:10919:  tmp  = (*(in + 0) - base) << 0;
        3:10920:  tmp |= (*(in + 1) - base) << 24;
        3:10921:  *(uint32_t *)out = tmp;
        -:10922:  out += sizeof(uint32_t);
        -:10923:  /* consumed: 4 bytes (total: 4) */
        3:10924:  tmp  = (*(in + 1) - base) >> (24 - 16);
        3:10925:  tmp |= (*(in + 2) - base) << 16;
        3:10926:  *(uint32_t *)out = tmp;
        -:10927:  out += sizeof(uint32_t);
        -:10928:  /* consumed: 4 bytes (total: 8) */
        3:10929:  tmp  = (*(in + 2) - base) >> (24 - 8);
        3:10930:  tmp |= (*(in + 3) - base) << 8;
        3:10931:  *(uint32_t *)out = tmp;
        -:10932:  out += sizeof(uint32_t);
        -:10933:  /* consumed: 4 bytes (total: 12) */
        3:10934:  tmp  = (*(in + 4) - base) << 0;
        3:10935:  tmp |= (*(in + 5) - base) << 24;
        3:10936:  *(uint32_t *)out = tmp;
        -:10937:  out += sizeof(uint32_t);
        -:10938:  /* consumed: 4 bytes (total: 16) */
        3:10939:  tmp  = (*(in + 5) - base) >> (24 - 16);
        3:10940:  tmp |= (*(in + 6) - base) << 16;
        3:10941:  *(uint32_t *)out = tmp;
        3:10942:  out += sizeof(uint32_t);
        -:10943:  /* consumed: 4 bytes (total: 20) */
        3:10944:  tmp  = (*(in + 6) - base) >> (24 - 8);
        3:10945:  tmp |= (*(in + 7) - base) << 8;
        -:10946:  /* remaining: 0 bits */
        -:10947:  length = (32 / 8) - (32 - 32) / 8;
        -:10948:  /* consumed: 4 bytes (total: 24) */
        -:10949:  memcpy(out, &tmp, length);
        3:10950:  return 24;
        -:10951:}
        -:10952:
        -:10953:static uint32_t
        2:10954:unpack24_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:10955:  uint32_t *in32 = (uint32_t *)in;
        -:10956:  uint32_t tmp; (void)tmp;
        2:10957:  *(out + 0)  = base + ((*in32 >> 0) & 16777215);
        2:10958:  tmp = (*in32 >> 24);
        -:10959:  in32++;
        -:10960:  /* consumed: 4 bytes (total: 8) */
        2:10961:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        2:10962:  *(out + 1) = base + tmp;
        2:10963:  tmp = (*in32 >> 16);
        -:10964:  in32++;
        -:10965:  /* consumed: 4 bytes (total: 12) */
        2:10966:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        2:10967:  *(out + 2) = base + tmp;
        2:10968:  *(out + 3)  = base + ((*in32 >> 8) & 16777215);
        -:10969:  in32++;
        -:10970:  /* consumed: 4 bytes (total: 16) */
        2:10971:  *(out + 4)  = base + ((*in32 >> 0) & 16777215);
        2:10972:  tmp = (*in32 >> 24);
        -:10973:  in32++;
        -:10974:  /* consumed: 4 bytes (total: 20) */
        2:10975:  tmp |= (*in32 % (1U << 16)) << (24 - 16);
        2:10976:  *(out + 5) = base + tmp;
        2:10977:  tmp = (*in32 >> 16);
        -:10978:  in32++;
        -:10979:  /* consumed: 4 bytes (total: 24) */
        2:10980:  tmp |= (*in32 % (1U << 8)) << (24 - 8);
        2:10981:  *(out + 6) = base + tmp;
        2:10982:  *(out + 7)  = base + ((*in32 >> 8) & 16777215);
        -:10983:  /* remaining: 0 bits */
        2:10984:  return 24;
        -:10985:}
        -:10986:
        -:10987:static uint32_t
        3:10988:pack25_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:10989:  uint32_t tmp, length;
        3:10990:  tmp  = (*(in + 0) - base) << 0;
        3:10991:  tmp |= (*(in + 1) - base) << 25;
        3:10992:  *(uint32_t *)out = tmp;
        -:10993:  out += sizeof(uint32_t);
        -:10994:  /* consumed: 4 bytes (total: 4) */
        3:10995:  tmp  = (*(in + 1) - base) >> (25 - 18);
        3:10996:  tmp |= (*(in + 2) - base) << 18;
        3:10997:  *(uint32_t *)out = tmp;
        -:10998:  out += sizeof(uint32_t);
        -:10999:  /* consumed: 4 bytes (total: 8) */
        3:11000:  tmp  = (*(in + 2) - base) >> (25 - 11);
        3:11001:  tmp |= (*(in + 3) - base) << 11;
        3:11002:  *(uint32_t *)out = tmp;
        -:11003:  out += sizeof(uint32_t);
        -:11004:  /* consumed: 4 bytes (total: 12) */
        3:11005:  tmp  = (*(in + 3) - base) >> (25 - 4);
        3:11006:  tmp |= (*(in + 4) - base) << 4;
        3:11007:  tmp |= (*(in + 5) - base) << 29;
        3:11008:  *(uint32_t *)out = tmp;
        -:11009:  out += sizeof(uint32_t);
        -:11010:  /* consumed: 4 bytes (total: 16) */
        3:11011:  tmp  = (*(in + 5) - base) >> (25 - 22);
        3:11012:  tmp |= (*(in + 6) - base) << 22;
        3:11013:  *(uint32_t *)out = tmp;
        -:11014:  out += sizeof(uint32_t);
        -:11015:  /* consumed: 4 bytes (total: 20) */
        3:11016:  tmp  = (*(in + 6) - base) >> (25 - 15);
        3:11017:  tmp |= (*(in + 7) - base) << 15;
        3:11018:  *(uint32_t *)out = tmp;
        3:11019:  out += sizeof(uint32_t);
        -:11020:  /* consumed: 4 bytes (total: 24) */
        3:11021:  tmp  = (*(in + 7) - base) >> (25 - 8);
        -:11022:  /* remaining: 24 bits */
        -:11023:  length = (32 / 8) - (32 - 8) / 8;
        -:11024:  /* consumed: 1 bytes (total: 25) */
        -:11025:  memcpy(out, &tmp, length);
        3:11026:  return 25;
        -:11027:}
        -:11028:
        -:11029:static uint32_t
        2:11030:unpack25_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11031:  uint32_t *in32 = (uint32_t *)in;
        -:11032:  uint32_t tmp; (void)tmp;
        2:11033:  *(out + 0)  = base + ((*in32 >> 0) & 33554431);
        2:11034:  tmp = (*in32 >> 25);
        -:11035:  in32++;
        -:11036:  /* consumed: 4 bytes (total: 8) */
        2:11037:  tmp |= (*in32 % (1U << 18)) << (25 - 18);
        2:11038:  *(out + 1) = base + tmp;
        2:11039:  tmp = (*in32 >> 18);
        -:11040:  in32++;
        -:11041:  /* consumed: 4 bytes (total: 12) */
        2:11042:  tmp |= (*in32 % (1U << 11)) << (25 - 11);
        2:11043:  *(out + 2) = base + tmp;
        2:11044:  tmp = (*in32 >> 11);
        -:11045:  in32++;
        -:11046:  /* consumed: 4 bytes (total: 16) */
        2:11047:  tmp |= (*in32 % (1U << 4)) << (25 - 4);
        2:11048:  *(out + 3) = base + tmp;
        2:11049:  *(out + 4)  = base + ((*in32 >> 4) & 33554431);
        2:11050:  tmp = (*in32 >> 29);
        -:11051:  in32++;
        -:11052:  /* consumed: 4 bytes (total: 20) */
        2:11053:  tmp |= (*in32 % (1U << 22)) << (25 - 22);
        2:11054:  *(out + 5) = base + tmp;
        2:11055:  tmp = (*in32 >> 22);
        -:11056:  in32++;
        -:11057:  /* consumed: 4 bytes (total: 24) */
        2:11058:  tmp |= (*in32 % (1U << 15)) << (25 - 15);
        2:11059:  *(out + 6) = base + tmp;
        2:11060:  tmp = (*in32 >> 15);
        -:11061:  in32++;
        -:11062:  /* consumed: 4 bytes (total: 28) */
        2:11063:  tmp |= (*in32 % (1U << 8)) << (25 - 8);
        2:11064:  *(out + 7) = base + tmp;
        -:11065:  /* remaining: 24 bits */
        2:11066:  return 25;
        -:11067:}
        -:11068:
        -:11069:static uint32_t
        3:11070:pack26_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11071:  uint32_t tmp, length;
        3:11072:  tmp  = (*(in + 0) - base) << 0;
        3:11073:  tmp |= (*(in + 1) - base) << 26;
        3:11074:  *(uint32_t *)out = tmp;
        -:11075:  out += sizeof(uint32_t);
        -:11076:  /* consumed: 4 bytes (total: 4) */
        3:11077:  tmp  = (*(in + 1) - base) >> (26 - 20);
        3:11078:  tmp |= (*(in + 2) - base) << 20;
        3:11079:  *(uint32_t *)out = tmp;
        -:11080:  out += sizeof(uint32_t);
        -:11081:  /* consumed: 4 bytes (total: 8) */
        3:11082:  tmp  = (*(in + 2) - base) >> (26 - 14);
        3:11083:  tmp |= (*(in + 3) - base) << 14;
        3:11084:  *(uint32_t *)out = tmp;
        -:11085:  out += sizeof(uint32_t);
        -:11086:  /* consumed: 4 bytes (total: 12) */
        3:11087:  tmp  = (*(in + 3) - base) >> (26 - 8);
        3:11088:  tmp |= (*(in + 4) - base) << 8;
        3:11089:  *(uint32_t *)out = tmp;
        -:11090:  out += sizeof(uint32_t);
        -:11091:  /* consumed: 4 bytes (total: 16) */
        3:11092:  tmp  = (*(in + 4) - base) >> (26 - 2);
        3:11093:  tmp |= (*(in + 5) - base) << 2;
        3:11094:  tmp |= (*(in + 6) - base) << 28;
        3:11095:  *(uint32_t *)out = tmp;
        -:11096:  out += sizeof(uint32_t);
        -:11097:  /* consumed: 4 bytes (total: 20) */
        3:11098:  tmp  = (*(in + 6) - base) >> (26 - 22);
        3:11099:  tmp |= (*(in + 7) - base) << 22;
        3:11100:  *(uint32_t *)out = tmp;
        3:11101:  out += sizeof(uint32_t);
        -:11102:  /* consumed: 4 bytes (total: 24) */
        3:11103:  tmp  = (*(in + 7) - base) >> (26 - 16);
        -:11104:  /* remaining: 16 bits */
        -:11105:  length = (32 / 8) - (32 - 16) / 8;
        -:11106:  /* consumed: 2 bytes (total: 26) */
        -:11107:  memcpy(out, &tmp, length);
        3:11108:  return 26;
        -:11109:}
        -:11110:
        -:11111:static uint32_t
        1:11112:unpack26_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11113:  uint32_t *in32 = (uint32_t *)in;
        -:11114:  uint32_t tmp; (void)tmp;
        1:11115:  *(out + 0)  = base + ((*in32 >> 0) & 67108863);
        1:11116:  tmp = (*in32 >> 26);
        -:11117:  in32++;
        -:11118:  /* consumed: 4 bytes (total: 8) */
        1:11119:  tmp |= (*in32 % (1U << 20)) << (26 - 20);
        1:11120:  *(out + 1) = base + tmp;
        1:11121:  tmp = (*in32 >> 20);
        -:11122:  in32++;
        -:11123:  /* consumed: 4 bytes (total: 12) */
        1:11124:  tmp |= (*in32 % (1U << 14)) << (26 - 14);
        1:11125:  *(out + 2) = base + tmp;
        1:11126:  tmp = (*in32 >> 14);
        -:11127:  in32++;
        -:11128:  /* consumed: 4 bytes (total: 16) */
        1:11129:  tmp |= (*in32 % (1U << 8)) << (26 - 8);
        1:11130:  *(out + 3) = base + tmp;
        1:11131:  tmp = (*in32 >> 8);
        -:11132:  in32++;
        -:11133:  /* consumed: 4 bytes (total: 20) */
        1:11134:  tmp |= (*in32 % (1U << 2)) << (26 - 2);
        1:11135:  *(out + 4) = base + tmp;
        1:11136:  *(out + 5)  = base + ((*in32 >> 2) & 67108863);
        1:11137:  tmp = (*in32 >> 28);
        -:11138:  in32++;
        -:11139:  /* consumed: 4 bytes (total: 24) */
        1:11140:  tmp |= (*in32 % (1U << 22)) << (26 - 22);
        1:11141:  *(out + 6) = base + tmp;
        1:11142:  tmp = (*in32 >> 22);
        -:11143:  in32++;
        -:11144:  /* consumed: 4 bytes (total: 28) */
        1:11145:  tmp |= (*in32 % (1U << 16)) << (26 - 16);
        1:11146:  *(out + 7) = base + tmp;
        -:11147:  /* remaining: 16 bits */
        1:11148:  return 26;
        -:11149:}
        -:11150:
        -:11151:static uint32_t
        1:11152:pack27_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11153:  uint32_t tmp, length;
        1:11154:  tmp  = (*(in + 0) - base) << 0;
        1:11155:  tmp |= (*(in + 1) - base) << 27;
        1:11156:  *(uint32_t *)out = tmp;
        -:11157:  out += sizeof(uint32_t);
        -:11158:  /* consumed: 4 bytes (total: 4) */
        1:11159:  tmp  = (*(in + 1) - base) >> (27 - 22);
        1:11160:  tmp |= (*(in + 2) - base) << 22;
        1:11161:  *(uint32_t *)out = tmp;
        -:11162:  out += sizeof(uint32_t);
        -:11163:  /* consumed: 4 bytes (total: 8) */
        1:11164:  tmp  = (*(in + 2) - base) >> (27 - 17);
        1:11165:  tmp |= (*(in + 3) - base) << 17;
        1:11166:  *(uint32_t *)out = tmp;
        -:11167:  out += sizeof(uint32_t);
        -:11168:  /* consumed: 4 bytes (total: 12) */
        1:11169:  tmp  = (*(in + 3) - base) >> (27 - 12);
        1:11170:  tmp |= (*(in + 4) - base) << 12;
        1:11171:  *(uint32_t *)out = tmp;
        -:11172:  out += sizeof(uint32_t);
        -:11173:  /* consumed: 4 bytes (total: 16) */
        1:11174:  tmp  = (*(in + 4) - base) >> (27 - 7);
        1:11175:  tmp |= (*(in + 5) - base) << 7;
        1:11176:  *(uint32_t *)out = tmp;
        -:11177:  out += sizeof(uint32_t);
        -:11178:  /* consumed: 4 bytes (total: 20) */
        1:11179:  tmp  = (*(in + 5) - base) >> (27 - 2);
        1:11180:  tmp |= (*(in + 6) - base) << 2;
        1:11181:  tmp |= (*(in + 7) - base) << 29;
        1:11182:  *(uint32_t *)out = tmp;
        1:11183:  out += sizeof(uint32_t);
        -:11184:  /* consumed: 4 bytes (total: 24) */
        1:11185:  tmp  = (*(in + 7) - base) >> (27 - 24);
        -:11186:  /* remaining: 8 bits */
        -:11187:  length = (32 / 8) - (32 - 24) / 8;
        -:11188:  /* consumed: 3 bytes (total: 27) */
        -:11189:  memcpy(out, &tmp, length);
        1:11190:  return 27;
        -:11191:}
        -:11192:
        -:11193:static uint32_t
        1:11194:unpack27_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11195:  uint32_t *in32 = (uint32_t *)in;
        -:11196:  uint32_t tmp; (void)tmp;
        1:11197:  *(out + 0)  = base + ((*in32 >> 0) & 134217727);
        1:11198:  tmp = (*in32 >> 27);
        -:11199:  in32++;
        -:11200:  /* consumed: 4 bytes (total: 8) */
        1:11201:  tmp |= (*in32 % (1U << 22)) << (27 - 22);
        1:11202:  *(out + 1) = base + tmp;
        1:11203:  tmp = (*in32 >> 22);
        -:11204:  in32++;
        -:11205:  /* consumed: 4 bytes (total: 12) */
        1:11206:  tmp |= (*in32 % (1U << 17)) << (27 - 17);
        1:11207:  *(out + 2) = base + tmp;
        1:11208:  tmp = (*in32 >> 17);
        -:11209:  in32++;
        -:11210:  /* consumed: 4 bytes (total: 16) */
        1:11211:  tmp |= (*in32 % (1U << 12)) << (27 - 12);
        1:11212:  *(out + 3) = base + tmp;
        1:11213:  tmp = (*in32 >> 12);
        -:11214:  in32++;
        -:11215:  /* consumed: 4 bytes (total: 20) */
        1:11216:  tmp |= (*in32 % (1U << 7)) << (27 - 7);
        1:11217:  *(out + 4) = base + tmp;
        1:11218:  tmp = (*in32 >> 7);
        -:11219:  in32++;
        -:11220:  /* consumed: 4 bytes (total: 24) */
        1:11221:  tmp |= (*in32 % (1U << 2)) << (27 - 2);
        1:11222:  *(out + 5) = base + tmp;
        1:11223:  *(out + 6)  = base + ((*in32 >> 2) & 134217727);
        1:11224:  tmp = (*in32 >> 29);
        -:11225:  in32++;
        -:11226:  /* consumed: 4 bytes (total: 28) */
        1:11227:  tmp |= (*in32 % (1U << 24)) << (27 - 24);
        1:11228:  *(out + 7) = base + tmp;
        -:11229:  /* remaining: 8 bits */
        1:11230:  return 27;
        -:11231:}
        -:11232:
        -:11233:static uint32_t
        1:11234:pack28_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11235:  uint32_t tmp, length;
        1:11236:  tmp  = (*(in + 0) - base) << 0;
        1:11237:  tmp |= (*(in + 1) - base) << 28;
        1:11238:  *(uint32_t *)out = tmp;
        -:11239:  out += sizeof(uint32_t);
        -:11240:  /* consumed: 4 bytes (total: 4) */
        1:11241:  tmp  = (*(in + 1) - base) >> (28 - 24);
        1:11242:  tmp |= (*(in + 2) - base) << 24;
        1:11243:  *(uint32_t *)out = tmp;
        -:11244:  out += sizeof(uint32_t);
        -:11245:  /* consumed: 4 bytes (total: 8) */
        1:11246:  tmp  = (*(in + 2) - base) >> (28 - 20);
        1:11247:  tmp |= (*(in + 3) - base) << 20;
        1:11248:  *(uint32_t *)out = tmp;
        -:11249:  out += sizeof(uint32_t);
        -:11250:  /* consumed: 4 bytes (total: 12) */
        1:11251:  tmp  = (*(in + 3) - base) >> (28 - 16);
        1:11252:  tmp |= (*(in + 4) - base) << 16;
        1:11253:  *(uint32_t *)out = tmp;
        -:11254:  out += sizeof(uint32_t);
        -:11255:  /* consumed: 4 bytes (total: 16) */
        1:11256:  tmp  = (*(in + 4) - base) >> (28 - 12);
        1:11257:  tmp |= (*(in + 5) - base) << 12;
        1:11258:  *(uint32_t *)out = tmp;
        -:11259:  out += sizeof(uint32_t);
        -:11260:  /* consumed: 4 bytes (total: 20) */
        1:11261:  tmp  = (*(in + 5) - base) >> (28 - 8);
        1:11262:  tmp |= (*(in + 6) - base) << 8;
        1:11263:  *(uint32_t *)out = tmp;
        1:11264:  out += sizeof(uint32_t);
        -:11265:  /* consumed: 4 bytes (total: 24) */
        1:11266:  tmp  = (*(in + 6) - base) >> (28 - 4);
        1:11267:  tmp |= (*(in + 7) - base) << 4;
        -:11268:  /* remaining: 0 bits */
        -:11269:  length = (32 / 8) - (32 - 32) / 8;
        -:11270:  /* consumed: 4 bytes (total: 28) */
        -:11271:  memcpy(out, &tmp, length);
        1:11272:  return 28;
        -:11273:}
        -:11274:
        -:11275:static uint32_t
        1:11276:unpack28_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11277:  uint32_t *in32 = (uint32_t *)in;
        -:11278:  uint32_t tmp; (void)tmp;
        1:11279:  *(out + 0)  = base + ((*in32 >> 0) & 268435455);
        1:11280:  tmp = (*in32 >> 28);
        -:11281:  in32++;
        -:11282:  /* consumed: 4 bytes (total: 8) */
        1:11283:  tmp |= (*in32 % (1U << 24)) << (28 - 24);
        1:11284:  *(out + 1) = base + tmp;
        1:11285:  tmp = (*in32 >> 24);
        -:11286:  in32++;
        -:11287:  /* consumed: 4 bytes (total: 12) */
        1:11288:  tmp |= (*in32 % (1U << 20)) << (28 - 20);
        1:11289:  *(out + 2) = base + tmp;
        1:11290:  tmp = (*in32 >> 20);
        -:11291:  in32++;
        -:11292:  /* consumed: 4 bytes (total: 16) */
        1:11293:  tmp |= (*in32 % (1U << 16)) << (28 - 16);
        1:11294:  *(out + 3) = base + tmp;
        1:11295:  tmp = (*in32 >> 16);
        -:11296:  in32++;
        -:11297:  /* consumed: 4 bytes (total: 20) */
        1:11298:  tmp |= (*in32 % (1U << 12)) << (28 - 12);
        1:11299:  *(out + 4) = base + tmp;
        1:11300:  tmp = (*in32 >> 12);
        -:11301:  in32++;
        -:11302:  /* consumed: 4 bytes (total: 24) */
        1:11303:  tmp |= (*in32 % (1U << 8)) << (28 - 8);
        1:11304:  *(out + 5) = base + tmp;
        1:11305:  tmp = (*in32 >> 8);
        -:11306:  in32++;
        -:11307:  /* consumed: 4 bytes (total: 28) */
        1:11308:  tmp |= (*in32 % (1U << 4)) << (28 - 4);
        1:11309:  *(out + 6) = base + tmp;
        1:11310:  *(out + 7)  = base + ((*in32 >> 4) & 268435455);
        -:11311:  /* remaining: 0 bits */
        1:11312:  return 28;
        -:11313:}
        -:11314:
        -:11315:static uint32_t
        1:11316:pack29_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11317:  uint32_t tmp, length;
        1:11318:  tmp  = (*(in + 0) - base) << 0;
        1:11319:  tmp |= (*(in + 1) - base) << 29;
        1:11320:  *(uint32_t *)out = tmp;
        -:11321:  out += sizeof(uint32_t);
        -:11322:  /* consumed: 4 bytes (total: 4) */
        1:11323:  tmp  = (*(in + 1) - base) >> (29 - 26);
        1:11324:  tmp |= (*(in + 2) - base) << 26;
        1:11325:  *(uint32_t *)out = tmp;
        -:11326:  out += sizeof(uint32_t);
        -:11327:  /* consumed: 4 bytes (total: 8) */
        1:11328:  tmp  = (*(in + 2) - base) >> (29 - 23);
        1:11329:  tmp |= (*(in + 3) - base) << 23;
        1:11330:  *(uint32_t *)out = tmp;
        -:11331:  out += sizeof(uint32_t);
        -:11332:  /* consumed: 4 bytes (total: 12) */
        1:11333:  tmp  = (*(in + 3) - base) >> (29 - 20);
        1:11334:  tmp |= (*(in + 4) - base) << 20;
        1:11335:  *(uint32_t *)out = tmp;
        -:11336:  out += sizeof(uint32_t);
        -:11337:  /* consumed: 4 bytes (total: 16) */
        1:11338:  tmp  = (*(in + 4) - base) >> (29 - 17);
        1:11339:  tmp |= (*(in + 5) - base) << 17;
        1:11340:  *(uint32_t *)out = tmp;
        -:11341:  out += sizeof(uint32_t);
        -:11342:  /* consumed: 4 bytes (total: 20) */
        1:11343:  tmp  = (*(in + 5) - base) >> (29 - 14);
        1:11344:  tmp |= (*(in + 6) - base) << 14;
        1:11345:  *(uint32_t *)out = tmp;
        -:11346:  out += sizeof(uint32_t);
        -:11347:  /* consumed: 4 bytes (total: 24) */
        1:11348:  tmp  = (*(in + 6) - base) >> (29 - 11);
        1:11349:  tmp |= (*(in + 7) - base) << 11;
        1:11350:  *(uint32_t *)out = tmp;
        1:11351:  out += sizeof(uint32_t);
        -:11352:  /* consumed: 4 bytes (total: 28) */
        1:11353:  tmp  = (*(in + 7) - base) >> (29 - 8);
        -:11354:  /* remaining: 24 bits */
        -:11355:  length = (32 / 8) - (32 - 8) / 8;
        -:11356:  /* consumed: 1 bytes (total: 29) */
        -:11357:  memcpy(out, &tmp, length);
        1:11358:  return 29;
        -:11359:}
        -:11360:
        -:11361:static uint32_t
        1:11362:unpack29_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11363:  uint32_t *in32 = (uint32_t *)in;
        -:11364:  uint32_t tmp; (void)tmp;
        1:11365:  *(out + 0)  = base + ((*in32 >> 0) & 536870911);
        1:11366:  tmp = (*in32 >> 29);
        -:11367:  in32++;
        -:11368:  /* consumed: 4 bytes (total: 8) */
        1:11369:  tmp |= (*in32 % (1U << 26)) << (29 - 26);
        1:11370:  *(out + 1) = base + tmp;
        1:11371:  tmp = (*in32 >> 26);
        -:11372:  in32++;
        -:11373:  /* consumed: 4 bytes (total: 12) */
        1:11374:  tmp |= (*in32 % (1U << 23)) << (29 - 23);
        1:11375:  *(out + 2) = base + tmp;
        1:11376:  tmp = (*in32 >> 23);
        -:11377:  in32++;
        -:11378:  /* consumed: 4 bytes (total: 16) */
        1:11379:  tmp |= (*in32 % (1U << 20)) << (29 - 20);
        1:11380:  *(out + 3) = base + tmp;
        1:11381:  tmp = (*in32 >> 20);
        -:11382:  in32++;
        -:11383:  /* consumed: 4 bytes (total: 20) */
        1:11384:  tmp |= (*in32 % (1U << 17)) << (29 - 17);
        1:11385:  *(out + 4) = base + tmp;
        1:11386:  tmp = (*in32 >> 17);
        -:11387:  in32++;
        -:11388:  /* consumed: 4 bytes (total: 24) */
        1:11389:  tmp |= (*in32 % (1U << 14)) << (29 - 14);
        1:11390:  *(out + 5) = base + tmp;
        1:11391:  tmp = (*in32 >> 14);
        -:11392:  in32++;
        -:11393:  /* consumed: 4 bytes (total: 28) */
        1:11394:  tmp |= (*in32 % (1U << 11)) << (29 - 11);
        1:11395:  *(out + 6) = base + tmp;
        1:11396:  tmp = (*in32 >> 11);
        -:11397:  in32++;
        -:11398:  /* consumed: 4 bytes (total: 32) */
        1:11399:  tmp |= (*in32 % (1U << 8)) << (29 - 8);
        1:11400:  *(out + 7) = base + tmp;
        -:11401:  /* remaining: 24 bits */
        1:11402:  return 29;
        -:11403:}
        -:11404:
        -:11405:static uint32_t
        1:11406:pack30_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11407:  uint32_t tmp, length;
        1:11408:  tmp  = (*(in + 0) - base) << 0;
        1:11409:  tmp |= (*(in + 1) - base) << 30;
        1:11410:  *(uint32_t *)out = tmp;
        -:11411:  out += sizeof(uint32_t);
        -:11412:  /* consumed: 4 bytes (total: 4) */
        1:11413:  tmp  = (*(in + 1) - base) >> (30 - 28);
        1:11414:  tmp |= (*(in + 2) - base) << 28;
        1:11415:  *(uint32_t *)out = tmp;
        -:11416:  out += sizeof(uint32_t);
        -:11417:  /* consumed: 4 bytes (total: 8) */
        1:11418:  tmp  = (*(in + 2) - base) >> (30 - 26);
        1:11419:  tmp |= (*(in + 3) - base) << 26;
        1:11420:  *(uint32_t *)out = tmp;
        -:11421:  out += sizeof(uint32_t);
        -:11422:  /* consumed: 4 bytes (total: 12) */
        1:11423:  tmp  = (*(in + 3) - base) >> (30 - 24);
        1:11424:  tmp |= (*(in + 4) - base) << 24;
        1:11425:  *(uint32_t *)out = tmp;
        -:11426:  out += sizeof(uint32_t);
        -:11427:  /* consumed: 4 bytes (total: 16) */
        1:11428:  tmp  = (*(in + 4) - base) >> (30 - 22);
        1:11429:  tmp |= (*(in + 5) - base) << 22;
        1:11430:  *(uint32_t *)out = tmp;
        -:11431:  out += sizeof(uint32_t);
        -:11432:  /* consumed: 4 bytes (total: 20) */
        1:11433:  tmp  = (*(in + 5) - base) >> (30 - 20);
        1:11434:  tmp |= (*(in + 6) - base) << 20;
        1:11435:  *(uint32_t *)out = tmp;
        -:11436:  out += sizeof(uint32_t);
        -:11437:  /* consumed: 4 bytes (total: 24) */
        1:11438:  tmp  = (*(in + 6) - base) >> (30 - 18);
        1:11439:  tmp |= (*(in + 7) - base) << 18;
        1:11440:  *(uint32_t *)out = tmp;
        1:11441:  out += sizeof(uint32_t);
        -:11442:  /* consumed: 4 bytes (total: 28) */
        1:11443:  tmp  = (*(in + 7) - base) >> (30 - 16);
        -:11444:  /* remaining: 16 bits */
        -:11445:  length = (32 / 8) - (32 - 16) / 8;
        -:11446:  /* consumed: 2 bytes (total: 30) */
        -:11447:  memcpy(out, &tmp, length);
        1:11448:  return 30;
        -:11449:}
        -:11450:
        -:11451:static uint32_t
        1:11452:unpack30_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11453:  uint32_t *in32 = (uint32_t *)in;
        -:11454:  uint32_t tmp; (void)tmp;
        1:11455:  *(out + 0)  = base + ((*in32 >> 0) & 1073741823);
        1:11456:  tmp = (*in32 >> 30);
        -:11457:  in32++;
        -:11458:  /* consumed: 4 bytes (total: 8) */
        1:11459:  tmp |= (*in32 % (1U << 28)) << (30 - 28);
        1:11460:  *(out + 1) = base + tmp;
        1:11461:  tmp = (*in32 >> 28);
        -:11462:  in32++;
        -:11463:  /* consumed: 4 bytes (total: 12) */
        1:11464:  tmp |= (*in32 % (1U << 26)) << (30 - 26);
        1:11465:  *(out + 2) = base + tmp;
        1:11466:  tmp = (*in32 >> 26);
        -:11467:  in32++;
        -:11468:  /* consumed: 4 bytes (total: 16) */
        1:11469:  tmp |= (*in32 % (1U << 24)) << (30 - 24);
        1:11470:  *(out + 3) = base + tmp;
        1:11471:  tmp = (*in32 >> 24);
        -:11472:  in32++;
        -:11473:  /* consumed: 4 bytes (total: 20) */
        1:11474:  tmp |= (*in32 % (1U << 22)) << (30 - 22);
        1:11475:  *(out + 4) = base + tmp;
        1:11476:  tmp = (*in32 >> 22);
        -:11477:  in32++;
        -:11478:  /* consumed: 4 bytes (total: 24) */
        1:11479:  tmp |= (*in32 % (1U << 20)) << (30 - 20);
        1:11480:  *(out + 5) = base + tmp;
        1:11481:  tmp = (*in32 >> 20);
        -:11482:  in32++;
        -:11483:  /* consumed: 4 bytes (total: 28) */
        1:11484:  tmp |= (*in32 % (1U << 18)) << (30 - 18);
        1:11485:  *(out + 6) = base + tmp;
        1:11486:  tmp = (*in32 >> 18);
        -:11487:  in32++;
        -:11488:  /* consumed: 4 bytes (total: 32) */
        1:11489:  tmp |= (*in32 % (1U << 16)) << (30 - 16);
        1:11490:  *(out + 7) = base + tmp;
        -:11491:  /* remaining: 16 bits */
        1:11492:  return 30;
        -:11493:}
        -:11494:
        -:11495:static uint32_t
        1:11496:pack31_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11497:  uint32_t tmp, length;
        1:11498:  tmp  = (*(in + 0) - base) << 0;
        1:11499:  tmp |= (*(in + 1) - base) << 31;
        1:11500:  *(uint32_t *)out = tmp;
        -:11501:  out += sizeof(uint32_t);
        -:11502:  /* consumed: 4 bytes (total: 4) */
        1:11503:  tmp  = (*(in + 1) - base) >> (31 - 30);
        1:11504:  tmp |= (*(in + 2) - base) << 30;
        1:11505:  *(uint32_t *)out = tmp;
        -:11506:  out += sizeof(uint32_t);
        -:11507:  /* consumed: 4 bytes (total: 8) */
        1:11508:  tmp  = (*(in + 2) - base) >> (31 - 29);
        1:11509:  tmp |= (*(in + 3) - base) << 29;
        1:11510:  *(uint32_t *)out = tmp;
        -:11511:  out += sizeof(uint32_t);
        -:11512:  /* consumed: 4 bytes (total: 12) */
        1:11513:  tmp  = (*(in + 3) - base) >> (31 - 28);
        1:11514:  tmp |= (*(in + 4) - base) << 28;
        1:11515:  *(uint32_t *)out = tmp;
        -:11516:  out += sizeof(uint32_t);
        -:11517:  /* consumed: 4 bytes (total: 16) */
        1:11518:  tmp  = (*(in + 4) - base) >> (31 - 27);
        1:11519:  tmp |= (*(in + 5) - base) << 27;
        1:11520:  *(uint32_t *)out = tmp;
        -:11521:  out += sizeof(uint32_t);
        -:11522:  /* consumed: 4 bytes (total: 20) */
        1:11523:  tmp  = (*(in + 5) - base) >> (31 - 26);
        1:11524:  tmp |= (*(in + 6) - base) << 26;
        1:11525:  *(uint32_t *)out = tmp;
        -:11526:  out += sizeof(uint32_t);
        -:11527:  /* consumed: 4 bytes (total: 24) */
        1:11528:  tmp  = (*(in + 6) - base) >> (31 - 25);
        1:11529:  tmp |= (*(in + 7) - base) << 25;
        1:11530:  *(uint32_t *)out = tmp;
        1:11531:  out += sizeof(uint32_t);
        -:11532:  /* consumed: 4 bytes (total: 28) */
        1:11533:  tmp  = (*(in + 7) - base) >> (31 - 24);
        -:11534:  /* remaining: 8 bits */
        -:11535:  length = (32 / 8) - (32 - 24) / 8;
        -:11536:  /* consumed: 3 bytes (total: 31) */
        -:11537:  memcpy(out, &tmp, length);
        1:11538:  return 31;
        -:11539:}
        -:11540:
        -:11541:static uint32_t
        1:11542:unpack31_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11543:  uint32_t *in32 = (uint32_t *)in;
        -:11544:  uint32_t tmp; (void)tmp;
        1:11545:  *(out + 0)  = base + ((*in32 >> 0) & 2147483647);
        1:11546:  tmp = (*in32 >> 31);
        -:11547:  in32++;
        -:11548:  /* consumed: 4 bytes (total: 8) */
        1:11549:  tmp |= (*in32 % (1U << 30)) << (31 - 30);
        1:11550:  *(out + 1) = base + tmp;
        1:11551:  tmp = (*in32 >> 30);
        -:11552:  in32++;
        -:11553:  /* consumed: 4 bytes (total: 12) */
        1:11554:  tmp |= (*in32 % (1U << 29)) << (31 - 29);
        1:11555:  *(out + 2) = base + tmp;
        1:11556:  tmp = (*in32 >> 29);
        -:11557:  in32++;
        -:11558:  /* consumed: 4 bytes (total: 16) */
        1:11559:  tmp |= (*in32 % (1U << 28)) << (31 - 28);
        1:11560:  *(out + 3) = base + tmp;
        1:11561:  tmp = (*in32 >> 28);
        -:11562:  in32++;
        -:11563:  /* consumed: 4 bytes (total: 20) */
        1:11564:  tmp |= (*in32 % (1U << 27)) << (31 - 27);
        1:11565:  *(out + 4) = base + tmp;
        1:11566:  tmp = (*in32 >> 27);
        -:11567:  in32++;
        -:11568:  /* consumed: 4 bytes (total: 24) */
        1:11569:  tmp |= (*in32 % (1U << 26)) << (31 - 26);
        1:11570:  *(out + 5) = base + tmp;
        1:11571:  tmp = (*in32 >> 26);
        -:11572:  in32++;
        -:11573:  /* consumed: 4 bytes (total: 28) */
        1:11574:  tmp |= (*in32 % (1U << 25)) << (31 - 25);
        1:11575:  *(out + 6) = base + tmp;
        1:11576:  tmp = (*in32 >> 25);
        -:11577:  in32++;
        -:11578:  /* consumed: 4 bytes (total: 32) */
        1:11579:  tmp |= (*in32 % (1U << 24)) << (31 - 24);
        1:11580:  *(out + 7) = base + tmp;
        -:11581:  /* remaining: 8 bits */
        1:11582:  return 31;
        -:11583:}
        -:11584:
        -:11585:static uint32_t
        1:11586:pack32_8(uint32_t base, const uint32_t *in, uint8_t *out) {
        -:11587:  uint32_t i;
        -:11588:  uint32_t *out32 = (uint32_t *)out;
        9:11589:  for (i = 0; i < 8; i++)
        8:11590:    out32[i] = in[i] - base;
        1:11591:  return 8 * sizeof(uint32_t);
        -:11592:}
        -:11593:
        -:11594:static uint32_t
        1:11595:unpack32_8(uint32_t base, const uint8_t *in, uint32_t *out) {
        -:11596:  uint32_t i;
        -:11597:  uint32_t *in32 = (uint32_t *)in;
        9:11598:  for (i = 0; i < 8; i++)
        8:11599:    out[i] = base + in32[i];
        1:11600:  return 8 * sizeof(uint32_t);
        -:11601:}
        -:11602:
        -:11603:for_packfunc_t for_pack8[33] = {
        -:11604:                       pack0_8,
        -:11605:                       pack1_8,
        -:11606:                       pack2_8,
        -:11607:                       pack3_8,
        -:11608:                       pack4_8,
        -:11609:                       pack5_8,
        -:11610:                       pack6_8,
        -:11611:                       pack7_8,
        -:11612:                       pack8_8,
        -:11613:                       pack9_8,
        -:11614:                       pack10_8,
        -:11615:                       pack11_8,
        -:11616:                       pack12_8,
        -:11617:                       pack13_8,
        -:11618:                       pack14_8,
        -:11619:                       pack15_8,
        -:11620:                       pack16_8,
        -:11621:                       pack17_8,
        -:11622:                       pack18_8,
        -:11623:                       pack19_8,
        -:11624:                       pack20_8,
        -:11625:                       pack21_8,
        -:11626:                       pack22_8,
        -:11627:                       pack23_8,
        -:11628:                       pack24_8,
        -:11629:                       pack25_8,
        -:11630:                       pack26_8,
        -:11631:                       pack27_8,
        -:11632:                       pack28_8,
        -:11633:                       pack29_8,
        -:11634:                       pack30_8,
        -:11635:                       pack31_8,
        -:11636:                       pack32_8
        -:11637:};
        -:11638:
        -:11639:for_unpackfunc_t for_unpack8[33] = {
        -:11640:                       unpack0_8,
        -:11641:                       unpack1_8,
        -:11642:                       unpack2_8,
        -:11643:                       unpack3_8,
        -:11644:                       unpack4_8,
        -:11645:                       unpack5_8,
        -:11646:                       unpack6_8,
        -:11647:                       unpack7_8,
        -:11648:                       unpack8_8,
        -:11649:                       unpack9_8,
        -:11650:                       unpack10_8,
        -:11651:                       unpack11_8,
        -:11652:                       unpack12_8,
        -:11653:                       unpack13_8,
        -:11654:                       unpack14_8,
        -:11655:                       unpack15_8,
        -:11656:                       unpack16_8,
        -:11657:                       unpack17_8,
        -:11658:                       unpack18_8,
        -:11659:                       unpack19_8,
        -:11660:                       unpack20_8,
        -:11661:                       unpack21_8,
        -:11662:                       unpack22_8,
        -:11663:                       unpack23_8,
        -:11664:                       unpack24_8,
        -:11665:                       unpack25_8,
        -:11666:                       unpack26_8,
        -:11667:                       unpack27_8,
        -:11668:                       unpack28_8,
        -:11669:                       unpack29_8,
        -:11670:                       unpack30_8,
        -:11671:                       unpack31_8,
        -:11672:                       unpack32_8
        -:11673:};
        -:11674:
        -:11675:static uint32_t
       11:11676:pack1_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:11677:  uint32_t tmp, remaining;
       11:11678:  if (length == 0)
        -:11679:    return 0;
       10:11680:  tmp  = (*(in + 0) - base) << 0;
       10:11681:  if (length == 1)
        1:11682:    goto bail;
        9:11683:  tmp |= (*(in + 1) - base) << 1;
        9:11684:  if (length == 2)
        4:11685:    goto bail;
        5:11686:  tmp |= (*(in + 2) - base) << 2;
        5:11687:  if (length == 3)
        1:11688:    goto bail;
        4:11689:  tmp |= (*(in + 3) - base) << 3;
        4:11690:  if (length == 4)
        1:11691:    goto bail;
        3:11692:  tmp |= (*(in + 4) - base) << 4;
        3:11693:  if (length == 5)
        1:11694:    goto bail;
        2:11695:  tmp |= (*(in + 5) - base) << 5;
        2:11696:  if (length == 6)
        1:11697:    goto bail;
        1:11698:  tmp |= (*(in + 6) - base) << 6;
        1:11699:  if (length == 7)
        1:11700:    goto bail;
    #####:11701:  tmp |= (*(in + 7) - base) << 7;
        -:11702:  if (length == 8)
        -:11703:    goto bail;
    #####:11704:bail:
       10:11705:  remaining = (((length * 1) + 7) / 8) % 4;
       10:11706:  if (remaining == 0) remaining = 4;
       10:11707:  memcpy(out, &tmp, remaining);
       10:11708:  return ((length * 1) + 7) / 8;
        -:11709:}
        -:11710:
        -:11711:static uint32_t
       10:11712:unpack1_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:11713:  uint32_t tmp;
       10:11714:  if (length == 0)
        -:11715:    return 0;
        9:11716:  tmp = *(uint32_t *)in;
        9:11717:  *(out + 0)  = base + ((tmp >> 0) & 1);
        9:11718:  if (length == 1)
        1:11719:    goto bail;
        8:11720:  *(out + 1)  = base + ((tmp >> 1) & 1);
        8:11721:  if (length == 2)
        3:11722:    goto bail;
        5:11723:  *(out + 2)  = base + ((tmp >> 2) & 1);
        5:11724:  if (length == 3)
        1:11725:    goto bail;
        4:11726:  *(out + 3)  = base + ((tmp >> 3) & 1);
        4:11727:  if (length == 4)
        1:11728:    goto bail;
        3:11729:  *(out + 4)  = base + ((tmp >> 4) & 1);
        3:11730:  if (length == 5)
        1:11731:    goto bail;
        2:11732:  *(out + 5)  = base + ((tmp >> 5) & 1);
        2:11733:  if (length == 6)
        1:11734:    goto bail;
        1:11735:  *(out + 6)  = base + ((tmp >> 6) & 1);
        1:11736:  if (length == 7)
        1:11737:    goto bail;
    #####:11738:  *(out + 7)  = base + ((tmp >> 7) & 1);
        -:11739:  if (length == 8)
        -:11740:    goto bail;
    #####:11741:bail:
        9:11742:  return ((length * 1) + 7) / 8;
        -:11743:}
        -:11744:
        -:11745:static uint32_t
       12:11746:pack2_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:11747:  uint32_t tmp, remaining;
       12:11748:  if (length == 0)
        -:11749:    return 0;
       11:11750:  tmp  = (*(in + 0) - base) << 0;
       11:11751:  if (length == 1)
        1:11752:    goto bail;
       10:11753:  tmp |= (*(in + 1) - base) << 2;
       10:11754:  if (length == 2)
        1:11755:    goto bail;
        9:11756:  tmp |= (*(in + 2) - base) << 4;
        9:11757:  if (length == 3)
        4:11758:    goto bail;
        5:11759:  tmp |= (*(in + 3) - base) << 6;
        5:11760:  if (length == 4)
        2:11761:    goto bail;
        3:11762:  tmp |= (*(in + 4) - base) << 8;
        3:11763:  if (length == 5)
        1:11764:    goto bail;
        2:11765:  tmp |= (*(in + 5) - base) << 10;
        2:11766:  if (length == 6)
        1:11767:    goto bail;
        1:11768:  tmp |= (*(in + 6) - base) << 12;
        1:11769:  if (length == 7)
        1:11770:    goto bail;
    #####:11771:  tmp |= (*(in + 7) - base) << 14;
        -:11772:  if (length == 8)
        -:11773:    goto bail;
    #####:11774:bail:
       11:11775:  remaining = (((length * 2) + 7) / 8) % 4;
       11:11776:  if (remaining == 0) remaining = 4;
       11:11777:  memcpy(out, &tmp, remaining);
       11:11778:  return ((length * 2) + 7) / 8;
        -:11779:}
        -:11780:
        -:11781:static uint32_t
       10:11782:unpack2_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:11783:  uint32_t tmp;
       10:11784:  if (length == 0)
        -:11785:    return 0;
        9:11786:  tmp = *(uint32_t *)in;
        9:11787:  *(out + 0)  = base + ((tmp >> 0) & 3);
        9:11788:  if (length == 1)
        1:11789:    goto bail;
        8:11790:  *(out + 1)  = base + ((tmp >> 2) & 3);
        8:11791:  if (length == 2)
        1:11792:    goto bail;
        7:11793:  *(out + 2)  = base + ((tmp >> 4) & 3);
        7:11794:  if (length == 3)
        2:11795:    goto bail;
        5:11796:  *(out + 3)  = base + ((tmp >> 6) & 3);
        5:11797:  if (length == 4)
        2:11798:    goto bail;
        3:11799:  *(out + 4)  = base + ((tmp >> 8) & 3);
        3:11800:  if (length == 5)
        1:11801:    goto bail;
        2:11802:  *(out + 5)  = base + ((tmp >> 10) & 3);
        2:11803:  if (length == 6)
        1:11804:    goto bail;
        1:11805:  *(out + 6)  = base + ((tmp >> 12) & 3);
        1:11806:  if (length == 7)
        1:11807:    goto bail;
    #####:11808:  *(out + 7)  = base + ((tmp >> 14) & 3);
        -:11809:  if (length == 8)
        -:11810:    goto bail;
    #####:11811:bail:
        9:11812:  return ((length * 2) + 7) / 8;
        -:11813:}
        -:11814:
        -:11815:static uint32_t
       13:11816:pack3_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:11817:  uint32_t tmp, remaining;
       13:11818:  if (length == 0)
        -:11819:    return 0;
       11:11820:  tmp  = (*(in + 0) - base) << 0;
       11:11821:  if (length == 1)
        1:11822:    goto bail;
       10:11823:  tmp |= (*(in + 1) - base) << 3;
       10:11824:  if (length == 2)
        1:11825:    goto bail;
        9:11826:  tmp |= (*(in + 2) - base) << 6;
        9:11827:  if (length == 3)
        1:11828:    goto bail;
        8:11829:  tmp |= (*(in + 3) - base) << 9;
        8:11830:  if (length == 4)
        1:11831:    goto bail;
        7:11832:  tmp |= (*(in + 4) - base) << 12;
        7:11833:  if (length == 5)
        3:11834:    goto bail;
        4:11835:  tmp |= (*(in + 5) - base) << 15;
        4:11836:  if (length == 6)
        2:11837:    goto bail;
        2:11838:  tmp |= (*(in + 6) - base) << 18;
        2:11839:  if (length == 7)
        2:11840:    goto bail;
    #####:11841:  tmp |= (*(in + 7) - base) << 21;
        -:11842:  if (length == 8)
        -:11843:    goto bail;
    #####:11844:bail:
       11:11845:  remaining = (((length * 3) + 7) / 8) % 4;
       11:11846:  if (remaining == 0) remaining = 4;
       11:11847:  memcpy(out, &tmp, remaining);
       11:11848:  return ((length * 3) + 7) / 8;
        -:11849:}
        -:11850:
        -:11851:static uint32_t
        9:11852:unpack3_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:11853:  uint32_t tmp;
        9:11854:  if (length == 0)
        -:11855:    return 0;
        7:11856:  tmp = *(uint32_t *)in;
        7:11857:  *(out + 0)  = base + ((tmp >> 0) & 7);
        7:11858:  if (length == 1)
        1:11859:    goto bail;
        6:11860:  *(out + 1)  = base + ((tmp >> 3) & 7);
        6:11861:  if (length == 2)
        1:11862:    goto bail;
        5:11863:  *(out + 2)  = base + ((tmp >> 6) & 7);
        5:11864:  if (length == 3)
        1:11865:    goto bail;
        4:11866:  *(out + 3)  = base + ((tmp >> 9) & 7);
        4:11867:  if (length == 4)
        1:11868:    goto bail;
        3:11869:  *(out + 4)  = base + ((tmp >> 12) & 7);
        3:11870:  if (length == 5)
        1:11871:    goto bail;
        2:11872:  *(out + 5)  = base + ((tmp >> 15) & 7);
        2:11873:  if (length == 6)
        1:11874:    goto bail;
        1:11875:  *(out + 6)  = base + ((tmp >> 18) & 7);
        1:11876:  if (length == 7)
        1:11877:    goto bail;
    #####:11878:  *(out + 7)  = base + ((tmp >> 21) & 7);
        -:11879:  if (length == 8)
        -:11880:    goto bail;
    #####:11881:bail:
        7:11882:  return ((length * 3) + 7) / 8;
        -:11883:}
        -:11884:
        -:11885:static uint32_t
       18:11886:pack4_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:11887:  uint32_t tmp, remaining;
       18:11888:  if (length == 0)
        -:11889:    return 0;
       15:11890:  tmp  = (*(in + 0) - base) << 0;
       15:11891:  if (length == 1)
        3:11892:    goto bail;
       12:11893:  tmp |= (*(in + 1) - base) << 4;
       12:11894:  if (length == 2)
        2:11895:    goto bail;
       10:11896:  tmp |= (*(in + 2) - base) << 8;
       10:11897:  if (length == 3)
        2:11898:    goto bail;
        8:11899:  tmp |= (*(in + 3) - base) << 12;
        8:11900:  if (length == 4)
        2:11901:    goto bail;
        6:11902:  tmp |= (*(in + 4) - base) << 16;
        6:11903:  if (length == 5)
        2:11904:    goto bail;
        4:11905:  tmp |= (*(in + 5) - base) << 20;
        4:11906:  if (length == 6)
        2:11907:    goto bail;
        2:11908:  tmp |= (*(in + 6) - base) << 24;
        2:11909:  if (length == 7)
        2:11910:    goto bail;
    #####:11911:  tmp |= (*(in + 7) - base) << 28;
        -:11912:  if (length == 8)
        -:11913:    goto bail;
    #####:11914:bail:
       15:11915:  remaining = (((length * 4) + 7) / 8) % 4;
       15:11916:  if (remaining == 0) remaining = 4;
       15:11917:  memcpy(out, &tmp, remaining);
       15:11918:  return ((length * 4) + 7) / 8;
        -:11919:}
        -:11920:
        -:11921:static uint32_t
       10:11922:unpack4_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:11923:  uint32_t tmp;
       10:11924:  if (length == 0)
        -:11925:    return 0;
        7:11926:  tmp = *(uint32_t *)in;
        7:11927:  *(out + 0)  = base + ((tmp >> 0) & 15);
        7:11928:  if (length == 1)
        1:11929:    goto bail;
        6:11930:  *(out + 1)  = base + ((tmp >> 4) & 15);
        6:11931:  if (length == 2)
        1:11932:    goto bail;
        5:11933:  *(out + 2)  = base + ((tmp >> 8) & 15);
        5:11934:  if (length == 3)
        1:11935:    goto bail;
        4:11936:  *(out + 3)  = base + ((tmp >> 12) & 15);
        4:11937:  if (length == 4)
        1:11938:    goto bail;
        3:11939:  *(out + 4)  = base + ((tmp >> 16) & 15);
        3:11940:  if (length == 5)
        1:11941:    goto bail;
        2:11942:  *(out + 5)  = base + ((tmp >> 20) & 15);
        2:11943:  if (length == 6)
        1:11944:    goto bail;
        1:11945:  *(out + 6)  = base + ((tmp >> 24) & 15);
        1:11946:  if (length == 7)
        1:11947:    goto bail;
    #####:11948:  *(out + 7)  = base + ((tmp >> 28) & 15);
        -:11949:  if (length == 8)
        -:11950:    goto bail;
    #####:11951:bail:
        7:11952:  return ((length * 4) + 7) / 8;
        -:11953:}
        -:11954:
        -:11955:static uint32_t
       27:11956:pack5_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:11957:  uint32_t tmp, remaining;
       27:11958:  if (length == 0)
        -:11959:    return 0;
       23:11960:  tmp  = (*(in + 0) - base) << 0;
       23:11961:  if (length == 1)
        5:11962:    goto bail;
       18:11963:  tmp |= (*(in + 1) - base) << 5;
       18:11964:  if (length == 2)
        3:11965:    goto bail;
       15:11966:  tmp |= (*(in + 2) - base) << 10;
       15:11967:  if (length == 3)
        3:11968:    goto bail;
       12:11969:  tmp |= (*(in + 3) - base) << 15;
       12:11970:  if (length == 4)
        3:11971:    goto bail;
        9:11972:  tmp |= (*(in + 4) - base) << 20;
        9:11973:  if (length == 5)
        3:11974:    goto bail;
        6:11975:  tmp |= (*(in + 5) - base) << 25;
        6:11976:  if (length == 6)
        3:11977:    goto bail;
        3:11978:  tmp |= (*(in + 6) - base) << 30;
        3:11979:  *(uint32_t *)out = tmp;
        3:11980:  out += sizeof(uint32_t);
        3:11981:  tmp  = (*(in + 6) - base) >> (5 - 3);
        3:11982:  if (length == 7)
        3:11983:    goto bail;
    #####:11984:  tmp |= (*(in + 7) - base) << 3;
    #####:11985:  if (length == 8)
    #####:11986:    goto bail;
    #####:11987:bail:
       23:11988:  remaining = (((length * 5) + 7) / 8) % 4;
       23:11989:  if (remaining == 0) remaining = 4;
       23:11990:  memcpy(out, &tmp, remaining);
       23:11991:  return ((length * 5) + 7) / 8;
        -:11992:}
        -:11993:
        -:11994:static uint32_t
       11:11995:unpack5_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:11996:  uint32_t tmp;
       11:11997:  if (length == 0)
        -:11998:    return 0;
        8:11999:  tmp = *(uint32_t *)in;
        8:12000:  *(out + 0)  = base + ((tmp >> 0) & 31);
        8:12001:  if (length == 1)
        2:12002:    goto bail;
        6:12003:  *(out + 1)  = base + ((tmp >> 5) & 31);
        6:12004:  if (length == 2)
        1:12005:    goto bail;
        5:12006:  *(out + 2)  = base + ((tmp >> 10) & 31);
        5:12007:  if (length == 3)
        1:12008:    goto bail;
        4:12009:  *(out + 3)  = base + ((tmp >> 15) & 31);
        4:12010:  if (length == 4)
        1:12011:    goto bail;
        3:12012:  *(out + 4)  = base + ((tmp >> 20) & 31);
        3:12013:  if (length == 5)
        1:12014:    goto bail;
        2:12015:  *(out + 5)  = base + ((tmp >> 25) & 31);
        2:12016:  if (length == 6)
        1:12017:    goto bail;
        1:12018:  *(out + 6)  = tmp >> 30;
        -:12019:  in += sizeof(uint32_t);
        1:12020:  tmp = *(uint32_t *)in;
        1:12021:  *(out + 6) |= (tmp % (1U << 3)) << (5 - 3);
        1:12022:  *(out + 6) += base;
        1:12023:  if (length == 7)
        1:12024:    goto bail;
    #####:12025:  *(out + 7)  = base + ((tmp >> 3) & 31);
        -:12026:  if (length == 8)
        -:12027:    goto bail;
    #####:12028:bail:
        8:12029:  return ((length * 5) + 7) / 8;
        -:12030:}
        -:12031:
        -:12032:static uint32_t
       43:12033:pack6_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12034:  uint32_t tmp, remaining;
       43:12035:  if (length == 0)
        -:12036:    return 0;
       37:12037:  tmp  = (*(in + 0) - base) << 0;
       37:12038:  if (length == 1)
        7:12039:    goto bail;
       30:12040:  tmp |= (*(in + 1) - base) << 6;
       30:12041:  if (length == 2)
        5:12042:    goto bail;
       25:12043:  tmp |= (*(in + 2) - base) << 12;
       25:12044:  if (length == 3)
        5:12045:    goto bail;
       20:12046:  tmp |= (*(in + 3) - base) << 18;
       20:12047:  if (length == 4)
        5:12048:    goto bail;
       15:12049:  tmp |= (*(in + 4) - base) << 24;
       15:12050:  if (length == 5)
        5:12051:    goto bail;
       10:12052:  tmp |= (*(in + 5) - base) << 30;
       10:12053:  *(uint32_t *)out = tmp;
       10:12054:  out += sizeof(uint32_t);
       10:12055:  tmp  = (*(in + 5) - base) >> (6 - 4);
       10:12056:  if (length == 6)
        5:12057:    goto bail;
        5:12058:  tmp |= (*(in + 6) - base) << 4;
        5:12059:  if (length == 7)
        5:12060:    goto bail;
    #####:12061:  tmp |= (*(in + 7) - base) << 10;
    #####:12062:  if (length == 8)
    #####:12063:    goto bail;
    #####:12064:bail:
       37:12065:  remaining = (((length * 6) + 7) / 8) % 4;
       37:12066:  if (remaining == 0) remaining = 4;
       37:12067:  memcpy(out, &tmp, remaining);
       37:12068:  return ((length * 6) + 7) / 8;
        -:12069:}
        -:12070:
        -:12071:static uint32_t
       11:12072:unpack6_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12073:  uint32_t tmp;
       11:12074:  if (length == 0)
        -:12075:    return 0;
        8:12076:  tmp = *(uint32_t *)in;
        8:12077:  *(out + 0)  = base + ((tmp >> 0) & 63);
        8:12078:  if (length == 1)
        2:12079:    goto bail;
        6:12080:  *(out + 1)  = base + ((tmp >> 6) & 63);
        6:12081:  if (length == 2)
        1:12082:    goto bail;
        5:12083:  *(out + 2)  = base + ((tmp >> 12) & 63);
        5:12084:  if (length == 3)
        1:12085:    goto bail;
        4:12086:  *(out + 3)  = base + ((tmp >> 18) & 63);
        4:12087:  if (length == 4)
        1:12088:    goto bail;
        3:12089:  *(out + 4)  = base + ((tmp >> 24) & 63);
        3:12090:  if (length == 5)
        1:12091:    goto bail;
        2:12092:  *(out + 5)  = tmp >> 30;
        -:12093:  in += sizeof(uint32_t);
        2:12094:  tmp = *(uint32_t *)in;
        2:12095:  *(out + 5) |= (tmp % (1U << 4)) << (6 - 4);
        2:12096:  *(out + 5) += base;
        2:12097:  if (length == 6)
        1:12098:    goto bail;
        1:12099:  *(out + 6)  = base + ((tmp >> 4) & 63);
        1:12100:  if (length == 7)
        1:12101:    goto bail;
    #####:12102:  *(out + 7)  = base + ((tmp >> 10) & 63);
        -:12103:  if (length == 8)
        -:12104:    goto bail;
    #####:12105:bail:
        8:12106:  return ((length * 6) + 7) / 8;
        -:12107:}
        -:12108:
        -:12109:static uint32_t
       75:12110:pack7_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12111:  uint32_t tmp, remaining;
       75:12112:  if (length == 0)
        -:12113:    return 0;
       65:12114:  tmp  = (*(in + 0) - base) << 0;
       65:12115:  if (length == 1)
       11:12116:    goto bail;
       54:12117:  tmp |= (*(in + 1) - base) << 7;
       54:12118:  if (length == 2)
        9:12119:    goto bail;
       45:12120:  tmp |= (*(in + 2) - base) << 14;
       45:12121:  if (length == 3)
        9:12122:    goto bail;
       36:12123:  tmp |= (*(in + 3) - base) << 21;
       36:12124:  if (length == 4)
        9:12125:    goto bail;
       27:12126:  tmp |= (*(in + 4) - base) << 28;
       27:12127:  *(uint32_t *)out = tmp;
       27:12128:  out += sizeof(uint32_t);
       27:12129:  tmp  = (*(in + 4) - base) >> (7 - 3);
       27:12130:  if (length == 5)
        9:12131:    goto bail;
       18:12132:  tmp |= (*(in + 5) - base) << 3;
       18:12133:  if (length == 6)
        9:12134:    goto bail;
        9:12135:  tmp |= (*(in + 6) - base) << 10;
        9:12136:  if (length == 7)
        9:12137:    goto bail;
    #####:12138:  tmp |= (*(in + 7) - base) << 17;
    #####:12139:  if (length == 8)
    #####:12140:    goto bail;
    #####:12141:bail:
       65:12142:  remaining = (((length * 7) + 7) / 8) % 4;
       65:12143:  if (remaining == 0) remaining = 4;
       65:12144:  memcpy(out, &tmp, remaining);
       65:12145:  return ((length * 7) + 7) / 8;
        -:12146:}
        -:12147:
        -:12148:static uint32_t
       11:12149:unpack7_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12150:  uint32_t tmp;
       11:12151:  if (length == 0)
        -:12152:    return 0;
        8:12153:  tmp = *(uint32_t *)in;
        8:12154:  *(out + 0)  = base + ((tmp >> 0) & 127);
        8:12155:  if (length == 1)
        2:12156:    goto bail;
        6:12157:  *(out + 1)  = base + ((tmp >> 7) & 127);
        6:12158:  if (length == 2)
        1:12159:    goto bail;
        5:12160:  *(out + 2)  = base + ((tmp >> 14) & 127);
        5:12161:  if (length == 3)
        1:12162:    goto bail;
        4:12163:  *(out + 3)  = base + ((tmp >> 21) & 127);
        4:12164:  if (length == 4)
        1:12165:    goto bail;
        3:12166:  *(out + 4)  = tmp >> 28;
        -:12167:  in += sizeof(uint32_t);
        3:12168:  tmp = *(uint32_t *)in;
        3:12169:  *(out + 4) |= (tmp % (1U << 3)) << (7 - 3);
        3:12170:  *(out + 4) += base;
        3:12171:  if (length == 5)
        1:12172:    goto bail;
        2:12173:  *(out + 5)  = base + ((tmp >> 3) & 127);
        2:12174:  if (length == 6)
        1:12175:    goto bail;
        1:12176:  *(out + 6)  = base + ((tmp >> 10) & 127);
        1:12177:  if (length == 7)
        1:12178:    goto bail;
    #####:12179:  *(out + 7)  = base + ((tmp >> 17) & 127);
        -:12180:  if (length == 8)
        -:12181:    goto bail;
    #####:12182:bail:
        8:12183:  return ((length * 7) + 7) / 8;
        -:12184:}
        -:12185:
        -:12186:static uint32_t
      139:12187:pack8_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12188:  uint32_t tmp, remaining;
      139:12189:  if (length == 0)
        -:12190:    return 0;
      121:12191:  tmp  = (*(in + 0) - base) << 0;
      121:12192:  if (length == 1)
       19:12193:    goto bail;
      102:12194:  tmp |= (*(in + 1) - base) << 8;
      102:12195:  if (length == 2)
       17:12196:    goto bail;
       85:12197:  tmp |= (*(in + 2) - base) << 16;
       85:12198:  if (length == 3)
       17:12199:    goto bail;
       68:12200:  tmp |= (*(in + 3) - base) << 24;
       68:12201:  if (length == 4)
       17:12202:    goto bail;
       51:12203:  *(uint32_t *)out = tmp;
       51:12204:  out += sizeof(uint32_t);
       51:12205:  tmp  = (*(in + 4) - base) << 0;
       51:12206:  if (length == 5)
       17:12207:    goto bail;
       34:12208:  tmp |= (*(in + 5) - base) << 8;
       34:12209:  if (length == 6)
       17:12210:    goto bail;
       17:12211:  tmp |= (*(in + 6) - base) << 16;
       17:12212:  if (length == 7)
       17:12213:    goto bail;
    #####:12214:  tmp |= (*(in + 7) - base) << 24;
    #####:12215:  if (length == 8)
    #####:12216:    goto bail;
    #####:12217:bail:
      121:12218:  remaining = (((length * 8) + 7) / 8) % 4;
      121:12219:  if (remaining == 0) remaining = 4;
      121:12220:  memcpy(out, &tmp, remaining);
      121:12221:  return ((length * 8) + 7) / 8;
        -:12222:}
        -:12223:
        -:12224:static uint32_t
       11:12225:unpack8_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12226:  uint32_t tmp;
       11:12227:  if (length == 0)
        -:12228:    return 0;
        8:12229:  tmp = *(uint32_t *)in;
        8:12230:  *(out + 0)  = base + ((tmp >> 0) & 255);
        8:12231:  if (length == 1)
        2:12232:    goto bail;
        6:12233:  *(out + 1)  = base + ((tmp >> 8) & 255);
        6:12234:  if (length == 2)
        1:12235:    goto bail;
        5:12236:  *(out + 2)  = base + ((tmp >> 16) & 255);
        5:12237:  if (length == 3)
        1:12238:    goto bail;
        4:12239:  *(out + 3)  = base + ((tmp >> 24) & 255);
        4:12240:  if (length == 4)
        1:12241:    goto bail;
        -:12242:  in += sizeof(uint32_t);
        3:12243:  tmp = *(uint32_t *)in;
        3:12244:  *(out + 4)  = base + ((tmp >> 0) & 255);
        3:12245:  if (length == 5)
        1:12246:    goto bail;
        2:12247:  *(out + 5)  = base + ((tmp >> 8) & 255);
        2:12248:  if (length == 6)
        1:12249:    goto bail;
        1:12250:  *(out + 6)  = base + ((tmp >> 16) & 255);
        1:12251:  if (length == 7)
        1:12252:    goto bail;
    #####:12253:  *(out + 7)  = base + ((tmp >> 24) & 255);
        -:12254:  if (length == 8)
        -:12255:    goto bail;
    #####:12256:bail:
        8:12257:  return ((length * 8) + 7) / 8;
        -:12258:}
        -:12259:
        -:12260:static uint32_t
      267:12261:pack9_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12262:  uint32_t tmp, remaining;
      267:12263:  if (length == 0)
        -:12264:    return 0;
      234:12265:  tmp  = (*(in + 0) - base) << 0;
      234:12266:  if (length == 1)
       35:12267:    goto bail;
      199:12268:  tmp |= (*(in + 1) - base) << 9;
      199:12269:  if (length == 2)
       34:12270:    goto bail;
      165:12271:  tmp |= (*(in + 2) - base) << 18;
      165:12272:  if (length == 3)
       33:12273:    goto bail;
      132:12274:  tmp |= (*(in + 3) - base) << 27;
      132:12275:  *(uint32_t *)out = tmp;
      132:12276:  out += sizeof(uint32_t);
      132:12277:  tmp  = (*(in + 3) - base) >> (9 - 4);
      132:12278:  if (length == 4)
       33:12279:    goto bail;
       99:12280:  tmp |= (*(in + 4) - base) << 4;
       99:12281:  if (length == 5)
       33:12282:    goto bail;
       66:12283:  tmp |= (*(in + 5) - base) << 13;
       66:12284:  if (length == 6)
       33:12285:    goto bail;
       33:12286:  tmp |= (*(in + 6) - base) << 22;
       33:12287:  if (length == 7)
       33:12288:    goto bail;
    #####:12289:  tmp |= (*(in + 7) - base) << 31;
    #####:12290:  *(uint32_t *)out = tmp;
    #####:12291:  out += sizeof(uint32_t);
    #####:12292:  tmp  = (*(in + 7) - base) >> (9 - 8);
    #####:12293:  if (length == 8)
    #####:12294:    goto bail;
    #####:12295:bail:
      234:12296:  remaining = (((length * 9) + 7) / 8) % 4;
      234:12297:  if (remaining == 0) remaining = 4;
      234:12298:  memcpy(out, &tmp, remaining);
      234:12299:  return ((length * 9) + 7) / 8;
        -:12300:}
        -:12301:
        -:12302:static uint32_t
       11:12303:unpack9_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12304:  uint32_t tmp;
       11:12305:  if (length == 0)
        -:12306:    return 0;
        9:12307:  tmp = *(uint32_t *)in;
        9:12308:  *(out + 0)  = base + ((tmp >> 0) & 511);
        9:12309:  if (length == 1)
        2:12310:    goto bail;
        7:12311:  *(out + 1)  = base + ((tmp >> 9) & 511);
        7:12312:  if (length == 2)
        2:12313:    goto bail;
        5:12314:  *(out + 2)  = base + ((tmp >> 18) & 511);
        5:12315:  if (length == 3)
        1:12316:    goto bail;
        4:12317:  *(out + 3)  = tmp >> 27;
        -:12318:  in += sizeof(uint32_t);
        4:12319:  tmp = *(uint32_t *)in;
        4:12320:  *(out + 3) |= (tmp % (1U << 4)) << (9 - 4);
        4:12321:  *(out + 3) += base;
        4:12322:  if (length == 4)
        1:12323:    goto bail;
        3:12324:  *(out + 4)  = base + ((tmp >> 4) & 511);
        3:12325:  if (length == 5)
        1:12326:    goto bail;
        2:12327:  *(out + 5)  = base + ((tmp >> 13) & 511);
        2:12328:  if (length == 6)
        1:12329:    goto bail;
        1:12330:  *(out + 6)  = base + ((tmp >> 22) & 511);
        1:12331:  if (length == 7)
        1:12332:    goto bail;
    #####:12333:  *(out + 7)  = tmp >> 31;
        -:12334:  in += sizeof(uint32_t);
    #####:12335:  tmp = *(uint32_t *)in;
    #####:12336:  *(out + 7) |= (tmp % (1U << 8)) << (9 - 8);
    #####:12337:  *(out + 7) += base;
        -:12338:  if (length == 8)
        -:12339:    goto bail;
    #####:12340:bail:
        9:12341:  return ((length * 9) + 7) / 8;
        -:12342:}
        -:12343:
        -:12344:static uint32_t
      522:12345:pack10_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12346:  uint32_t tmp, remaining;
      522:12347:  if (length == 0)
        -:12348:    return 0;
      456:12349:  tmp  = (*(in + 0) - base) << 0;
      456:12350:  if (length == 1)
       66:12351:    goto bail;
      390:12352:  tmp |= (*(in + 1) - base) << 10;
      390:12353:  if (length == 2)
       65:12354:    goto bail;
      325:12355:  tmp |= (*(in + 2) - base) << 20;
      325:12356:  if (length == 3)
       65:12357:    goto bail;
      260:12358:  tmp |= (*(in + 3) - base) << 30;
      260:12359:  *(uint32_t *)out = tmp;
      260:12360:  out += sizeof(uint32_t);
      260:12361:  tmp  = (*(in + 3) - base) >> (10 - 8);
      260:12362:  if (length == 4)
       65:12363:    goto bail;
      195:12364:  tmp |= (*(in + 4) - base) << 8;
      195:12365:  if (length == 5)
       65:12366:    goto bail;
      130:12367:  tmp |= (*(in + 5) - base) << 18;
      130:12368:  if (length == 6)
       65:12369:    goto bail;
       65:12370:  tmp |= (*(in + 6) - base) << 28;
       65:12371:  *(uint32_t *)out = tmp;
       65:12372:  out += sizeof(uint32_t);
       65:12373:  tmp  = (*(in + 6) - base) >> (10 - 6);
       65:12374:  if (length == 7)
       65:12375:    goto bail;
    #####:12376:  tmp |= (*(in + 7) - base) << 6;
    #####:12377:  if (length == 8)
    #####:12378:    goto bail;
    #####:12379:bail:
      456:12380:  remaining = (((length * 10) + 7) / 8) % 4;
      456:12381:  if (remaining == 0) remaining = 4;
      456:12382:  memcpy(out, &tmp, remaining);
      456:12383:  return ((length * 10) + 7) / 8;
        -:12384:}
        -:12385:
        -:12386:static uint32_t
       10:12387:unpack10_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12388:  uint32_t tmp;
       10:12389:  if (length == 0)
        -:12390:    return 0;
        7:12391:  tmp = *(uint32_t *)in;
        7:12392:  *(out + 0)  = base + ((tmp >> 0) & 1023);
        7:12393:  if (length == 1)
        1:12394:    goto bail;
        6:12395:  *(out + 1)  = base + ((tmp >> 10) & 1023);
        6:12396:  if (length == 2)
        1:12397:    goto bail;
        5:12398:  *(out + 2)  = base + ((tmp >> 20) & 1023);
        5:12399:  if (length == 3)
        1:12400:    goto bail;
        4:12401:  *(out + 3)  = tmp >> 30;
        -:12402:  in += sizeof(uint32_t);
        4:12403:  tmp = *(uint32_t *)in;
        4:12404:  *(out + 3) |= (tmp % (1U << 8)) << (10 - 8);
        4:12405:  *(out + 3) += base;
        4:12406:  if (length == 4)
        1:12407:    goto bail;
        3:12408:  *(out + 4)  = base + ((tmp >> 8) & 1023);
        3:12409:  if (length == 5)
        1:12410:    goto bail;
        2:12411:  *(out + 5)  = base + ((tmp >> 18) & 1023);
        2:12412:  if (length == 6)
        1:12413:    goto bail;
        1:12414:  *(out + 6)  = tmp >> 28;
        -:12415:  in += sizeof(uint32_t);
        1:12416:  tmp = *(uint32_t *)in;
        1:12417:  *(out + 6) |= (tmp % (1U << 6)) << (10 - 6);
        1:12418:  *(out + 6) += base;
        1:12419:  if (length == 7)
        1:12420:    goto bail;
    #####:12421:  *(out + 7)  = base + ((tmp >> 6) & 1023);
        -:12422:  if (length == 8)
        -:12423:    goto bail;
    #####:12424:bail:
        7:12425:  return ((length * 10) + 7) / 8;
        -:12426:}
        -:12427:
        -:12428:static uint32_t
     1035:12429:pack11_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12430:  uint32_t tmp, remaining;
     1035:12431:  if (length == 0)
        -:12432:    return 0;
      906:12433:  tmp  = (*(in + 0) - base) << 0;
      906:12434:  if (length == 1)
      131:12435:    goto bail;
      775:12436:  tmp |= (*(in + 1) - base) << 11;
      775:12437:  if (length == 2)
      129:12438:    goto bail;
      646:12439:  tmp |= (*(in + 2) - base) << 22;
      646:12440:  *(uint32_t *)out = tmp;
      646:12441:  out += sizeof(uint32_t);
      646:12442:  tmp  = (*(in + 2) - base) >> (11 - 1);
      646:12443:  if (length == 3)
      129:12444:    goto bail;
      517:12445:  tmp |= (*(in + 3) - base) << 1;
      517:12446:  if (length == 4)
      129:12447:    goto bail;
      388:12448:  tmp |= (*(in + 4) - base) << 12;
      388:12449:  if (length == 5)
      130:12450:    goto bail;
      258:12451:  tmp |= (*(in + 5) - base) << 23;
      258:12452:  *(uint32_t *)out = tmp;
      258:12453:  out += sizeof(uint32_t);
      258:12454:  tmp  = (*(in + 5) - base) >> (11 - 2);
      258:12455:  if (length == 6)
      129:12456:    goto bail;
      129:12457:  tmp |= (*(in + 6) - base) << 2;
      129:12458:  if (length == 7)
      129:12459:    goto bail;
    #####:12460:  tmp |= (*(in + 7) - base) << 13;
    #####:12461:  if (length == 8)
    #####:12462:    goto bail;
    #####:12463:bail:
      906:12464:  remaining = (((length * 11) + 7) / 8) % 4;
      906:12465:  if (remaining == 0) remaining = 4;
      906:12466:  memcpy(out, &tmp, remaining);
      906:12467:  return ((length * 11) + 7) / 8;
        -:12468:}
        -:12469:
        -:12470:static uint32_t
       11:12471:unpack11_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12472:  uint32_t tmp;
       11:12473:  if (length == 0)
        -:12474:    return 0;
        9:12475:  tmp = *(uint32_t *)in;
        9:12476:  *(out + 0)  = base + ((tmp >> 0) & 2047);
        9:12477:  if (length == 1)
        2:12478:    goto bail;
        7:12479:  *(out + 1)  = base + ((tmp >> 11) & 2047);
        7:12480:  if (length == 2)
        1:12481:    goto bail;
        6:12482:  *(out + 2)  = tmp >> 22;
        -:12483:  in += sizeof(uint32_t);
        6:12484:  tmp = *(uint32_t *)in;
        6:12485:  *(out + 2) |= (tmp % (1U << 1)) << (11 - 1);
        6:12486:  *(out + 2) += base;
        6:12487:  if (length == 3)
        1:12488:    goto bail;
        5:12489:  *(out + 3)  = base + ((tmp >> 1) & 2047);
        5:12490:  if (length == 4)
        1:12491:    goto bail;
        4:12492:  *(out + 4)  = base + ((tmp >> 12) & 2047);
        4:12493:  if (length == 5)
        2:12494:    goto bail;
        2:12495:  *(out + 5)  = tmp >> 23;
        -:12496:  in += sizeof(uint32_t);
        2:12497:  tmp = *(uint32_t *)in;
        2:12498:  *(out + 5) |= (tmp % (1U << 2)) << (11 - 2);
        2:12499:  *(out + 5) += base;
        2:12500:  if (length == 6)
        1:12501:    goto bail;
        1:12502:  *(out + 6)  = base + ((tmp >> 2) & 2047);
        1:12503:  if (length == 7)
        1:12504:    goto bail;
    #####:12505:  *(out + 7)  = base + ((tmp >> 13) & 2047);
        -:12506:  if (length == 8)
        -:12507:    goto bail;
    #####:12508:bail:
        9:12509:  return ((length * 11) + 7) / 8;
        -:12510:}
        -:12511:
        -:12512:static uint32_t
     2057:12513:pack12_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12514:  uint32_t tmp, remaining;
     2057:12515:  if (length == 0)
        -:12516:    return 0;
     1800:12517:  tmp  = (*(in + 0) - base) << 0;
     1800:12518:  if (length == 1)
      258:12519:    goto bail;
     1542:12520:  tmp |= (*(in + 1) - base) << 12;
     1542:12521:  if (length == 2)
      257:12522:    goto bail;
     1285:12523:  tmp |= (*(in + 2) - base) << 24;
     1285:12524:  *(uint32_t *)out = tmp;
     1285:12525:  out += sizeof(uint32_t);
     1285:12526:  tmp  = (*(in + 2) - base) >> (12 - 4);
     1285:12527:  if (length == 3)
      257:12528:    goto bail;
     1028:12529:  tmp |= (*(in + 3) - base) << 4;
     1028:12530:  if (length == 4)
      257:12531:    goto bail;
      771:12532:  tmp |= (*(in + 4) - base) << 16;
      771:12533:  if (length == 5)
      257:12534:    goto bail;
      514:12535:  tmp |= (*(in + 5) - base) << 28;
      514:12536:  *(uint32_t *)out = tmp;
      514:12537:  out += sizeof(uint32_t);
      514:12538:  tmp  = (*(in + 5) - base) >> (12 - 8);
      514:12539:  if (length == 6)
      257:12540:    goto bail;
      257:12541:  tmp |= (*(in + 6) - base) << 8;
      257:12542:  if (length == 7)
      257:12543:    goto bail;
    #####:12544:  tmp |= (*(in + 7) - base) << 20;
    #####:12545:  if (length == 8)
    #####:12546:    goto bail;
    #####:12547:bail:
     1800:12548:  remaining = (((length * 12) + 7) / 8) % 4;
     1800:12549:  if (remaining == 0) remaining = 4;
     1800:12550:  memcpy(out, &tmp, remaining);
     1800:12551:  return ((length * 12) + 7) / 8;
        -:12552:}
        -:12553:
        -:12554:static uint32_t
        9:12555:unpack12_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12556:  uint32_t tmp;
        9:12557:  if (length == 0)
        -:12558:    return 0;
        7:12559:  tmp = *(uint32_t *)in;
        7:12560:  *(out + 0)  = base + ((tmp >> 0) & 4095);
        7:12561:  if (length == 1)
        1:12562:    goto bail;
        6:12563:  *(out + 1)  = base + ((tmp >> 12) & 4095);
        6:12564:  if (length == 2)
        1:12565:    goto bail;
        5:12566:  *(out + 2)  = tmp >> 24;
        -:12567:  in += sizeof(uint32_t);
        5:12568:  tmp = *(uint32_t *)in;
        5:12569:  *(out + 2) |= (tmp % (1U << 4)) << (12 - 4);
        5:12570:  *(out + 2) += base;
        5:12571:  if (length == 3)
        1:12572:    goto bail;
        4:12573:  *(out + 3)  = base + ((tmp >> 4) & 4095);
        4:12574:  if (length == 4)
        1:12575:    goto bail;
        3:12576:  *(out + 4)  = base + ((tmp >> 16) & 4095);
        3:12577:  if (length == 5)
        1:12578:    goto bail;
        2:12579:  *(out + 5)  = tmp >> 28;
        -:12580:  in += sizeof(uint32_t);
        2:12581:  tmp = *(uint32_t *)in;
        2:12582:  *(out + 5) |= (tmp % (1U << 8)) << (12 - 8);
        2:12583:  *(out + 5) += base;
        2:12584:  if (length == 6)
        1:12585:    goto bail;
        1:12586:  *(out + 6)  = base + ((tmp >> 8) & 4095);
        1:12587:  if (length == 7)
        1:12588:    goto bail;
    #####:12589:  *(out + 7)  = base + ((tmp >> 20) & 4095);
        -:12590:  if (length == 8)
        -:12591:    goto bail;
    #####:12592:bail:
        7:12593:  return ((length * 12) + 7) / 8;
        -:12594:}
        -:12595:
        -:12596:static uint32_t
     4105:12597:pack13_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12598:  uint32_t tmp, remaining;
     4105:12599:  if (length == 0)
        -:12600:    return 0;
     3592:12601:  tmp  = (*(in + 0) - base) << 0;
     3592:12602:  if (length == 1)
      514:12603:    goto bail;
     3078:12604:  tmp |= (*(in + 1) - base) << 13;
     3078:12605:  if (length == 2)
      513:12606:    goto bail;
     2565:12607:  tmp |= (*(in + 2) - base) << 26;
     2565:12608:  *(uint32_t *)out = tmp;
     2565:12609:  out += sizeof(uint32_t);
     2565:12610:  tmp  = (*(in + 2) - base) >> (13 - 7);
     2565:12611:  if (length == 3)
      513:12612:    goto bail;
     2052:12613:  tmp |= (*(in + 3) - base) << 7;
     2052:12614:  if (length == 4)
      513:12615:    goto bail;
     1539:12616:  tmp |= (*(in + 4) - base) << 20;
     1539:12617:  *(uint32_t *)out = tmp;
     1539:12618:  out += sizeof(uint32_t);
     1539:12619:  tmp  = (*(in + 4) - base) >> (13 - 1);
     1539:12620:  if (length == 5)
      513:12621:    goto bail;
     1026:12622:  tmp |= (*(in + 5) - base) << 1;
     1026:12623:  if (length == 6)
      513:12624:    goto bail;
      513:12625:  tmp |= (*(in + 6) - base) << 14;
      513:12626:  if (length == 7)
      513:12627:    goto bail;
    #####:12628:  tmp |= (*(in + 7) - base) << 27;
    #####:12629:  *(uint32_t *)out = tmp;
    #####:12630:  out += sizeof(uint32_t);
    #####:12631:  tmp  = (*(in + 7) - base) >> (13 - 8);
    #####:12632:  if (length == 8)
    #####:12633:    goto bail;
    #####:12634:bail:
     3592:12635:  remaining = (((length * 13) + 7) / 8) % 4;
     3592:12636:  if (remaining == 0) remaining = 4;
     3592:12637:  memcpy(out, &tmp, remaining);
     3592:12638:  return ((length * 13) + 7) / 8;
        -:12639:}
        -:12640:
        -:12641:static uint32_t
        9:12642:unpack13_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12643:  uint32_t tmp;
        9:12644:  if (length == 0)
        -:12645:    return 0;
        7:12646:  tmp = *(uint32_t *)in;
        7:12647:  *(out + 0)  = base + ((tmp >> 0) & 8191);
        7:12648:  if (length == 1)
        1:12649:    goto bail;
        6:12650:  *(out + 1)  = base + ((tmp >> 13) & 8191);
        6:12651:  if (length == 2)
        1:12652:    goto bail;
        5:12653:  *(out + 2)  = tmp >> 26;
        -:12654:  in += sizeof(uint32_t);
        5:12655:  tmp = *(uint32_t *)in;
        5:12656:  *(out + 2) |= (tmp % (1U << 7)) << (13 - 7);
        5:12657:  *(out + 2) += base;
        5:12658:  if (length == 3)
        1:12659:    goto bail;
        4:12660:  *(out + 3)  = base + ((tmp >> 7) & 8191);
        4:12661:  if (length == 4)
        1:12662:    goto bail;
        3:12663:  *(out + 4)  = tmp >> 20;
        -:12664:  in += sizeof(uint32_t);
        3:12665:  tmp = *(uint32_t *)in;
        3:12666:  *(out + 4) |= (tmp % (1U << 1)) << (13 - 1);
        3:12667:  *(out + 4) += base;
        3:12668:  if (length == 5)
        1:12669:    goto bail;
        2:12670:  *(out + 5)  = base + ((tmp >> 1) & 8191);
        2:12671:  if (length == 6)
        1:12672:    goto bail;
        1:12673:  *(out + 6)  = base + ((tmp >> 14) & 8191);
        1:12674:  if (length == 7)
        1:12675:    goto bail;
    #####:12676:  *(out + 7)  = tmp >> 27;
        -:12677:  in += sizeof(uint32_t);
    #####:12678:  tmp = *(uint32_t *)in;
    #####:12679:  *(out + 7) |= (tmp % (1U << 8)) << (13 - 8);
    #####:12680:  *(out + 7) += base;
        -:12681:  if (length == 8)
        -:12682:    goto bail;
    #####:12683:bail:
        7:12684:  return ((length * 13) + 7) / 8;
        -:12685:}
        -:12686:
        -:12687:static uint32_t
     1817:12688:pack14_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12689:  uint32_t tmp, remaining;
     1817:12690:  if (length == 0)
        -:12691:    return 0;
     1590:12692:  tmp  = (*(in + 0) - base) << 0;
     1590:12693:  if (length == 1)
      228:12694:    goto bail;
     1362:12695:  tmp |= (*(in + 1) - base) << 14;
     1362:12696:  if (length == 2)
      227:12697:    goto bail;
     1135:12698:  tmp |= (*(in + 2) - base) << 28;
     1135:12699:  *(uint32_t *)out = tmp;
     1135:12700:  out += sizeof(uint32_t);
     1135:12701:  tmp  = (*(in + 2) - base) >> (14 - 10);
     1135:12702:  if (length == 3)
      227:12703:    goto bail;
      908:12704:  tmp |= (*(in + 3) - base) << 10;
      908:12705:  if (length == 4)
      227:12706:    goto bail;
      681:12707:  tmp |= (*(in + 4) - base) << 24;
      681:12708:  *(uint32_t *)out = tmp;
      681:12709:  out += sizeof(uint32_t);
      681:12710:  tmp  = (*(in + 4) - base) >> (14 - 6);
      681:12711:  if (length == 5)
      227:12712:    goto bail;
      454:12713:  tmp |= (*(in + 5) - base) << 6;
      454:12714:  if (length == 6)
      227:12715:    goto bail;
      227:12716:  tmp |= (*(in + 6) - base) << 20;
      227:12717:  *(uint32_t *)out = tmp;
      227:12718:  out += sizeof(uint32_t);
      227:12719:  tmp  = (*(in + 6) - base) >> (14 - 2);
      227:12720:  if (length == 7)
      227:12721:    goto bail;
    #####:12722:  tmp |= (*(in + 7) - base) << 2;
    #####:12723:  if (length == 8)
    #####:12724:    goto bail;
    #####:12725:bail:
     1590:12726:  remaining = (((length * 14) + 7) / 8) % 4;
     1590:12727:  if (remaining == 0) remaining = 4;
     1590:12728:  memcpy(out, &tmp, remaining);
     1590:12729:  return ((length * 14) + 7) / 8;
        -:12730:}
        -:12731:
        -:12732:static uint32_t
        8:12733:unpack14_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12734:  uint32_t tmp;
        8:12735:  if (length == 0)
        -:12736:    return 0;
        7:12737:  tmp = *(uint32_t *)in;
        7:12738:  *(out + 0)  = base + ((tmp >> 0) & 16383);
        7:12739:  if (length == 1)
        1:12740:    goto bail;
        6:12741:  *(out + 1)  = base + ((tmp >> 14) & 16383);
        6:12742:  if (length == 2)
        1:12743:    goto bail;
        5:12744:  *(out + 2)  = tmp >> 28;
        -:12745:  in += sizeof(uint32_t);
        5:12746:  tmp = *(uint32_t *)in;
        5:12747:  *(out + 2) |= (tmp % (1U << 10)) << (14 - 10);
        5:12748:  *(out + 2) += base;
        5:12749:  if (length == 3)
        1:12750:    goto bail;
        4:12751:  *(out + 3)  = base + ((tmp >> 10) & 16383);
        4:12752:  if (length == 4)
        1:12753:    goto bail;
        3:12754:  *(out + 4)  = tmp >> 24;
        -:12755:  in += sizeof(uint32_t);
        3:12756:  tmp = *(uint32_t *)in;
        3:12757:  *(out + 4) |= (tmp % (1U << 6)) << (14 - 6);
        3:12758:  *(out + 4) += base;
        3:12759:  if (length == 5)
        1:12760:    goto bail;
        2:12761:  *(out + 5)  = base + ((tmp >> 6) & 16383);
        2:12762:  if (length == 6)
        1:12763:    goto bail;
        1:12764:  *(out + 6)  = tmp >> 20;
        -:12765:  in += sizeof(uint32_t);
        1:12766:  tmp = *(uint32_t *)in;
        1:12767:  *(out + 6) |= (tmp % (1U << 2)) << (14 - 2);
        1:12768:  *(out + 6) += base;
        1:12769:  if (length == 7)
        1:12770:    goto bail;
    #####:12771:  *(out + 7)  = base + ((tmp >> 2) & 16383);
        -:12772:  if (length == 8)
        -:12773:    goto bail;
    #####:12774:bail:
        7:12775:  return ((length * 14) + 7) / 8;
        -:12776:}
        -:12777:
        -:12778:static uint32_t
    10025:12779:pack15_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12780:  uint32_t tmp, remaining;
    10025:12781:  if (length == 0)
        -:12782:    return 0;
     8767:12783:  tmp  = (*(in + 0) - base) << 0;
     8767:12784:  if (length == 1)
     1256:12785:    goto bail;
     7511:12786:  tmp |= (*(in + 1) - base) << 15;
     7511:12787:  if (length == 2)
     1252:12788:    goto bail;
     6259:12789:  tmp |= (*(in + 2) - base) << 30;
     6259:12790:  *(uint32_t *)out = tmp;
     6259:12791:  out += sizeof(uint32_t);
     6259:12792:  tmp  = (*(in + 2) - base) >> (15 - 13);
     6259:12793:  if (length == 3)
     1252:12794:    goto bail;
     5007:12795:  tmp |= (*(in + 3) - base) << 13;
     5007:12796:  if (length == 4)
     1251:12797:    goto bail;
     3756:12798:  tmp |= (*(in + 4) - base) << 28;
     3756:12799:  *(uint32_t *)out = tmp;
     3756:12800:  out += sizeof(uint32_t);
     3756:12801:  tmp  = (*(in + 4) - base) >> (15 - 11);
     3756:12802:  if (length == 5)
     1252:12803:    goto bail;
     2504:12804:  tmp |= (*(in + 5) - base) << 11;
     2504:12805:  if (length == 6)
     1251:12806:    goto bail;
     1253:12807:  tmp |= (*(in + 6) - base) << 26;
     1253:12808:  *(uint32_t *)out = tmp;
     1253:12809:  out += sizeof(uint32_t);
     1253:12810:  tmp  = (*(in + 6) - base) >> (15 - 9);
     1253:12811:  if (length == 7)
     1253:12812:    goto bail;
    #####:12813:  tmp |= (*(in + 7) - base) << 9;
    #####:12814:  if (length == 8)
    #####:12815:    goto bail;
    #####:12816:bail:
     8767:12817:  remaining = (((length * 15) + 7) / 8) % 4;
     8767:12818:  if (remaining == 0) remaining = 4;
     8767:12819:  memcpy(out, &tmp, remaining);
     8767:12820:  return ((length * 15) + 7) / 8;
        -:12821:}
        -:12822:
        -:12823:static uint32_t
       25:12824:unpack15_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12825:  uint32_t tmp;
       25:12826:  if (length == 0)
        -:12827:    return 0;
       18:12828:  tmp = *(uint32_t *)in;
       18:12829:  *(out + 0)  = base + ((tmp >> 0) & 32767);
       18:12830:  if (length == 1)
        7:12831:    goto bail;
       11:12832:  *(out + 1)  = base + ((tmp >> 15) & 32767);
       11:12833:  if (length == 2)
        1:12834:    goto bail;
       10:12835:  *(out + 2)  = tmp >> 30;
        -:12836:  in += sizeof(uint32_t);
       10:12837:  tmp = *(uint32_t *)in;
       10:12838:  *(out + 2) |= (tmp % (1U << 13)) << (15 - 13);
       10:12839:  *(out + 2) += base;
       10:12840:  if (length == 3)
        2:12841:    goto bail;
        8:12842:  *(out + 3)  = base + ((tmp >> 13) & 32767);
        8:12843:  if (length == 4)
        1:12844:    goto bail;
        7:12845:  *(out + 4)  = tmp >> 28;
        -:12846:  in += sizeof(uint32_t);
        7:12847:  tmp = *(uint32_t *)in;
        7:12848:  *(out + 4) |= (tmp % (1U << 11)) << (15 - 11);
        7:12849:  *(out + 4) += base;
        7:12850:  if (length == 5)
        2:12851:    goto bail;
        5:12852:  *(out + 5)  = base + ((tmp >> 11) & 32767);
        5:12853:  if (length == 6)
        3:12854:    goto bail;
        2:12855:  *(out + 6)  = tmp >> 26;
        -:12856:  in += sizeof(uint32_t);
        2:12857:  tmp = *(uint32_t *)in;
        2:12858:  *(out + 6) |= (tmp % (1U << 9)) << (15 - 9);
        2:12859:  *(out + 6) += base;
        2:12860:  if (length == 7)
        2:12861:    goto bail;
    #####:12862:  *(out + 7)  = base + ((tmp >> 9) & 32767);
        -:12863:  if (length == 8)
        -:12864:    goto bail;
    #####:12865:bail:
       18:12866:  return ((length * 15) + 7) / 8;
        -:12867:}
        -:12868:
        -:12869:static uint32_t
        8:12870:pack16_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12871:  uint32_t tmp, remaining;
        8:12872:  if (length == 0)
        -:12873:    return 0;
        7:12874:  tmp  = (*(in + 0) - base) << 0;
        7:12875:  if (length == 1)
        1:12876:    goto bail;
        6:12877:  tmp |= (*(in + 1) - base) << 16;
        6:12878:  if (length == 2)
        1:12879:    goto bail;
        5:12880:  *(uint32_t *)out = tmp;
        5:12881:  out += sizeof(uint32_t);
        5:12882:  tmp  = (*(in + 2) - base) << 0;
        5:12883:  if (length == 3)
        1:12884:    goto bail;
        4:12885:  tmp |= (*(in + 3) - base) << 16;
        4:12886:  if (length == 4)
        1:12887:    goto bail;
        3:12888:  *(uint32_t *)out = tmp;
        3:12889:  out += sizeof(uint32_t);
        3:12890:  tmp  = (*(in + 4) - base) << 0;
        3:12891:  if (length == 5)
        1:12892:    goto bail;
        2:12893:  tmp |= (*(in + 5) - base) << 16;
        2:12894:  if (length == 6)
        1:12895:    goto bail;
        1:12896:  *(uint32_t *)out = tmp;
        1:12897:  out += sizeof(uint32_t);
        1:12898:  tmp  = (*(in + 6) - base) << 0;
        1:12899:  if (length == 7)
        1:12900:    goto bail;
    #####:12901:  tmp |= (*(in + 7) - base) << 16;
    #####:12902:  if (length == 8)
    #####:12903:    goto bail;
    #####:12904:bail:
        7:12905:  remaining = (((length * 16) + 7) / 8) % 4;
        7:12906:  if (remaining == 0) remaining = 4;
        7:12907:  memcpy(out, &tmp, remaining);
        7:12908:  return ((length * 16) + 7) / 8;
        -:12909:}
        -:12910:
        -:12911:static uint32_t
        8:12912:unpack16_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:12913:  uint32_t tmp;
        8:12914:  if (length == 0)
        -:12915:    return 0;
        7:12916:  tmp = *(uint32_t *)in;
        7:12917:  *(out + 0)  = base + ((tmp >> 0) & 65535);
        7:12918:  if (length == 1)
        1:12919:    goto bail;
        6:12920:  *(out + 1)  = base + ((tmp >> 16) & 65535);
        6:12921:  if (length == 2)
        1:12922:    goto bail;
        -:12923:  in += sizeof(uint32_t);
        5:12924:  tmp = *(uint32_t *)in;
        5:12925:  *(out + 2)  = base + ((tmp >> 0) & 65535);
        5:12926:  if (length == 3)
        1:12927:    goto bail;
        4:12928:  *(out + 3)  = base + ((tmp >> 16) & 65535);
        4:12929:  if (length == 4)
        1:12930:    goto bail;
        -:12931:  in += sizeof(uint32_t);
        3:12932:  tmp = *(uint32_t *)in;
        3:12933:  *(out + 4)  = base + ((tmp >> 0) & 65535);
        3:12934:  if (length == 5)
        1:12935:    goto bail;
        2:12936:  *(out + 5)  = base + ((tmp >> 16) & 65535);
        2:12937:  if (length == 6)
        1:12938:    goto bail;
        -:12939:  in += sizeof(uint32_t);
        1:12940:  tmp = *(uint32_t *)in;
        1:12941:  *(out + 6)  = base + ((tmp >> 0) & 65535);
        1:12942:  if (length == 7)
        1:12943:    goto bail;
    #####:12944:  *(out + 7)  = base + ((tmp >> 16) & 65535);
        -:12945:  if (length == 8)
        -:12946:    goto bail;
    #####:12947:bail:
        7:12948:  return ((length * 16) + 7) / 8;
        -:12949:}
        -:12950:
        -:12951:static uint32_t
        8:12952:pack17_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:12953:  uint32_t tmp, remaining;
        8:12954:  if (length == 0)
        -:12955:    return 0;
        7:12956:  tmp  = (*(in + 0) - base) << 0;
        7:12957:  if (length == 1)
        1:12958:    goto bail;
        6:12959:  tmp |= (*(in + 1) - base) << 17;
        6:12960:  *(uint32_t *)out = tmp;
        6:12961:  out += sizeof(uint32_t);
        6:12962:  tmp  = (*(in + 1) - base) >> (17 - 2);
        6:12963:  if (length == 2)
        1:12964:    goto bail;
        5:12965:  tmp |= (*(in + 2) - base) << 2;
        5:12966:  if (length == 3)
        1:12967:    goto bail;
        4:12968:  tmp |= (*(in + 3) - base) << 19;
        4:12969:  *(uint32_t *)out = tmp;
        4:12970:  out += sizeof(uint32_t);
        4:12971:  tmp  = (*(in + 3) - base) >> (17 - 4);
        4:12972:  if (length == 4)
        1:12973:    goto bail;
        3:12974:  tmp |= (*(in + 4) - base) << 4;
        3:12975:  if (length == 5)
        1:12976:    goto bail;
        2:12977:  tmp |= (*(in + 5) - base) << 21;
        2:12978:  *(uint32_t *)out = tmp;
        2:12979:  out += sizeof(uint32_t);
        2:12980:  tmp  = (*(in + 5) - base) >> (17 - 6);
        2:12981:  if (length == 6)
        1:12982:    goto bail;
        1:12983:  tmp |= (*(in + 6) - base) << 6;
        1:12984:  if (length == 7)
        1:12985:    goto bail;
    #####:12986:  tmp |= (*(in + 7) - base) << 23;
    #####:12987:  *(uint32_t *)out = tmp;
    #####:12988:  out += sizeof(uint32_t);
    #####:12989:  tmp  = (*(in + 7) - base) >> (17 - 8);
    #####:12990:  if (length == 8)
    #####:12991:    goto bail;
    #####:12992:bail:
        7:12993:  remaining = (((length * 17) + 7) / 8) % 4;
        7:12994:  if (remaining == 0) remaining = 4;
        7:12995:  memcpy(out, &tmp, remaining);
        7:12996:  return ((length * 17) + 7) / 8;
        -:12997:}
        -:12998:
        -:12999:static uint32_t
        8:13000:unpack17_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13001:  uint32_t tmp;
        8:13002:  if (length == 0)
        -:13003:    return 0;
        7:13004:  tmp = *(uint32_t *)in;
        7:13005:  *(out + 0)  = base + ((tmp >> 0) & 131071);
        7:13006:  if (length == 1)
        1:13007:    goto bail;
        6:13008:  *(out + 1)  = tmp >> 17;
        -:13009:  in += sizeof(uint32_t);
        6:13010:  tmp = *(uint32_t *)in;
        6:13011:  *(out + 1) |= (tmp % (1U << 2)) << (17 - 2);
        6:13012:  *(out + 1) += base;
        6:13013:  if (length == 2)
        1:13014:    goto bail;
        5:13015:  *(out + 2)  = base + ((tmp >> 2) & 131071);
        5:13016:  if (length == 3)
        1:13017:    goto bail;
        4:13018:  *(out + 3)  = tmp >> 19;
        -:13019:  in += sizeof(uint32_t);
        4:13020:  tmp = *(uint32_t *)in;
        4:13021:  *(out + 3) |= (tmp % (1U << 4)) << (17 - 4);
        4:13022:  *(out + 3) += base;
        4:13023:  if (length == 4)
        1:13024:    goto bail;
        3:13025:  *(out + 4)  = base + ((tmp >> 4) & 131071);
        3:13026:  if (length == 5)
        1:13027:    goto bail;
        2:13028:  *(out + 5)  = tmp >> 21;
        -:13029:  in += sizeof(uint32_t);
        2:13030:  tmp = *(uint32_t *)in;
        2:13031:  *(out + 5) |= (tmp % (1U << 6)) << (17 - 6);
        2:13032:  *(out + 5) += base;
        2:13033:  if (length == 6)
        1:13034:    goto bail;
        1:13035:  *(out + 6)  = base + ((tmp >> 6) & 131071);
        1:13036:  if (length == 7)
        1:13037:    goto bail;
    #####:13038:  *(out + 7)  = tmp >> 23;
        -:13039:  in += sizeof(uint32_t);
    #####:13040:  tmp = *(uint32_t *)in;
    #####:13041:  *(out + 7) |= (tmp % (1U << 8)) << (17 - 8);
    #####:13042:  *(out + 7) += base;
        -:13043:  if (length == 8)
        -:13044:    goto bail;
    #####:13045:bail:
        7:13046:  return ((length * 17) + 7) / 8;
        -:13047:}
        -:13048:
        -:13049:static uint32_t
       10:13050:pack18_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13051:  uint32_t tmp, remaining;
       10:13052:  if (length == 0)
        -:13053:    return 0;
        9:13054:  tmp  = (*(in + 0) - base) << 0;
        9:13055:  if (length == 1)
        1:13056:    goto bail;
        8:13057:  tmp |= (*(in + 1) - base) << 18;
        8:13058:  *(uint32_t *)out = tmp;
        8:13059:  out += sizeof(uint32_t);
        8:13060:  tmp  = (*(in + 1) - base) >> (18 - 4);
        8:13061:  if (length == 2)
        3:13062:    goto bail;
        5:13063:  tmp |= (*(in + 2) - base) << 4;
        5:13064:  if (length == 3)
        1:13065:    goto bail;
        4:13066:  tmp |= (*(in + 3) - base) << 22;
        4:13067:  *(uint32_t *)out = tmp;
        4:13068:  out += sizeof(uint32_t);
        4:13069:  tmp  = (*(in + 3) - base) >> (18 - 8);
        4:13070:  if (length == 4)
        1:13071:    goto bail;
        3:13072:  tmp |= (*(in + 4) - base) << 8;
        3:13073:  if (length == 5)
        1:13074:    goto bail;
        2:13075:  tmp |= (*(in + 5) - base) << 26;
        2:13076:  *(uint32_t *)out = tmp;
        2:13077:  out += sizeof(uint32_t);
        2:13078:  tmp  = (*(in + 5) - base) >> (18 - 12);
        2:13079:  if (length == 6)
        1:13080:    goto bail;
        1:13081:  tmp |= (*(in + 6) - base) << 12;
        1:13082:  if (length == 7)
        1:13083:    goto bail;
    #####:13084:  tmp |= (*(in + 7) - base) << 30;
    #####:13085:  *(uint32_t *)out = tmp;
    #####:13086:  out += sizeof(uint32_t);
    #####:13087:  tmp  = (*(in + 7) - base) >> (18 - 16);
    #####:13088:  if (length == 8)
    #####:13089:    goto bail;
    #####:13090:bail:
        9:13091:  remaining = (((length * 18) + 7) / 8) % 4;
        9:13092:  if (remaining == 0) remaining = 4;
        9:13093:  memcpy(out, &tmp, remaining);
        9:13094:  return ((length * 18) + 7) / 8;
        -:13095:}
        -:13096:
        -:13097:static uint32_t
        9:13098:unpack18_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13099:  uint32_t tmp;
        9:13100:  if (length == 0)
        -:13101:    return 0;
        8:13102:  tmp = *(uint32_t *)in;
        8:13103:  *(out + 0)  = base + ((tmp >> 0) & 262143);
        8:13104:  if (length == 1)
        1:13105:    goto bail;
        7:13106:  *(out + 1)  = tmp >> 18;
        -:13107:  in += sizeof(uint32_t);
        7:13108:  tmp = *(uint32_t *)in;
        7:13109:  *(out + 1) |= (tmp % (1U << 4)) << (18 - 4);
        7:13110:  *(out + 1) += base;
        7:13111:  if (length == 2)
        2:13112:    goto bail;
        5:13113:  *(out + 2)  = base + ((tmp >> 4) & 262143);
        5:13114:  if (length == 3)
        1:13115:    goto bail;
        4:13116:  *(out + 3)  = tmp >> 22;
        -:13117:  in += sizeof(uint32_t);
        4:13118:  tmp = *(uint32_t *)in;
        4:13119:  *(out + 3) |= (tmp % (1U << 8)) << (18 - 8);
        4:13120:  *(out + 3) += base;
        4:13121:  if (length == 4)
        1:13122:    goto bail;
        3:13123:  *(out + 4)  = base + ((tmp >> 8) & 262143);
        3:13124:  if (length == 5)
        1:13125:    goto bail;
        2:13126:  *(out + 5)  = tmp >> 26;
        -:13127:  in += sizeof(uint32_t);
        2:13128:  tmp = *(uint32_t *)in;
        2:13129:  *(out + 5) |= (tmp % (1U << 12)) << (18 - 12);
        2:13130:  *(out + 5) += base;
        2:13131:  if (length == 6)
        1:13132:    goto bail;
        1:13133:  *(out + 6)  = base + ((tmp >> 12) & 262143);
        1:13134:  if (length == 7)
        1:13135:    goto bail;
    #####:13136:  *(out + 7)  = tmp >> 30;
        -:13137:  in += sizeof(uint32_t);
    #####:13138:  tmp = *(uint32_t *)in;
    #####:13139:  *(out + 7) |= (tmp % (1U << 16)) << (18 - 16);
    #####:13140:  *(out + 7) += base;
        -:13141:  if (length == 8)
        -:13142:    goto bail;
    #####:13143:bail:
        8:13144:  return ((length * 18) + 7) / 8;
        -:13145:}
        -:13146:
        -:13147:static uint32_t
       10:13148:pack19_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13149:  uint32_t tmp, remaining;
       10:13150:  if (length == 0)
        -:13151:    return 0;
        9:13152:  tmp  = (*(in + 0) - base) << 0;
        9:13153:  if (length == 1)
        1:13154:    goto bail;
        8:13155:  tmp |= (*(in + 1) - base) << 19;
        8:13156:  *(uint32_t *)out = tmp;
        8:13157:  out += sizeof(uint32_t);
        8:13158:  tmp  = (*(in + 1) - base) >> (19 - 6);
        8:13159:  if (length == 2)
        1:13160:    goto bail;
        7:13161:  tmp |= (*(in + 2) - base) << 6;
        7:13162:  if (length == 3)
        3:13163:    goto bail;
        4:13164:  tmp |= (*(in + 3) - base) << 25;
        4:13165:  *(uint32_t *)out = tmp;
        4:13166:  out += sizeof(uint32_t);
        4:13167:  tmp  = (*(in + 3) - base) >> (19 - 12);
        4:13168:  if (length == 4)
        1:13169:    goto bail;
        3:13170:  tmp |= (*(in + 4) - base) << 12;
        3:13171:  if (length == 5)
        1:13172:    goto bail;
        2:13173:  tmp |= (*(in + 5) - base) << 31;
        2:13174:  *(uint32_t *)out = tmp;
        2:13175:  out += sizeof(uint32_t);
        2:13176:  tmp  = (*(in + 5) - base) >> (19 - 18);
        2:13177:  if (length == 6)
        1:13178:    goto bail;
        1:13179:  tmp |= (*(in + 6) - base) << 18;
        1:13180:  *(uint32_t *)out = tmp;
        1:13181:  out += sizeof(uint32_t);
        1:13182:  tmp  = (*(in + 6) - base) >> (19 - 5);
        1:13183:  if (length == 7)
        1:13184:    goto bail;
    #####:13185:  tmp |= (*(in + 7) - base) << 5;
    #####:13186:  if (length == 8)
    #####:13187:    goto bail;
    #####:13188:bail:
        9:13189:  remaining = (((length * 19) + 7) / 8) % 4;
        9:13190:  if (remaining == 0) remaining = 4;
        9:13191:  memcpy(out, &tmp, remaining);
        9:13192:  return ((length * 19) + 7) / 8;
        -:13193:}
        -:13194:
        -:13195:static uint32_t
        9:13196:unpack19_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13197:  uint32_t tmp;
        9:13198:  if (length == 0)
        -:13199:    return 0;
        8:13200:  tmp = *(uint32_t *)in;
        8:13201:  *(out + 0)  = base + ((tmp >> 0) & 524287);
        8:13202:  if (length == 1)
        1:13203:    goto bail;
        7:13204:  *(out + 1)  = tmp >> 19;
        -:13205:  in += sizeof(uint32_t);
        7:13206:  tmp = *(uint32_t *)in;
        7:13207:  *(out + 1) |= (tmp % (1U << 6)) << (19 - 6);
        7:13208:  *(out + 1) += base;
        7:13209:  if (length == 2)
        1:13210:    goto bail;
        6:13211:  *(out + 2)  = base + ((tmp >> 6) & 524287);
        6:13212:  if (length == 3)
        2:13213:    goto bail;
        4:13214:  *(out + 3)  = tmp >> 25;
        -:13215:  in += sizeof(uint32_t);
        4:13216:  tmp = *(uint32_t *)in;
        4:13217:  *(out + 3) |= (tmp % (1U << 12)) << (19 - 12);
        4:13218:  *(out + 3) += base;
        4:13219:  if (length == 4)
        1:13220:    goto bail;
        3:13221:  *(out + 4)  = base + ((tmp >> 12) & 524287);
        3:13222:  if (length == 5)
        1:13223:    goto bail;
        2:13224:  *(out + 5)  = tmp >> 31;
        -:13225:  in += sizeof(uint32_t);
        2:13226:  tmp = *(uint32_t *)in;
        2:13227:  *(out + 5) |= (tmp % (1U << 18)) << (19 - 18);
        2:13228:  *(out + 5) += base;
        2:13229:  if (length == 6)
        1:13230:    goto bail;
        1:13231:  *(out + 6)  = tmp >> 18;
        -:13232:  in += sizeof(uint32_t);
        1:13233:  tmp = *(uint32_t *)in;
        1:13234:  *(out + 6) |= (tmp % (1U << 5)) << (19 - 5);
        1:13235:  *(out + 6) += base;
        1:13236:  if (length == 7)
        1:13237:    goto bail;
    #####:13238:  *(out + 7)  = base + ((tmp >> 5) & 524287);
        -:13239:  if (length == 8)
        -:13240:    goto bail;
    #####:13241:bail:
        8:13242:  return ((length * 19) + 7) / 8;
        -:13243:}
        -:13244:
        -:13245:static uint32_t
       10:13246:pack20_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13247:  uint32_t tmp, remaining;
       10:13248:  if (length == 0)
        -:13249:    return 0;
        9:13250:  tmp  = (*(in + 0) - base) << 0;
        9:13251:  if (length == 1)
        1:13252:    goto bail;
        8:13253:  tmp |= (*(in + 1) - base) << 20;
        8:13254:  *(uint32_t *)out = tmp;
        8:13255:  out += sizeof(uint32_t);
        8:13256:  tmp  = (*(in + 1) - base) >> (20 - 8);
        8:13257:  if (length == 2)
        1:13258:    goto bail;
        7:13259:  tmp |= (*(in + 2) - base) << 8;
        7:13260:  if (length == 3)
        1:13261:    goto bail;
        6:13262:  tmp |= (*(in + 3) - base) << 28;
        6:13263:  *(uint32_t *)out = tmp;
        6:13264:  out += sizeof(uint32_t);
        6:13265:  tmp  = (*(in + 3) - base) >> (20 - 16);
        6:13266:  if (length == 4)
        3:13267:    goto bail;
        3:13268:  tmp |= (*(in + 4) - base) << 16;
        3:13269:  *(uint32_t *)out = tmp;
        3:13270:  out += sizeof(uint32_t);
        3:13271:  tmp  = (*(in + 4) - base) >> (20 - 4);
        3:13272:  if (length == 5)
        1:13273:    goto bail;
        2:13274:  tmp |= (*(in + 5) - base) << 4;
        2:13275:  if (length == 6)
        1:13276:    goto bail;
        1:13277:  tmp |= (*(in + 6) - base) << 24;
        1:13278:  *(uint32_t *)out = tmp;
        1:13279:  out += sizeof(uint32_t);
        1:13280:  tmp  = (*(in + 6) - base) >> (20 - 12);
        1:13281:  if (length == 7)
        1:13282:    goto bail;
    #####:13283:  tmp |= (*(in + 7) - base) << 12;
    #####:13284:  if (length == 8)
    #####:13285:    goto bail;
    #####:13286:bail:
        9:13287:  remaining = (((length * 20) + 7) / 8) % 4;
        9:13288:  if (remaining == 0) remaining = 4;
        9:13289:  memcpy(out, &tmp, remaining);
        9:13290:  return ((length * 20) + 7) / 8;
        -:13291:}
        -:13292:
        -:13293:static uint32_t
        9:13294:unpack20_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13295:  uint32_t tmp;
        9:13296:  if (length == 0)
        -:13297:    return 0;
        8:13298:  tmp = *(uint32_t *)in;
        8:13299:  *(out + 0)  = base + ((tmp >> 0) & 1048575);
        8:13300:  if (length == 1)
        1:13301:    goto bail;
        7:13302:  *(out + 1)  = tmp >> 20;
        -:13303:  in += sizeof(uint32_t);
        7:13304:  tmp = *(uint32_t *)in;
        7:13305:  *(out + 1) |= (tmp % (1U << 8)) << (20 - 8);
        7:13306:  *(out + 1) += base;
        7:13307:  if (length == 2)
        1:13308:    goto bail;
        6:13309:  *(out + 2)  = base + ((tmp >> 8) & 1048575);
        6:13310:  if (length == 3)
        1:13311:    goto bail;
        5:13312:  *(out + 3)  = tmp >> 28;
        -:13313:  in += sizeof(uint32_t);
        5:13314:  tmp = *(uint32_t *)in;
        5:13315:  *(out + 3) |= (tmp % (1U << 16)) << (20 - 16);
        5:13316:  *(out + 3) += base;
        5:13317:  if (length == 4)
        2:13318:    goto bail;
        3:13319:  *(out + 4)  = tmp >> 16;
        -:13320:  in += sizeof(uint32_t);
        3:13321:  tmp = *(uint32_t *)in;
        3:13322:  *(out + 4) |= (tmp % (1U << 4)) << (20 - 4);
        3:13323:  *(out + 4) += base;
        3:13324:  if (length == 5)
        1:13325:    goto bail;
        2:13326:  *(out + 5)  = base + ((tmp >> 4) & 1048575);
        2:13327:  if (length == 6)
        1:13328:    goto bail;
        1:13329:  *(out + 6)  = tmp >> 24;
        -:13330:  in += sizeof(uint32_t);
        1:13331:  tmp = *(uint32_t *)in;
        1:13332:  *(out + 6) |= (tmp % (1U << 12)) << (20 - 12);
        1:13333:  *(out + 6) += base;
        1:13334:  if (length == 7)
        1:13335:    goto bail;
    #####:13336:  *(out + 7)  = base + ((tmp >> 12) & 1048575);
        -:13337:  if (length == 8)
        -:13338:    goto bail;
    #####:13339:bail:
        8:13340:  return ((length * 20) + 7) / 8;
        -:13341:}
        -:13342:
        -:13343:static uint32_t
       10:13344:pack21_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13345:  uint32_t tmp, remaining;
       10:13346:  if (length == 0)
        -:13347:    return 0;
        9:13348:  tmp  = (*(in + 0) - base) << 0;
        9:13349:  if (length == 1)
        1:13350:    goto bail;
        8:13351:  tmp |= (*(in + 1) - base) << 21;
        8:13352:  *(uint32_t *)out = tmp;
        8:13353:  out += sizeof(uint32_t);
        8:13354:  tmp  = (*(in + 1) - base) >> (21 - 10);
        8:13355:  if (length == 2)
        1:13356:    goto bail;
        7:13357:  tmp |= (*(in + 2) - base) << 10;
        7:13358:  if (length == 3)
        1:13359:    goto bail;
        6:13360:  tmp |= (*(in + 3) - base) << 31;
        6:13361:  *(uint32_t *)out = tmp;
        6:13362:  out += sizeof(uint32_t);
        6:13363:  tmp  = (*(in + 3) - base) >> (21 - 20);
        6:13364:  if (length == 4)
        1:13365:    goto bail;
        5:13366:  tmp |= (*(in + 4) - base) << 20;
        5:13367:  *(uint32_t *)out = tmp;
        5:13368:  out += sizeof(uint32_t);
        5:13369:  tmp  = (*(in + 4) - base) >> (21 - 9);
        5:13370:  if (length == 5)
        3:13371:    goto bail;
        2:13372:  tmp |= (*(in + 5) - base) << 9;
        2:13373:  if (length == 6)
        1:13374:    goto bail;
        1:13375:  tmp |= (*(in + 6) - base) << 30;
        1:13376:  *(uint32_t *)out = tmp;
        1:13377:  out += sizeof(uint32_t);
        1:13378:  tmp  = (*(in + 6) - base) >> (21 - 19);
        1:13379:  if (length == 7)
        1:13380:    goto bail;
    #####:13381:  tmp |= (*(in + 7) - base) << 19;
    #####:13382:  *(uint32_t *)out = tmp;
    #####:13383:  out += sizeof(uint32_t);
    #####:13384:  tmp  = (*(in + 7) - base) >> (21 - 8);
    #####:13385:  if (length == 8)
    #####:13386:    goto bail;
    #####:13387:bail:
        9:13388:  remaining = (((length * 21) + 7) / 8) % 4;
        9:13389:  if (remaining == 0) remaining = 4;
        9:13390:  memcpy(out, &tmp, remaining);
        9:13391:  return ((length * 21) + 7) / 8;
        -:13392:}
        -:13393:
        -:13394:static uint32_t
        9:13395:unpack21_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13396:  uint32_t tmp;
        9:13397:  if (length == 0)
        -:13398:    return 0;
        8:13399:  tmp = *(uint32_t *)in;
        8:13400:  *(out + 0)  = base + ((tmp >> 0) & 2097151);
        8:13401:  if (length == 1)
        1:13402:    goto bail;
        7:13403:  *(out + 1)  = tmp >> 21;
        -:13404:  in += sizeof(uint32_t);
        7:13405:  tmp = *(uint32_t *)in;
        7:13406:  *(out + 1) |= (tmp % (1U << 10)) << (21 - 10);
        7:13407:  *(out + 1) += base;
        7:13408:  if (length == 2)
        1:13409:    goto bail;
        6:13410:  *(out + 2)  = base + ((tmp >> 10) & 2097151);
        6:13411:  if (length == 3)
        1:13412:    goto bail;
        5:13413:  *(out + 3)  = tmp >> 31;
        -:13414:  in += sizeof(uint32_t);
        5:13415:  tmp = *(uint32_t *)in;
        5:13416:  *(out + 3) |= (tmp % (1U << 20)) << (21 - 20);
        5:13417:  *(out + 3) += base;
        5:13418:  if (length == 4)
        1:13419:    goto bail;
        4:13420:  *(out + 4)  = tmp >> 20;
        -:13421:  in += sizeof(uint32_t);
        4:13422:  tmp = *(uint32_t *)in;
        4:13423:  *(out + 4) |= (tmp % (1U << 9)) << (21 - 9);
        4:13424:  *(out + 4) += base;
        4:13425:  if (length == 5)
        2:13426:    goto bail;
        2:13427:  *(out + 5)  = base + ((tmp >> 9) & 2097151);
        2:13428:  if (length == 6)
        1:13429:    goto bail;
        1:13430:  *(out + 6)  = tmp >> 30;
        -:13431:  in += sizeof(uint32_t);
        1:13432:  tmp = *(uint32_t *)in;
        1:13433:  *(out + 6) |= (tmp % (1U << 19)) << (21 - 19);
        1:13434:  *(out + 6) += base;
        1:13435:  if (length == 7)
        1:13436:    goto bail;
    #####:13437:  *(out + 7)  = tmp >> 19;
        -:13438:  in += sizeof(uint32_t);
    #####:13439:  tmp = *(uint32_t *)in;
    #####:13440:  *(out + 7) |= (tmp % (1U << 8)) << (21 - 8);
    #####:13441:  *(out + 7) += base;
        -:13442:  if (length == 8)
        -:13443:    goto bail;
    #####:13444:bail:
        8:13445:  return ((length * 21) + 7) / 8;
        -:13446:}
        -:13447:
        -:13448:static uint32_t
       10:13449:pack22_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13450:  uint32_t tmp, remaining;
       10:13451:  if (length == 0)
        -:13452:    return 0;
        9:13453:  tmp  = (*(in + 0) - base) << 0;
        9:13454:  if (length == 1)
        1:13455:    goto bail;
        8:13456:  tmp |= (*(in + 1) - base) << 22;
        8:13457:  *(uint32_t *)out = tmp;
        8:13458:  out += sizeof(uint32_t);
        8:13459:  tmp  = (*(in + 1) - base) >> (22 - 12);
        8:13460:  if (length == 2)
        1:13461:    goto bail;
        7:13462:  tmp |= (*(in + 2) - base) << 12;
        7:13463:  *(uint32_t *)out = tmp;
        7:13464:  out += sizeof(uint32_t);
        7:13465:  tmp  = (*(in + 2) - base) >> (22 - 2);
        7:13466:  if (length == 3)
        1:13467:    goto bail;
        6:13468:  tmp |= (*(in + 3) - base) << 2;
        6:13469:  if (length == 4)
        1:13470:    goto bail;
        5:13471:  tmp |= (*(in + 4) - base) << 24;
        5:13472:  *(uint32_t *)out = tmp;
        5:13473:  out += sizeof(uint32_t);
        5:13474:  tmp  = (*(in + 4) - base) >> (22 - 14);
        5:13475:  if (length == 5)
        1:13476:    goto bail;
        4:13477:  tmp |= (*(in + 5) - base) << 14;
        4:13478:  *(uint32_t *)out = tmp;
        4:13479:  out += sizeof(uint32_t);
        4:13480:  tmp  = (*(in + 5) - base) >> (22 - 4);
        4:13481:  if (length == 6)
        3:13482:    goto bail;
        1:13483:  tmp |= (*(in + 6) - base) << 4;
        1:13484:  if (length == 7)
        1:13485:    goto bail;
    #####:13486:  tmp |= (*(in + 7) - base) << 26;
    #####:13487:  *(uint32_t *)out = tmp;
    #####:13488:  out += sizeof(uint32_t);
    #####:13489:  tmp  = (*(in + 7) - base) >> (22 - 16);
    #####:13490:  if (length == 8)
    #####:13491:    goto bail;
    #####:13492:bail:
        9:13493:  remaining = (((length * 22) + 7) / 8) % 4;
        9:13494:  if (remaining == 0) remaining = 4;
        9:13495:  memcpy(out, &tmp, remaining);
        9:13496:  return ((length * 22) + 7) / 8;
        -:13497:}
        -:13498:
        -:13499:static uint32_t
        9:13500:unpack22_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13501:  uint32_t tmp;
        9:13502:  if (length == 0)
        -:13503:    return 0;
        8:13504:  tmp = *(uint32_t *)in;
        8:13505:  *(out + 0)  = base + ((tmp >> 0) & 4194303);
        8:13506:  if (length == 1)
        1:13507:    goto bail;
        7:13508:  *(out + 1)  = tmp >> 22;
        -:13509:  in += sizeof(uint32_t);
        7:13510:  tmp = *(uint32_t *)in;
        7:13511:  *(out + 1) |= (tmp % (1U << 12)) << (22 - 12);
        7:13512:  *(out + 1) += base;
        7:13513:  if (length == 2)
        1:13514:    goto bail;
        6:13515:  *(out + 2)  = tmp >> 12;
        -:13516:  in += sizeof(uint32_t);
        6:13517:  tmp = *(uint32_t *)in;
        6:13518:  *(out + 2) |= (tmp % (1U << 2)) << (22 - 2);
        6:13519:  *(out + 2) += base;
        6:13520:  if (length == 3)
        1:13521:    goto bail;
        5:13522:  *(out + 3)  = base + ((tmp >> 2) & 4194303);
        5:13523:  if (length == 4)
        1:13524:    goto bail;
        4:13525:  *(out + 4)  = tmp >> 24;
        -:13526:  in += sizeof(uint32_t);
        4:13527:  tmp = *(uint32_t *)in;
        4:13528:  *(out + 4) |= (tmp % (1U << 14)) << (22 - 14);
        4:13529:  *(out + 4) += base;
        4:13530:  if (length == 5)
        1:13531:    goto bail;
        3:13532:  *(out + 5)  = tmp >> 14;
        -:13533:  in += sizeof(uint32_t);
        3:13534:  tmp = *(uint32_t *)in;
        3:13535:  *(out + 5) |= (tmp % (1U << 4)) << (22 - 4);
        3:13536:  *(out + 5) += base;
        3:13537:  if (length == 6)
        2:13538:    goto bail;
        1:13539:  *(out + 6)  = base + ((tmp >> 4) & 4194303);
        1:13540:  if (length == 7)
        1:13541:    goto bail;
    #####:13542:  *(out + 7)  = tmp >> 26;
        -:13543:  in += sizeof(uint32_t);
    #####:13544:  tmp = *(uint32_t *)in;
    #####:13545:  *(out + 7) |= (tmp % (1U << 16)) << (22 - 16);
    #####:13546:  *(out + 7) += base;
        -:13547:  if (length == 8)
        -:13548:    goto bail;
    #####:13549:bail:
        8:13550:  return ((length * 22) + 7) / 8;
        -:13551:}
        -:13552:
        -:13553:static uint32_t
       10:13554:pack23_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13555:  uint32_t tmp, remaining;
       10:13556:  if (length == 0)
        -:13557:    return 0;
        9:13558:  tmp  = (*(in + 0) - base) << 0;
        9:13559:  if (length == 1)
        1:13560:    goto bail;
        8:13561:  tmp |= (*(in + 1) - base) << 23;
        8:13562:  *(uint32_t *)out = tmp;
        8:13563:  out += sizeof(uint32_t);
        8:13564:  tmp  = (*(in + 1) - base) >> (23 - 14);
        8:13565:  if (length == 2)
        1:13566:    goto bail;
        7:13567:  tmp |= (*(in + 2) - base) << 14;
        7:13568:  *(uint32_t *)out = tmp;
        7:13569:  out += sizeof(uint32_t);
        7:13570:  tmp  = (*(in + 2) - base) >> (23 - 5);
        7:13571:  if (length == 3)
        1:13572:    goto bail;
        6:13573:  tmp |= (*(in + 3) - base) << 5;
        6:13574:  if (length == 4)
        1:13575:    goto bail;
        5:13576:  tmp |= (*(in + 4) - base) << 28;
        5:13577:  *(uint32_t *)out = tmp;
        5:13578:  out += sizeof(uint32_t);
        5:13579:  tmp  = (*(in + 4) - base) >> (23 - 19);
        5:13580:  if (length == 5)
        1:13581:    goto bail;
        4:13582:  tmp |= (*(in + 5) - base) << 19;
        4:13583:  *(uint32_t *)out = tmp;
        4:13584:  out += sizeof(uint32_t);
        4:13585:  tmp  = (*(in + 5) - base) >> (23 - 10);
        4:13586:  if (length == 6)
        1:13587:    goto bail;
        3:13588:  tmp |= (*(in + 6) - base) << 10;
        3:13589:  *(uint32_t *)out = tmp;
        3:13590:  out += sizeof(uint32_t);
        3:13591:  tmp  = (*(in + 6) - base) >> (23 - 1);
        3:13592:  if (length == 7)
        3:13593:    goto bail;
    #####:13594:  tmp |= (*(in + 7) - base) << 1;
    #####:13595:  if (length == 8)
    #####:13596:    goto bail;
    #####:13597:bail:
        9:13598:  remaining = (((length * 23) + 7) / 8) % 4;
        9:13599:  if (remaining == 0) remaining = 4;
        9:13600:  memcpy(out, &tmp, remaining);
        9:13601:  return ((length * 23) + 7) / 8;
        -:13602:}
        -:13603:
        -:13604:static uint32_t
        9:13605:unpack23_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13606:  uint32_t tmp;
        9:13607:  if (length == 0)
        -:13608:    return 0;
        8:13609:  tmp = *(uint32_t *)in;
        8:13610:  *(out + 0)  = base + ((tmp >> 0) & 8388607);
        8:13611:  if (length == 1)
        1:13612:    goto bail;
        7:13613:  *(out + 1)  = tmp >> 23;
        -:13614:  in += sizeof(uint32_t);
        7:13615:  tmp = *(uint32_t *)in;
        7:13616:  *(out + 1) |= (tmp % (1U << 14)) << (23 - 14);
        7:13617:  *(out + 1) += base;
        7:13618:  if (length == 2)
        1:13619:    goto bail;
        6:13620:  *(out + 2)  = tmp >> 14;
        -:13621:  in += sizeof(uint32_t);
        6:13622:  tmp = *(uint32_t *)in;
        6:13623:  *(out + 2) |= (tmp % (1U << 5)) << (23 - 5);
        6:13624:  *(out + 2) += base;
        6:13625:  if (length == 3)
        1:13626:    goto bail;
        5:13627:  *(out + 3)  = base + ((tmp >> 5) & 8388607);
        5:13628:  if (length == 4)
        1:13629:    goto bail;
        4:13630:  *(out + 4)  = tmp >> 28;
        -:13631:  in += sizeof(uint32_t);
        4:13632:  tmp = *(uint32_t *)in;
        4:13633:  *(out + 4) |= (tmp % (1U << 19)) << (23 - 19);
        4:13634:  *(out + 4) += base;
        4:13635:  if (length == 5)
        1:13636:    goto bail;
        3:13637:  *(out + 5)  = tmp >> 19;
        -:13638:  in += sizeof(uint32_t);
        3:13639:  tmp = *(uint32_t *)in;
        3:13640:  *(out + 5) |= (tmp % (1U << 10)) << (23 - 10);
        3:13641:  *(out + 5) += base;
        3:13642:  if (length == 6)
        1:13643:    goto bail;
        2:13644:  *(out + 6)  = tmp >> 10;
        -:13645:  in += sizeof(uint32_t);
        2:13646:  tmp = *(uint32_t *)in;
        2:13647:  *(out + 6) |= (tmp % (1U << 1)) << (23 - 1);
        2:13648:  *(out + 6) += base;
        2:13649:  if (length == 7)
        2:13650:    goto bail;
    #####:13651:  *(out + 7)  = base + ((tmp >> 1) & 8388607);
        -:13652:  if (length == 8)
        -:13653:    goto bail;
    #####:13654:bail:
        8:13655:  return ((length * 23) + 7) / 8;
        -:13656:}
        -:13657:
        -:13658:static uint32_t
       10:13659:pack24_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13660:  uint32_t tmp, remaining;
       10:13661:  if (length == 0)
        -:13662:    return 0;
        7:13663:  tmp  = (*(in + 0) - base) << 0;
        7:13664:  if (length == 1)
        1:13665:    goto bail;
        6:13666:  tmp |= (*(in + 1) - base) << 24;
        6:13667:  *(uint32_t *)out = tmp;
        6:13668:  out += sizeof(uint32_t);
        6:13669:  tmp  = (*(in + 1) - base) >> (24 - 16);
        6:13670:  if (length == 2)
        1:13671:    goto bail;
        5:13672:  tmp |= (*(in + 2) - base) << 16;
        5:13673:  *(uint32_t *)out = tmp;
        5:13674:  out += sizeof(uint32_t);
        5:13675:  tmp  = (*(in + 2) - base) >> (24 - 8);
        5:13676:  if (length == 3)
        1:13677:    goto bail;
        4:13678:  tmp |= (*(in + 3) - base) << 8;
        4:13679:  if (length == 4)
        1:13680:    goto bail;
        3:13681:  *(uint32_t *)out = tmp;
        3:13682:  out += sizeof(uint32_t);
        3:13683:  tmp  = (*(in + 4) - base) << 0;
        3:13684:  if (length == 5)
        1:13685:    goto bail;
        2:13686:  tmp |= (*(in + 5) - base) << 24;
        2:13687:  *(uint32_t *)out = tmp;
        2:13688:  out += sizeof(uint32_t);
        2:13689:  tmp  = (*(in + 5) - base) >> (24 - 16);
        2:13690:  if (length == 6)
        1:13691:    goto bail;
        1:13692:  tmp |= (*(in + 6) - base) << 16;
        1:13693:  *(uint32_t *)out = tmp;
        1:13694:  out += sizeof(uint32_t);
        1:13695:  tmp  = (*(in + 6) - base) >> (24 - 8);
        1:13696:  if (length == 7)
        1:13697:    goto bail;
    #####:13698:  tmp |= (*(in + 7) - base) << 8;
    #####:13699:  if (length == 8)
    #####:13700:    goto bail;
    #####:13701:bail:
        7:13702:  remaining = (((length * 24) + 7) / 8) % 4;
        7:13703:  if (remaining == 0) remaining = 4;
        7:13704:  memcpy(out, &tmp, remaining);
        7:13705:  return ((length * 24) + 7) / 8;
        -:13706:}
        -:13707:
        -:13708:static uint32_t
        9:13709:unpack24_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13710:  uint32_t tmp;
        9:13711:  if (length == 0)
        -:13712:    return 0;
        7:13713:  tmp = *(uint32_t *)in;
        7:13714:  *(out + 0)  = base + ((tmp >> 0) & 16777215);
        7:13715:  if (length == 1)
        1:13716:    goto bail;
        6:13717:  *(out + 1)  = tmp >> 24;
        -:13718:  in += sizeof(uint32_t);
        6:13719:  tmp = *(uint32_t *)in;
        6:13720:  *(out + 1) |= (tmp % (1U << 16)) << (24 - 16);
        6:13721:  *(out + 1) += base;
        6:13722:  if (length == 2)
        1:13723:    goto bail;
        5:13724:  *(out + 2)  = tmp >> 16;
        -:13725:  in += sizeof(uint32_t);
        5:13726:  tmp = *(uint32_t *)in;
        5:13727:  *(out + 2) |= (tmp % (1U << 8)) << (24 - 8);
        5:13728:  *(out + 2) += base;
        5:13729:  if (length == 3)
        1:13730:    goto bail;
        4:13731:  *(out + 3)  = base + ((tmp >> 8) & 16777215);
        4:13732:  if (length == 4)
        1:13733:    goto bail;
        -:13734:  in += sizeof(uint32_t);
        3:13735:  tmp = *(uint32_t *)in;
        3:13736:  *(out + 4)  = base + ((tmp >> 0) & 16777215);
        3:13737:  if (length == 5)
        1:13738:    goto bail;
        2:13739:  *(out + 5)  = tmp >> 24;
        -:13740:  in += sizeof(uint32_t);
        2:13741:  tmp = *(uint32_t *)in;
        2:13742:  *(out + 5) |= (tmp % (1U << 16)) << (24 - 16);
        2:13743:  *(out + 5) += base;
        2:13744:  if (length == 6)
        1:13745:    goto bail;
        1:13746:  *(out + 6)  = tmp >> 16;
        -:13747:  in += sizeof(uint32_t);
        1:13748:  tmp = *(uint32_t *)in;
        1:13749:  *(out + 6) |= (tmp % (1U << 8)) << (24 - 8);
        1:13750:  *(out + 6) += base;
        1:13751:  if (length == 7)
        1:13752:    goto bail;
    #####:13753:  *(out + 7)  = base + ((tmp >> 8) & 16777215);
        -:13754:  if (length == 8)
        -:13755:    goto bail;
    #####:13756:bail:
        7:13757:  return ((length * 24) + 7) / 8;
        -:13758:}
        -:13759:
        -:13760:static uint32_t
       10:13761:pack25_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13762:  uint32_t tmp, remaining;
       10:13763:  if (length == 0)
        -:13764:    return 0;
        9:13765:  tmp  = (*(in + 0) - base) << 0;
        9:13766:  if (length == 1)
        3:13767:    goto bail;
        6:13768:  tmp |= (*(in + 1) - base) << 25;
        6:13769:  *(uint32_t *)out = tmp;
        6:13770:  out += sizeof(uint32_t);
        6:13771:  tmp  = (*(in + 1) - base) >> (25 - 18);
        6:13772:  if (length == 2)
        1:13773:    goto bail;
        5:13774:  tmp |= (*(in + 2) - base) << 18;
        5:13775:  *(uint32_t *)out = tmp;
        5:13776:  out += sizeof(uint32_t);
        5:13777:  tmp  = (*(in + 2) - base) >> (25 - 11);
        5:13778:  if (length == 3)
        1:13779:    goto bail;
        4:13780:  tmp |= (*(in + 3) - base) << 11;
        4:13781:  *(uint32_t *)out = tmp;
        4:13782:  out += sizeof(uint32_t);
        4:13783:  tmp  = (*(in + 3) - base) >> (25 - 4);
        4:13784:  if (length == 4)
        1:13785:    goto bail;
        3:13786:  tmp |= (*(in + 4) - base) << 4;
        3:13787:  if (length == 5)
        1:13788:    goto bail;
        2:13789:  tmp |= (*(in + 5) - base) << 29;
        2:13790:  *(uint32_t *)out = tmp;
        2:13791:  out += sizeof(uint32_t);
        2:13792:  tmp  = (*(in + 5) - base) >> (25 - 22);
        2:13793:  if (length == 6)
        1:13794:    goto bail;
        1:13795:  tmp |= (*(in + 6) - base) << 22;
        1:13796:  *(uint32_t *)out = tmp;
        1:13797:  out += sizeof(uint32_t);
        1:13798:  tmp  = (*(in + 6) - base) >> (25 - 15);
        1:13799:  if (length == 7)
        1:13800:    goto bail;
    #####:13801:  tmp |= (*(in + 7) - base) << 15;
    #####:13802:  *(uint32_t *)out = tmp;
    #####:13803:  out += sizeof(uint32_t);
    #####:13804:  tmp  = (*(in + 7) - base) >> (25 - 8);
    #####:13805:  if (length == 8)
    #####:13806:    goto bail;
    #####:13807:bail:
        9:13808:  remaining = (((length * 25) + 7) / 8) % 4;
        9:13809:  if (remaining == 0) remaining = 4;
        9:13810:  memcpy(out, &tmp, remaining);
        9:13811:  return ((length * 25) + 7) / 8;
        -:13812:}
        -:13813:
        -:13814:static uint32_t
        9:13815:unpack25_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13816:  uint32_t tmp;
        9:13817:  if (length == 0)
        -:13818:    return 0;
        8:13819:  tmp = *(uint32_t *)in;
        8:13820:  *(out + 0)  = base + ((tmp >> 0) & 33554431);
        8:13821:  if (length == 1)
        2:13822:    goto bail;
        6:13823:  *(out + 1)  = tmp >> 25;
        -:13824:  in += sizeof(uint32_t);
        6:13825:  tmp = *(uint32_t *)in;
        6:13826:  *(out + 1) |= (tmp % (1U << 18)) << (25 - 18);
        6:13827:  *(out + 1) += base;
        6:13828:  if (length == 2)
        1:13829:    goto bail;
        5:13830:  *(out + 2)  = tmp >> 18;
        -:13831:  in += sizeof(uint32_t);
        5:13832:  tmp = *(uint32_t *)in;
        5:13833:  *(out + 2) |= (tmp % (1U << 11)) << (25 - 11);
        5:13834:  *(out + 2) += base;
        5:13835:  if (length == 3)
        1:13836:    goto bail;
        4:13837:  *(out + 3)  = tmp >> 11;
        -:13838:  in += sizeof(uint32_t);
        4:13839:  tmp = *(uint32_t *)in;
        4:13840:  *(out + 3) |= (tmp % (1U << 4)) << (25 - 4);
        4:13841:  *(out + 3) += base;
        4:13842:  if (length == 4)
        1:13843:    goto bail;
        3:13844:  *(out + 4)  = base + ((tmp >> 4) & 33554431);
        3:13845:  if (length == 5)
        1:13846:    goto bail;
        2:13847:  *(out + 5)  = tmp >> 29;
        -:13848:  in += sizeof(uint32_t);
        2:13849:  tmp = *(uint32_t *)in;
        2:13850:  *(out + 5) |= (tmp % (1U << 22)) << (25 - 22);
        2:13851:  *(out + 5) += base;
        2:13852:  if (length == 6)
        1:13853:    goto bail;
        1:13854:  *(out + 6)  = tmp >> 22;
        -:13855:  in += sizeof(uint32_t);
        1:13856:  tmp = *(uint32_t *)in;
        1:13857:  *(out + 6) |= (tmp % (1U << 15)) << (25 - 15);
        1:13858:  *(out + 6) += base;
        1:13859:  if (length == 7)
        1:13860:    goto bail;
    #####:13861:  *(out + 7)  = tmp >> 15;
        -:13862:  in += sizeof(uint32_t);
    #####:13863:  tmp = *(uint32_t *)in;
    #####:13864:  *(out + 7) |= (tmp % (1U << 8)) << (25 - 8);
    #####:13865:  *(out + 7) += base;
        -:13866:  if (length == 8)
        -:13867:    goto bail;
    #####:13868:bail:
        8:13869:  return ((length * 25) + 7) / 8;
        -:13870:}
        -:13871:
        -:13872:static uint32_t
       10:13873:pack26_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13874:  uint32_t tmp, remaining;
       10:13875:  if (length == 0)
        -:13876:    return 0;
        9:13877:  tmp  = (*(in + 0) - base) << 0;
        9:13878:  if (length == 1)
        1:13879:    goto bail;
        8:13880:  tmp |= (*(in + 1) - base) << 26;
        8:13881:  *(uint32_t *)out = tmp;
        8:13882:  out += sizeof(uint32_t);
        8:13883:  tmp  = (*(in + 1) - base) >> (26 - 20);
        8:13884:  if (length == 2)
        3:13885:    goto bail;
        5:13886:  tmp |= (*(in + 2) - base) << 20;
        5:13887:  *(uint32_t *)out = tmp;
        5:13888:  out += sizeof(uint32_t);
        5:13889:  tmp  = (*(in + 2) - base) >> (26 - 14);
        5:13890:  if (length == 3)
        1:13891:    goto bail;
        4:13892:  tmp |= (*(in + 3) - base) << 14;
        4:13893:  *(uint32_t *)out = tmp;
        4:13894:  out += sizeof(uint32_t);
        4:13895:  tmp  = (*(in + 3) - base) >> (26 - 8);
        4:13896:  if (length == 4)
        1:13897:    goto bail;
        3:13898:  tmp |= (*(in + 4) - base) << 8;
        3:13899:  *(uint32_t *)out = tmp;
        3:13900:  out += sizeof(uint32_t);
        3:13901:  tmp  = (*(in + 4) - base) >> (26 - 2);
        3:13902:  if (length == 5)
        1:13903:    goto bail;
        2:13904:  tmp |= (*(in + 5) - base) << 2;
        2:13905:  if (length == 6)
        1:13906:    goto bail;
        1:13907:  tmp |= (*(in + 6) - base) << 28;
        1:13908:  *(uint32_t *)out = tmp;
        1:13909:  out += sizeof(uint32_t);
        1:13910:  tmp  = (*(in + 6) - base) >> (26 - 22);
        1:13911:  if (length == 7)
        1:13912:    goto bail;
    #####:13913:  tmp |= (*(in + 7) - base) << 22;
    #####:13914:  *(uint32_t *)out = tmp;
    #####:13915:  out += sizeof(uint32_t);
    #####:13916:  tmp  = (*(in + 7) - base) >> (26 - 16);
    #####:13917:  if (length == 8)
    #####:13918:    goto bail;
    #####:13919:bail:
        9:13920:  remaining = (((length * 26) + 7) / 8) % 4;
        9:13921:  if (remaining == 0) remaining = 4;
        9:13922:  memcpy(out, &tmp, remaining);
        9:13923:  return ((length * 26) + 7) / 8;
        -:13924:}
        -:13925:
        -:13926:static uint32_t
        8:13927:unpack26_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:13928:  uint32_t tmp;
        8:13929:  if (length == 0)
        -:13930:    return 0;
        7:13931:  tmp = *(uint32_t *)in;
        7:13932:  *(out + 0)  = base + ((tmp >> 0) & 67108863);
        7:13933:  if (length == 1)
        1:13934:    goto bail;
        6:13935:  *(out + 1)  = tmp >> 26;
        -:13936:  in += sizeof(uint32_t);
        6:13937:  tmp = *(uint32_t *)in;
        6:13938:  *(out + 1) |= (tmp % (1U << 20)) << (26 - 20);
        6:13939:  *(out + 1) += base;
        6:13940:  if (length == 2)
        1:13941:    goto bail;
        5:13942:  *(out + 2)  = tmp >> 20;
        -:13943:  in += sizeof(uint32_t);
        5:13944:  tmp = *(uint32_t *)in;
        5:13945:  *(out + 2) |= (tmp % (1U << 14)) << (26 - 14);
        5:13946:  *(out + 2) += base;
        5:13947:  if (length == 3)
        1:13948:    goto bail;
        4:13949:  *(out + 3)  = tmp >> 14;
        -:13950:  in += sizeof(uint32_t);
        4:13951:  tmp = *(uint32_t *)in;
        4:13952:  *(out + 3) |= (tmp % (1U << 8)) << (26 - 8);
        4:13953:  *(out + 3) += base;
        4:13954:  if (length == 4)
        1:13955:    goto bail;
        3:13956:  *(out + 4)  = tmp >> 8;
        -:13957:  in += sizeof(uint32_t);
        3:13958:  tmp = *(uint32_t *)in;
        3:13959:  *(out + 4) |= (tmp % (1U << 2)) << (26 - 2);
        3:13960:  *(out + 4) += base;
        3:13961:  if (length == 5)
        1:13962:    goto bail;
        2:13963:  *(out + 5)  = base + ((tmp >> 2) & 67108863);
        2:13964:  if (length == 6)
        1:13965:    goto bail;
        1:13966:  *(out + 6)  = tmp >> 28;
        -:13967:  in += sizeof(uint32_t);
        1:13968:  tmp = *(uint32_t *)in;
        1:13969:  *(out + 6) |= (tmp % (1U << 22)) << (26 - 22);
        1:13970:  *(out + 6) += base;
        1:13971:  if (length == 7)
        1:13972:    goto bail;
    #####:13973:  *(out + 7)  = tmp >> 22;
        -:13974:  in += sizeof(uint32_t);
    #####:13975:  tmp = *(uint32_t *)in;
    #####:13976:  *(out + 7) |= (tmp % (1U << 16)) << (26 - 16);
    #####:13977:  *(out + 7) += base;
        -:13978:  if (length == 8)
        -:13979:    goto bail;
    #####:13980:bail:
        7:13981:  return ((length * 26) + 7) / 8;
        -:13982:}
        -:13983:
        -:13984:static uint32_t
        8:13985:pack27_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:13986:  uint32_t tmp, remaining;
        8:13987:  if (length == 0)
        -:13988:    return 0;
        7:13989:  tmp  = (*(in + 0) - base) << 0;
        7:13990:  if (length == 1)
        1:13991:    goto bail;
        6:13992:  tmp |= (*(in + 1) - base) << 27;
        6:13993:  *(uint32_t *)out = tmp;
        6:13994:  out += sizeof(uint32_t);
        6:13995:  tmp  = (*(in + 1) - base) >> (27 - 22);
        6:13996:  if (length == 2)
        1:13997:    goto bail;
        5:13998:  tmp |= (*(in + 2) - base) << 22;
        5:13999:  *(uint32_t *)out = tmp;
        5:14000:  out += sizeof(uint32_t);
        5:14001:  tmp  = (*(in + 2) - base) >> (27 - 17);
        5:14002:  if (length == 3)
        1:14003:    goto bail;
        4:14004:  tmp |= (*(in + 3) - base) << 17;
        4:14005:  *(uint32_t *)out = tmp;
        4:14006:  out += sizeof(uint32_t);
        4:14007:  tmp  = (*(in + 3) - base) >> (27 - 12);
        4:14008:  if (length == 4)
        1:14009:    goto bail;
        3:14010:  tmp |= (*(in + 4) - base) << 12;
        3:14011:  *(uint32_t *)out = tmp;
        3:14012:  out += sizeof(uint32_t);
        3:14013:  tmp  = (*(in + 4) - base) >> (27 - 7);
        3:14014:  if (length == 5)
        1:14015:    goto bail;
        2:14016:  tmp |= (*(in + 5) - base) << 7;
        2:14017:  *(uint32_t *)out = tmp;
        2:14018:  out += sizeof(uint32_t);
        2:14019:  tmp  = (*(in + 5) - base) >> (27 - 2);
        2:14020:  if (length == 6)
        1:14021:    goto bail;
        1:14022:  tmp |= (*(in + 6) - base) << 2;
        1:14023:  if (length == 7)
        1:14024:    goto bail;
    #####:14025:  tmp |= (*(in + 7) - base) << 29;
    #####:14026:  *(uint32_t *)out = tmp;
    #####:14027:  out += sizeof(uint32_t);
    #####:14028:  tmp  = (*(in + 7) - base) >> (27 - 24);
    #####:14029:  if (length == 8)
    #####:14030:    goto bail;
    #####:14031:bail:
        7:14032:  remaining = (((length * 27) + 7) / 8) % 4;
        7:14033:  if (remaining == 0) remaining = 4;
        7:14034:  memcpy(out, &tmp, remaining);
        7:14035:  return ((length * 27) + 7) / 8;
        -:14036:}
        -:14037:
        -:14038:static uint32_t
        8:14039:unpack27_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:14040:  uint32_t tmp;
        8:14041:  if (length == 0)
        -:14042:    return 0;
        7:14043:  tmp = *(uint32_t *)in;
        7:14044:  *(out + 0)  = base + ((tmp >> 0) & 134217727);
        7:14045:  if (length == 1)
        1:14046:    goto bail;
        6:14047:  *(out + 1)  = tmp >> 27;
        -:14048:  in += sizeof(uint32_t);
        6:14049:  tmp = *(uint32_t *)in;
        6:14050:  *(out + 1) |= (tmp % (1U << 22)) << (27 - 22);
        6:14051:  *(out + 1) += base;
        6:14052:  if (length == 2)
        1:14053:    goto bail;
        5:14054:  *(out + 2)  = tmp >> 22;
        -:14055:  in += sizeof(uint32_t);
        5:14056:  tmp = *(uint32_t *)in;
        5:14057:  *(out + 2) |= (tmp % (1U << 17)) << (27 - 17);
        5:14058:  *(out + 2) += base;
        5:14059:  if (length == 3)
        1:14060:    goto bail;
        4:14061:  *(out + 3)  = tmp >> 17;
        -:14062:  in += sizeof(uint32_t);
        4:14063:  tmp = *(uint32_t *)in;
        4:14064:  *(out + 3) |= (tmp % (1U << 12)) << (27 - 12);
        4:14065:  *(out + 3) += base;
        4:14066:  if (length == 4)
        1:14067:    goto bail;
        3:14068:  *(out + 4)  = tmp >> 12;
        -:14069:  in += sizeof(uint32_t);
        3:14070:  tmp = *(uint32_t *)in;
        3:14071:  *(out + 4) |= (tmp % (1U << 7)) << (27 - 7);
        3:14072:  *(out + 4) += base;
        3:14073:  if (length == 5)
        1:14074:    goto bail;
        2:14075:  *(out + 5)  = tmp >> 7;
        -:14076:  in += sizeof(uint32_t);
        2:14077:  tmp = *(uint32_t *)in;
        2:14078:  *(out + 5) |= (tmp % (1U << 2)) << (27 - 2);
        2:14079:  *(out + 5) += base;
        2:14080:  if (length == 6)
        1:14081:    goto bail;
        1:14082:  *(out + 6)  = base + ((tmp >> 2) & 134217727);
        1:14083:  if (length == 7)
        1:14084:    goto bail;
    #####:14085:  *(out + 7)  = tmp >> 29;
        -:14086:  in += sizeof(uint32_t);
    #####:14087:  tmp = *(uint32_t *)in;
    #####:14088:  *(out + 7) |= (tmp % (1U << 24)) << (27 - 24);
    #####:14089:  *(out + 7) += base;
        -:14090:  if (length == 8)
        -:14091:    goto bail;
    #####:14092:bail:
        7:14093:  return ((length * 27) + 7) / 8;
        -:14094:}
        -:14095:
        -:14096:static uint32_t
        8:14097:pack28_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:14098:  uint32_t tmp, remaining;
        8:14099:  if (length == 0)
        -:14100:    return 0;
        7:14101:  tmp  = (*(in + 0) - base) << 0;
        7:14102:  if (length == 1)
        1:14103:    goto bail;
        6:14104:  tmp |= (*(in + 1) - base) << 28;
        6:14105:  *(uint32_t *)out = tmp;
        6:14106:  out += sizeof(uint32_t);
        6:14107:  tmp  = (*(in + 1) - base) >> (28 - 24);
        6:14108:  if (length == 2)
        1:14109:    goto bail;
        5:14110:  tmp |= (*(in + 2) - base) << 24;
        5:14111:  *(uint32_t *)out = tmp;
        5:14112:  out += sizeof(uint32_t);
        5:14113:  tmp  = (*(in + 2) - base) >> (28 - 20);
        5:14114:  if (length == 3)
        1:14115:    goto bail;
        4:14116:  tmp |= (*(in + 3) - base) << 20;
        4:14117:  *(uint32_t *)out = tmp;
        4:14118:  out += sizeof(uint32_t);
        4:14119:  tmp  = (*(in + 3) - base) >> (28 - 16);
        4:14120:  if (length == 4)
        1:14121:    goto bail;
        3:14122:  tmp |= (*(in + 4) - base) << 16;
        3:14123:  *(uint32_t *)out = tmp;
        3:14124:  out += sizeof(uint32_t);
        3:14125:  tmp  = (*(in + 4) - base) >> (28 - 12);
        3:14126:  if (length == 5)
        1:14127:    goto bail;
        2:14128:  tmp |= (*(in + 5) - base) << 12;
        2:14129:  *(uint32_t *)out = tmp;
        2:14130:  out += sizeof(uint32_t);
        2:14131:  tmp  = (*(in + 5) - base) >> (28 - 8);
        2:14132:  if (length == 6)
        1:14133:    goto bail;
        1:14134:  tmp |= (*(in + 6) - base) << 8;
        1:14135:  *(uint32_t *)out = tmp;
        1:14136:  out += sizeof(uint32_t);
        1:14137:  tmp  = (*(in + 6) - base) >> (28 - 4);
        1:14138:  if (length == 7)
        1:14139:    goto bail;
    #####:14140:  tmp |= (*(in + 7) - base) << 4;
    #####:14141:  if (length == 8)
    #####:14142:    goto bail;
    #####:14143:bail:
        7:14144:  remaining = (((length * 28) + 7) / 8) % 4;
        7:14145:  if (remaining == 0) remaining = 4;
        7:14146:  memcpy(out, &tmp, remaining);
        7:14147:  return ((length * 28) + 7) / 8;
        -:14148:}
        -:14149:
        -:14150:static uint32_t
        8:14151:unpack28_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:14152:  uint32_t tmp;
        8:14153:  if (length == 0)
        -:14154:    return 0;
        7:14155:  tmp = *(uint32_t *)in;
        7:14156:  *(out + 0)  = base + ((tmp >> 0) & 268435455);
        7:14157:  if (length == 1)
        1:14158:    goto bail;
        6:14159:  *(out + 1)  = tmp >> 28;
        -:14160:  in += sizeof(uint32_t);
        6:14161:  tmp = *(uint32_t *)in;
        6:14162:  *(out + 1) |= (tmp % (1U << 24)) << (28 - 24);
        6:14163:  *(out + 1) += base;
        6:14164:  if (length == 2)
        1:14165:    goto bail;
        5:14166:  *(out + 2)  = tmp >> 24;
        -:14167:  in += sizeof(uint32_t);
        5:14168:  tmp = *(uint32_t *)in;
        5:14169:  *(out + 2) |= (tmp % (1U << 20)) << (28 - 20);
        5:14170:  *(out + 2) += base;
        5:14171:  if (length == 3)
        1:14172:    goto bail;
        4:14173:  *(out + 3)  = tmp >> 20;
        -:14174:  in += sizeof(uint32_t);
        4:14175:  tmp = *(uint32_t *)in;
        4:14176:  *(out + 3) |= (tmp % (1U << 16)) << (28 - 16);
        4:14177:  *(out + 3) += base;
        4:14178:  if (length == 4)
        1:14179:    goto bail;
        3:14180:  *(out + 4)  = tmp >> 16;
        -:14181:  in += sizeof(uint32_t);
        3:14182:  tmp = *(uint32_t *)in;
        3:14183:  *(out + 4) |= (tmp % (1U << 12)) << (28 - 12);
        3:14184:  *(out + 4) += base;
        3:14185:  if (length == 5)
        1:14186:    goto bail;
        2:14187:  *(out + 5)  = tmp >> 12;
        -:14188:  in += sizeof(uint32_t);
        2:14189:  tmp = *(uint32_t *)in;
        2:14190:  *(out + 5) |= (tmp % (1U << 8)) << (28 - 8);
        2:14191:  *(out + 5) += base;
        2:14192:  if (length == 6)
        1:14193:    goto bail;
        1:14194:  *(out + 6)  = tmp >> 8;
        -:14195:  in += sizeof(uint32_t);
        1:14196:  tmp = *(uint32_t *)in;
        1:14197:  *(out + 6) |= (tmp % (1U << 4)) << (28 - 4);
        1:14198:  *(out + 6) += base;
        1:14199:  if (length == 7)
        1:14200:    goto bail;
    #####:14201:  *(out + 7)  = base + ((tmp >> 4) & 268435455);
        -:14202:  if (length == 8)
        -:14203:    goto bail;
    #####:14204:bail:
        7:14205:  return ((length * 28) + 7) / 8;
        -:14206:}
        -:14207:
        -:14208:static uint32_t
        8:14209:pack29_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:14210:  uint32_t tmp, remaining;
        8:14211:  if (length == 0)
        -:14212:    return 0;
        7:14213:  tmp  = (*(in + 0) - base) << 0;
        7:14214:  if (length == 1)
        1:14215:    goto bail;
        6:14216:  tmp |= (*(in + 1) - base) << 29;
        6:14217:  *(uint32_t *)out = tmp;
        6:14218:  out += sizeof(uint32_t);
        6:14219:  tmp  = (*(in + 1) - base) >> (29 - 26);
        6:14220:  if (length == 2)
        1:14221:    goto bail;
        5:14222:  tmp |= (*(in + 2) - base) << 26;
        5:14223:  *(uint32_t *)out = tmp;
        5:14224:  out += sizeof(uint32_t);
        5:14225:  tmp  = (*(in + 2) - base) >> (29 - 23);
        5:14226:  if (length == 3)
        1:14227:    goto bail;
        4:14228:  tmp |= (*(in + 3) - base) << 23;
        4:14229:  *(uint32_t *)out = tmp;
        4:14230:  out += sizeof(uint32_t);
        4:14231:  tmp  = (*(in + 3) - base) >> (29 - 20);
        4:14232:  if (length == 4)
        1:14233:    goto bail;
        3:14234:  tmp |= (*(in + 4) - base) << 20;
        3:14235:  *(uint32_t *)out = tmp;
        3:14236:  out += sizeof(uint32_t);
        3:14237:  tmp  = (*(in + 4) - base) >> (29 - 17);
        3:14238:  if (length == 5)
        1:14239:    goto bail;
        2:14240:  tmp |= (*(in + 5) - base) << 17;
        2:14241:  *(uint32_t *)out = tmp;
        2:14242:  out += sizeof(uint32_t);
        2:14243:  tmp  = (*(in + 5) - base) >> (29 - 14);
        2:14244:  if (length == 6)
        1:14245:    goto bail;
        1:14246:  tmp |= (*(in + 6) - base) << 14;
        1:14247:  *(uint32_t *)out = tmp;
        1:14248:  out += sizeof(uint32_t);
        1:14249:  tmp  = (*(in + 6) - base) >> (29 - 11);
        1:14250:  if (length == 7)
        1:14251:    goto bail;
    #####:14252:  tmp |= (*(in + 7) - base) << 11;
    #####:14253:  *(uint32_t *)out = tmp;
    #####:14254:  out += sizeof(uint32_t);
    #####:14255:  tmp  = (*(in + 7) - base) >> (29 - 8);
    #####:14256:  if (length == 8)
    #####:14257:    goto bail;
    #####:14258:bail:
        7:14259:  remaining = (((length * 29) + 7) / 8) % 4;
        7:14260:  if (remaining == 0) remaining = 4;
        7:14261:  memcpy(out, &tmp, remaining);
        7:14262:  return ((length * 29) + 7) / 8;
        -:14263:}
        -:14264:
        -:14265:static uint32_t
        8:14266:unpack29_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:14267:  uint32_t tmp;
        8:14268:  if (length == 0)
        -:14269:    return 0;
        7:14270:  tmp = *(uint32_t *)in;
        7:14271:  *(out + 0)  = base + ((tmp >> 0) & 536870911);
        7:14272:  if (length == 1)
        1:14273:    goto bail;
        6:14274:  *(out + 1)  = tmp >> 29;
        -:14275:  in += sizeof(uint32_t);
        6:14276:  tmp = *(uint32_t *)in;
        6:14277:  *(out + 1) |= (tmp % (1U << 26)) << (29 - 26);
        6:14278:  *(out + 1) += base;
        6:14279:  if (length == 2)
        1:14280:    goto bail;
        5:14281:  *(out + 2)  = tmp >> 26;
        -:14282:  in += sizeof(uint32_t);
        5:14283:  tmp = *(uint32_t *)in;
        5:14284:  *(out + 2) |= (tmp % (1U << 23)) << (29 - 23);
        5:14285:  *(out + 2) += base;
        5:14286:  if (length == 3)
        1:14287:    goto bail;
        4:14288:  *(out + 3)  = tmp >> 23;
        -:14289:  in += sizeof(uint32_t);
        4:14290:  tmp = *(uint32_t *)in;
        4:14291:  *(out + 3) |= (tmp % (1U << 20)) << (29 - 20);
        4:14292:  *(out + 3) += base;
        4:14293:  if (length == 4)
        1:14294:    goto bail;
        3:14295:  *(out + 4)  = tmp >> 20;
        -:14296:  in += sizeof(uint32_t);
        3:14297:  tmp = *(uint32_t *)in;
        3:14298:  *(out + 4) |= (tmp % (1U << 17)) << (29 - 17);
        3:14299:  *(out + 4) += base;
        3:14300:  if (length == 5)
        1:14301:    goto bail;
        2:14302:  *(out + 5)  = tmp >> 17;
        -:14303:  in += sizeof(uint32_t);
        2:14304:  tmp = *(uint32_t *)in;
        2:14305:  *(out + 5) |= (tmp % (1U << 14)) << (29 - 14);
        2:14306:  *(out + 5) += base;
        2:14307:  if (length == 6)
        1:14308:    goto bail;
        1:14309:  *(out + 6)  = tmp >> 14;
        -:14310:  in += sizeof(uint32_t);
        1:14311:  tmp = *(uint32_t *)in;
        1:14312:  *(out + 6) |= (tmp % (1U << 11)) << (29 - 11);
        1:14313:  *(out + 6) += base;
        1:14314:  if (length == 7)
        1:14315:    goto bail;
    #####:14316:  *(out + 7)  = tmp >> 11;
        -:14317:  in += sizeof(uint32_t);
    #####:14318:  tmp = *(uint32_t *)in;
    #####:14319:  *(out + 7) |= (tmp % (1U << 8)) << (29 - 8);
    #####:14320:  *(out + 7) += base;
        -:14321:  if (length == 8)
        -:14322:    goto bail;
    #####:14323:bail:
        7:14324:  return ((length * 29) + 7) / 8;
        -:14325:}
        -:14326:
        -:14327:static uint32_t
        8:14328:pack30_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:14329:  uint32_t tmp, remaining;
        8:14330:  if (length == 0)
        -:14331:    return 0;
        7:14332:  tmp  = (*(in + 0) - base) << 0;
        7:14333:  if (length == 1)
        1:14334:    goto bail;
        6:14335:  tmp |= (*(in + 1) - base) << 30;
        6:14336:  *(uint32_t *)out = tmp;
        6:14337:  out += sizeof(uint32_t);
        6:14338:  tmp  = (*(in + 1) - base) >> (30 - 28);
        6:14339:  if (length == 2)
        1:14340:    goto bail;
        5:14341:  tmp |= (*(in + 2) - base) << 28;
        5:14342:  *(uint32_t *)out = tmp;
        5:14343:  out += sizeof(uint32_t);
        5:14344:  tmp  = (*(in + 2) - base) >> (30 - 26);
        5:14345:  if (length == 3)
        1:14346:    goto bail;
        4:14347:  tmp |= (*(in + 3) - base) << 26;
        4:14348:  *(uint32_t *)out = tmp;
        4:14349:  out += sizeof(uint32_t);
        4:14350:  tmp  = (*(in + 3) - base) >> (30 - 24);
        4:14351:  if (length == 4)
        1:14352:    goto bail;
        3:14353:  tmp |= (*(in + 4) - base) << 24;
        3:14354:  *(uint32_t *)out = tmp;
        3:14355:  out += sizeof(uint32_t);
        3:14356:  tmp  = (*(in + 4) - base) >> (30 - 22);
        3:14357:  if (length == 5)
        1:14358:    goto bail;
        2:14359:  tmp |= (*(in + 5) - base) << 22;
        2:14360:  *(uint32_t *)out = tmp;
        2:14361:  out += sizeof(uint32_t);
        2:14362:  tmp  = (*(in + 5) - base) >> (30 - 20);
        2:14363:  if (length == 6)
        1:14364:    goto bail;
        1:14365:  tmp |= (*(in + 6) - base) << 20;
        1:14366:  *(uint32_t *)out = tmp;
        1:14367:  out += sizeof(uint32_t);
        1:14368:  tmp  = (*(in + 6) - base) >> (30 - 18);
        1:14369:  if (length == 7)
        1:14370:    goto bail;
    #####:14371:  tmp |= (*(in + 7) - base) << 18;
    #####:14372:  *(uint32_t *)out = tmp;
    #####:14373:  out += sizeof(uint32_t);
    #####:14374:  tmp  = (*(in + 7) - base) >> (30 - 16);
    #####:14375:  if (length == 8)
    #####:14376:    goto bail;
    #####:14377:bail:
        7:14378:  remaining = (((length * 30) + 7) / 8) % 4;
        7:14379:  if (remaining == 0) remaining = 4;
        7:14380:  memcpy(out, &tmp, remaining);
        7:14381:  return ((length * 30) + 7) / 8;
        -:14382:}
        -:14383:
        -:14384:static uint32_t
        8:14385:unpack30_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:14386:  uint32_t tmp;
        8:14387:  if (length == 0)
        -:14388:    return 0;
        7:14389:  tmp = *(uint32_t *)in;
        7:14390:  *(out + 0)  = base + ((tmp >> 0) & 1073741823);
        7:14391:  if (length == 1)
        1:14392:    goto bail;
        6:14393:  *(out + 1)  = tmp >> 30;
        -:14394:  in += sizeof(uint32_t);
        6:14395:  tmp = *(uint32_t *)in;
        6:14396:  *(out + 1) |= (tmp % (1U << 28)) << (30 - 28);
        6:14397:  *(out + 1) += base;
        6:14398:  if (length == 2)
        1:14399:    goto bail;
        5:14400:  *(out + 2)  = tmp >> 28;
        -:14401:  in += sizeof(uint32_t);
        5:14402:  tmp = *(uint32_t *)in;
        5:14403:  *(out + 2) |= (tmp % (1U << 26)) << (30 - 26);
        5:14404:  *(out + 2) += base;
        5:14405:  if (length == 3)
        1:14406:    goto bail;
        4:14407:  *(out + 3)  = tmp >> 26;
        -:14408:  in += sizeof(uint32_t);
        4:14409:  tmp = *(uint32_t *)in;
        4:14410:  *(out + 3) |= (tmp % (1U << 24)) << (30 - 24);
        4:14411:  *(out + 3) += base;
        4:14412:  if (length == 4)
        1:14413:    goto bail;
        3:14414:  *(out + 4)  = tmp >> 24;
        -:14415:  in += sizeof(uint32_t);
        3:14416:  tmp = *(uint32_t *)in;
        3:14417:  *(out + 4) |= (tmp % (1U << 22)) << (30 - 22);
        3:14418:  *(out + 4) += base;
        3:14419:  if (length == 5)
        1:14420:    goto bail;
        2:14421:  *(out + 5)  = tmp >> 22;
        -:14422:  in += sizeof(uint32_t);
        2:14423:  tmp = *(uint32_t *)in;
        2:14424:  *(out + 5) |= (tmp % (1U << 20)) << (30 - 20);
        2:14425:  *(out + 5) += base;
        2:14426:  if (length == 6)
        1:14427:    goto bail;
        1:14428:  *(out + 6)  = tmp >> 20;
        -:14429:  in += sizeof(uint32_t);
        1:14430:  tmp = *(uint32_t *)in;
        1:14431:  *(out + 6) |= (tmp % (1U << 18)) << (30 - 18);
        1:14432:  *(out + 6) += base;
        1:14433:  if (length == 7)
        1:14434:    goto bail;
    #####:14435:  *(out + 7)  = tmp >> 18;
        -:14436:  in += sizeof(uint32_t);
    #####:14437:  tmp = *(uint32_t *)in;
    #####:14438:  *(out + 7) |= (tmp % (1U << 16)) << (30 - 16);
    #####:14439:  *(out + 7) += base;
        -:14440:  if (length == 8)
        -:14441:    goto bail;
    #####:14442:bail:
        7:14443:  return ((length * 30) + 7) / 8;
        -:14444:}
        -:14445:
        -:14446:static uint32_t
        8:14447:pack31_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:14448:  uint32_t tmp, remaining;
        8:14449:  if (length == 0)
        -:14450:    return 0;
        7:14451:  tmp  = (*(in + 0) - base) << 0;
        7:14452:  if (length == 1)
        1:14453:    goto bail;
        6:14454:  tmp |= (*(in + 1) - base) << 31;
        6:14455:  *(uint32_t *)out = tmp;
        6:14456:  out += sizeof(uint32_t);
        6:14457:  tmp  = (*(in + 1) - base) >> (31 - 30);
        6:14458:  if (length == 2)
        1:14459:    goto bail;
        5:14460:  tmp |= (*(in + 2) - base) << 30;
        5:14461:  *(uint32_t *)out = tmp;
        5:14462:  out += sizeof(uint32_t);
        5:14463:  tmp  = (*(in + 2) - base) >> (31 - 29);
        5:14464:  if (length == 3)
        1:14465:    goto bail;
        4:14466:  tmp |= (*(in + 3) - base) << 29;
        4:14467:  *(uint32_t *)out = tmp;
        4:14468:  out += sizeof(uint32_t);
        4:14469:  tmp  = (*(in + 3) - base) >> (31 - 28);
        4:14470:  if (length == 4)
        1:14471:    goto bail;
        3:14472:  tmp |= (*(in + 4) - base) << 28;
        3:14473:  *(uint32_t *)out = tmp;
        3:14474:  out += sizeof(uint32_t);
        3:14475:  tmp  = (*(in + 4) - base) >> (31 - 27);
        3:14476:  if (length == 5)
        1:14477:    goto bail;
        2:14478:  tmp |= (*(in + 5) - base) << 27;
        2:14479:  *(uint32_t *)out = tmp;
        2:14480:  out += sizeof(uint32_t);
        2:14481:  tmp  = (*(in + 5) - base) >> (31 - 26);
        2:14482:  if (length == 6)
        1:14483:    goto bail;
        1:14484:  tmp |= (*(in + 6) - base) << 26;
        1:14485:  *(uint32_t *)out = tmp;
        1:14486:  out += sizeof(uint32_t);
        1:14487:  tmp  = (*(in + 6) - base) >> (31 - 25);
        1:14488:  if (length == 7)
        1:14489:    goto bail;
    #####:14490:  tmp |= (*(in + 7) - base) << 25;
    #####:14491:  *(uint32_t *)out = tmp;
    #####:14492:  out += sizeof(uint32_t);
    #####:14493:  tmp  = (*(in + 7) - base) >> (31 - 24);
    #####:14494:  if (length == 8)
    #####:14495:    goto bail;
    #####:14496:bail:
        7:14497:  remaining = (((length * 31) + 7) / 8) % 4;
        7:14498:  if (remaining == 0) remaining = 4;
        7:14499:  memcpy(out, &tmp, remaining);
        7:14500:  return ((length * 31) + 7) / 8;
        -:14501:}
        -:14502:
        -:14503:static uint32_t
        8:14504:unpack31_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:14505:  uint32_t tmp;
        8:14506:  if (length == 0)
        -:14507:    return 0;
        7:14508:  tmp = *(uint32_t *)in;
        7:14509:  *(out + 0)  = base + ((tmp >> 0) & 2147483647);
        7:14510:  if (length == 1)
        1:14511:    goto bail;
        6:14512:  *(out + 1)  = tmp >> 31;
        -:14513:  in += sizeof(uint32_t);
        6:14514:  tmp = *(uint32_t *)in;
        6:14515:  *(out + 1) |= (tmp % (1U << 30)) << (31 - 30);
        6:14516:  *(out + 1) += base;
        6:14517:  if (length == 2)
        1:14518:    goto bail;
        5:14519:  *(out + 2)  = tmp >> 30;
        -:14520:  in += sizeof(uint32_t);
        5:14521:  tmp = *(uint32_t *)in;
        5:14522:  *(out + 2) |= (tmp % (1U << 29)) << (31 - 29);
        5:14523:  *(out + 2) += base;
        5:14524:  if (length == 3)
        1:14525:    goto bail;
        4:14526:  *(out + 3)  = tmp >> 29;
        -:14527:  in += sizeof(uint32_t);
        4:14528:  tmp = *(uint32_t *)in;
        4:14529:  *(out + 3) |= (tmp % (1U << 28)) << (31 - 28);
        4:14530:  *(out + 3) += base;
        4:14531:  if (length == 4)
        1:14532:    goto bail;
        3:14533:  *(out + 4)  = tmp >> 28;
        -:14534:  in += sizeof(uint32_t);
        3:14535:  tmp = *(uint32_t *)in;
        3:14536:  *(out + 4) |= (tmp % (1U << 27)) << (31 - 27);
        3:14537:  *(out + 4) += base;
        3:14538:  if (length == 5)
        1:14539:    goto bail;
        2:14540:  *(out + 5)  = tmp >> 27;
        -:14541:  in += sizeof(uint32_t);
        2:14542:  tmp = *(uint32_t *)in;
        2:14543:  *(out + 5) |= (tmp % (1U << 26)) << (31 - 26);
        2:14544:  *(out + 5) += base;
        2:14545:  if (length == 6)
        1:14546:    goto bail;
        1:14547:  *(out + 6)  = tmp >> 26;
        -:14548:  in += sizeof(uint32_t);
        1:14549:  tmp = *(uint32_t *)in;
        1:14550:  *(out + 6) |= (tmp % (1U << 25)) << (31 - 25);
        1:14551:  *(out + 6) += base;
        1:14552:  if (length == 7)
        1:14553:    goto bail;
    #####:14554:  *(out + 7)  = tmp >> 25;
        -:14555:  in += sizeof(uint32_t);
    #####:14556:  tmp = *(uint32_t *)in;
    #####:14557:  *(out + 7) |= (tmp % (1U << 24)) << (31 - 24);
    #####:14558:  *(out + 7) += base;
        -:14559:  if (length == 8)
        -:14560:    goto bail;
    #####:14561:bail:
        7:14562:  return ((length * 31) + 7) / 8;
        -:14563:}
        -:14564:
        -:14565:static uint32_t
    #####:14566:pack32_x(uint32_t base, const uint32_t *in, uint8_t *out, uint32_t length) {
        -:14567:  uint32_t tmp, remaining;
    #####:14568:  if (length == 0)
        -:14569:    return 0;
    #####:14570:  tmp  = (*(in + 0) - base) << 0;
    #####:14571:  if (length == 1)
    #####:14572:    goto bail;
    #####:14573:  *(uint32_t *)out = tmp;
    #####:14574:  out += sizeof(uint32_t);
    #####:14575:  tmp  = (*(in + 1) - base) << 0;
    #####:14576:  if (length == 2)
    #####:14577:    goto bail;
    #####:14578:  *(uint32_t *)out = tmp;
    #####:14579:  out += sizeof(uint32_t);
    #####:14580:  tmp  = (*(in + 2) - base) << 0;
    #####:14581:  if (length == 3)
    #####:14582:    goto bail;
    #####:14583:  *(uint32_t *)out = tmp;
    #####:14584:  out += sizeof(uint32_t);
    #####:14585:  tmp  = (*(in + 3) - base) << 0;
    #####:14586:  if (length == 4)
    #####:14587:    goto bail;
    #####:14588:  *(uint32_t *)out = tmp;
    #####:14589:  out += sizeof(uint32_t);
    #####:14590:  tmp  = (*(in + 4) - base) << 0;
    #####:14591:  if (length == 5)
    #####:14592:    goto bail;
    #####:14593:  *(uint32_t *)out = tmp;
    #####:14594:  out += sizeof(uint32_t);
    #####:14595:  tmp  = (*(in + 5) - base) << 0;
    #####:14596:  if (length == 6)
    #####:14597:    goto bail;
    #####:14598:  *(uint32_t *)out = tmp;
    #####:14599:  out += sizeof(uint32_t);
    #####:14600:  tmp  = (*(in + 6) - base) << 0;
    #####:14601:  if (length == 7)
    #####:14602:    goto bail;
    #####:14603:  *(uint32_t *)out = tmp;
    #####:14604:  out += sizeof(uint32_t);
    #####:14605:  tmp  = (*(in + 7) - base) << 0;
    #####:14606:  if (length == 8)
    #####:14607:    goto bail;
    #####:14608:bail:
    #####:14609:  remaining = (((length * 32) + 7) / 8) % 4;
    #####:14610:  if (remaining == 0) remaining = 4;
    #####:14611:  memcpy(out, &tmp, remaining);
    #####:14612:  return ((length * 32) + 7) / 8;
        -:14613:}
        -:14614:
        -:14615:static uint32_t
    #####:14616:unpack32_x(uint32_t base, const uint8_t *in, uint32_t *out, uint32_t length) {
        -:14617:  uint32_t tmp;
    #####:14618:  if (length == 0)
        -:14619:    return 0;
    #####:14620:  tmp = *(uint32_t *)in;
    #####:14621:  *(out + 0)  = base + ((tmp >> 0) & 4294967295);
    #####:14622:  if (length == 1)
    #####:14623:    goto bail;
        -:14624:  in += sizeof(uint32_t);
    #####:14625:  tmp = *(uint32_t *)in;
    #####:14626:  *(out + 1)  = base + ((tmp >> 0) & 4294967295);
    #####:14627:  if (length == 2)
    #####:14628:    goto bail;
        -:14629:  in += sizeof(uint32_t);
    #####:14630:  tmp = *(uint32_t *)in;
    #####:14631:  *(out + 2)  = base + ((tmp >> 0) & 4294967295);
    #####:14632:  if (length == 3)
    #####:14633:    goto bail;
        -:14634:  in += sizeof(uint32_t);
    #####:14635:  tmp = *(uint32_t *)in;
    #####:14636:  *(out + 3)  = base + ((tmp >> 0) & 4294967295);
    #####:14637:  if (length == 4)
    #####:14638:    goto bail;
        -:14639:  in += sizeof(uint32_t);
    #####:14640:  tmp = *(uint32_t *)in;
    #####:14641:  *(out + 4)  = base + ((tmp >> 0) & 4294967295);
    #####:14642:  if (length == 5)
    #####:14643:    goto bail;
        -:14644:  in += sizeof(uint32_t);
    #####:14645:  tmp = *(uint32_t *)in;
    #####:14646:  *(out + 5)  = base + ((tmp >> 0) & 4294967295);
    #####:14647:  if (length == 6)
    #####:14648:    goto bail;
        -:14649:  in += sizeof(uint32_t);
    #####:14650:  tmp = *(uint32_t *)in;
    #####:14651:  *(out + 6)  = base + ((tmp >> 0) & 4294967295);
    #####:14652:  if (length == 7)
    #####:14653:    goto bail;
        -:14654:  in += sizeof(uint32_t);
    #####:14655:  tmp = *(uint32_t *)in;
    #####:14656:  *(out + 7)  = base + ((tmp >> 0) & 4294967295);
        -:14657:  if (length == 8)
        -:14658:    goto bail;
    #####:14659:bail:
    #####:14660:  return ((length * 32) + 7) / 8;
        -:14661:}
        -:14662:
        -:14663:for_packxfunc_t for_packx[33] = {
        -:14664:                       pack0_x,
        -:14665:                       pack1_x,
        -:14666:                       pack2_x,
        -:14667:                       pack3_x,
        -:14668:                       pack4_x,
        -:14669:                       pack5_x,
        -:14670:                       pack6_x,
        -:14671:                       pack7_x,
        -:14672:                       pack8_x,
        -:14673:                       pack9_x,
        -:14674:                       pack10_x,
        -:14675:                       pack11_x,
        -:14676:                       pack12_x,
        -:14677:                       pack13_x,
        -:14678:                       pack14_x,
        -:14679:                       pack15_x,
        -:14680:                       pack16_x,
        -:14681:                       pack17_x,
        -:14682:                       pack18_x,
        -:14683:                       pack19_x,
        -:14684:                       pack20_x,
        -:14685:                       pack21_x,
        -:14686:                       pack22_x,
        -:14687:                       pack23_x,
        -:14688:                       pack24_x,
        -:14689:                       pack25_x,
        -:14690:                       pack26_x,
        -:14691:                       pack27_x,
        -:14692:                       pack28_x,
        -:14693:                       pack29_x,
        -:14694:                       pack30_x,
        -:14695:                       pack31_x,
        -:14696:                       pack32_x
        -:14697:};
        -:14698:
        -:14699:for_unpackxfunc_t for_unpackx[33] = {
        -:14700:                       unpack0_x,
        -:14701:                       unpack1_x,
        -:14702:                       unpack2_x,
        -:14703:                       unpack3_x,
        -:14704:                       unpack4_x,
        -:14705:                       unpack5_x,
        -:14706:                       unpack6_x,
        -:14707:                       unpack7_x,
        -:14708:                       unpack8_x,
        -:14709:                       unpack9_x,
        -:14710:                       unpack10_x,
        -:14711:                       unpack11_x,
        -:14712:                       unpack12_x,
        -:14713:                       unpack13_x,
        -:14714:                       unpack14_x,
        -:14715:                       unpack15_x,
        -:14716:                       unpack16_x,
        -:14717:                       unpack17_x,
        -:14718:                       unpack18_x,
        -:14719:                       unpack19_x,
        -:14720:                       unpack20_x,
        -:14721:                       unpack21_x,
        -:14722:                       unpack22_x,
        -:14723:                       unpack23_x,
        -:14724:                       unpack24_x,
        -:14725:                       unpack25_x,
        -:14726:                       unpack26_x,
        -:14727:                       unpack27_x,
        -:14728:                       unpack28_x,
        -:14729:                       unpack29_x,
        -:14730:                       unpack30_x,
        -:14731:                       unpack31_x,
        -:14732:                       unpack32_x
        -:14733:};
        -:14734:
        -:14735:static uint32_t
       32:14736:linsearch1_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:14737:  uint32_t tmp, tmp2;
       32:14738:  value -= base;
        -:14739:  (void)tmp2;
       32:14740:  tmp = *(uint32_t *)in;
        -:14741:  /* consumed: 4 bytes (total: 4) */
       32:14742:  if (((tmp >> 0) & 1) == value) {
       32:14743:    *found = 0;
       32:14744:    return 0;
        -:14745:  }
    #####:14746:  if (((tmp >> 1) & 1) == value) {
    #####:14747:    *found = 1;
    #####:14748:    return 1;
        -:14749:  }
    #####:14750:  if (((tmp >> 2) & 1) == value) {
    #####:14751:    *found = 2;
    #####:14752:    return 2;
        -:14753:  }
    #####:14754:  if (((tmp >> 3) & 1) == value) {
    #####:14755:    *found = 3;
    #####:14756:    return 3;
        -:14757:  }
    #####:14758:  if (((tmp >> 4) & 1) == value) {
    #####:14759:    *found = 4;
    #####:14760:    return 4;
        -:14761:  }
    #####:14762:  if (((tmp >> 5) & 1) == value) {
    #####:14763:    *found = 5;
    #####:14764:    return 5;
        -:14765:  }
    #####:14766:  if (((tmp >> 6) & 1) == value) {
    #####:14767:    *found = 6;
    #####:14768:    return 6;
        -:14769:  }
    #####:14770:  if (((tmp >> 7) & 1) == value) {
    #####:14771:    *found = 7;
    #####:14772:    return 7;
        -:14773:  }
    #####:14774:  if (((tmp >> 8) & 1) == value) {
    #####:14775:    *found = 8;
    #####:14776:    return 8;
        -:14777:  }
    #####:14778:  if (((tmp >> 9) & 1) == value) {
    #####:14779:    *found = 9;
    #####:14780:    return 9;
        -:14781:  }
    #####:14782:  if (((tmp >> 10) & 1) == value) {
    #####:14783:    *found = 10;
    #####:14784:    return 10;
        -:14785:  }
    #####:14786:  if (((tmp >> 11) & 1) == value) {
    #####:14787:    *found = 11;
    #####:14788:    return 11;
        -:14789:  }
    #####:14790:  if (((tmp >> 12) & 1) == value) {
    #####:14791:    *found = 12;
    #####:14792:    return 12;
        -:14793:  }
    #####:14794:  if (((tmp >> 13) & 1) == value) {
    #####:14795:    *found = 13;
    #####:14796:    return 13;
        -:14797:  }
    #####:14798:  if (((tmp >> 14) & 1) == value) {
    #####:14799:    *found = 14;
    #####:14800:    return 14;
        -:14801:  }
    #####:14802:  if (((tmp >> 15) & 1) == value) {
    #####:14803:    *found = 15;
    #####:14804:    return 15;
        -:14805:  }
    #####:14806:  if (((tmp >> 16) & 1) == value) {
    #####:14807:    *found = 16;
    #####:14808:    return 16;
        -:14809:  }
    #####:14810:  if (((tmp >> 17) & 1) == value) {
    #####:14811:    *found = 17;
    #####:14812:    return 17;
        -:14813:  }
    #####:14814:  if (((tmp >> 18) & 1) == value) {
    #####:14815:    *found = 18;
    #####:14816:    return 18;
        -:14817:  }
    #####:14818:  if (((tmp >> 19) & 1) == value) {
    #####:14819:    *found = 19;
    #####:14820:    return 19;
        -:14821:  }
    #####:14822:  if (((tmp >> 20) & 1) == value) {
    #####:14823:    *found = 20;
    #####:14824:    return 20;
        -:14825:  }
    #####:14826:  if (((tmp >> 21) & 1) == value) {
    #####:14827:    *found = 21;
    #####:14828:    return 21;
        -:14829:  }
    #####:14830:  if (((tmp >> 22) & 1) == value) {
    #####:14831:    *found = 22;
    #####:14832:    return 22;
        -:14833:  }
    #####:14834:  if (((tmp >> 23) & 1) == value) {
    #####:14835:    *found = 23;
    #####:14836:    return 23;
        -:14837:  }
    #####:14838:  if (((tmp >> 24) & 1) == value) {
    #####:14839:    *found = 24;
    #####:14840:    return 24;
        -:14841:  }
    #####:14842:  if (((tmp >> 25) & 1) == value) {
    #####:14843:    *found = 25;
    #####:14844:    return 25;
        -:14845:  }
    #####:14846:  if (((tmp >> 26) & 1) == value) {
    #####:14847:    *found = 26;
    #####:14848:    return 26;
        -:14849:  }
    #####:14850:  if (((tmp >> 27) & 1) == value) {
    #####:14851:    *found = 27;
    #####:14852:    return 27;
        -:14853:  }
    #####:14854:  if (((tmp >> 28) & 1) == value) {
    #####:14855:    *found = 28;
    #####:14856:    return 28;
        -:14857:  }
    #####:14858:  if (((tmp >> 29) & 1) == value) {
    #####:14859:    *found = 29;
    #####:14860:    return 29;
        -:14861:  }
    #####:14862:  if (((tmp >> 30) & 1) == value) {
    #####:14863:    *found = 30;
    #####:14864:    return 30;
        -:14865:  }
    #####:14866:  if (((tmp >> 31) & 1) == value) {
    #####:14867:    *found = 31;
    #####:14868:    return 31;
        -:14869:  }
        -:14870:  /* remaining: 0 bits */
        -:14871:  return (4);
        -:14872:}
        -:14873:
        -:14874:static uint32_t
       32:14875:linsearch2_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:14876:  uint32_t tmp, tmp2;
       32:14877:  value -= base;
        -:14878:  (void)tmp2;
       32:14879:  tmp = *(uint32_t *)in;
        -:14880:  /* consumed: 4 bytes (total: 4) */
       32:14881:  if (((tmp >> 0) & 3) == value) {
       11:14882:    *found = 0;
       11:14883:    return 0;
        -:14884:  }
       21:14885:  if (((tmp >> 2) & 3) == value) {
       11:14886:    *found = 1;
       11:14887:    return 1;
        -:14888:  }
       10:14889:  if (((tmp >> 4) & 3) == value) {
       10:14890:    *found = 2;
       10:14891:    return 2;
        -:14892:  }
    #####:14893:  if (((tmp >> 6) & 3) == value) {
    #####:14894:    *found = 3;
    #####:14895:    return 3;
        -:14896:  }
    #####:14897:  if (((tmp >> 8) & 3) == value) {
    #####:14898:    *found = 4;
    #####:14899:    return 4;
        -:14900:  }
    #####:14901:  if (((tmp >> 10) & 3) == value) {
    #####:14902:    *found = 5;
    #####:14903:    return 5;
        -:14904:  }
    #####:14905:  if (((tmp >> 12) & 3) == value) {
    #####:14906:    *found = 6;
    #####:14907:    return 6;
        -:14908:  }
    #####:14909:  if (((tmp >> 14) & 3) == value) {
    #####:14910:    *found = 7;
    #####:14911:    return 7;
        -:14912:  }
    #####:14913:  if (((tmp >> 16) & 3) == value) {
    #####:14914:    *found = 8;
    #####:14915:    return 8;
        -:14916:  }
    #####:14917:  if (((tmp >> 18) & 3) == value) {
    #####:14918:    *found = 9;
    #####:14919:    return 9;
        -:14920:  }
    #####:14921:  if (((tmp >> 20) & 3) == value) {
    #####:14922:    *found = 10;
    #####:14923:    return 10;
        -:14924:  }
    #####:14925:  if (((tmp >> 22) & 3) == value) {
    #####:14926:    *found = 11;
    #####:14927:    return 11;
        -:14928:  }
    #####:14929:  if (((tmp >> 24) & 3) == value) {
    #####:14930:    *found = 12;
    #####:14931:    return 12;
        -:14932:  }
    #####:14933:  if (((tmp >> 26) & 3) == value) {
    #####:14934:    *found = 13;
    #####:14935:    return 13;
        -:14936:  }
    #####:14937:  if (((tmp >> 28) & 3) == value) {
    #####:14938:    *found = 14;
    #####:14939:    return 14;
        -:14940:  }
    #####:14941:  if (((tmp >> 30) & 3) == value) {
    #####:14942:    *found = 15;
    #####:14943:    return 15;
        -:14944:  }
        -:14945:  in += sizeof(uint32_t);
    #####:14946:  tmp = *(uint32_t *)in;
        -:14947:  /* consumed: 4 bytes (total: 8) */
    #####:14948:  if (((tmp >> 0) & 3) == value) {
    #####:14949:    *found = 16;
    #####:14950:    return 16;
        -:14951:  }
    #####:14952:  if (((tmp >> 2) & 3) == value) {
    #####:14953:    *found = 17;
    #####:14954:    return 17;
        -:14955:  }
    #####:14956:  if (((tmp >> 4) & 3) == value) {
    #####:14957:    *found = 18;
    #####:14958:    return 18;
        -:14959:  }
    #####:14960:  if (((tmp >> 6) & 3) == value) {
    #####:14961:    *found = 19;
    #####:14962:    return 19;
        -:14963:  }
    #####:14964:  if (((tmp >> 8) & 3) == value) {
    #####:14965:    *found = 20;
    #####:14966:    return 20;
        -:14967:  }
    #####:14968:  if (((tmp >> 10) & 3) == value) {
    #####:14969:    *found = 21;
    #####:14970:    return 21;
        -:14971:  }
    #####:14972:  if (((tmp >> 12) & 3) == value) {
    #####:14973:    *found = 22;
    #####:14974:    return 22;
        -:14975:  }
    #####:14976:  if (((tmp >> 14) & 3) == value) {
    #####:14977:    *found = 23;
    #####:14978:    return 23;
        -:14979:  }
    #####:14980:  if (((tmp >> 16) & 3) == value) {
    #####:14981:    *found = 24;
    #####:14982:    return 24;
        -:14983:  }
    #####:14984:  if (((tmp >> 18) & 3) == value) {
    #####:14985:    *found = 25;
    #####:14986:    return 25;
        -:14987:  }
    #####:14988:  if (((tmp >> 20) & 3) == value) {
    #####:14989:    *found = 26;
    #####:14990:    return 26;
        -:14991:  }
    #####:14992:  if (((tmp >> 22) & 3) == value) {
    #####:14993:    *found = 27;
    #####:14994:    return 27;
        -:14995:  }
    #####:14996:  if (((tmp >> 24) & 3) == value) {
    #####:14997:    *found = 28;
    #####:14998:    return 28;
        -:14999:  }
    #####:15000:  if (((tmp >> 26) & 3) == value) {
    #####:15001:    *found = 29;
    #####:15002:    return 29;
        -:15003:  }
    #####:15004:  if (((tmp >> 28) & 3) == value) {
    #####:15005:    *found = 30;
    #####:15006:    return 30;
        -:15007:  }
    #####:15008:  if (((tmp >> 30) & 3) == value) {
    #####:15009:    *found = 31;
    #####:15010:    return 31;
        -:15011:  }
        -:15012:  /* remaining: 0 bits */
        -:15013:  return (8);
        -:15014:}
        -:15015:
        -:15016:static uint32_t
       32:15017:linsearch3_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15018:  uint32_t tmp, tmp2;
       32:15019:  value -= base;
        -:15020:  (void)tmp2;
       32:15021:  tmp = *(uint32_t *)in;
        -:15022:  /* consumed: 4 bytes (total: 4) */
       32:15023:  if (((tmp >> 0) & 7) == value) {
        5:15024:    *found = 0;
        5:15025:    return 0;
        -:15026:  }
       27:15027:  if (((tmp >> 3) & 7) == value) {
        5:15028:    *found = 1;
        5:15029:    return 1;
        -:15030:  }
       22:15031:  if (((tmp >> 6) & 7) == value) {
        5:15032:    *found = 2;
        5:15033:    return 2;
        -:15034:  }
       17:15035:  if (((tmp >> 9) & 7) == value) {
        5:15036:    *found = 3;
        5:15037:    return 3;
        -:15038:  }
       12:15039:  if (((tmp >> 12) & 7) == value) {
        4:15040:    *found = 4;
        4:15041:    return 4;
        -:15042:  }
        8:15043:  if (((tmp >> 15) & 7) == value) {
        4:15044:    *found = 5;
        4:15045:    return 5;
        -:15046:  }
        4:15047:  if (((tmp >> 18) & 7) == value) {
        4:15048:    *found = 6;
        4:15049:    return 6;
        -:15050:  }
    #####:15051:  if (((tmp >> 21) & 7) == value) {
    #####:15052:    *found = 7;
    #####:15053:    return 7;
        -:15054:  }
    #####:15055:  if (((tmp >> 24) & 7) == value) {
    #####:15056:    *found = 8;
    #####:15057:    return 8;
        -:15058:  }
    #####:15059:  if (((tmp >> 27) & 7) == value) {
    #####:15060:    *found = 9;
    #####:15061:    return 9;
        -:15062:  }
    #####:15063:  tmp2 = tmp >> 30;
        -:15064:  in += sizeof(uint32_t);
        -:15065:  /* consumed: 4 bytes (total: 8) */
    #####:15066:  tmp = *(uint32_t *)in;
    #####:15067:  if ((tmp2 | (tmp % (1U << 1)) << (3 - 1)) == value) {
    #####:15068:    *found = 10;
    #####:15069:    return 10;
        -:15070:  }
    #####:15071:  if (((tmp >> 1) & 7) == value) {
    #####:15072:    *found = 11;
    #####:15073:    return 11;
        -:15074:  }
    #####:15075:  if (((tmp >> 4) & 7) == value) {
    #####:15076:    *found = 12;
    #####:15077:    return 12;
        -:15078:  }
    #####:15079:  if (((tmp >> 7) & 7) == value) {
    #####:15080:    *found = 13;
    #####:15081:    return 13;
        -:15082:  }
    #####:15083:  if (((tmp >> 10) & 7) == value) {
    #####:15084:    *found = 14;
    #####:15085:    return 14;
        -:15086:  }
    #####:15087:  if (((tmp >> 13) & 7) == value) {
    #####:15088:    *found = 15;
    #####:15089:    return 15;
        -:15090:  }
    #####:15091:  if (((tmp >> 16) & 7) == value) {
    #####:15092:    *found = 16;
    #####:15093:    return 16;
        -:15094:  }
    #####:15095:  if (((tmp >> 19) & 7) == value) {
    #####:15096:    *found = 17;
    #####:15097:    return 17;
        -:15098:  }
    #####:15099:  if (((tmp >> 22) & 7) == value) {
    #####:15100:    *found = 18;
    #####:15101:    return 18;
        -:15102:  }
    #####:15103:  if (((tmp >> 25) & 7) == value) {
    #####:15104:    *found = 19;
    #####:15105:    return 19;
        -:15106:  }
    #####:15107:  if (((tmp >> 28) & 7) == value) {
    #####:15108:    *found = 20;
    #####:15109:    return 20;
        -:15110:  }
    #####:15111:  tmp2 = tmp >> 31;
        -:15112:  in += sizeof(uint32_t);
        -:15113:  /* consumed: 4 bytes (total: 12) */
    #####:15114:  tmp = *(uint32_t *)in;
    #####:15115:  if ((tmp2 | (tmp % (1U << 2)) << (3 - 2)) == value) {
    #####:15116:    *found = 21;
    #####:15117:    return 21;
        -:15118:  }
    #####:15119:  if (((tmp >> 2) & 7) == value) {
    #####:15120:    *found = 22;
    #####:15121:    return 22;
        -:15122:  }
    #####:15123:  if (((tmp >> 5) & 7) == value) {
    #####:15124:    *found = 23;
    #####:15125:    return 23;
        -:15126:  }
    #####:15127:  if (((tmp >> 8) & 7) == value) {
    #####:15128:    *found = 24;
    #####:15129:    return 24;
        -:15130:  }
    #####:15131:  if (((tmp >> 11) & 7) == value) {
    #####:15132:    *found = 25;
    #####:15133:    return 25;
        -:15134:  }
    #####:15135:  if (((tmp >> 14) & 7) == value) {
    #####:15136:    *found = 26;
    #####:15137:    return 26;
        -:15138:  }
    #####:15139:  if (((tmp >> 17) & 7) == value) {
    #####:15140:    *found = 27;
    #####:15141:    return 27;
        -:15142:  }
    #####:15143:  if (((tmp >> 20) & 7) == value) {
    #####:15144:    *found = 28;
    #####:15145:    return 28;
        -:15146:  }
    #####:15147:  if (((tmp >> 23) & 7) == value) {
    #####:15148:    *found = 29;
    #####:15149:    return 29;
        -:15150:  }
    #####:15151:  if (((tmp >> 26) & 7) == value) {
    #####:15152:    *found = 30;
    #####:15153:    return 30;
        -:15154:  }
    #####:15155:  if (((tmp >> 29) & 7) == value) {
    #####:15156:    *found = 31;
    #####:15157:    return 31;
        -:15158:  }
        -:15159:  /* remaining: 0 bits */
        -:15160:  return (12);
        -:15161:}
        -:15162:
        -:15163:static uint32_t
       32:15164:linsearch4_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15165:  uint32_t tmp, tmp2;
       32:15166:  value -= base;
        -:15167:  (void)tmp2;
       32:15168:  tmp = *(uint32_t *)in;
        -:15169:  /* consumed: 4 bytes (total: 4) */
       32:15170:  if (((tmp >> 0) & 15) == value) {
        3:15171:    *found = 0;
        3:15172:    return 0;
        -:15173:  }
       29:15174:  if (((tmp >> 4) & 15) == value) {
        3:15175:    *found = 1;
        3:15176:    return 1;
        -:15177:  }
       26:15178:  if (((tmp >> 8) & 15) == value) {
        2:15179:    *found = 2;
        2:15180:    return 2;
        -:15181:  }
       24:15182:  if (((tmp >> 12) & 15) == value) {
        2:15183:    *found = 3;
        2:15184:    return 3;
        -:15185:  }
       22:15186:  if (((tmp >> 16) & 15) == value) {
        2:15187:    *found = 4;
        2:15188:    return 4;
        -:15189:  }
       20:15190:  if (((tmp >> 20) & 15) == value) {
        2:15191:    *found = 5;
        2:15192:    return 5;
        -:15193:  }
       18:15194:  if (((tmp >> 24) & 15) == value) {
        2:15195:    *found = 6;
        2:15196:    return 6;
        -:15197:  }
       16:15198:  if (((tmp >> 28) & 15) == value) {
        2:15199:    *found = 7;
        2:15200:    return 7;
        -:15201:  }
        -:15202:  in += sizeof(uint32_t);
       14:15203:  tmp = *(uint32_t *)in;
        -:15204:  /* consumed: 4 bytes (total: 8) */
       14:15205:  if (((tmp >> 0) & 15) == value) {
        2:15206:    *found = 8;
        2:15207:    return 8;
        -:15208:  }
       12:15209:  if (((tmp >> 4) & 15) == value) {
        2:15210:    *found = 9;
        2:15211:    return 9;
        -:15212:  }
       10:15213:  if (((tmp >> 8) & 15) == value) {
        2:15214:    *found = 10;
        2:15215:    return 10;
        -:15216:  }
        8:15217:  if (((tmp >> 12) & 15) == value) {
        2:15218:    *found = 11;
        2:15219:    return 11;
        -:15220:  }
        6:15221:  if (((tmp >> 16) & 15) == value) {
        2:15222:    *found = 12;
        2:15223:    return 12;
        -:15224:  }
        4:15225:  if (((tmp >> 20) & 15) == value) {
        2:15226:    *found = 13;
        2:15227:    return 13;
        -:15228:  }
        2:15229:  if (((tmp >> 24) & 15) == value) {
        2:15230:    *found = 14;
        2:15231:    return 14;
        -:15232:  }
    #####:15233:  if (((tmp >> 28) & 15) == value) {
    #####:15234:    *found = 15;
    #####:15235:    return 15;
        -:15236:  }
        -:15237:  in += sizeof(uint32_t);
    #####:15238:  tmp = *(uint32_t *)in;
        -:15239:  /* consumed: 4 bytes (total: 12) */
    #####:15240:  if (((tmp >> 0) & 15) == value) {
    #####:15241:    *found = 16;
    #####:15242:    return 16;
        -:15243:  }
    #####:15244:  if (((tmp >> 4) & 15) == value) {
    #####:15245:    *found = 17;
    #####:15246:    return 17;
        -:15247:  }
    #####:15248:  if (((tmp >> 8) & 15) == value) {
    #####:15249:    *found = 18;
    #####:15250:    return 18;
        -:15251:  }
    #####:15252:  if (((tmp >> 12) & 15) == value) {
    #####:15253:    *found = 19;
    #####:15254:    return 19;
        -:15255:  }
    #####:15256:  if (((tmp >> 16) & 15) == value) {
    #####:15257:    *found = 20;
    #####:15258:    return 20;
        -:15259:  }
    #####:15260:  if (((tmp >> 20) & 15) == value) {
    #####:15261:    *found = 21;
    #####:15262:    return 21;
        -:15263:  }
    #####:15264:  if (((tmp >> 24) & 15) == value) {
    #####:15265:    *found = 22;
    #####:15266:    return 22;
        -:15267:  }
    #####:15268:  if (((tmp >> 28) & 15) == value) {
    #####:15269:    *found = 23;
    #####:15270:    return 23;
        -:15271:  }
        -:15272:  in += sizeof(uint32_t);
    #####:15273:  tmp = *(uint32_t *)in;
        -:15274:  /* consumed: 4 bytes (total: 16) */
    #####:15275:  if (((tmp >> 0) & 15) == value) {
    #####:15276:    *found = 24;
    #####:15277:    return 24;
        -:15278:  }
    #####:15279:  if (((tmp >> 4) & 15) == value) {
    #####:15280:    *found = 25;
    #####:15281:    return 25;
        -:15282:  }
    #####:15283:  if (((tmp >> 8) & 15) == value) {
    #####:15284:    *found = 26;
    #####:15285:    return 26;
        -:15286:  }
    #####:15287:  if (((tmp >> 12) & 15) == value) {
    #####:15288:    *found = 27;
    #####:15289:    return 27;
        -:15290:  }
    #####:15291:  if (((tmp >> 16) & 15) == value) {
    #####:15292:    *found = 28;
    #####:15293:    return 28;
        -:15294:  }
    #####:15295:  if (((tmp >> 20) & 15) == value) {
    #####:15296:    *found = 29;
    #####:15297:    return 29;
        -:15298:  }
    #####:15299:  if (((tmp >> 24) & 15) == value) {
    #####:15300:    *found = 30;
    #####:15301:    return 30;
        -:15302:  }
    #####:15303:  if (((tmp >> 28) & 15) == value) {
    #####:15304:    *found = 31;
    #####:15305:    return 31;
        -:15306:  }
        -:15307:  /* remaining: 0 bits */
        -:15308:  return (16);
        -:15309:}
        -:15310:
        -:15311:static uint32_t
       64:15312:linsearch5_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15313:  uint32_t tmp, tmp2;
       64:15314:  value -= base;
        -:15315:  (void)tmp2;
       64:15316:  tmp = *(uint32_t *)in;
        -:15317:  /* consumed: 4 bytes (total: 4) */
       64:15318:  if (((tmp >> 0) & 31) == value) {
        3:15319:    *found = 0;
        3:15320:    return 0;
        -:15321:  }
       61:15322:  if (((tmp >> 5) & 31) == value) {
        2:15323:    *found = 1;
        2:15324:    return 1;
        -:15325:  }
       59:15326:  if (((tmp >> 10) & 31) == value) {
        2:15327:    *found = 2;
        2:15328:    return 2;
        -:15329:  }
       57:15330:  if (((tmp >> 15) & 31) == value) {
        2:15331:    *found = 3;
        2:15332:    return 3;
        -:15333:  }
       55:15334:  if (((tmp >> 20) & 31) == value) {
        2:15335:    *found = 4;
        2:15336:    return 4;
        -:15337:  }
       53:15338:  if (((tmp >> 25) & 31) == value) {
        2:15339:    *found = 5;
        2:15340:    return 5;
        -:15341:  }
       51:15342:  tmp2 = tmp >> 30;
        -:15343:  in += sizeof(uint32_t);
        -:15344:  /* consumed: 4 bytes (total: 8) */
       51:15345:  tmp = *(uint32_t *)in;
       51:15346:  if ((tmp2 | (tmp % (1U << 3)) << (5 - 3)) == value) {
        2:15347:    *found = 6;
        2:15348:    return 6;
        -:15349:  }
       49:15350:  if (((tmp >> 3) & 31) == value) {
        2:15351:    *found = 7;
        2:15352:    return 7;
        -:15353:  }
       47:15354:  if (((tmp >> 8) & 31) == value) {
        2:15355:    *found = 8;
        2:15356:    return 8;
        -:15357:  }
       45:15358:  if (((tmp >> 13) & 31) == value) {
        2:15359:    *found = 9;
        2:15360:    return 9;
        -:15361:  }
       43:15362:  if (((tmp >> 18) & 31) == value) {
        2:15363:    *found = 10;
        2:15364:    return 10;
        -:15365:  }
       41:15366:  if (((tmp >> 23) & 31) == value) {
        2:15367:    *found = 11;
        2:15368:    return 11;
        -:15369:  }
       39:15370:  tmp2 = tmp >> 28;
        -:15371:  in += sizeof(uint32_t);
        -:15372:  /* consumed: 4 bytes (total: 12) */
       39:15373:  tmp = *(uint32_t *)in;
       39:15374:  if ((tmp2 | (tmp % (1U << 1)) << (5 - 1)) == value) {
        2:15375:    *found = 12;
        2:15376:    return 12;
        -:15377:  }
       37:15378:  if (((tmp >> 1) & 31) == value) {
        2:15379:    *found = 13;
        2:15380:    return 13;
        -:15381:  }
       35:15382:  if (((tmp >> 6) & 31) == value) {
        2:15383:    *found = 14;
        2:15384:    return 14;
        -:15385:  }
       33:15386:  if (((tmp >> 11) & 31) == value) {
        2:15387:    *found = 15;
        2:15388:    return 15;
        -:15389:  }
       31:15390:  if (((tmp >> 16) & 31) == value) {
        2:15391:    *found = 16;
        2:15392:    return 16;
        -:15393:  }
       29:15394:  if (((tmp >> 21) & 31) == value) {
        2:15395:    *found = 17;
        2:15396:    return 17;
        -:15397:  }
       27:15398:  if (((tmp >> 26) & 31) == value) {
        2:15399:    *found = 18;
        2:15400:    return 18;
        -:15401:  }
       25:15402:  tmp2 = tmp >> 31;
        -:15403:  in += sizeof(uint32_t);
        -:15404:  /* consumed: 4 bytes (total: 16) */
       25:15405:  tmp = *(uint32_t *)in;
       25:15406:  if ((tmp2 | (tmp % (1U << 4)) << (5 - 4)) == value) {
        2:15407:    *found = 19;
        2:15408:    return 19;
        -:15409:  }
       23:15410:  if (((tmp >> 4) & 31) == value) {
        2:15411:    *found = 20;
        2:15412:    return 20;
        -:15413:  }
       21:15414:  if (((tmp >> 9) & 31) == value) {
        2:15415:    *found = 21;
        2:15416:    return 21;
        -:15417:  }
       19:15418:  if (((tmp >> 14) & 31) == value) {
        2:15419:    *found = 22;
        2:15420:    return 22;
        -:15421:  }
       17:15422:  if (((tmp >> 19) & 31) == value) {
        2:15423:    *found = 23;
        2:15424:    return 23;
        -:15425:  }
       15:15426:  if (((tmp >> 24) & 31) == value) {
        2:15427:    *found = 24;
        2:15428:    return 24;
        -:15429:  }
       13:15430:  tmp2 = tmp >> 29;
        -:15431:  in += sizeof(uint32_t);
        -:15432:  /* consumed: 4 bytes (total: 20) */
       13:15433:  tmp = *(uint32_t *)in;
       13:15434:  if ((tmp2 | (tmp % (1U << 2)) << (5 - 2)) == value) {
        2:15435:    *found = 25;
        2:15436:    return 25;
        -:15437:  }
       11:15438:  if (((tmp >> 2) & 31) == value) {
        2:15439:    *found = 26;
        2:15440:    return 26;
        -:15441:  }
        9:15442:  if (((tmp >> 7) & 31) == value) {
        2:15443:    *found = 27;
        2:15444:    return 27;
        -:15445:  }
        7:15446:  if (((tmp >> 12) & 31) == value) {
        2:15447:    *found = 28;
        2:15448:    return 28;
        -:15449:  }
        5:15450:  if (((tmp >> 17) & 31) == value) {
        2:15451:    *found = 29;
        2:15452:    return 29;
        -:15453:  }
        3:15454:  if (((tmp >> 22) & 31) == value) {
        2:15455:    *found = 30;
        2:15456:    return 30;
        -:15457:  }
        1:15458:  if (((tmp >> 27) & 31) == value) {
        1:15459:    *found = 31;
        1:15460:    return 31;
        -:15461:  }
        -:15462:  /* remaining: 0 bits */
        -:15463:  return (20);
        -:15464:}
        -:15465:
        -:15466:static uint32_t
      161:15467:linsearch6_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15468:  uint32_t tmp, tmp2;
      161:15469:  value -= base;
        -:15470:  (void)tmp2;
      161:15471:  tmp = *(uint32_t *)in;
        -:15472:  /* consumed: 4 bytes (total: 4) */
      161:15473:  if (((tmp >> 0) & 63) == value) {
        4:15474:    *found = 0;
        4:15475:    return 0;
        -:15476:  }
      157:15477:  if (((tmp >> 6) & 63) == value) {
        4:15478:    *found = 1;
        4:15479:    return 1;
        -:15480:  }
      153:15481:  if (((tmp >> 12) & 63) == value) {
        4:15482:    *found = 2;
        4:15483:    return 2;
        -:15484:  }
      149:15485:  if (((tmp >> 18) & 63) == value) {
        4:15486:    *found = 3;
        4:15487:    return 3;
        -:15488:  }
      145:15489:  if (((tmp >> 24) & 63) == value) {
        4:15490:    *found = 4;
        4:15491:    return 4;
        -:15492:  }
      141:15493:  tmp2 = tmp >> 30;
        -:15494:  in += sizeof(uint32_t);
        -:15495:  /* consumed: 4 bytes (total: 8) */
      141:15496:  tmp = *(uint32_t *)in;
      141:15497:  if ((tmp2 | (tmp % (1U << 4)) << (6 - 4)) == value) {
        4:15498:    *found = 5;
        4:15499:    return 5;
        -:15500:  }
      137:15501:  if (((tmp >> 4) & 63) == value) {
        4:15502:    *found = 6;
        4:15503:    return 6;
        -:15504:  }
      133:15505:  if (((tmp >> 10) & 63) == value) {
        4:15506:    *found = 7;
        4:15507:    return 7;
        -:15508:  }
      129:15509:  if (((tmp >> 16) & 63) == value) {
        4:15510:    *found = 8;
        4:15511:    return 8;
        -:15512:  }
      125:15513:  if (((tmp >> 22) & 63) == value) {
        4:15514:    *found = 9;
        4:15515:    return 9;
        -:15516:  }
      121:15517:  tmp2 = tmp >> 28;
        -:15518:  in += sizeof(uint32_t);
        -:15519:  /* consumed: 4 bytes (total: 12) */
      121:15520:  tmp = *(uint32_t *)in;
      121:15521:  if ((tmp2 | (tmp % (1U << 2)) << (6 - 2)) == value) {
        4:15522:    *found = 10;
        4:15523:    return 10;
        -:15524:  }
      117:15525:  if (((tmp >> 2) & 63) == value) {
        4:15526:    *found = 11;
        4:15527:    return 11;
        -:15528:  }
      113:15529:  if (((tmp >> 8) & 63) == value) {
        4:15530:    *found = 12;
        4:15531:    return 12;
        -:15532:  }
      109:15533:  if (((tmp >> 14) & 63) == value) {
        4:15534:    *found = 13;
        4:15535:    return 13;
        -:15536:  }
      105:15537:  if (((tmp >> 20) & 63) == value) {
        4:15538:    *found = 14;
        4:15539:    return 14;
        -:15540:  }
      101:15541:  if (((tmp >> 26) & 63) == value) {
        4:15542:    *found = 15;
        4:15543:    return 15;
        -:15544:  }
        -:15545:  in += sizeof(uint32_t);
       97:15546:  tmp = *(uint32_t *)in;
        -:15547:  /* consumed: 4 bytes (total: 16) */
       97:15548:  if (((tmp >> 0) & 63) == value) {
        4:15549:    *found = 16;
        4:15550:    return 16;
        -:15551:  }
       93:15552:  if (((tmp >> 6) & 63) == value) {
        4:15553:    *found = 17;
        4:15554:    return 17;
        -:15555:  }
       89:15556:  if (((tmp >> 12) & 63) == value) {
        4:15557:    *found = 18;
        4:15558:    return 18;
        -:15559:  }
       85:15560:  if (((tmp >> 18) & 63) == value) {
        4:15561:    *found = 19;
        4:15562:    return 19;
        -:15563:  }
       81:15564:  if (((tmp >> 24) & 63) == value) {
        4:15565:    *found = 20;
        4:15566:    return 20;
        -:15567:  }
       77:15568:  tmp2 = tmp >> 30;
        -:15569:  in += sizeof(uint32_t);
        -:15570:  /* consumed: 4 bytes (total: 20) */
       77:15571:  tmp = *(uint32_t *)in;
       77:15572:  if ((tmp2 | (tmp % (1U << 4)) << (6 - 4)) == value) {
        4:15573:    *found = 21;
        4:15574:    return 21;
        -:15575:  }
       73:15576:  if (((tmp >> 4) & 63) == value) {
        4:15577:    *found = 22;
        4:15578:    return 22;
        -:15579:  }
       69:15580:  if (((tmp >> 10) & 63) == value) {
        4:15581:    *found = 23;
        4:15582:    return 23;
        -:15583:  }
       65:15584:  if (((tmp >> 16) & 63) == value) {
        4:15585:    *found = 24;
        4:15586:    return 24;
        -:15587:  }
       61:15588:  if (((tmp >> 22) & 63) == value) {
        4:15589:    *found = 25;
        4:15590:    return 25;
        -:15591:  }
       57:15592:  tmp2 = tmp >> 28;
        -:15593:  in += sizeof(uint32_t);
        -:15594:  /* consumed: 4 bytes (total: 24) */
       57:15595:  tmp = *(uint32_t *)in;
       57:15596:  if ((tmp2 | (tmp % (1U << 2)) << (6 - 2)) == value) {
        4:15597:    *found = 26;
        4:15598:    return 26;
        -:15599:  }
       53:15600:  if (((tmp >> 2) & 63) == value) {
        4:15601:    *found = 27;
        4:15602:    return 27;
        -:15603:  }
       49:15604:  if (((tmp >> 8) & 63) == value) {
        4:15605:    *found = 28;
        4:15606:    return 28;
        -:15607:  }
       45:15608:  if (((tmp >> 14) & 63) == value) {
        4:15609:    *found = 29;
        4:15610:    return 29;
        -:15611:  }
       41:15612:  if (((tmp >> 20) & 63) == value) {
        4:15613:    *found = 30;
        4:15614:    return 30;
        -:15615:  }
       37:15616:  if (((tmp >> 26) & 63) == value) {
        4:15617:    *found = 31;
        4:15618:    return 31;
        -:15619:  }
        -:15620:  /* remaining: 0 bits */
        -:15621:  return (24);
        -:15622:}
        -:15623:
        -:15624:static uint32_t
      450:15625:linsearch7_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15626:  uint32_t tmp, tmp2;
      450:15627:  value -= base;
        -:15628:  (void)tmp2;
      450:15629:  tmp = *(uint32_t *)in;
        -:15630:  /* consumed: 4 bytes (total: 4) */
      450:15631:  if (((tmp >> 0) & 127) == value) {
        7:15632:    *found = 0;
        7:15633:    return 0;
        -:15634:  }
      443:15635:  if (((tmp >> 7) & 127) == value) {
        7:15636:    *found = 1;
        7:15637:    return 1;
        -:15638:  }
      436:15639:  if (((tmp >> 14) & 127) == value) {
        7:15640:    *found = 2;
        7:15641:    return 2;
        -:15642:  }
      429:15643:  if (((tmp >> 21) & 127) == value) {
        7:15644:    *found = 3;
        7:15645:    return 3;
        -:15646:  }
      422:15647:  tmp2 = tmp >> 28;
        -:15648:  in += sizeof(uint32_t);
        -:15649:  /* consumed: 4 bytes (total: 8) */
      422:15650:  tmp = *(uint32_t *)in;
      422:15651:  if ((tmp2 | (tmp % (1U << 3)) << (7 - 3)) == value) {
        7:15652:    *found = 4;
        7:15653:    return 4;
        -:15654:  }
      415:15655:  if (((tmp >> 3) & 127) == value) {
        7:15656:    *found = 5;
        7:15657:    return 5;
        -:15658:  }
      408:15659:  if (((tmp >> 10) & 127) == value) {
        7:15660:    *found = 6;
        7:15661:    return 6;
        -:15662:  }
      401:15663:  if (((tmp >> 17) & 127) == value) {
        7:15664:    *found = 7;
        7:15665:    return 7;
        -:15666:  }
      394:15667:  if (((tmp >> 24) & 127) == value) {
        7:15668:    *found = 8;
        7:15669:    return 8;
        -:15670:  }
      387:15671:  tmp2 = tmp >> 31;
        -:15672:  in += sizeof(uint32_t);
        -:15673:  /* consumed: 4 bytes (total: 12) */
      387:15674:  tmp = *(uint32_t *)in;
      387:15675:  if ((tmp2 | (tmp % (1U << 6)) << (7 - 6)) == value) {
        7:15676:    *found = 9;
        7:15677:    return 9;
        -:15678:  }
      380:15679:  if (((tmp >> 6) & 127) == value) {
        7:15680:    *found = 10;
        7:15681:    return 10;
        -:15682:  }
      373:15683:  if (((tmp >> 13) & 127) == value) {
        7:15684:    *found = 11;
        7:15685:    return 11;
        -:15686:  }
      366:15687:  if (((tmp >> 20) & 127) == value) {
        7:15688:    *found = 12;
        7:15689:    return 12;
        -:15690:  }
      359:15691:  tmp2 = tmp >> 27;
        -:15692:  in += sizeof(uint32_t);
        -:15693:  /* consumed: 4 bytes (total: 16) */
      359:15694:  tmp = *(uint32_t *)in;
      359:15695:  if ((tmp2 | (tmp % (1U << 2)) << (7 - 2)) == value) {
        7:15696:    *found = 13;
        7:15697:    return 13;
        -:15698:  }
      352:15699:  if (((tmp >> 2) & 127) == value) {
        7:15700:    *found = 14;
        7:15701:    return 14;
        -:15702:  }
      345:15703:  if (((tmp >> 9) & 127) == value) {
        7:15704:    *found = 15;
        7:15705:    return 15;
        -:15706:  }
      338:15707:  if (((tmp >> 16) & 127) == value) {
        7:15708:    *found = 16;
        7:15709:    return 16;
        -:15710:  }
      331:15711:  if (((tmp >> 23) & 127) == value) {
        7:15712:    *found = 17;
        7:15713:    return 17;
        -:15714:  }
      324:15715:  tmp2 = tmp >> 30;
        -:15716:  in += sizeof(uint32_t);
        -:15717:  /* consumed: 4 bytes (total: 20) */
      324:15718:  tmp = *(uint32_t *)in;
      324:15719:  if ((tmp2 | (tmp % (1U << 5)) << (7 - 5)) == value) {
        7:15720:    *found = 18;
        7:15721:    return 18;
        -:15722:  }
      317:15723:  if (((tmp >> 5) & 127) == value) {
        7:15724:    *found = 19;
        7:15725:    return 19;
        -:15726:  }
      310:15727:  if (((tmp >> 12) & 127) == value) {
        7:15728:    *found = 20;
        7:15729:    return 20;
        -:15730:  }
      303:15731:  if (((tmp >> 19) & 127) == value) {
        7:15732:    *found = 21;
        7:15733:    return 21;
        -:15734:  }
      296:15735:  tmp2 = tmp >> 26;
        -:15736:  in += sizeof(uint32_t);
        -:15737:  /* consumed: 4 bytes (total: 24) */
      296:15738:  tmp = *(uint32_t *)in;
      296:15739:  if ((tmp2 | (tmp % (1U << 1)) << (7 - 1)) == value) {
        7:15740:    *found = 22;
        7:15741:    return 22;
        -:15742:  }
      289:15743:  if (((tmp >> 1) & 127) == value) {
        7:15744:    *found = 23;
        7:15745:    return 23;
        -:15746:  }
      282:15747:  if (((tmp >> 8) & 127) == value) {
        7:15748:    *found = 24;
        7:15749:    return 24;
        -:15750:  }
      275:15751:  if (((tmp >> 15) & 127) == value) {
        7:15752:    *found = 25;
        7:15753:    return 25;
        -:15754:  }
      268:15755:  if (((tmp >> 22) & 127) == value) {
        7:15756:    *found = 26;
        7:15757:    return 26;
        -:15758:  }
      261:15759:  tmp2 = tmp >> 29;
        -:15760:  in += sizeof(uint32_t);
        -:15761:  /* consumed: 4 bytes (total: 28) */
      261:15762:  tmp = *(uint32_t *)in;
      261:15763:  if ((tmp2 | (tmp % (1U << 4)) << (7 - 4)) == value) {
        7:15764:    *found = 27;
        7:15765:    return 27;
        -:15766:  }
      254:15767:  if (((tmp >> 4) & 127) == value) {
        7:15768:    *found = 28;
        7:15769:    return 28;
        -:15770:  }
      247:15771:  if (((tmp >> 11) & 127) == value) {
        7:15772:    *found = 29;
        7:15773:    return 29;
        -:15774:  }
      240:15775:  if (((tmp >> 18) & 127) == value) {
        7:15776:    *found = 30;
        7:15777:    return 30;
        -:15778:  }
      233:15779:  if (((tmp >> 25) & 127) == value) {
        7:15780:    *found = 31;
        7:15781:    return 31;
        -:15782:  }
        -:15783:  /* remaining: 0 bits */
        -:15784:  return (28);
        -:15785:}
        -:15786:
        -:15787:static uint32_t
     1508:15788:linsearch8_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15789:  uint32_t tmp, tmp2;
     1508:15790:  value -= base;
        -:15791:  (void)tmp2;
     1508:15792:  tmp = *(uint32_t *)in;
        -:15793:  /* consumed: 4 bytes (total: 4) */
     1508:15794:  if (((tmp >> 0) & 255) == value) {
       13:15795:    *found = 0;
       13:15796:    return 0;
        -:15797:  }
     1495:15798:  if (((tmp >> 8) & 255) == value) {
       13:15799:    *found = 1;
       13:15800:    return 1;
        -:15801:  }
     1482:15802:  if (((tmp >> 16) & 255) == value) {
       13:15803:    *found = 2;
       13:15804:    return 2;
        -:15805:  }
     1469:15806:  if (((tmp >> 24) & 255) == value) {
       13:15807:    *found = 3;
       13:15808:    return 3;
        -:15809:  }
        -:15810:  in += sizeof(uint32_t);
     1456:15811:  tmp = *(uint32_t *)in;
        -:15812:  /* consumed: 4 bytes (total: 8) */
     1456:15813:  if (((tmp >> 0) & 255) == value) {
       13:15814:    *found = 4;
       13:15815:    return 4;
        -:15816:  }
     1443:15817:  if (((tmp >> 8) & 255) == value) {
       13:15818:    *found = 5;
       13:15819:    return 5;
        -:15820:  }
     1430:15821:  if (((tmp >> 16) & 255) == value) {
       13:15822:    *found = 6;
       13:15823:    return 6;
        -:15824:  }
     1417:15825:  if (((tmp >> 24) & 255) == value) {
       13:15826:    *found = 7;
       13:15827:    return 7;
        -:15828:  }
        -:15829:  in += sizeof(uint32_t);
     1404:15830:  tmp = *(uint32_t *)in;
        -:15831:  /* consumed: 4 bytes (total: 12) */
     1404:15832:  if (((tmp >> 0) & 255) == value) {
       13:15833:    *found = 8;
       13:15834:    return 8;
        -:15835:  }
     1391:15836:  if (((tmp >> 8) & 255) == value) {
       13:15837:    *found = 9;
       13:15838:    return 9;
        -:15839:  }
     1378:15840:  if (((tmp >> 16) & 255) == value) {
       13:15841:    *found = 10;
       13:15842:    return 10;
        -:15843:  }
     1365:15844:  if (((tmp >> 24) & 255) == value) {
       13:15845:    *found = 11;
       13:15846:    return 11;
        -:15847:  }
        -:15848:  in += sizeof(uint32_t);
     1352:15849:  tmp = *(uint32_t *)in;
        -:15850:  /* consumed: 4 bytes (total: 16) */
     1352:15851:  if (((tmp >> 0) & 255) == value) {
       13:15852:    *found = 12;
       13:15853:    return 12;
        -:15854:  }
     1339:15855:  if (((tmp >> 8) & 255) == value) {
       13:15856:    *found = 13;
       13:15857:    return 13;
        -:15858:  }
     1326:15859:  if (((tmp >> 16) & 255) == value) {
       13:15860:    *found = 14;
       13:15861:    return 14;
        -:15862:  }
     1313:15863:  if (((tmp >> 24) & 255) == value) {
       13:15864:    *found = 15;
       13:15865:    return 15;
        -:15866:  }
        -:15867:  in += sizeof(uint32_t);
     1300:15868:  tmp = *(uint32_t *)in;
        -:15869:  /* consumed: 4 bytes (total: 20) */
     1300:15870:  if (((tmp >> 0) & 255) == value) {
       13:15871:    *found = 16;
       13:15872:    return 16;
        -:15873:  }
     1287:15874:  if (((tmp >> 8) & 255) == value) {
       13:15875:    *found = 17;
       13:15876:    return 17;
        -:15877:  }
     1274:15878:  if (((tmp >> 16) & 255) == value) {
       13:15879:    *found = 18;
       13:15880:    return 18;
        -:15881:  }
     1261:15882:  if (((tmp >> 24) & 255) == value) {
       13:15883:    *found = 19;
       13:15884:    return 19;
        -:15885:  }
        -:15886:  in += sizeof(uint32_t);
     1248:15887:  tmp = *(uint32_t *)in;
        -:15888:  /* consumed: 4 bytes (total: 24) */
     1248:15889:  if (((tmp >> 0) & 255) == value) {
       13:15890:    *found = 20;
       13:15891:    return 20;
        -:15892:  }
     1235:15893:  if (((tmp >> 8) & 255) == value) {
       13:15894:    *found = 21;
       13:15895:    return 21;
        -:15896:  }
     1222:15897:  if (((tmp >> 16) & 255) == value) {
       13:15898:    *found = 22;
       13:15899:    return 22;
        -:15900:  }
     1209:15901:  if (((tmp >> 24) & 255) == value) {
       13:15902:    *found = 23;
       13:15903:    return 23;
        -:15904:  }
        -:15905:  in += sizeof(uint32_t);
     1196:15906:  tmp = *(uint32_t *)in;
        -:15907:  /* consumed: 4 bytes (total: 28) */
     1196:15908:  if (((tmp >> 0) & 255) == value) {
       13:15909:    *found = 24;
       13:15910:    return 24;
        -:15911:  }
     1183:15912:  if (((tmp >> 8) & 255) == value) {
       13:15913:    *found = 25;
       13:15914:    return 25;
        -:15915:  }
     1170:15916:  if (((tmp >> 16) & 255) == value) {
       13:15917:    *found = 26;
       13:15918:    return 26;
        -:15919:  }
     1157:15920:  if (((tmp >> 24) & 255) == value) {
       13:15921:    *found = 27;
       13:15922:    return 27;
        -:15923:  }
        -:15924:  in += sizeof(uint32_t);
     1144:15925:  tmp = *(uint32_t *)in;
        -:15926:  /* consumed: 4 bytes (total: 32) */
     1144:15927:  if (((tmp >> 0) & 255) == value) {
       13:15928:    *found = 28;
       13:15929:    return 28;
        -:15930:  }
     1131:15931:  if (((tmp >> 8) & 255) == value) {
       13:15932:    *found = 29;
       13:15933:    return 29;
        -:15934:  }
     1118:15935:  if (((tmp >> 16) & 255) == value) {
       13:15936:    *found = 30;
       13:15937:    return 30;
        -:15938:  }
     1105:15939:  if (((tmp >> 24) & 255) == value) {
       13:15940:    *found = 31;
       13:15941:    return 31;
        -:15942:  }
        -:15943:  /* remaining: 0 bits */
        -:15944:  return (32);
        -:15945:}
        -:15946:
        -:15947:static uint32_t
     1192:15948:linsearch9_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:15949:  uint32_t tmp, tmp2;
     1192:15950:  value -= base;
        -:15951:  (void)tmp2;
     1192:15952:  tmp = *(uint32_t *)in;
        -:15953:  /* consumed: 4 bytes (total: 4) */
     1192:15954:  if (((tmp >> 0) & 511) == value) {
        9:15955:    *found = 0;
        9:15956:    return 0;
        -:15957:  }
     1183:15958:  if (((tmp >> 9) & 511) == value) {
        9:15959:    *found = 1;
        9:15960:    return 1;
        -:15961:  }
     1174:15962:  if (((tmp >> 18) & 511) == value) {
        9:15963:    *found = 2;
        9:15964:    return 2;
        -:15965:  }
     1165:15966:  tmp2 = tmp >> 27;
        -:15967:  in += sizeof(uint32_t);
        -:15968:  /* consumed: 4 bytes (total: 8) */
     1165:15969:  tmp = *(uint32_t *)in;
     1165:15970:  if ((tmp2 | (tmp % (1U << 4)) << (9 - 4)) == value) {
        9:15971:    *found = 3;
        9:15972:    return 3;
        -:15973:  }
     1156:15974:  if (((tmp >> 4) & 511) == value) {
        9:15975:    *found = 4;
        9:15976:    return 4;
        -:15977:  }
     1147:15978:  if (((tmp >> 13) & 511) == value) {
        9:15979:    *found = 5;
        9:15980:    return 5;
        -:15981:  }
     1138:15982:  if (((tmp >> 22) & 511) == value) {
        9:15983:    *found = 6;
        9:15984:    return 6;
        -:15985:  }
     1129:15986:  tmp2 = tmp >> 31;
        -:15987:  in += sizeof(uint32_t);
        -:15988:  /* consumed: 4 bytes (total: 12) */
     1129:15989:  tmp = *(uint32_t *)in;
     1129:15990:  if ((tmp2 | (tmp % (1U << 8)) << (9 - 8)) == value) {
        9:15991:    *found = 7;
        9:15992:    return 7;
        -:15993:  }
     1120:15994:  if (((tmp >> 8) & 511) == value) {
        9:15995:    *found = 8;
        9:15996:    return 8;
        -:15997:  }
     1111:15998:  if (((tmp >> 17) & 511) == value) {
        9:15999:    *found = 9;
        9:16000:    return 9;
        -:16001:  }
     1102:16002:  tmp2 = tmp >> 26;
        -:16003:  in += sizeof(uint32_t);
        -:16004:  /* consumed: 4 bytes (total: 16) */
     1102:16005:  tmp = *(uint32_t *)in;
     1102:16006:  if ((tmp2 | (tmp % (1U << 3)) << (9 - 3)) == value) {
        9:16007:    *found = 10;
        9:16008:    return 10;
        -:16009:  }
     1093:16010:  if (((tmp >> 3) & 511) == value) {
        9:16011:    *found = 11;
        9:16012:    return 11;
        -:16013:  }
     1084:16014:  if (((tmp >> 12) & 511) == value) {
        9:16015:    *found = 12;
        9:16016:    return 12;
        -:16017:  }
     1075:16018:  if (((tmp >> 21) & 511) == value) {
        9:16019:    *found = 13;
        9:16020:    return 13;
        -:16021:  }
     1066:16022:  tmp2 = tmp >> 30;
        -:16023:  in += sizeof(uint32_t);
        -:16024:  /* consumed: 4 bytes (total: 20) */
     1066:16025:  tmp = *(uint32_t *)in;
     1066:16026:  if ((tmp2 | (tmp % (1U << 7)) << (9 - 7)) == value) {
        9:16027:    *found = 14;
        9:16028:    return 14;
        -:16029:  }
     1057:16030:  if (((tmp >> 7) & 511) == value) {
        9:16031:    *found = 15;
        9:16032:    return 15;
        -:16033:  }
     1048:16034:  if (((tmp >> 16) & 511) == value) {
        9:16035:    *found = 16;
        9:16036:    return 16;
        -:16037:  }
     1039:16038:  tmp2 = tmp >> 25;
        -:16039:  in += sizeof(uint32_t);
        -:16040:  /* consumed: 4 bytes (total: 24) */
     1039:16041:  tmp = *(uint32_t *)in;
     1039:16042:  if ((tmp2 | (tmp % (1U << 2)) << (9 - 2)) == value) {
        9:16043:    *found = 17;
        9:16044:    return 17;
        -:16045:  }
     1030:16046:  if (((tmp >> 2) & 511) == value) {
        9:16047:    *found = 18;
        9:16048:    return 18;
        -:16049:  }
     1021:16050:  if (((tmp >> 11) & 511) == value) {
        9:16051:    *found = 19;
        9:16052:    return 19;
        -:16053:  }
     1012:16054:  if (((tmp >> 20) & 511) == value) {
        9:16055:    *found = 20;
        9:16056:    return 20;
        -:16057:  }
     1003:16058:  tmp2 = tmp >> 29;
        -:16059:  in += sizeof(uint32_t);
        -:16060:  /* consumed: 4 bytes (total: 28) */
     1003:16061:  tmp = *(uint32_t *)in;
     1003:16062:  if ((tmp2 | (tmp % (1U << 6)) << (9 - 6)) == value) {
        9:16063:    *found = 21;
        9:16064:    return 21;
        -:16065:  }
      994:16066:  if (((tmp >> 6) & 511) == value) {
        9:16067:    *found = 22;
        9:16068:    return 22;
        -:16069:  }
      985:16070:  if (((tmp >> 15) & 511) == value) {
        9:16071:    *found = 23;
        9:16072:    return 23;
        -:16073:  }
      976:16074:  tmp2 = tmp >> 24;
        -:16075:  in += sizeof(uint32_t);
        -:16076:  /* consumed: 4 bytes (total: 32) */
      976:16077:  tmp = *(uint32_t *)in;
      976:16078:  if ((tmp2 | (tmp % (1U << 1)) << (9 - 1)) == value) {
        9:16079:    *found = 24;
        9:16080:    return 24;
        -:16081:  }
      967:16082:  if (((tmp >> 1) & 511) == value) {
        9:16083:    *found = 25;
        9:16084:    return 25;
        -:16085:  }
      958:16086:  if (((tmp >> 10) & 511) == value) {
        9:16087:    *found = 26;
        9:16088:    return 26;
        -:16089:  }
      949:16090:  if (((tmp >> 19) & 511) == value) {
        9:16091:    *found = 27;
        9:16092:    return 27;
        -:16093:  }
      940:16094:  tmp2 = tmp >> 28;
        -:16095:  in += sizeof(uint32_t);
        -:16096:  /* consumed: 4 bytes (total: 36) */
      940:16097:  tmp = *(uint32_t *)in;
      940:16098:  if ((tmp2 | (tmp % (1U << 5)) << (9 - 5)) == value) {
        9:16099:    *found = 28;
        9:16100:    return 28;
        -:16101:  }
      931:16102:  if (((tmp >> 5) & 511) == value) {
        9:16103:    *found = 29;
        9:16104:    return 29;
        -:16105:  }
      922:16106:  if (((tmp >> 14) & 511) == value) {
        9:16107:    *found = 30;
        9:16108:    return 30;
        -:16109:  }
      913:16110:  if (((tmp >> 23) & 511) == value) {
        9:16111:    *found = 31;
        9:16112:    return 31;
        -:16113:  }
        -:16114:  /* remaining: 0 bits */
        -:16115:  return (36);
        -:16116:}
        -:16117:
        -:16118:static uint32_t
    16928:16119:linsearch10_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:16120:  uint32_t tmp, tmp2;
    16928:16121:  value -= base;
        -:16122:  (void)tmp2;
    16928:16123:  tmp = *(uint32_t *)in;
        -:16124:  /* consumed: 4 bytes (total: 4) */
    16928:16125:  if (((tmp >> 0) & 1023) == value) {
       33:16126:    *found = 0;
       33:16127:    return 0;
        -:16128:  }
    16895:16129:  if (((tmp >> 10) & 1023) == value) {
       33:16130:    *found = 1;
       33:16131:    return 1;
        -:16132:  }
    16862:16133:  if (((tmp >> 20) & 1023) == value) {
       33:16134:    *found = 2;
       33:16135:    return 2;
        -:16136:  }
    16829:16137:  tmp2 = tmp >> 30;
        -:16138:  in += sizeof(uint32_t);
        -:16139:  /* consumed: 4 bytes (total: 8) */
    16829:16140:  tmp = *(uint32_t *)in;
    16829:16141:  if ((tmp2 | (tmp % (1U << 8)) << (10 - 8)) == value) {
       33:16142:    *found = 3;
       33:16143:    return 3;
        -:16144:  }
    16796:16145:  if (((tmp >> 8) & 1023) == value) {
       33:16146:    *found = 4;
       33:16147:    return 4;
        -:16148:  }
    16763:16149:  if (((tmp >> 18) & 1023) == value) {
       33:16150:    *found = 5;
       33:16151:    return 5;
        -:16152:  }
    16730:16153:  tmp2 = tmp >> 28;
        -:16154:  in += sizeof(uint32_t);
        -:16155:  /* consumed: 4 bytes (total: 12) */
    16730:16156:  tmp = *(uint32_t *)in;
    16730:16157:  if ((tmp2 | (tmp % (1U << 6)) << (10 - 6)) == value) {
       33:16158:    *found = 6;
       33:16159:    return 6;
        -:16160:  }
    16697:16161:  if (((tmp >> 6) & 1023) == value) {
       33:16162:    *found = 7;
       33:16163:    return 7;
        -:16164:  }
    16664:16165:  if (((tmp >> 16) & 1023) == value) {
       33:16166:    *found = 8;
       33:16167:    return 8;
        -:16168:  }
    16631:16169:  tmp2 = tmp >> 26;
        -:16170:  in += sizeof(uint32_t);
        -:16171:  /* consumed: 4 bytes (total: 16) */
    16631:16172:  tmp = *(uint32_t *)in;
    16631:16173:  if ((tmp2 | (tmp % (1U << 4)) << (10 - 4)) == value) {
       33:16174:    *found = 9;
       33:16175:    return 9;
        -:16176:  }
    16598:16177:  if (((tmp >> 4) & 1023) == value) {
       33:16178:    *found = 10;
       33:16179:    return 10;
        -:16180:  }
    16565:16181:  if (((tmp >> 14) & 1023) == value) {
       33:16182:    *found = 11;
       33:16183:    return 11;
        -:16184:  }
    16532:16185:  tmp2 = tmp >> 24;
        -:16186:  in += sizeof(uint32_t);
        -:16187:  /* consumed: 4 bytes (total: 20) */
    16532:16188:  tmp = *(uint32_t *)in;
    16532:16189:  if ((tmp2 | (tmp % (1U << 2)) << (10 - 2)) == value) {
       33:16190:    *found = 12;
       33:16191:    return 12;
        -:16192:  }
    16499:16193:  if (((tmp >> 2) & 1023) == value) {
       33:16194:    *found = 13;
       33:16195:    return 13;
        -:16196:  }
    16466:16197:  if (((tmp >> 12) & 1023) == value) {
       33:16198:    *found = 14;
       33:16199:    return 14;
        -:16200:  }
    16433:16201:  if (((tmp >> 22) & 1023) == value) {
       33:16202:    *found = 15;
       33:16203:    return 15;
        -:16204:  }
        -:16205:  in += sizeof(uint32_t);
    16400:16206:  tmp = *(uint32_t *)in;
        -:16207:  /* consumed: 4 bytes (total: 24) */
    16400:16208:  if (((tmp >> 0) & 1023) == value) {
       33:16209:    *found = 16;
       33:16210:    return 16;
        -:16211:  }
    16367:16212:  if (((tmp >> 10) & 1023) == value) {
       33:16213:    *found = 17;
       33:16214:    return 17;
        -:16215:  }
    16334:16216:  if (((tmp >> 20) & 1023) == value) {
       33:16217:    *found = 18;
       33:16218:    return 18;
        -:16219:  }
    16301:16220:  tmp2 = tmp >> 30;
        -:16221:  in += sizeof(uint32_t);
        -:16222:  /* consumed: 4 bytes (total: 28) */
    16301:16223:  tmp = *(uint32_t *)in;
    16301:16224:  if ((tmp2 | (tmp % (1U << 8)) << (10 - 8)) == value) {
       33:16225:    *found = 19;
       33:16226:    return 19;
        -:16227:  }
    16268:16228:  if (((tmp >> 8) & 1023) == value) {
       33:16229:    *found = 20;
       33:16230:    return 20;
        -:16231:  }
    16235:16232:  if (((tmp >> 18) & 1023) == value) {
       33:16233:    *found = 21;
       33:16234:    return 21;
        -:16235:  }
    16202:16236:  tmp2 = tmp >> 28;
        -:16237:  in += sizeof(uint32_t);
        -:16238:  /* consumed: 4 bytes (total: 32) */
    16202:16239:  tmp = *(uint32_t *)in;
    16202:16240:  if ((tmp2 | (tmp % (1U << 6)) << (10 - 6)) == value) {
       33:16241:    *found = 22;
       33:16242:    return 22;
        -:16243:  }
    16169:16244:  if (((tmp >> 6) & 1023) == value) {
       33:16245:    *found = 23;
       33:16246:    return 23;
        -:16247:  }
    16136:16248:  if (((tmp >> 16) & 1023) == value) {
       33:16249:    *found = 24;
       33:16250:    return 24;
        -:16251:  }
    16103:16252:  tmp2 = tmp >> 26;
        -:16253:  in += sizeof(uint32_t);
        -:16254:  /* consumed: 4 bytes (total: 36) */
    16103:16255:  tmp = *(uint32_t *)in;
    16103:16256:  if ((tmp2 | (tmp % (1U << 4)) << (10 - 4)) == value) {
       33:16257:    *found = 25;
       33:16258:    return 25;
        -:16259:  }
    16070:16260:  if (((tmp >> 4) & 1023) == value) {
       33:16261:    *found = 26;
       33:16262:    return 26;
        -:16263:  }
    16037:16264:  if (((tmp >> 14) & 1023) == value) {
       33:16265:    *found = 27;
       33:16266:    return 27;
        -:16267:  }
    16004:16268:  tmp2 = tmp >> 24;
        -:16269:  in += sizeof(uint32_t);
        -:16270:  /* consumed: 4 bytes (total: 40) */
    16004:16271:  tmp = *(uint32_t *)in;
    16004:16272:  if ((tmp2 | (tmp % (1U << 2)) << (10 - 2)) == value) {
       33:16273:    *found = 28;
       33:16274:    return 28;
        -:16275:  }
    15971:16276:  if (((tmp >> 2) & 1023) == value) {
       33:16277:    *found = 29;
       33:16278:    return 29;
        -:16279:  }
    15938:16280:  if (((tmp >> 12) & 1023) == value) {
       33:16281:    *found = 30;
       33:16282:    return 30;
        -:16283:  }
    15905:16284:  if (((tmp >> 22) & 1023) == value) {
       33:16285:    *found = 31;
       33:16286:    return 31;
        -:16287:  }
        -:16288:  /* remaining: 0 bits */
        -:16289:  return (40);
        -:16290:}
        -:16291:
        -:16292:static uint32_t
    45373:16293:linsearch11_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:16294:  uint32_t tmp, tmp2;
    45373:16295:  value -= base;
        -:16296:  (void)tmp2;
    45373:16297:  tmp = *(uint32_t *)in;
        -:16298:  /* consumed: 4 bytes (total: 4) */
    45373:16299:  if (((tmp >> 0) & 2047) == value) {
       74:16300:    *found = 0;
       74:16301:    return 0;
        -:16302:  }
    45299:16303:  if (((tmp >> 11) & 2047) == value) {
       74:16304:    *found = 1;
       74:16305:    return 1;
        -:16306:  }
    45225:16307:  tmp2 = tmp >> 22;
        -:16308:  in += sizeof(uint32_t);
        -:16309:  /* consumed: 4 bytes (total: 8) */
    45225:16310:  tmp = *(uint32_t *)in;
    45225:16311:  if ((tmp2 | (tmp % (1U << 1)) << (11 - 1)) == value) {
       74:16312:    *found = 2;
       74:16313:    return 2;
        -:16314:  }
    45151:16315:  if (((tmp >> 1) & 2047) == value) {
       74:16316:    *found = 3;
       74:16317:    return 3;
        -:16318:  }
    45077:16319:  if (((tmp >> 12) & 2047) == value) {
       74:16320:    *found = 4;
       74:16321:    return 4;
        -:16322:  }
    45003:16323:  tmp2 = tmp >> 23;
        -:16324:  in += sizeof(uint32_t);
        -:16325:  /* consumed: 4 bytes (total: 12) */
    45003:16326:  tmp = *(uint32_t *)in;
    45003:16327:  if ((tmp2 | (tmp % (1U << 2)) << (11 - 2)) == value) {
       74:16328:    *found = 5;
       74:16329:    return 5;
        -:16330:  }
    44929:16331:  if (((tmp >> 2) & 2047) == value) {
       74:16332:    *found = 6;
       74:16333:    return 6;
        -:16334:  }
    44855:16335:  if (((tmp >> 13) & 2047) == value) {
       74:16336:    *found = 7;
       74:16337:    return 7;
        -:16338:  }
    44781:16339:  tmp2 = tmp >> 24;
        -:16340:  in += sizeof(uint32_t);
        -:16341:  /* consumed: 4 bytes (total: 16) */
    44781:16342:  tmp = *(uint32_t *)in;
    44781:16343:  if ((tmp2 | (tmp % (1U << 3)) << (11 - 3)) == value) {
       74:16344:    *found = 8;
       74:16345:    return 8;
        -:16346:  }
    44707:16347:  if (((tmp >> 3) & 2047) == value) {
       74:16348:    *found = 9;
       74:16349:    return 9;
        -:16350:  }
    44633:16351:  if (((tmp >> 14) & 2047) == value) {
       74:16352:    *found = 10;
       74:16353:    return 10;
        -:16354:  }
    44559:16355:  tmp2 = tmp >> 25;
        -:16356:  in += sizeof(uint32_t);
        -:16357:  /* consumed: 4 bytes (total: 20) */
    44559:16358:  tmp = *(uint32_t *)in;
    44559:16359:  if ((tmp2 | (tmp % (1U << 4)) << (11 - 4)) == value) {
       74:16360:    *found = 11;
       74:16361:    return 11;
        -:16362:  }
    44485:16363:  if (((tmp >> 4) & 2047) == value) {
       74:16364:    *found = 12;
       74:16365:    return 12;
        -:16366:  }
    44411:16367:  if (((tmp >> 15) & 2047) == value) {
       74:16368:    *found = 13;
       74:16369:    return 13;
        -:16370:  }
    44337:16371:  tmp2 = tmp >> 26;
        -:16372:  in += sizeof(uint32_t);
        -:16373:  /* consumed: 4 bytes (total: 24) */
    44337:16374:  tmp = *(uint32_t *)in;
    44337:16375:  if ((tmp2 | (tmp % (1U << 5)) << (11 - 5)) == value) {
       74:16376:    *found = 14;
       74:16377:    return 14;
        -:16378:  }
    44263:16379:  if (((tmp >> 5) & 2047) == value) {
       74:16380:    *found = 15;
       74:16381:    return 15;
        -:16382:  }
    44189:16383:  if (((tmp >> 16) & 2047) == value) {
       74:16384:    *found = 16;
       74:16385:    return 16;
        -:16386:  }
    44115:16387:  tmp2 = tmp >> 27;
        -:16388:  in += sizeof(uint32_t);
        -:16389:  /* consumed: 4 bytes (total: 28) */
    44115:16390:  tmp = *(uint32_t *)in;
    44115:16391:  if ((tmp2 | (tmp % (1U << 6)) << (11 - 6)) == value) {
       74:16392:    *found = 17;
       74:16393:    return 17;
        -:16394:  }
    44041:16395:  if (((tmp >> 6) & 2047) == value) {
       74:16396:    *found = 18;
       74:16397:    return 18;
        -:16398:  }
    43967:16399:  if (((tmp >> 17) & 2047) == value) {
       74:16400:    *found = 19;
       74:16401:    return 19;
        -:16402:  }
    43893:16403:  tmp2 = tmp >> 28;
        -:16404:  in += sizeof(uint32_t);
        -:16405:  /* consumed: 4 bytes (total: 32) */
    43893:16406:  tmp = *(uint32_t *)in;
    43893:16407:  if ((tmp2 | (tmp % (1U << 7)) << (11 - 7)) == value) {
       74:16408:    *found = 20;
       74:16409:    return 20;
        -:16410:  }
    43819:16411:  if (((tmp >> 7) & 2047) == value) {
       74:16412:    *found = 21;
       74:16413:    return 21;
        -:16414:  }
    43745:16415:  if (((tmp >> 18) & 2047) == value) {
       74:16416:    *found = 22;
       74:16417:    return 22;
        -:16418:  }
    43671:16419:  tmp2 = tmp >> 29;
        -:16420:  in += sizeof(uint32_t);
        -:16421:  /* consumed: 4 bytes (total: 36) */
    43671:16422:  tmp = *(uint32_t *)in;
    43671:16423:  if ((tmp2 | (tmp % (1U << 8)) << (11 - 8)) == value) {
       74:16424:    *found = 23;
       74:16425:    return 23;
        -:16426:  }
    43597:16427:  if (((tmp >> 8) & 2047) == value) {
       74:16428:    *found = 24;
       74:16429:    return 24;
        -:16430:  }
    43523:16431:  if (((tmp >> 19) & 2047) == value) {
       74:16432:    *found = 25;
       74:16433:    return 25;
        -:16434:  }
    43449:16435:  tmp2 = tmp >> 30;
        -:16436:  in += sizeof(uint32_t);
        -:16437:  /* consumed: 4 bytes (total: 40) */
    43449:16438:  tmp = *(uint32_t *)in;
    43449:16439:  if ((tmp2 | (tmp % (1U << 9)) << (11 - 9)) == value) {
       74:16440:    *found = 26;
       74:16441:    return 26;
        -:16442:  }
    43375:16443:  if (((tmp >> 9) & 2047) == value) {
       74:16444:    *found = 27;
       74:16445:    return 27;
        -:16446:  }
    43301:16447:  if (((tmp >> 20) & 2047) == value) {
       74:16448:    *found = 28;
       74:16449:    return 28;
        -:16450:  }
    43227:16451:  tmp2 = tmp >> 31;
        -:16452:  in += sizeof(uint32_t);
        -:16453:  /* consumed: 4 bytes (total: 44) */
    43227:16454:  tmp = *(uint32_t *)in;
    43227:16455:  if ((tmp2 | (tmp % (1U << 10)) << (11 - 10)) == value) {
       74:16456:    *found = 29;
       74:16457:    return 29;
        -:16458:  }
    43153:16459:  if (((tmp >> 10) & 2047) == value) {
       74:16460:    *found = 30;
       74:16461:    return 30;
        -:16462:  }
    43079:16463:  if (((tmp >> 21) & 2047) == value) {
       74:16464:    *found = 31;
       74:16465:    return 31;
        -:16466:  }
        -:16467:  /* remaining: 0 bits */
        -:16468:  return (44);
        -:16469:}
        -:16470:
        -:16471:static uint32_t
       32:16472:linsearch12_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:16473:  uint32_t tmp, tmp2;
       32:16474:  value -= base;
        -:16475:  (void)tmp2;
       32:16476:  tmp = *(uint32_t *)in;
        -:16477:  /* consumed: 4 bytes (total: 4) */
       32:16478:  if (((tmp >> 0) & 4095) == value) {
        1:16479:    *found = 0;
        1:16480:    return 0;
        -:16481:  }
       31:16482:  if (((tmp >> 12) & 4095) == value) {
        1:16483:    *found = 1;
        1:16484:    return 1;
        -:16485:  }
       30:16486:  tmp2 = tmp >> 24;
        -:16487:  in += sizeof(uint32_t);
        -:16488:  /* consumed: 4 bytes (total: 8) */
       30:16489:  tmp = *(uint32_t *)in;
       30:16490:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:16491:    *found = 2;
        1:16492:    return 2;
        -:16493:  }
       29:16494:  if (((tmp >> 4) & 4095) == value) {
        1:16495:    *found = 3;
        1:16496:    return 3;
        -:16497:  }
       28:16498:  if (((tmp >> 16) & 4095) == value) {
        1:16499:    *found = 4;
        1:16500:    return 4;
        -:16501:  }
       27:16502:  tmp2 = tmp >> 28;
        -:16503:  in += sizeof(uint32_t);
        -:16504:  /* consumed: 4 bytes (total: 12) */
       27:16505:  tmp = *(uint32_t *)in;
       27:16506:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:16507:    *found = 5;
        1:16508:    return 5;
        -:16509:  }
       26:16510:  if (((tmp >> 8) & 4095) == value) {
        1:16511:    *found = 6;
        1:16512:    return 6;
        -:16513:  }
       25:16514:  if (((tmp >> 20) & 4095) == value) {
        1:16515:    *found = 7;
        1:16516:    return 7;
        -:16517:  }
        -:16518:  in += sizeof(uint32_t);
       24:16519:  tmp = *(uint32_t *)in;
        -:16520:  /* consumed: 4 bytes (total: 16) */
       24:16521:  if (((tmp >> 0) & 4095) == value) {
        1:16522:    *found = 8;
        1:16523:    return 8;
        -:16524:  }
       23:16525:  if (((tmp >> 12) & 4095) == value) {
        1:16526:    *found = 9;
        1:16527:    return 9;
        -:16528:  }
       22:16529:  tmp2 = tmp >> 24;
        -:16530:  in += sizeof(uint32_t);
        -:16531:  /* consumed: 4 bytes (total: 20) */
       22:16532:  tmp = *(uint32_t *)in;
       22:16533:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:16534:    *found = 10;
        1:16535:    return 10;
        -:16536:  }
       21:16537:  if (((tmp >> 4) & 4095) == value) {
        1:16538:    *found = 11;
        1:16539:    return 11;
        -:16540:  }
       20:16541:  if (((tmp >> 16) & 4095) == value) {
        1:16542:    *found = 12;
        1:16543:    return 12;
        -:16544:  }
       19:16545:  tmp2 = tmp >> 28;
        -:16546:  in += sizeof(uint32_t);
        -:16547:  /* consumed: 4 bytes (total: 24) */
       19:16548:  tmp = *(uint32_t *)in;
       19:16549:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:16550:    *found = 13;
        1:16551:    return 13;
        -:16552:  }
       18:16553:  if (((tmp >> 8) & 4095) == value) {
        1:16554:    *found = 14;
        1:16555:    return 14;
        -:16556:  }
       17:16557:  if (((tmp >> 20) & 4095) == value) {
        1:16558:    *found = 15;
        1:16559:    return 15;
        -:16560:  }
        -:16561:  in += sizeof(uint32_t);
       16:16562:  tmp = *(uint32_t *)in;
        -:16563:  /* consumed: 4 bytes (total: 28) */
       16:16564:  if (((tmp >> 0) & 4095) == value) {
        1:16565:    *found = 16;
        1:16566:    return 16;
        -:16567:  }
       15:16568:  if (((tmp >> 12) & 4095) == value) {
        1:16569:    *found = 17;
        1:16570:    return 17;
        -:16571:  }
       14:16572:  tmp2 = tmp >> 24;
        -:16573:  in += sizeof(uint32_t);
        -:16574:  /* consumed: 4 bytes (total: 32) */
       14:16575:  tmp = *(uint32_t *)in;
       14:16576:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:16577:    *found = 18;
        1:16578:    return 18;
        -:16579:  }
       13:16580:  if (((tmp >> 4) & 4095) == value) {
        1:16581:    *found = 19;
        1:16582:    return 19;
        -:16583:  }
       12:16584:  if (((tmp >> 16) & 4095) == value) {
        1:16585:    *found = 20;
        1:16586:    return 20;
        -:16587:  }
       11:16588:  tmp2 = tmp >> 28;
        -:16589:  in += sizeof(uint32_t);
        -:16590:  /* consumed: 4 bytes (total: 36) */
       11:16591:  tmp = *(uint32_t *)in;
       11:16592:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:16593:    *found = 21;
        1:16594:    return 21;
        -:16595:  }
       10:16596:  if (((tmp >> 8) & 4095) == value) {
        1:16597:    *found = 22;
        1:16598:    return 22;
        -:16599:  }
        9:16600:  if (((tmp >> 20) & 4095) == value) {
        1:16601:    *found = 23;
        1:16602:    return 23;
        -:16603:  }
        -:16604:  in += sizeof(uint32_t);
        8:16605:  tmp = *(uint32_t *)in;
        -:16606:  /* consumed: 4 bytes (total: 40) */
        8:16607:  if (((tmp >> 0) & 4095) == value) {
        1:16608:    *found = 24;
        1:16609:    return 24;
        -:16610:  }
        7:16611:  if (((tmp >> 12) & 4095) == value) {
        1:16612:    *found = 25;
        1:16613:    return 25;
        -:16614:  }
        6:16615:  tmp2 = tmp >> 24;
        -:16616:  in += sizeof(uint32_t);
        -:16617:  /* consumed: 4 bytes (total: 44) */
        6:16618:  tmp = *(uint32_t *)in;
        6:16619:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:16620:    *found = 26;
        1:16621:    return 26;
        -:16622:  }
        5:16623:  if (((tmp >> 4) & 4095) == value) {
        1:16624:    *found = 27;
        1:16625:    return 27;
        -:16626:  }
        4:16627:  if (((tmp >> 16) & 4095) == value) {
        1:16628:    *found = 28;
        1:16629:    return 28;
        -:16630:  }
        3:16631:  tmp2 = tmp >> 28;
        -:16632:  in += sizeof(uint32_t);
        -:16633:  /* consumed: 4 bytes (total: 48) */
        3:16634:  tmp = *(uint32_t *)in;
        3:16635:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:16636:    *found = 29;
        1:16637:    return 29;
        -:16638:  }
        2:16639:  if (((tmp >> 8) & 4095) == value) {
        1:16640:    *found = 30;
        1:16641:    return 30;
        -:16642:  }
        1:16643:  if (((tmp >> 20) & 4095) == value) {
        1:16644:    *found = 31;
        1:16645:    return 31;
        -:16646:  }
        -:16647:  /* remaining: 0 bits */
        -:16648:  return (48);
        -:16649:}
        -:16650:
        -:16651:static uint32_t
       32:16652:linsearch13_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:16653:  uint32_t tmp, tmp2;
       32:16654:  value -= base;
        -:16655:  (void)tmp2;
       32:16656:  tmp = *(uint32_t *)in;
        -:16657:  /* consumed: 4 bytes (total: 4) */
       32:16658:  if (((tmp >> 0) & 8191) == value) {
        1:16659:    *found = 0;
        1:16660:    return 0;
        -:16661:  }
       31:16662:  if (((tmp >> 13) & 8191) == value) {
        1:16663:    *found = 1;
        1:16664:    return 1;
        -:16665:  }
       30:16666:  tmp2 = tmp >> 26;
        -:16667:  in += sizeof(uint32_t);
        -:16668:  /* consumed: 4 bytes (total: 8) */
       30:16669:  tmp = *(uint32_t *)in;
       30:16670:  if ((tmp2 | (tmp % (1U << 7)) << (13 - 7)) == value) {
        1:16671:    *found = 2;
        1:16672:    return 2;
        -:16673:  }
       29:16674:  if (((tmp >> 7) & 8191) == value) {
        1:16675:    *found = 3;
        1:16676:    return 3;
        -:16677:  }
       28:16678:  tmp2 = tmp >> 20;
        -:16679:  in += sizeof(uint32_t);
        -:16680:  /* consumed: 4 bytes (total: 12) */
       28:16681:  tmp = *(uint32_t *)in;
       28:16682:  if ((tmp2 | (tmp % (1U << 1)) << (13 - 1)) == value) {
        1:16683:    *found = 4;
        1:16684:    return 4;
        -:16685:  }
       27:16686:  if (((tmp >> 1) & 8191) == value) {
        1:16687:    *found = 5;
        1:16688:    return 5;
        -:16689:  }
       26:16690:  if (((tmp >> 14) & 8191) == value) {
        1:16691:    *found = 6;
        1:16692:    return 6;
        -:16693:  }
       25:16694:  tmp2 = tmp >> 27;
        -:16695:  in += sizeof(uint32_t);
        -:16696:  /* consumed: 4 bytes (total: 16) */
       25:16697:  tmp = *(uint32_t *)in;
       25:16698:  if ((tmp2 | (tmp % (1U << 8)) << (13 - 8)) == value) {
        1:16699:    *found = 7;
        1:16700:    return 7;
        -:16701:  }
       24:16702:  if (((tmp >> 8) & 8191) == value) {
        1:16703:    *found = 8;
        1:16704:    return 8;
        -:16705:  }
       23:16706:  tmp2 = tmp >> 21;
        -:16707:  in += sizeof(uint32_t);
        -:16708:  /* consumed: 4 bytes (total: 20) */
       23:16709:  tmp = *(uint32_t *)in;
       23:16710:  if ((tmp2 | (tmp % (1U << 2)) << (13 - 2)) == value) {
        1:16711:    *found = 9;
        1:16712:    return 9;
        -:16713:  }
       22:16714:  if (((tmp >> 2) & 8191) == value) {
        1:16715:    *found = 10;
        1:16716:    return 10;
        -:16717:  }
       21:16718:  if (((tmp >> 15) & 8191) == value) {
        1:16719:    *found = 11;
        1:16720:    return 11;
        -:16721:  }
       20:16722:  tmp2 = tmp >> 28;
        -:16723:  in += sizeof(uint32_t);
        -:16724:  /* consumed: 4 bytes (total: 24) */
       20:16725:  tmp = *(uint32_t *)in;
       20:16726:  if ((tmp2 | (tmp % (1U << 9)) << (13 - 9)) == value) {
        1:16727:    *found = 12;
        1:16728:    return 12;
        -:16729:  }
       19:16730:  if (((tmp >> 9) & 8191) == value) {
        1:16731:    *found = 13;
        1:16732:    return 13;
        -:16733:  }
       18:16734:  tmp2 = tmp >> 22;
        -:16735:  in += sizeof(uint32_t);
        -:16736:  /* consumed: 4 bytes (total: 28) */
       18:16737:  tmp = *(uint32_t *)in;
       18:16738:  if ((tmp2 | (tmp % (1U << 3)) << (13 - 3)) == value) {
        1:16739:    *found = 14;
        1:16740:    return 14;
        -:16741:  }
       17:16742:  if (((tmp >> 3) & 8191) == value) {
        1:16743:    *found = 15;
        1:16744:    return 15;
        -:16745:  }
       16:16746:  if (((tmp >> 16) & 8191) == value) {
        1:16747:    *found = 16;
        1:16748:    return 16;
        -:16749:  }
       15:16750:  tmp2 = tmp >> 29;
        -:16751:  in += sizeof(uint32_t);
        -:16752:  /* consumed: 4 bytes (total: 32) */
       15:16753:  tmp = *(uint32_t *)in;
       15:16754:  if ((tmp2 | (tmp % (1U << 10)) << (13 - 10)) == value) {
        1:16755:    *found = 17;
        1:16756:    return 17;
        -:16757:  }
       14:16758:  if (((tmp >> 10) & 8191) == value) {
        1:16759:    *found = 18;
        1:16760:    return 18;
        -:16761:  }
       13:16762:  tmp2 = tmp >> 23;
        -:16763:  in += sizeof(uint32_t);
        -:16764:  /* consumed: 4 bytes (total: 36) */
       13:16765:  tmp = *(uint32_t *)in;
       13:16766:  if ((tmp2 | (tmp % (1U << 4)) << (13 - 4)) == value) {
        1:16767:    *found = 19;
        1:16768:    return 19;
        -:16769:  }
       12:16770:  if (((tmp >> 4) & 8191) == value) {
        1:16771:    *found = 20;
        1:16772:    return 20;
        -:16773:  }
       11:16774:  if (((tmp >> 17) & 8191) == value) {
        1:16775:    *found = 21;
        1:16776:    return 21;
        -:16777:  }
       10:16778:  tmp2 = tmp >> 30;
        -:16779:  in += sizeof(uint32_t);
        -:16780:  /* consumed: 4 bytes (total: 40) */
       10:16781:  tmp = *(uint32_t *)in;
       10:16782:  if ((tmp2 | (tmp % (1U << 11)) << (13 - 11)) == value) {
        1:16783:    *found = 22;
        1:16784:    return 22;
        -:16785:  }
        9:16786:  if (((tmp >> 11) & 8191) == value) {
        1:16787:    *found = 23;
        1:16788:    return 23;
        -:16789:  }
        8:16790:  tmp2 = tmp >> 24;
        -:16791:  in += sizeof(uint32_t);
        -:16792:  /* consumed: 4 bytes (total: 44) */
        8:16793:  tmp = *(uint32_t *)in;
        8:16794:  if ((tmp2 | (tmp % (1U << 5)) << (13 - 5)) == value) {
        1:16795:    *found = 24;
        1:16796:    return 24;
        -:16797:  }
        7:16798:  if (((tmp >> 5) & 8191) == value) {
        1:16799:    *found = 25;
        1:16800:    return 25;
        -:16801:  }
        6:16802:  if (((tmp >> 18) & 8191) == value) {
        1:16803:    *found = 26;
        1:16804:    return 26;
        -:16805:  }
        5:16806:  tmp2 = tmp >> 31;
        -:16807:  in += sizeof(uint32_t);
        -:16808:  /* consumed: 4 bytes (total: 48) */
        5:16809:  tmp = *(uint32_t *)in;
        5:16810:  if ((tmp2 | (tmp % (1U << 12)) << (13 - 12)) == value) {
        1:16811:    *found = 27;
        1:16812:    return 27;
        -:16813:  }
        4:16814:  if (((tmp >> 12) & 8191) == value) {
        1:16815:    *found = 28;
        1:16816:    return 28;
        -:16817:  }
        3:16818:  tmp2 = tmp >> 25;
        -:16819:  in += sizeof(uint32_t);
        -:16820:  /* consumed: 4 bytes (total: 52) */
        3:16821:  tmp = *(uint32_t *)in;
        3:16822:  if ((tmp2 | (tmp % (1U << 6)) << (13 - 6)) == value) {
        1:16823:    *found = 29;
        1:16824:    return 29;
        -:16825:  }
        2:16826:  if (((tmp >> 6) & 8191) == value) {
        1:16827:    *found = 30;
        1:16828:    return 30;
        -:16829:  }
        1:16830:  if (((tmp >> 19) & 8191) == value) {
        1:16831:    *found = 31;
        1:16832:    return 31;
        -:16833:  }
        -:16834:  /* remaining: 0 bits */
        -:16835:  return (52);
        -:16836:}
        -:16837:
        -:16838:static uint32_t
       32:16839:linsearch14_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:16840:  uint32_t tmp, tmp2;
       32:16841:  value -= base;
        -:16842:  (void)tmp2;
       32:16843:  tmp = *(uint32_t *)in;
        -:16844:  /* consumed: 4 bytes (total: 4) */
       32:16845:  if (((tmp >> 0) & 16383) == value) {
        1:16846:    *found = 0;
        1:16847:    return 0;
        -:16848:  }
       31:16849:  if (((tmp >> 14) & 16383) == value) {
        1:16850:    *found = 1;
        1:16851:    return 1;
        -:16852:  }
       30:16853:  tmp2 = tmp >> 28;
        -:16854:  in += sizeof(uint32_t);
        -:16855:  /* consumed: 4 bytes (total: 8) */
       30:16856:  tmp = *(uint32_t *)in;
       30:16857:  if ((tmp2 | (tmp % (1U << 10)) << (14 - 10)) == value) {
        1:16858:    *found = 2;
        1:16859:    return 2;
        -:16860:  }
       29:16861:  if (((tmp >> 10) & 16383) == value) {
        1:16862:    *found = 3;
        1:16863:    return 3;
        -:16864:  }
       28:16865:  tmp2 = tmp >> 24;
        -:16866:  in += sizeof(uint32_t);
        -:16867:  /* consumed: 4 bytes (total: 12) */
       28:16868:  tmp = *(uint32_t *)in;
       28:16869:  if ((tmp2 | (tmp % (1U << 6)) << (14 - 6)) == value) {
        1:16870:    *found = 4;
        1:16871:    return 4;
        -:16872:  }
       27:16873:  if (((tmp >> 6) & 16383) == value) {
        1:16874:    *found = 5;
        1:16875:    return 5;
        -:16876:  }
       26:16877:  tmp2 = tmp >> 20;
        -:16878:  in += sizeof(uint32_t);
        -:16879:  /* consumed: 4 bytes (total: 16) */
       26:16880:  tmp = *(uint32_t *)in;
       26:16881:  if ((tmp2 | (tmp % (1U << 2)) << (14 - 2)) == value) {
        1:16882:    *found = 6;
        1:16883:    return 6;
        -:16884:  }
       25:16885:  if (((tmp >> 2) & 16383) == value) {
        1:16886:    *found = 7;
        1:16887:    return 7;
        -:16888:  }
       24:16889:  if (((tmp >> 16) & 16383) == value) {
        1:16890:    *found = 8;
        1:16891:    return 8;
        -:16892:  }
       23:16893:  tmp2 = tmp >> 30;
        -:16894:  in += sizeof(uint32_t);
        -:16895:  /* consumed: 4 bytes (total: 20) */
       23:16896:  tmp = *(uint32_t *)in;
       23:16897:  if ((tmp2 | (tmp % (1U << 12)) << (14 - 12)) == value) {
        1:16898:    *found = 9;
        1:16899:    return 9;
        -:16900:  }
       22:16901:  if (((tmp >> 12) & 16383) == value) {
        1:16902:    *found = 10;
        1:16903:    return 10;
        -:16904:  }
       21:16905:  tmp2 = tmp >> 26;
        -:16906:  in += sizeof(uint32_t);
        -:16907:  /* consumed: 4 bytes (total: 24) */
       21:16908:  tmp = *(uint32_t *)in;
       21:16909:  if ((tmp2 | (tmp % (1U << 8)) << (14 - 8)) == value) {
        1:16910:    *found = 11;
        1:16911:    return 11;
        -:16912:  }
       20:16913:  if (((tmp >> 8) & 16383) == value) {
        1:16914:    *found = 12;
        1:16915:    return 12;
        -:16916:  }
       19:16917:  tmp2 = tmp >> 22;
        -:16918:  in += sizeof(uint32_t);
        -:16919:  /* consumed: 4 bytes (total: 28) */
       19:16920:  tmp = *(uint32_t *)in;
       19:16921:  if ((tmp2 | (tmp % (1U << 4)) << (14 - 4)) == value) {
        1:16922:    *found = 13;
        1:16923:    return 13;
        -:16924:  }
       18:16925:  if (((tmp >> 4) & 16383) == value) {
        1:16926:    *found = 14;
        1:16927:    return 14;
        -:16928:  }
       17:16929:  if (((tmp >> 18) & 16383) == value) {
        1:16930:    *found = 15;
        1:16931:    return 15;
        -:16932:  }
        -:16933:  in += sizeof(uint32_t);
       16:16934:  tmp = *(uint32_t *)in;
        -:16935:  /* consumed: 4 bytes (total: 32) */
       16:16936:  if (((tmp >> 0) & 16383) == value) {
        1:16937:    *found = 16;
        1:16938:    return 16;
        -:16939:  }
       15:16940:  if (((tmp >> 14) & 16383) == value) {
        1:16941:    *found = 17;
        1:16942:    return 17;
        -:16943:  }
       14:16944:  tmp2 = tmp >> 28;
        -:16945:  in += sizeof(uint32_t);
        -:16946:  /* consumed: 4 bytes (total: 36) */
       14:16947:  tmp = *(uint32_t *)in;
       14:16948:  if ((tmp2 | (tmp % (1U << 10)) << (14 - 10)) == value) {
        1:16949:    *found = 18;
        1:16950:    return 18;
        -:16951:  }
       13:16952:  if (((tmp >> 10) & 16383) == value) {
        1:16953:    *found = 19;
        1:16954:    return 19;
        -:16955:  }
       12:16956:  tmp2 = tmp >> 24;
        -:16957:  in += sizeof(uint32_t);
        -:16958:  /* consumed: 4 bytes (total: 40) */
       12:16959:  tmp = *(uint32_t *)in;
       12:16960:  if ((tmp2 | (tmp % (1U << 6)) << (14 - 6)) == value) {
        1:16961:    *found = 20;
        1:16962:    return 20;
        -:16963:  }
       11:16964:  if (((tmp >> 6) & 16383) == value) {
        1:16965:    *found = 21;
        1:16966:    return 21;
        -:16967:  }
       10:16968:  tmp2 = tmp >> 20;
        -:16969:  in += sizeof(uint32_t);
        -:16970:  /* consumed: 4 bytes (total: 44) */
       10:16971:  tmp = *(uint32_t *)in;
       10:16972:  if ((tmp2 | (tmp % (1U << 2)) << (14 - 2)) == value) {
        1:16973:    *found = 22;
        1:16974:    return 22;
        -:16975:  }
        9:16976:  if (((tmp >> 2) & 16383) == value) {
        1:16977:    *found = 23;
        1:16978:    return 23;
        -:16979:  }
        8:16980:  if (((tmp >> 16) & 16383) == value) {
        1:16981:    *found = 24;
        1:16982:    return 24;
        -:16983:  }
        7:16984:  tmp2 = tmp >> 30;
        -:16985:  in += sizeof(uint32_t);
        -:16986:  /* consumed: 4 bytes (total: 48) */
        7:16987:  tmp = *(uint32_t *)in;
        7:16988:  if ((tmp2 | (tmp % (1U << 12)) << (14 - 12)) == value) {
        1:16989:    *found = 25;
        1:16990:    return 25;
        -:16991:  }
        6:16992:  if (((tmp >> 12) & 16383) == value) {
        1:16993:    *found = 26;
        1:16994:    return 26;
        -:16995:  }
        5:16996:  tmp2 = tmp >> 26;
        -:16997:  in += sizeof(uint32_t);
        -:16998:  /* consumed: 4 bytes (total: 52) */
        5:16999:  tmp = *(uint32_t *)in;
        5:17000:  if ((tmp2 | (tmp % (1U << 8)) << (14 - 8)) == value) {
        1:17001:    *found = 27;
        1:17002:    return 27;
        -:17003:  }
        4:17004:  if (((tmp >> 8) & 16383) == value) {
        1:17005:    *found = 28;
        1:17006:    return 28;
        -:17007:  }
        3:17008:  tmp2 = tmp >> 22;
        -:17009:  in += sizeof(uint32_t);
        -:17010:  /* consumed: 4 bytes (total: 56) */
        3:17011:  tmp = *(uint32_t *)in;
        3:17012:  if ((tmp2 | (tmp % (1U << 4)) << (14 - 4)) == value) {
        1:17013:    *found = 29;
        1:17014:    return 29;
        -:17015:  }
        2:17016:  if (((tmp >> 4) & 16383) == value) {
        1:17017:    *found = 30;
        1:17018:    return 30;
        -:17019:  }
        1:17020:  if (((tmp >> 18) & 16383) == value) {
        1:17021:    *found = 31;
        1:17022:    return 31;
        -:17023:  }
        -:17024:  /* remaining: 0 bits */
        -:17025:  return (56);
        -:17026:}
        -:17027:
        -:17028:static uint32_t
    10963:17029:linsearch15_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:17030:  uint32_t tmp, tmp2;
    10963:17031:  value -= base;
        -:17032:  (void)tmp2;
    10963:17033:  tmp = *(uint32_t *)in;
        -:17034:  /* consumed: 4 bytes (total: 4) */
    10963:17035:  if (((tmp >> 0) & 32767) == value) {
      158:17036:    *found = 0;
      158:17037:    return 0;
        -:17038:  }
    10805:17039:  if (((tmp >> 15) & 32767) == value) {
      158:17040:    *found = 1;
      158:17041:    return 1;
        -:17042:  }
    10647:17043:  tmp2 = tmp >> 30;
        -:17044:  in += sizeof(uint32_t);
        -:17045:  /* consumed: 4 bytes (total: 8) */
    10647:17046:  tmp = *(uint32_t *)in;
    10647:17047:  if ((tmp2 | (tmp % (1U << 13)) << (15 - 13)) == value) {
      158:17048:    *found = 2;
      158:17049:    return 2;
        -:17050:  }
    10489:17051:  if (((tmp >> 13) & 32767) == value) {
      158:17052:    *found = 3;
      158:17053:    return 3;
        -:17054:  }
    10331:17055:  tmp2 = tmp >> 28;
        -:17056:  in += sizeof(uint32_t);
        -:17057:  /* consumed: 4 bytes (total: 12) */
    10331:17058:  tmp = *(uint32_t *)in;
    10331:17059:  if ((tmp2 | (tmp % (1U << 11)) << (15 - 11)) == value) {
      158:17060:    *found = 4;
      158:17061:    return 4;
        -:17062:  }
    10173:17063:  if (((tmp >> 11) & 32767) == value) {
      158:17064:    *found = 5;
      158:17065:    return 5;
        -:17066:  }
    10015:17067:  tmp2 = tmp >> 26;
        -:17068:  in += sizeof(uint32_t);
        -:17069:  /* consumed: 4 bytes (total: 16) */
    10015:17070:  tmp = *(uint32_t *)in;
    10015:17071:  if ((tmp2 | (tmp % (1U << 9)) << (15 - 9)) == value) {
      158:17072:    *found = 6;
      158:17073:    return 6;
        -:17074:  }
     9857:17075:  if (((tmp >> 9) & 32767) == value) {
      133:17076:    *found = 7;
      133:17077:    return 7;
        -:17078:  }
     9724:17079:  tmp2 = tmp >> 24;
        -:17080:  in += sizeof(uint32_t);
        -:17081:  /* consumed: 4 bytes (total: 20) */
     9724:17082:  tmp = *(uint32_t *)in;
     9724:17083:  if ((tmp2 | (tmp % (1U << 7)) << (15 - 7)) == value) {
      133:17084:    *found = 8;
      133:17085:    return 8;
        -:17086:  }
     9591:17087:  if (((tmp >> 7) & 32767) == value) {
      133:17088:    *found = 9;
      133:17089:    return 9;
        -:17090:  }
     9458:17091:  tmp2 = tmp >> 22;
        -:17092:  in += sizeof(uint32_t);
        -:17093:  /* consumed: 4 bytes (total: 24) */
     9458:17094:  tmp = *(uint32_t *)in;
     9458:17095:  if ((tmp2 | (tmp % (1U << 5)) << (15 - 5)) == value) {
      133:17096:    *found = 10;
      133:17097:    return 10;
        -:17098:  }
     9325:17099:  if (((tmp >> 5) & 32767) == value) {
      133:17100:    *found = 11;
      133:17101:    return 11;
        -:17102:  }
     9192:17103:  tmp2 = tmp >> 20;
        -:17104:  in += sizeof(uint32_t);
        -:17105:  /* consumed: 4 bytes (total: 28) */
     9192:17106:  tmp = *(uint32_t *)in;
     9192:17107:  if ((tmp2 | (tmp % (1U << 3)) << (15 - 3)) == value) {
      133:17108:    *found = 12;
      133:17109:    return 12;
        -:17110:  }
     9059:17111:  if (((tmp >> 3) & 32767) == value) {
      133:17112:    *found = 13;
      133:17113:    return 13;
        -:17114:  }
     8926:17115:  tmp2 = tmp >> 18;
        -:17116:  in += sizeof(uint32_t);
        -:17117:  /* consumed: 4 bytes (total: 32) */
     8926:17118:  tmp = *(uint32_t *)in;
     8926:17119:  if ((tmp2 | (tmp % (1U << 1)) << (15 - 1)) == value) {
      133:17120:    *found = 14;
      133:17121:    return 14;
        -:17122:  }
     8793:17123:  if (((tmp >> 1) & 32767) == value) {
      132:17124:    *found = 15;
      132:17125:    return 15;
        -:17126:  }
     8661:17127:  if (((tmp >> 16) & 32767) == value) {
      131:17128:    *found = 16;
      131:17129:    return 16;
        -:17130:  }
     8530:17131:  tmp2 = tmp >> 31;
        -:17132:  in += sizeof(uint32_t);
        -:17133:  /* consumed: 4 bytes (total: 36) */
     8530:17134:  tmp = *(uint32_t *)in;
     8530:17135:  if ((tmp2 | (tmp % (1U << 14)) << (15 - 14)) == value) {
      131:17136:    *found = 17;
      131:17137:    return 17;
        -:17138:  }
     8399:17139:  if (((tmp >> 14) & 32767) == value) {
      131:17140:    *found = 18;
      131:17141:    return 18;
        -:17142:  }
     8268:17143:  tmp2 = tmp >> 29;
        -:17144:  in += sizeof(uint32_t);
        -:17145:  /* consumed: 4 bytes (total: 40) */
     8268:17146:  tmp = *(uint32_t *)in;
     8268:17147:  if ((tmp2 | (tmp % (1U << 12)) << (15 - 12)) == value) {
      131:17148:    *found = 19;
      131:17149:    return 19;
        -:17150:  }
     8137:17151:  if (((tmp >> 12) & 32767) == value) {
      131:17152:    *found = 20;
      131:17153:    return 20;
        -:17154:  }
     8006:17155:  tmp2 = tmp >> 27;
        -:17156:  in += sizeof(uint32_t);
        -:17157:  /* consumed: 4 bytes (total: 44) */
     8006:17158:  tmp = *(uint32_t *)in;
     8006:17159:  if ((tmp2 | (tmp % (1U << 10)) << (15 - 10)) == value) {
      131:17160:    *found = 21;
      131:17161:    return 21;
        -:17162:  }
     7875:17163:  if (((tmp >> 10) & 32767) == value) {
      130:17164:    *found = 22;
      130:17165:    return 22;
        -:17166:  }
     7745:17167:  tmp2 = tmp >> 25;
        -:17168:  in += sizeof(uint32_t);
        -:17169:  /* consumed: 4 bytes (total: 48) */
     7745:17170:  tmp = *(uint32_t *)in;
     7745:17171:  if ((tmp2 | (tmp % (1U << 8)) << (15 - 8)) == value) {
      130:17172:    *found = 23;
      130:17173:    return 23;
        -:17174:  }
     7615:17175:  if (((tmp >> 8) & 32767) == value) {
      130:17176:    *found = 24;
      130:17177:    return 24;
        -:17178:  }
     7485:17179:  tmp2 = tmp >> 23;
        -:17180:  in += sizeof(uint32_t);
        -:17181:  /* consumed: 4 bytes (total: 52) */
     7485:17182:  tmp = *(uint32_t *)in;
     7485:17183:  if ((tmp2 | (tmp % (1U << 6)) << (15 - 6)) == value) {
      129:17184:    *found = 25;
      129:17185:    return 25;
        -:17186:  }
     7356:17187:  if (((tmp >> 6) & 32767) == value) {
      128:17188:    *found = 26;
      128:17189:    return 26;
        -:17190:  }
     7228:17191:  tmp2 = tmp >> 21;
        -:17192:  in += sizeof(uint32_t);
        -:17193:  /* consumed: 4 bytes (total: 56) */
     7228:17194:  tmp = *(uint32_t *)in;
     7228:17195:  if ((tmp2 | (tmp % (1U << 4)) << (15 - 4)) == value) {
      128:17196:    *found = 27;
      128:17197:    return 27;
        -:17198:  }
     7100:17199:  if (((tmp >> 4) & 32767) == value) {
      128:17200:    *found = 28;
      128:17201:    return 28;
        -:17202:  }
     6972:17203:  tmp2 = tmp >> 19;
        -:17204:  in += sizeof(uint32_t);
        -:17205:  /* consumed: 4 bytes (total: 60) */
     6972:17206:  tmp = *(uint32_t *)in;
     6972:17207:  if ((tmp2 | (tmp % (1U << 2)) << (15 - 2)) == value) {
      128:17208:    *found = 29;
      128:17209:    return 29;
        -:17210:  }
     6844:17211:  if (((tmp >> 2) & 32767) == value) {
      128:17212:    *found = 30;
      128:17213:    return 30;
        -:17214:  }
     6716:17215:  if (((tmp >> 17) & 32767) == value) {
      128:17216:    *found = 31;
      128:17217:    return 31;
        -:17218:  }
        -:17219:  /* remaining: 0 bits */
        -:17220:  return (60);
        -:17221:}
        -:17222:
        -:17223:static uint32_t
       32:17224:linsearch16_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:17225:  uint32_t tmp, tmp2;
       32:17226:  value -= base;
        -:17227:  (void)tmp2;
       32:17228:  tmp = *(uint32_t *)in;
        -:17229:  /* consumed: 4 bytes (total: 4) */
       32:17230:  if (((tmp >> 0) & 65535) == value) {
        1:17231:    *found = 0;
        1:17232:    return 0;
        -:17233:  }
       31:17234:  if (((tmp >> 16) & 65535) == value) {
        1:17235:    *found = 1;
        1:17236:    return 1;
        -:17237:  }
        -:17238:  in += sizeof(uint32_t);
       30:17239:  tmp = *(uint32_t *)in;
        -:17240:  /* consumed: 4 bytes (total: 8) */
       30:17241:  if (((tmp >> 0) & 65535) == value) {
        1:17242:    *found = 2;
        1:17243:    return 2;
        -:17244:  }
       29:17245:  if (((tmp >> 16) & 65535) == value) {
        1:17246:    *found = 3;
        1:17247:    return 3;
        -:17248:  }
        -:17249:  in += sizeof(uint32_t);
       28:17250:  tmp = *(uint32_t *)in;
        -:17251:  /* consumed: 4 bytes (total: 12) */
       28:17252:  if (((tmp >> 0) & 65535) == value) {
        1:17253:    *found = 4;
        1:17254:    return 4;
        -:17255:  }
       27:17256:  if (((tmp >> 16) & 65535) == value) {
        1:17257:    *found = 5;
        1:17258:    return 5;
        -:17259:  }
        -:17260:  in += sizeof(uint32_t);
       26:17261:  tmp = *(uint32_t *)in;
        -:17262:  /* consumed: 4 bytes (total: 16) */
       26:17263:  if (((tmp >> 0) & 65535) == value) {
        1:17264:    *found = 6;
        1:17265:    return 6;
        -:17266:  }
       25:17267:  if (((tmp >> 16) & 65535) == value) {
        1:17268:    *found = 7;
        1:17269:    return 7;
        -:17270:  }
        -:17271:  in += sizeof(uint32_t);
       24:17272:  tmp = *(uint32_t *)in;
        -:17273:  /* consumed: 4 bytes (total: 20) */
       24:17274:  if (((tmp >> 0) & 65535) == value) {
        1:17275:    *found = 8;
        1:17276:    return 8;
        -:17277:  }
       23:17278:  if (((tmp >> 16) & 65535) == value) {
        1:17279:    *found = 9;
        1:17280:    return 9;
        -:17281:  }
        -:17282:  in += sizeof(uint32_t);
       22:17283:  tmp = *(uint32_t *)in;
        -:17284:  /* consumed: 4 bytes (total: 24) */
       22:17285:  if (((tmp >> 0) & 65535) == value) {
        1:17286:    *found = 10;
        1:17287:    return 10;
        -:17288:  }
       21:17289:  if (((tmp >> 16) & 65535) == value) {
        1:17290:    *found = 11;
        1:17291:    return 11;
        -:17292:  }
        -:17293:  in += sizeof(uint32_t);
       20:17294:  tmp = *(uint32_t *)in;
        -:17295:  /* consumed: 4 bytes (total: 28) */
       20:17296:  if (((tmp >> 0) & 65535) == value) {
        1:17297:    *found = 12;
        1:17298:    return 12;
        -:17299:  }
       19:17300:  if (((tmp >> 16) & 65535) == value) {
        1:17301:    *found = 13;
        1:17302:    return 13;
        -:17303:  }
        -:17304:  in += sizeof(uint32_t);
       18:17305:  tmp = *(uint32_t *)in;
        -:17306:  /* consumed: 4 bytes (total: 32) */
       18:17307:  if (((tmp >> 0) & 65535) == value) {
        1:17308:    *found = 14;
        1:17309:    return 14;
        -:17310:  }
       17:17311:  if (((tmp >> 16) & 65535) == value) {
        1:17312:    *found = 15;
        1:17313:    return 15;
        -:17314:  }
        -:17315:  in += sizeof(uint32_t);
       16:17316:  tmp = *(uint32_t *)in;
        -:17317:  /* consumed: 4 bytes (total: 36) */
       16:17318:  if (((tmp >> 0) & 65535) == value) {
        1:17319:    *found = 16;
        1:17320:    return 16;
        -:17321:  }
       15:17322:  if (((tmp >> 16) & 65535) == value) {
        1:17323:    *found = 17;
        1:17324:    return 17;
        -:17325:  }
        -:17326:  in += sizeof(uint32_t);
       14:17327:  tmp = *(uint32_t *)in;
        -:17328:  /* consumed: 4 bytes (total: 40) */
       14:17329:  if (((tmp >> 0) & 65535) == value) {
        1:17330:    *found = 18;
        1:17331:    return 18;
        -:17332:  }
       13:17333:  if (((tmp >> 16) & 65535) == value) {
        1:17334:    *found = 19;
        1:17335:    return 19;
        -:17336:  }
        -:17337:  in += sizeof(uint32_t);
       12:17338:  tmp = *(uint32_t *)in;
        -:17339:  /* consumed: 4 bytes (total: 44) */
       12:17340:  if (((tmp >> 0) & 65535) == value) {
        1:17341:    *found = 20;
        1:17342:    return 20;
        -:17343:  }
       11:17344:  if (((tmp >> 16) & 65535) == value) {
        1:17345:    *found = 21;
        1:17346:    return 21;
        -:17347:  }
        -:17348:  in += sizeof(uint32_t);
       10:17349:  tmp = *(uint32_t *)in;
        -:17350:  /* consumed: 4 bytes (total: 48) */
       10:17351:  if (((tmp >> 0) & 65535) == value) {
        1:17352:    *found = 22;
        1:17353:    return 22;
        -:17354:  }
        9:17355:  if (((tmp >> 16) & 65535) == value) {
        1:17356:    *found = 23;
        1:17357:    return 23;
        -:17358:  }
        -:17359:  in += sizeof(uint32_t);
        8:17360:  tmp = *(uint32_t *)in;
        -:17361:  /* consumed: 4 bytes (total: 52) */
        8:17362:  if (((tmp >> 0) & 65535) == value) {
        1:17363:    *found = 24;
        1:17364:    return 24;
        -:17365:  }
        7:17366:  if (((tmp >> 16) & 65535) == value) {
        1:17367:    *found = 25;
        1:17368:    return 25;
        -:17369:  }
        -:17370:  in += sizeof(uint32_t);
        6:17371:  tmp = *(uint32_t *)in;
        -:17372:  /* consumed: 4 bytes (total: 56) */
        6:17373:  if (((tmp >> 0) & 65535) == value) {
        1:17374:    *found = 26;
        1:17375:    return 26;
        -:17376:  }
        5:17377:  if (((tmp >> 16) & 65535) == value) {
        1:17378:    *found = 27;
        1:17379:    return 27;
        -:17380:  }
        -:17381:  in += sizeof(uint32_t);
        4:17382:  tmp = *(uint32_t *)in;
        -:17383:  /* consumed: 4 bytes (total: 60) */
        4:17384:  if (((tmp >> 0) & 65535) == value) {
        1:17385:    *found = 28;
        1:17386:    return 28;
        -:17387:  }
        3:17388:  if (((tmp >> 16) & 65535) == value) {
        1:17389:    *found = 29;
        1:17390:    return 29;
        -:17391:  }
        -:17392:  in += sizeof(uint32_t);
        2:17393:  tmp = *(uint32_t *)in;
        -:17394:  /* consumed: 4 bytes (total: 64) */
        2:17395:  if (((tmp >> 0) & 65535) == value) {
        1:17396:    *found = 30;
        1:17397:    return 30;
        -:17398:  }
        1:17399:  if (((tmp >> 16) & 65535) == value) {
        1:17400:    *found = 31;
        1:17401:    return 31;
        -:17402:  }
        -:17403:  /* remaining: 0 bits */
        -:17404:  return (64);
        -:17405:}
        -:17406:
        -:17407:static uint32_t
       32:17408:linsearch17_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:17409:  uint32_t tmp, tmp2;
       32:17410:  value -= base;
        -:17411:  (void)tmp2;
       32:17412:  tmp = *(uint32_t *)in;
        -:17413:  /* consumed: 4 bytes (total: 4) */
       32:17414:  if (((tmp >> 0) & 131071) == value) {
        1:17415:    *found = 0;
        1:17416:    return 0;
        -:17417:  }
       31:17418:  tmp2 = tmp >> 17;
        -:17419:  in += sizeof(uint32_t);
        -:17420:  /* consumed: 4 bytes (total: 8) */
       31:17421:  tmp = *(uint32_t *)in;
       31:17422:  if ((tmp2 | (tmp % (1U << 2)) << (17 - 2)) == value) {
        1:17423:    *found = 1;
        1:17424:    return 1;
        -:17425:  }
       30:17426:  if (((tmp >> 2) & 131071) == value) {
        1:17427:    *found = 2;
        1:17428:    return 2;
        -:17429:  }
       29:17430:  tmp2 = tmp >> 19;
        -:17431:  in += sizeof(uint32_t);
        -:17432:  /* consumed: 4 bytes (total: 12) */
       29:17433:  tmp = *(uint32_t *)in;
       29:17434:  if ((tmp2 | (tmp % (1U << 4)) << (17 - 4)) == value) {
        1:17435:    *found = 3;
        1:17436:    return 3;
        -:17437:  }
       28:17438:  if (((tmp >> 4) & 131071) == value) {
        1:17439:    *found = 4;
        1:17440:    return 4;
        -:17441:  }
       27:17442:  tmp2 = tmp >> 21;
        -:17443:  in += sizeof(uint32_t);
        -:17444:  /* consumed: 4 bytes (total: 16) */
       27:17445:  tmp = *(uint32_t *)in;
       27:17446:  if ((tmp2 | (tmp % (1U << 6)) << (17 - 6)) == value) {
        1:17447:    *found = 5;
        1:17448:    return 5;
        -:17449:  }
       26:17450:  if (((tmp >> 6) & 131071) == value) {
        1:17451:    *found = 6;
        1:17452:    return 6;
        -:17453:  }
       25:17454:  tmp2 = tmp >> 23;
        -:17455:  in += sizeof(uint32_t);
        -:17456:  /* consumed: 4 bytes (total: 20) */
       25:17457:  tmp = *(uint32_t *)in;
       25:17458:  if ((tmp2 | (tmp % (1U << 8)) << (17 - 8)) == value) {
        1:17459:    *found = 7;
        1:17460:    return 7;
        -:17461:  }
       24:17462:  if (((tmp >> 8) & 131071) == value) {
        1:17463:    *found = 8;
        1:17464:    return 8;
        -:17465:  }
       23:17466:  tmp2 = tmp >> 25;
        -:17467:  in += sizeof(uint32_t);
        -:17468:  /* consumed: 4 bytes (total: 24) */
       23:17469:  tmp = *(uint32_t *)in;
       23:17470:  if ((tmp2 | (tmp % (1U << 10)) << (17 - 10)) == value) {
        1:17471:    *found = 9;
        1:17472:    return 9;
        -:17473:  }
       22:17474:  if (((tmp >> 10) & 131071) == value) {
        1:17475:    *found = 10;
        1:17476:    return 10;
        -:17477:  }
       21:17478:  tmp2 = tmp >> 27;
        -:17479:  in += sizeof(uint32_t);
        -:17480:  /* consumed: 4 bytes (total: 28) */
       21:17481:  tmp = *(uint32_t *)in;
       21:17482:  if ((tmp2 | (tmp % (1U << 12)) << (17 - 12)) == value) {
        1:17483:    *found = 11;
        1:17484:    return 11;
        -:17485:  }
       20:17486:  if (((tmp >> 12) & 131071) == value) {
        1:17487:    *found = 12;
        1:17488:    return 12;
        -:17489:  }
       19:17490:  tmp2 = tmp >> 29;
        -:17491:  in += sizeof(uint32_t);
        -:17492:  /* consumed: 4 bytes (total: 32) */
       19:17493:  tmp = *(uint32_t *)in;
       19:17494:  if ((tmp2 | (tmp % (1U << 14)) << (17 - 14)) == value) {
        1:17495:    *found = 13;
        1:17496:    return 13;
        -:17497:  }
       18:17498:  if (((tmp >> 14) & 131071) == value) {
        1:17499:    *found = 14;
        1:17500:    return 14;
        -:17501:  }
       17:17502:  tmp2 = tmp >> 31;
        -:17503:  in += sizeof(uint32_t);
        -:17504:  /* consumed: 4 bytes (total: 36) */
       17:17505:  tmp = *(uint32_t *)in;
       17:17506:  if ((tmp2 | (tmp % (1U << 16)) << (17 - 16)) == value) {
        1:17507:    *found = 15;
        1:17508:    return 15;
        -:17509:  }
       16:17510:  tmp2 = tmp >> 16;
        -:17511:  in += sizeof(uint32_t);
        -:17512:  /* consumed: 4 bytes (total: 40) */
       16:17513:  tmp = *(uint32_t *)in;
       16:17514:  if ((tmp2 | (tmp % (1U << 1)) << (17 - 1)) == value) {
        1:17515:    *found = 16;
        1:17516:    return 16;
        -:17517:  }
       15:17518:  if (((tmp >> 1) & 131071) == value) {
        1:17519:    *found = 17;
        1:17520:    return 17;
        -:17521:  }
       14:17522:  tmp2 = tmp >> 18;
        -:17523:  in += sizeof(uint32_t);
        -:17524:  /* consumed: 4 bytes (total: 44) */
       14:17525:  tmp = *(uint32_t *)in;
       14:17526:  if ((tmp2 | (tmp % (1U << 3)) << (17 - 3)) == value) {
        1:17527:    *found = 18;
        1:17528:    return 18;
        -:17529:  }
       13:17530:  if (((tmp >> 3) & 131071) == value) {
        1:17531:    *found = 19;
        1:17532:    return 19;
        -:17533:  }
       12:17534:  tmp2 = tmp >> 20;
        -:17535:  in += sizeof(uint32_t);
        -:17536:  /* consumed: 4 bytes (total: 48) */
       12:17537:  tmp = *(uint32_t *)in;
       12:17538:  if ((tmp2 | (tmp % (1U << 5)) << (17 - 5)) == value) {
        1:17539:    *found = 20;
        1:17540:    return 20;
        -:17541:  }
       11:17542:  if (((tmp >> 5) & 131071) == value) {
        1:17543:    *found = 21;
        1:17544:    return 21;
        -:17545:  }
       10:17546:  tmp2 = tmp >> 22;
        -:17547:  in += sizeof(uint32_t);
        -:17548:  /* consumed: 4 bytes (total: 52) */
       10:17549:  tmp = *(uint32_t *)in;
       10:17550:  if ((tmp2 | (tmp % (1U << 7)) << (17 - 7)) == value) {
        1:17551:    *found = 22;
        1:17552:    return 22;
        -:17553:  }
        9:17554:  if (((tmp >> 7) & 131071) == value) {
        1:17555:    *found = 23;
        1:17556:    return 23;
        -:17557:  }
        8:17558:  tmp2 = tmp >> 24;
        -:17559:  in += sizeof(uint32_t);
        -:17560:  /* consumed: 4 bytes (total: 56) */
        8:17561:  tmp = *(uint32_t *)in;
        8:17562:  if ((tmp2 | (tmp % (1U << 9)) << (17 - 9)) == value) {
        1:17563:    *found = 24;
        1:17564:    return 24;
        -:17565:  }
        7:17566:  if (((tmp >> 9) & 131071) == value) {
        1:17567:    *found = 25;
        1:17568:    return 25;
        -:17569:  }
        6:17570:  tmp2 = tmp >> 26;
        -:17571:  in += sizeof(uint32_t);
        -:17572:  /* consumed: 4 bytes (total: 60) */
        6:17573:  tmp = *(uint32_t *)in;
        6:17574:  if ((tmp2 | (tmp % (1U << 11)) << (17 - 11)) == value) {
        1:17575:    *found = 26;
        1:17576:    return 26;
        -:17577:  }
        5:17578:  if (((tmp >> 11) & 131071) == value) {
        1:17579:    *found = 27;
        1:17580:    return 27;
        -:17581:  }
        4:17582:  tmp2 = tmp >> 28;
        -:17583:  in += sizeof(uint32_t);
        -:17584:  /* consumed: 4 bytes (total: 64) */
        4:17585:  tmp = *(uint32_t *)in;
        4:17586:  if ((tmp2 | (tmp % (1U << 13)) << (17 - 13)) == value) {
        1:17587:    *found = 28;
        1:17588:    return 28;
        -:17589:  }
        3:17590:  if (((tmp >> 13) & 131071) == value) {
        1:17591:    *found = 29;
        1:17592:    return 29;
        -:17593:  }
        2:17594:  tmp2 = tmp >> 30;
        -:17595:  in += sizeof(uint32_t);
        -:17596:  /* consumed: 4 bytes (total: 68) */
        2:17597:  tmp = *(uint32_t *)in;
        2:17598:  if ((tmp2 | (tmp % (1U << 15)) << (17 - 15)) == value) {
        1:17599:    *found = 30;
        1:17600:    return 30;
        -:17601:  }
        1:17602:  if (((tmp >> 15) & 131071) == value) {
        1:17603:    *found = 31;
        1:17604:    return 31;
        -:17605:  }
        -:17606:  /* remaining: 0 bits */
        -:17607:  return (68);
        -:17608:}
        -:17609:
        -:17610:static uint32_t
       32:17611:linsearch18_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:17612:  uint32_t tmp, tmp2;
       32:17613:  value -= base;
        -:17614:  (void)tmp2;
       32:17615:  tmp = *(uint32_t *)in;
        -:17616:  /* consumed: 4 bytes (total: 4) */
       32:17617:  if (((tmp >> 0) & 262143) == value) {
        1:17618:    *found = 0;
        1:17619:    return 0;
        -:17620:  }
       31:17621:  tmp2 = tmp >> 18;
        -:17622:  in += sizeof(uint32_t);
        -:17623:  /* consumed: 4 bytes (total: 8) */
       31:17624:  tmp = *(uint32_t *)in;
       31:17625:  if ((tmp2 | (tmp % (1U << 4)) << (18 - 4)) == value) {
        1:17626:    *found = 1;
        1:17627:    return 1;
        -:17628:  }
       30:17629:  if (((tmp >> 4) & 262143) == value) {
        1:17630:    *found = 2;
        1:17631:    return 2;
        -:17632:  }
       29:17633:  tmp2 = tmp >> 22;
        -:17634:  in += sizeof(uint32_t);
        -:17635:  /* consumed: 4 bytes (total: 12) */
       29:17636:  tmp = *(uint32_t *)in;
       29:17637:  if ((tmp2 | (tmp % (1U << 8)) << (18 - 8)) == value) {
        1:17638:    *found = 3;
        1:17639:    return 3;
        -:17640:  }
       28:17641:  if (((tmp >> 8) & 262143) == value) {
        1:17642:    *found = 4;
        1:17643:    return 4;
        -:17644:  }
       27:17645:  tmp2 = tmp >> 26;
        -:17646:  in += sizeof(uint32_t);
        -:17647:  /* consumed: 4 bytes (total: 16) */
       27:17648:  tmp = *(uint32_t *)in;
       27:17649:  if ((tmp2 | (tmp % (1U << 12)) << (18 - 12)) == value) {
        1:17650:    *found = 5;
        1:17651:    return 5;
        -:17652:  }
       26:17653:  if (((tmp >> 12) & 262143) == value) {
        1:17654:    *found = 6;
        1:17655:    return 6;
        -:17656:  }
       25:17657:  tmp2 = tmp >> 30;
        -:17658:  in += sizeof(uint32_t);
        -:17659:  /* consumed: 4 bytes (total: 20) */
       25:17660:  tmp = *(uint32_t *)in;
       25:17661:  if ((tmp2 | (tmp % (1U << 16)) << (18 - 16)) == value) {
        1:17662:    *found = 7;
        1:17663:    return 7;
        -:17664:  }
       24:17665:  tmp2 = tmp >> 16;
        -:17666:  in += sizeof(uint32_t);
        -:17667:  /* consumed: 4 bytes (total: 24) */
       24:17668:  tmp = *(uint32_t *)in;
       24:17669:  if ((tmp2 | (tmp % (1U << 2)) << (18 - 2)) == value) {
        1:17670:    *found = 8;
        1:17671:    return 8;
        -:17672:  }
       23:17673:  if (((tmp >> 2) & 262143) == value) {
        1:17674:    *found = 9;
        1:17675:    return 9;
        -:17676:  }
       22:17677:  tmp2 = tmp >> 20;
        -:17678:  in += sizeof(uint32_t);
        -:17679:  /* consumed: 4 bytes (total: 28) */
       22:17680:  tmp = *(uint32_t *)in;
       22:17681:  if ((tmp2 | (tmp % (1U << 6)) << (18 - 6)) == value) {
        1:17682:    *found = 10;
        1:17683:    return 10;
        -:17684:  }
       21:17685:  if (((tmp >> 6) & 262143) == value) {
        1:17686:    *found = 11;
        1:17687:    return 11;
        -:17688:  }
       20:17689:  tmp2 = tmp >> 24;
        -:17690:  in += sizeof(uint32_t);
        -:17691:  /* consumed: 4 bytes (total: 32) */
       20:17692:  tmp = *(uint32_t *)in;
       20:17693:  if ((tmp2 | (tmp % (1U << 10)) << (18 - 10)) == value) {
        1:17694:    *found = 12;
        1:17695:    return 12;
        -:17696:  }
       19:17697:  if (((tmp >> 10) & 262143) == value) {
        1:17698:    *found = 13;
        1:17699:    return 13;
        -:17700:  }
       18:17701:  tmp2 = tmp >> 28;
        -:17702:  in += sizeof(uint32_t);
        -:17703:  /* consumed: 4 bytes (total: 36) */
       18:17704:  tmp = *(uint32_t *)in;
       18:17705:  if ((tmp2 | (tmp % (1U << 14)) << (18 - 14)) == value) {
        1:17706:    *found = 14;
        1:17707:    return 14;
        -:17708:  }
       17:17709:  if (((tmp >> 14) & 262143) == value) {
        1:17710:    *found = 15;
        1:17711:    return 15;
        -:17712:  }
        -:17713:  in += sizeof(uint32_t);
       16:17714:  tmp = *(uint32_t *)in;
        -:17715:  /* consumed: 4 bytes (total: 40) */
       16:17716:  if (((tmp >> 0) & 262143) == value) {
        1:17717:    *found = 16;
        1:17718:    return 16;
        -:17719:  }
       15:17720:  tmp2 = tmp >> 18;
        -:17721:  in += sizeof(uint32_t);
        -:17722:  /* consumed: 4 bytes (total: 44) */
       15:17723:  tmp = *(uint32_t *)in;
       15:17724:  if ((tmp2 | (tmp % (1U << 4)) << (18 - 4)) == value) {
        1:17725:    *found = 17;
        1:17726:    return 17;
        -:17727:  }
       14:17728:  if (((tmp >> 4) & 262143) == value) {
        1:17729:    *found = 18;
        1:17730:    return 18;
        -:17731:  }
       13:17732:  tmp2 = tmp >> 22;
        -:17733:  in += sizeof(uint32_t);
        -:17734:  /* consumed: 4 bytes (total: 48) */
       13:17735:  tmp = *(uint32_t *)in;
       13:17736:  if ((tmp2 | (tmp % (1U << 8)) << (18 - 8)) == value) {
        1:17737:    *found = 19;
        1:17738:    return 19;
        -:17739:  }
       12:17740:  if (((tmp >> 8) & 262143) == value) {
        1:17741:    *found = 20;
        1:17742:    return 20;
        -:17743:  }
       11:17744:  tmp2 = tmp >> 26;
        -:17745:  in += sizeof(uint32_t);
        -:17746:  /* consumed: 4 bytes (total: 52) */
       11:17747:  tmp = *(uint32_t *)in;
       11:17748:  if ((tmp2 | (tmp % (1U << 12)) << (18 - 12)) == value) {
        1:17749:    *found = 21;
        1:17750:    return 21;
        -:17751:  }
       10:17752:  if (((tmp >> 12) & 262143) == value) {
        1:17753:    *found = 22;
        1:17754:    return 22;
        -:17755:  }
        9:17756:  tmp2 = tmp >> 30;
        -:17757:  in += sizeof(uint32_t);
        -:17758:  /* consumed: 4 bytes (total: 56) */
        9:17759:  tmp = *(uint32_t *)in;
        9:17760:  if ((tmp2 | (tmp % (1U << 16)) << (18 - 16)) == value) {
        1:17761:    *found = 23;
        1:17762:    return 23;
        -:17763:  }
        8:17764:  tmp2 = tmp >> 16;
        -:17765:  in += sizeof(uint32_t);
        -:17766:  /* consumed: 4 bytes (total: 60) */
        8:17767:  tmp = *(uint32_t *)in;
        8:17768:  if ((tmp2 | (tmp % (1U << 2)) << (18 - 2)) == value) {
        1:17769:    *found = 24;
        1:17770:    return 24;
        -:17771:  }
        7:17772:  if (((tmp >> 2) & 262143) == value) {
        1:17773:    *found = 25;
        1:17774:    return 25;
        -:17775:  }
        6:17776:  tmp2 = tmp >> 20;
        -:17777:  in += sizeof(uint32_t);
        -:17778:  /* consumed: 4 bytes (total: 64) */
        6:17779:  tmp = *(uint32_t *)in;
        6:17780:  if ((tmp2 | (tmp % (1U << 6)) << (18 - 6)) == value) {
        1:17781:    *found = 26;
        1:17782:    return 26;
        -:17783:  }
        5:17784:  if (((tmp >> 6) & 262143) == value) {
        1:17785:    *found = 27;
        1:17786:    return 27;
        -:17787:  }
        4:17788:  tmp2 = tmp >> 24;
        -:17789:  in += sizeof(uint32_t);
        -:17790:  /* consumed: 4 bytes (total: 68) */
        4:17791:  tmp = *(uint32_t *)in;
        4:17792:  if ((tmp2 | (tmp % (1U << 10)) << (18 - 10)) == value) {
        1:17793:    *found = 28;
        1:17794:    return 28;
        -:17795:  }
        3:17796:  if (((tmp >> 10) & 262143) == value) {
        1:17797:    *found = 29;
        1:17798:    return 29;
        -:17799:  }
        2:17800:  tmp2 = tmp >> 28;
        -:17801:  in += sizeof(uint32_t);
        -:17802:  /* consumed: 4 bytes (total: 72) */
        2:17803:  tmp = *(uint32_t *)in;
        2:17804:  if ((tmp2 | (tmp % (1U << 14)) << (18 - 14)) == value) {
        1:17805:    *found = 30;
        1:17806:    return 30;
        -:17807:  }
        1:17808:  if (((tmp >> 14) & 262143) == value) {
        1:17809:    *found = 31;
        1:17810:    return 31;
        -:17811:  }
        -:17812:  /* remaining: 0 bits */
        -:17813:  return (72);
        -:17814:}
        -:17815:
        -:17816:static uint32_t
       32:17817:linsearch19_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:17818:  uint32_t tmp, tmp2;
       32:17819:  value -= base;
        -:17820:  (void)tmp2;
       32:17821:  tmp = *(uint32_t *)in;
        -:17822:  /* consumed: 4 bytes (total: 4) */
       32:17823:  if (((tmp >> 0) & 524287) == value) {
        1:17824:    *found = 0;
        1:17825:    return 0;
        -:17826:  }
       31:17827:  tmp2 = tmp >> 19;
        -:17828:  in += sizeof(uint32_t);
        -:17829:  /* consumed: 4 bytes (total: 8) */
       31:17830:  tmp = *(uint32_t *)in;
       31:17831:  if ((tmp2 | (tmp % (1U << 6)) << (19 - 6)) == value) {
        1:17832:    *found = 1;
        1:17833:    return 1;
        -:17834:  }
       30:17835:  if (((tmp >> 6) & 524287) == value) {
        1:17836:    *found = 2;
        1:17837:    return 2;
        -:17838:  }
       29:17839:  tmp2 = tmp >> 25;
        -:17840:  in += sizeof(uint32_t);
        -:17841:  /* consumed: 4 bytes (total: 12) */
       29:17842:  tmp = *(uint32_t *)in;
       29:17843:  if ((tmp2 | (tmp % (1U << 12)) << (19 - 12)) == value) {
        1:17844:    *found = 3;
        1:17845:    return 3;
        -:17846:  }
       28:17847:  if (((tmp >> 12) & 524287) == value) {
        1:17848:    *found = 4;
        1:17849:    return 4;
        -:17850:  }
       27:17851:  tmp2 = tmp >> 31;
        -:17852:  in += sizeof(uint32_t);
        -:17853:  /* consumed: 4 bytes (total: 16) */
       27:17854:  tmp = *(uint32_t *)in;
       27:17855:  if ((tmp2 | (tmp % (1U << 18)) << (19 - 18)) == value) {
        1:17856:    *found = 5;
        1:17857:    return 5;
        -:17858:  }
       26:17859:  tmp2 = tmp >> 18;
        -:17860:  in += sizeof(uint32_t);
        -:17861:  /* consumed: 4 bytes (total: 20) */
       26:17862:  tmp = *(uint32_t *)in;
       26:17863:  if ((tmp2 | (tmp % (1U << 5)) << (19 - 5)) == value) {
        1:17864:    *found = 6;
        1:17865:    return 6;
        -:17866:  }
       25:17867:  if (((tmp >> 5) & 524287) == value) {
        1:17868:    *found = 7;
        1:17869:    return 7;
        -:17870:  }
       24:17871:  tmp2 = tmp >> 24;
        -:17872:  in += sizeof(uint32_t);
        -:17873:  /* consumed: 4 bytes (total: 24) */
       24:17874:  tmp = *(uint32_t *)in;
       24:17875:  if ((tmp2 | (tmp % (1U << 11)) << (19 - 11)) == value) {
        1:17876:    *found = 8;
        1:17877:    return 8;
        -:17878:  }
       23:17879:  if (((tmp >> 11) & 524287) == value) {
        1:17880:    *found = 9;
        1:17881:    return 9;
        -:17882:  }
       22:17883:  tmp2 = tmp >> 30;
        -:17884:  in += sizeof(uint32_t);
        -:17885:  /* consumed: 4 bytes (total: 28) */
       22:17886:  tmp = *(uint32_t *)in;
       22:17887:  if ((tmp2 | (tmp % (1U << 17)) << (19 - 17)) == value) {
        1:17888:    *found = 10;
        1:17889:    return 10;
        -:17890:  }
       21:17891:  tmp2 = tmp >> 17;
        -:17892:  in += sizeof(uint32_t);
        -:17893:  /* consumed: 4 bytes (total: 32) */
       21:17894:  tmp = *(uint32_t *)in;
       21:17895:  if ((tmp2 | (tmp % (1U << 4)) << (19 - 4)) == value) {
        1:17896:    *found = 11;
        1:17897:    return 11;
        -:17898:  }
       20:17899:  if (((tmp >> 4) & 524287) == value) {
        1:17900:    *found = 12;
        1:17901:    return 12;
        -:17902:  }
       19:17903:  tmp2 = tmp >> 23;
        -:17904:  in += sizeof(uint32_t);
        -:17905:  /* consumed: 4 bytes (total: 36) */
       19:17906:  tmp = *(uint32_t *)in;
       19:17907:  if ((tmp2 | (tmp % (1U << 10)) << (19 - 10)) == value) {
        1:17908:    *found = 13;
        1:17909:    return 13;
        -:17910:  }
       18:17911:  if (((tmp >> 10) & 524287) == value) {
        1:17912:    *found = 14;
        1:17913:    return 14;
        -:17914:  }
       17:17915:  tmp2 = tmp >> 29;
        -:17916:  in += sizeof(uint32_t);
        -:17917:  /* consumed: 4 bytes (total: 40) */
       17:17918:  tmp = *(uint32_t *)in;
       17:17919:  if ((tmp2 | (tmp % (1U << 16)) << (19 - 16)) == value) {
        1:17920:    *found = 15;
        1:17921:    return 15;
        -:17922:  }
       16:17923:  tmp2 = tmp >> 16;
        -:17924:  in += sizeof(uint32_t);
        -:17925:  /* consumed: 4 bytes (total: 44) */
       16:17926:  tmp = *(uint32_t *)in;
       16:17927:  if ((tmp2 | (tmp % (1U << 3)) << (19 - 3)) == value) {
        1:17928:    *found = 16;
        1:17929:    return 16;
        -:17930:  }
       15:17931:  if (((tmp >> 3) & 524287) == value) {
        1:17932:    *found = 17;
        1:17933:    return 17;
        -:17934:  }
       14:17935:  tmp2 = tmp >> 22;
        -:17936:  in += sizeof(uint32_t);
        -:17937:  /* consumed: 4 bytes (total: 48) */
       14:17938:  tmp = *(uint32_t *)in;
       14:17939:  if ((tmp2 | (tmp % (1U << 9)) << (19 - 9)) == value) {
        1:17940:    *found = 18;
        1:17941:    return 18;
        -:17942:  }
       13:17943:  if (((tmp >> 9) & 524287) == value) {
        1:17944:    *found = 19;
        1:17945:    return 19;
        -:17946:  }
       12:17947:  tmp2 = tmp >> 28;
        -:17948:  in += sizeof(uint32_t);
        -:17949:  /* consumed: 4 bytes (total: 52) */
       12:17950:  tmp = *(uint32_t *)in;
       12:17951:  if ((tmp2 | (tmp % (1U << 15)) << (19 - 15)) == value) {
        1:17952:    *found = 20;
        1:17953:    return 20;
        -:17954:  }
       11:17955:  tmp2 = tmp >> 15;
        -:17956:  in += sizeof(uint32_t);
        -:17957:  /* consumed: 4 bytes (total: 56) */
       11:17958:  tmp = *(uint32_t *)in;
       11:17959:  if ((tmp2 | (tmp % (1U << 2)) << (19 - 2)) == value) {
        1:17960:    *found = 21;
        1:17961:    return 21;
        -:17962:  }
       10:17963:  if (((tmp >> 2) & 524287) == value) {
        1:17964:    *found = 22;
        1:17965:    return 22;
        -:17966:  }
        9:17967:  tmp2 = tmp >> 21;
        -:17968:  in += sizeof(uint32_t);
        -:17969:  /* consumed: 4 bytes (total: 60) */
        9:17970:  tmp = *(uint32_t *)in;
        9:17971:  if ((tmp2 | (tmp % (1U << 8)) << (19 - 8)) == value) {
        1:17972:    *found = 23;
        1:17973:    return 23;
        -:17974:  }
        8:17975:  if (((tmp >> 8) & 524287) == value) {
        1:17976:    *found = 24;
        1:17977:    return 24;
        -:17978:  }
        7:17979:  tmp2 = tmp >> 27;
        -:17980:  in += sizeof(uint32_t);
        -:17981:  /* consumed: 4 bytes (total: 64) */
        7:17982:  tmp = *(uint32_t *)in;
        7:17983:  if ((tmp2 | (tmp % (1U << 14)) << (19 - 14)) == value) {
        1:17984:    *found = 25;
        1:17985:    return 25;
        -:17986:  }
        6:17987:  tmp2 = tmp >> 14;
        -:17988:  in += sizeof(uint32_t);
        -:17989:  /* consumed: 4 bytes (total: 68) */
        6:17990:  tmp = *(uint32_t *)in;
        6:17991:  if ((tmp2 | (tmp % (1U << 1)) << (19 - 1)) == value) {
        1:17992:    *found = 26;
        1:17993:    return 26;
        -:17994:  }
        5:17995:  if (((tmp >> 1) & 524287) == value) {
        1:17996:    *found = 27;
        1:17997:    return 27;
        -:17998:  }
        4:17999:  tmp2 = tmp >> 20;
        -:18000:  in += sizeof(uint32_t);
        -:18001:  /* consumed: 4 bytes (total: 72) */
        4:18002:  tmp = *(uint32_t *)in;
        4:18003:  if ((tmp2 | (tmp % (1U << 7)) << (19 - 7)) == value) {
        1:18004:    *found = 28;
        1:18005:    return 28;
        -:18006:  }
        3:18007:  if (((tmp >> 7) & 524287) == value) {
        1:18008:    *found = 29;
        1:18009:    return 29;
        -:18010:  }
        2:18011:  tmp2 = tmp >> 26;
        -:18012:  in += sizeof(uint32_t);
        -:18013:  /* consumed: 4 bytes (total: 76) */
        2:18014:  tmp = *(uint32_t *)in;
        2:18015:  if ((tmp2 | (tmp % (1U << 13)) << (19 - 13)) == value) {
        1:18016:    *found = 30;
        1:18017:    return 30;
        -:18018:  }
        1:18019:  if (((tmp >> 13) & 524287) == value) {
        1:18020:    *found = 31;
        1:18021:    return 31;
        -:18022:  }
        -:18023:  /* remaining: 0 bits */
        -:18024:  return (76);
        -:18025:}
        -:18026:
        -:18027:static uint32_t
       32:18028:linsearch20_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:18029:  uint32_t tmp, tmp2;
       32:18030:  value -= base;
        -:18031:  (void)tmp2;
       32:18032:  tmp = *(uint32_t *)in;
        -:18033:  /* consumed: 4 bytes (total: 4) */
       32:18034:  if (((tmp >> 0) & 1048575) == value) {
        1:18035:    *found = 0;
        1:18036:    return 0;
        -:18037:  }
       31:18038:  tmp2 = tmp >> 20;
        -:18039:  in += sizeof(uint32_t);
        -:18040:  /* consumed: 4 bytes (total: 8) */
       31:18041:  tmp = *(uint32_t *)in;
       31:18042:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:18043:    *found = 1;
        1:18044:    return 1;
        -:18045:  }
       30:18046:  if (((tmp >> 8) & 1048575) == value) {
        1:18047:    *found = 2;
        1:18048:    return 2;
        -:18049:  }
       29:18050:  tmp2 = tmp >> 28;
        -:18051:  in += sizeof(uint32_t);
        -:18052:  /* consumed: 4 bytes (total: 12) */
       29:18053:  tmp = *(uint32_t *)in;
       29:18054:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:18055:    *found = 3;
        1:18056:    return 3;
        -:18057:  }
       28:18058:  tmp2 = tmp >> 16;
        -:18059:  in += sizeof(uint32_t);
        -:18060:  /* consumed: 4 bytes (total: 16) */
       28:18061:  tmp = *(uint32_t *)in;
       28:18062:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:18063:    *found = 4;
        1:18064:    return 4;
        -:18065:  }
       27:18066:  if (((tmp >> 4) & 1048575) == value) {
        1:18067:    *found = 5;
        1:18068:    return 5;
        -:18069:  }
       26:18070:  tmp2 = tmp >> 24;
        -:18071:  in += sizeof(uint32_t);
        -:18072:  /* consumed: 4 bytes (total: 20) */
       26:18073:  tmp = *(uint32_t *)in;
       26:18074:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:18075:    *found = 6;
        1:18076:    return 6;
        -:18077:  }
       25:18078:  if (((tmp >> 12) & 1048575) == value) {
        1:18079:    *found = 7;
        1:18080:    return 7;
        -:18081:  }
        -:18082:  in += sizeof(uint32_t);
       24:18083:  tmp = *(uint32_t *)in;
        -:18084:  /* consumed: 4 bytes (total: 24) */
       24:18085:  if (((tmp >> 0) & 1048575) == value) {
        1:18086:    *found = 8;
        1:18087:    return 8;
        -:18088:  }
       23:18089:  tmp2 = tmp >> 20;
        -:18090:  in += sizeof(uint32_t);
        -:18091:  /* consumed: 4 bytes (total: 28) */
       23:18092:  tmp = *(uint32_t *)in;
       23:18093:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:18094:    *found = 9;
        1:18095:    return 9;
        -:18096:  }
       22:18097:  if (((tmp >> 8) & 1048575) == value) {
        1:18098:    *found = 10;
        1:18099:    return 10;
        -:18100:  }
       21:18101:  tmp2 = tmp >> 28;
        -:18102:  in += sizeof(uint32_t);
        -:18103:  /* consumed: 4 bytes (total: 32) */
       21:18104:  tmp = *(uint32_t *)in;
       21:18105:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:18106:    *found = 11;
        1:18107:    return 11;
        -:18108:  }
       20:18109:  tmp2 = tmp >> 16;
        -:18110:  in += sizeof(uint32_t);
        -:18111:  /* consumed: 4 bytes (total: 36) */
       20:18112:  tmp = *(uint32_t *)in;
       20:18113:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:18114:    *found = 12;
        1:18115:    return 12;
        -:18116:  }
       19:18117:  if (((tmp >> 4) & 1048575) == value) {
        1:18118:    *found = 13;
        1:18119:    return 13;
        -:18120:  }
       18:18121:  tmp2 = tmp >> 24;
        -:18122:  in += sizeof(uint32_t);
        -:18123:  /* consumed: 4 bytes (total: 40) */
       18:18124:  tmp = *(uint32_t *)in;
       18:18125:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:18126:    *found = 14;
        1:18127:    return 14;
        -:18128:  }
       17:18129:  if (((tmp >> 12) & 1048575) == value) {
        1:18130:    *found = 15;
        1:18131:    return 15;
        -:18132:  }
        -:18133:  in += sizeof(uint32_t);
       16:18134:  tmp = *(uint32_t *)in;
        -:18135:  /* consumed: 4 bytes (total: 44) */
       16:18136:  if (((tmp >> 0) & 1048575) == value) {
        1:18137:    *found = 16;
        1:18138:    return 16;
        -:18139:  }
       15:18140:  tmp2 = tmp >> 20;
        -:18141:  in += sizeof(uint32_t);
        -:18142:  /* consumed: 4 bytes (total: 48) */
       15:18143:  tmp = *(uint32_t *)in;
       15:18144:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:18145:    *found = 17;
        1:18146:    return 17;
        -:18147:  }
       14:18148:  if (((tmp >> 8) & 1048575) == value) {
        1:18149:    *found = 18;
        1:18150:    return 18;
        -:18151:  }
       13:18152:  tmp2 = tmp >> 28;
        -:18153:  in += sizeof(uint32_t);
        -:18154:  /* consumed: 4 bytes (total: 52) */
       13:18155:  tmp = *(uint32_t *)in;
       13:18156:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:18157:    *found = 19;
        1:18158:    return 19;
        -:18159:  }
       12:18160:  tmp2 = tmp >> 16;
        -:18161:  in += sizeof(uint32_t);
        -:18162:  /* consumed: 4 bytes (total: 56) */
       12:18163:  tmp = *(uint32_t *)in;
       12:18164:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:18165:    *found = 20;
        1:18166:    return 20;
        -:18167:  }
       11:18168:  if (((tmp >> 4) & 1048575) == value) {
        1:18169:    *found = 21;
        1:18170:    return 21;
        -:18171:  }
       10:18172:  tmp2 = tmp >> 24;
        -:18173:  in += sizeof(uint32_t);
        -:18174:  /* consumed: 4 bytes (total: 60) */
       10:18175:  tmp = *(uint32_t *)in;
       10:18176:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:18177:    *found = 22;
        1:18178:    return 22;
        -:18179:  }
        9:18180:  if (((tmp >> 12) & 1048575) == value) {
        1:18181:    *found = 23;
        1:18182:    return 23;
        -:18183:  }
        -:18184:  in += sizeof(uint32_t);
        8:18185:  tmp = *(uint32_t *)in;
        -:18186:  /* consumed: 4 bytes (total: 64) */
        8:18187:  if (((tmp >> 0) & 1048575) == value) {
        1:18188:    *found = 24;
        1:18189:    return 24;
        -:18190:  }
        7:18191:  tmp2 = tmp >> 20;
        -:18192:  in += sizeof(uint32_t);
        -:18193:  /* consumed: 4 bytes (total: 68) */
        7:18194:  tmp = *(uint32_t *)in;
        7:18195:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:18196:    *found = 25;
        1:18197:    return 25;
        -:18198:  }
        6:18199:  if (((tmp >> 8) & 1048575) == value) {
        1:18200:    *found = 26;
        1:18201:    return 26;
        -:18202:  }
        5:18203:  tmp2 = tmp >> 28;
        -:18204:  in += sizeof(uint32_t);
        -:18205:  /* consumed: 4 bytes (total: 72) */
        5:18206:  tmp = *(uint32_t *)in;
        5:18207:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:18208:    *found = 27;
        1:18209:    return 27;
        -:18210:  }
        4:18211:  tmp2 = tmp >> 16;
        -:18212:  in += sizeof(uint32_t);
        -:18213:  /* consumed: 4 bytes (total: 76) */
        4:18214:  tmp = *(uint32_t *)in;
        4:18215:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:18216:    *found = 28;
        1:18217:    return 28;
        -:18218:  }
        3:18219:  if (((tmp >> 4) & 1048575) == value) {
        1:18220:    *found = 29;
        1:18221:    return 29;
        -:18222:  }
        2:18223:  tmp2 = tmp >> 24;
        -:18224:  in += sizeof(uint32_t);
        -:18225:  /* consumed: 4 bytes (total: 80) */
        2:18226:  tmp = *(uint32_t *)in;
        2:18227:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:18228:    *found = 30;
        1:18229:    return 30;
        -:18230:  }
        1:18231:  if (((tmp >> 12) & 1048575) == value) {
        1:18232:    *found = 31;
        1:18233:    return 31;
        -:18234:  }
        -:18235:  /* remaining: 0 bits */
        -:18236:  return (80);
        -:18237:}
        -:18238:
        -:18239:static uint32_t
       32:18240:linsearch21_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:18241:  uint32_t tmp, tmp2;
       32:18242:  value -= base;
        -:18243:  (void)tmp2;
       32:18244:  tmp = *(uint32_t *)in;
        -:18245:  /* consumed: 4 bytes (total: 4) */
       32:18246:  if (((tmp >> 0) & 2097151) == value) {
        1:18247:    *found = 0;
        1:18248:    return 0;
        -:18249:  }
       31:18250:  tmp2 = tmp >> 21;
        -:18251:  in += sizeof(uint32_t);
        -:18252:  /* consumed: 4 bytes (total: 8) */
       31:18253:  tmp = *(uint32_t *)in;
       31:18254:  if ((tmp2 | (tmp % (1U << 10)) << (21 - 10)) == value) {
        1:18255:    *found = 1;
        1:18256:    return 1;
        -:18257:  }
       30:18258:  if (((tmp >> 10) & 2097151) == value) {
        1:18259:    *found = 2;
        1:18260:    return 2;
        -:18261:  }
       29:18262:  tmp2 = tmp >> 31;
        -:18263:  in += sizeof(uint32_t);
        -:18264:  /* consumed: 4 bytes (total: 12) */
       29:18265:  tmp = *(uint32_t *)in;
       29:18266:  if ((tmp2 | (tmp % (1U << 20)) << (21 - 20)) == value) {
        1:18267:    *found = 3;
        1:18268:    return 3;
        -:18269:  }
       28:18270:  tmp2 = tmp >> 20;
        -:18271:  in += sizeof(uint32_t);
        -:18272:  /* consumed: 4 bytes (total: 16) */
       28:18273:  tmp = *(uint32_t *)in;
       28:18274:  if ((tmp2 | (tmp % (1U << 9)) << (21 - 9)) == value) {
        1:18275:    *found = 4;
        1:18276:    return 4;
        -:18277:  }
       27:18278:  if (((tmp >> 9) & 2097151) == value) {
        1:18279:    *found = 5;
        1:18280:    return 5;
        -:18281:  }
       26:18282:  tmp2 = tmp >> 30;
        -:18283:  in += sizeof(uint32_t);
        -:18284:  /* consumed: 4 bytes (total: 20) */
       26:18285:  tmp = *(uint32_t *)in;
       26:18286:  if ((tmp2 | (tmp % (1U << 19)) << (21 - 19)) == value) {
        1:18287:    *found = 6;
        1:18288:    return 6;
        -:18289:  }
       25:18290:  tmp2 = tmp >> 19;
        -:18291:  in += sizeof(uint32_t);
        -:18292:  /* consumed: 4 bytes (total: 24) */
       25:18293:  tmp = *(uint32_t *)in;
       25:18294:  if ((tmp2 | (tmp % (1U << 8)) << (21 - 8)) == value) {
        1:18295:    *found = 7;
        1:18296:    return 7;
        -:18297:  }
       24:18298:  if (((tmp >> 8) & 2097151) == value) {
        1:18299:    *found = 8;
        1:18300:    return 8;
        -:18301:  }
       23:18302:  tmp2 = tmp >> 29;
        -:18303:  in += sizeof(uint32_t);
        -:18304:  /* consumed: 4 bytes (total: 28) */
       23:18305:  tmp = *(uint32_t *)in;
       23:18306:  if ((tmp2 | (tmp % (1U << 18)) << (21 - 18)) == value) {
        1:18307:    *found = 9;
        1:18308:    return 9;
        -:18309:  }
       22:18310:  tmp2 = tmp >> 18;
        -:18311:  in += sizeof(uint32_t);
        -:18312:  /* consumed: 4 bytes (total: 32) */
       22:18313:  tmp = *(uint32_t *)in;
       22:18314:  if ((tmp2 | (tmp % (1U << 7)) << (21 - 7)) == value) {
        1:18315:    *found = 10;
        1:18316:    return 10;
        -:18317:  }
       21:18318:  if (((tmp >> 7) & 2097151) == value) {
        1:18319:    *found = 11;
        1:18320:    return 11;
        -:18321:  }
       20:18322:  tmp2 = tmp >> 28;
        -:18323:  in += sizeof(uint32_t);
        -:18324:  /* consumed: 4 bytes (total: 36) */
       20:18325:  tmp = *(uint32_t *)in;
       20:18326:  if ((tmp2 | (tmp % (1U << 17)) << (21 - 17)) == value) {
        1:18327:    *found = 12;
        1:18328:    return 12;
        -:18329:  }
       19:18330:  tmp2 = tmp >> 17;
        -:18331:  in += sizeof(uint32_t);
        -:18332:  /* consumed: 4 bytes (total: 40) */
       19:18333:  tmp = *(uint32_t *)in;
       19:18334:  if ((tmp2 | (tmp % (1U << 6)) << (21 - 6)) == value) {
        1:18335:    *found = 13;
        1:18336:    return 13;
        -:18337:  }
       18:18338:  if (((tmp >> 6) & 2097151) == value) {
        1:18339:    *found = 14;
        1:18340:    return 14;
        -:18341:  }
       17:18342:  tmp2 = tmp >> 27;
        -:18343:  in += sizeof(uint32_t);
        -:18344:  /* consumed: 4 bytes (total: 44) */
       17:18345:  tmp = *(uint32_t *)in;
       17:18346:  if ((tmp2 | (tmp % (1U << 16)) << (21 - 16)) == value) {
        1:18347:    *found = 15;
        1:18348:    return 15;
        -:18349:  }
       16:18350:  tmp2 = tmp >> 16;
        -:18351:  in += sizeof(uint32_t);
        -:18352:  /* consumed: 4 bytes (total: 48) */
       16:18353:  tmp = *(uint32_t *)in;
       16:18354:  if ((tmp2 | (tmp % (1U << 5)) << (21 - 5)) == value) {
        1:18355:    *found = 16;
        1:18356:    return 16;
        -:18357:  }
       15:18358:  if (((tmp >> 5) & 2097151) == value) {
        1:18359:    *found = 17;
        1:18360:    return 17;
        -:18361:  }
       14:18362:  tmp2 = tmp >> 26;
        -:18363:  in += sizeof(uint32_t);
        -:18364:  /* consumed: 4 bytes (total: 52) */
       14:18365:  tmp = *(uint32_t *)in;
       14:18366:  if ((tmp2 | (tmp % (1U << 15)) << (21 - 15)) == value) {
        1:18367:    *found = 18;
        1:18368:    return 18;
        -:18369:  }
       13:18370:  tmp2 = tmp >> 15;
        -:18371:  in += sizeof(uint32_t);
        -:18372:  /* consumed: 4 bytes (total: 56) */
       13:18373:  tmp = *(uint32_t *)in;
       13:18374:  if ((tmp2 | (tmp % (1U << 4)) << (21 - 4)) == value) {
        1:18375:    *found = 19;
        1:18376:    return 19;
        -:18377:  }
       12:18378:  if (((tmp >> 4) & 2097151) == value) {
        1:18379:    *found = 20;
        1:18380:    return 20;
        -:18381:  }
       11:18382:  tmp2 = tmp >> 25;
        -:18383:  in += sizeof(uint32_t);
        -:18384:  /* consumed: 4 bytes (total: 60) */
       11:18385:  tmp = *(uint32_t *)in;
       11:18386:  if ((tmp2 | (tmp % (1U << 14)) << (21 - 14)) == value) {
        1:18387:    *found = 21;
        1:18388:    return 21;
        -:18389:  }
       10:18390:  tmp2 = tmp >> 14;
        -:18391:  in += sizeof(uint32_t);
        -:18392:  /* consumed: 4 bytes (total: 64) */
       10:18393:  tmp = *(uint32_t *)in;
       10:18394:  if ((tmp2 | (tmp % (1U << 3)) << (21 - 3)) == value) {
        1:18395:    *found = 22;
        1:18396:    return 22;
        -:18397:  }
        9:18398:  if (((tmp >> 3) & 2097151) == value) {
        1:18399:    *found = 23;
        1:18400:    return 23;
        -:18401:  }
        8:18402:  tmp2 = tmp >> 24;
        -:18403:  in += sizeof(uint32_t);
        -:18404:  /* consumed: 4 bytes (total: 68) */
        8:18405:  tmp = *(uint32_t *)in;
        8:18406:  if ((tmp2 | (tmp % (1U << 13)) << (21 - 13)) == value) {
        1:18407:    *found = 24;
        1:18408:    return 24;
        -:18409:  }
        7:18410:  tmp2 = tmp >> 13;
        -:18411:  in += sizeof(uint32_t);
        -:18412:  /* consumed: 4 bytes (total: 72) */
        7:18413:  tmp = *(uint32_t *)in;
        7:18414:  if ((tmp2 | (tmp % (1U << 2)) << (21 - 2)) == value) {
        1:18415:    *found = 25;
        1:18416:    return 25;
        -:18417:  }
        6:18418:  if (((tmp >> 2) & 2097151) == value) {
        1:18419:    *found = 26;
        1:18420:    return 26;
        -:18421:  }
        5:18422:  tmp2 = tmp >> 23;
        -:18423:  in += sizeof(uint32_t);
        -:18424:  /* consumed: 4 bytes (total: 76) */
        5:18425:  tmp = *(uint32_t *)in;
        5:18426:  if ((tmp2 | (tmp % (1U << 12)) << (21 - 12)) == value) {
        1:18427:    *found = 27;
        1:18428:    return 27;
        -:18429:  }
        4:18430:  tmp2 = tmp >> 12;
        -:18431:  in += sizeof(uint32_t);
        -:18432:  /* consumed: 4 bytes (total: 80) */
        4:18433:  tmp = *(uint32_t *)in;
        4:18434:  if ((tmp2 | (tmp % (1U << 1)) << (21 - 1)) == value) {
        1:18435:    *found = 28;
        1:18436:    return 28;
        -:18437:  }
        3:18438:  if (((tmp >> 1) & 2097151) == value) {
        1:18439:    *found = 29;
        1:18440:    return 29;
        -:18441:  }
        2:18442:  tmp2 = tmp >> 22;
        -:18443:  in += sizeof(uint32_t);
        -:18444:  /* consumed: 4 bytes (total: 84) */
        2:18445:  tmp = *(uint32_t *)in;
        2:18446:  if ((tmp2 | (tmp % (1U << 11)) << (21 - 11)) == value) {
        1:18447:    *found = 30;
        1:18448:    return 30;
        -:18449:  }
        1:18450:  if (((tmp >> 11) & 2097151) == value) {
        1:18451:    *found = 31;
        1:18452:    return 31;
        -:18453:  }
        -:18454:  /* remaining: 0 bits */
        -:18455:  return (84);
        -:18456:}
        -:18457:
        -:18458:static uint32_t
       32:18459:linsearch22_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:18460:  uint32_t tmp, tmp2;
       32:18461:  value -= base;
        -:18462:  (void)tmp2;
       32:18463:  tmp = *(uint32_t *)in;
        -:18464:  /* consumed: 4 bytes (total: 4) */
       32:18465:  if (((tmp >> 0) & 4194303) == value) {
        1:18466:    *found = 0;
        1:18467:    return 0;
        -:18468:  }
       31:18469:  tmp2 = tmp >> 22;
        -:18470:  in += sizeof(uint32_t);
        -:18471:  /* consumed: 4 bytes (total: 8) */
       31:18472:  tmp = *(uint32_t *)in;
       31:18473:  if ((tmp2 | (tmp % (1U << 12)) << (22 - 12)) == value) {
        1:18474:    *found = 1;
        1:18475:    return 1;
        -:18476:  }
       30:18477:  tmp2 = tmp >> 12;
        -:18478:  in += sizeof(uint32_t);
        -:18479:  /* consumed: 4 bytes (total: 12) */
       30:18480:  tmp = *(uint32_t *)in;
       30:18481:  if ((tmp2 | (tmp % (1U << 2)) << (22 - 2)) == value) {
        1:18482:    *found = 2;
        1:18483:    return 2;
        -:18484:  }
       29:18485:  if (((tmp >> 2) & 4194303) == value) {
        1:18486:    *found = 3;
        1:18487:    return 3;
        -:18488:  }
       28:18489:  tmp2 = tmp >> 24;
        -:18490:  in += sizeof(uint32_t);
        -:18491:  /* consumed: 4 bytes (total: 16) */
       28:18492:  tmp = *(uint32_t *)in;
       28:18493:  if ((tmp2 | (tmp % (1U << 14)) << (22 - 14)) == value) {
        1:18494:    *found = 4;
        1:18495:    return 4;
        -:18496:  }
       27:18497:  tmp2 = tmp >> 14;
        -:18498:  in += sizeof(uint32_t);
        -:18499:  /* consumed: 4 bytes (total: 20) */
       27:18500:  tmp = *(uint32_t *)in;
       27:18501:  if ((tmp2 | (tmp % (1U << 4)) << (22 - 4)) == value) {
        1:18502:    *found = 5;
        1:18503:    return 5;
        -:18504:  }
       26:18505:  if (((tmp >> 4) & 4194303) == value) {
        1:18506:    *found = 6;
        1:18507:    return 6;
        -:18508:  }
       25:18509:  tmp2 = tmp >> 26;
        -:18510:  in += sizeof(uint32_t);
        -:18511:  /* consumed: 4 bytes (total: 24) */
       25:18512:  tmp = *(uint32_t *)in;
       25:18513:  if ((tmp2 | (tmp % (1U << 16)) << (22 - 16)) == value) {
        1:18514:    *found = 7;
        1:18515:    return 7;
        -:18516:  }
       24:18517:  tmp2 = tmp >> 16;
        -:18518:  in += sizeof(uint32_t);
        -:18519:  /* consumed: 4 bytes (total: 28) */
       24:18520:  tmp = *(uint32_t *)in;
       24:18521:  if ((tmp2 | (tmp % (1U << 6)) << (22 - 6)) == value) {
        1:18522:    *found = 8;
        1:18523:    return 8;
        -:18524:  }
       23:18525:  if (((tmp >> 6) & 4194303) == value) {
        1:18526:    *found = 9;
        1:18527:    return 9;
        -:18528:  }
       22:18529:  tmp2 = tmp >> 28;
        -:18530:  in += sizeof(uint32_t);
        -:18531:  /* consumed: 4 bytes (total: 32) */
       22:18532:  tmp = *(uint32_t *)in;
       22:18533:  if ((tmp2 | (tmp % (1U << 18)) << (22 - 18)) == value) {
        1:18534:    *found = 10;
        1:18535:    return 10;
        -:18536:  }
       21:18537:  tmp2 = tmp >> 18;
        -:18538:  in += sizeof(uint32_t);
        -:18539:  /* consumed: 4 bytes (total: 36) */
       21:18540:  tmp = *(uint32_t *)in;
       21:18541:  if ((tmp2 | (tmp % (1U << 8)) << (22 - 8)) == value) {
        1:18542:    *found = 11;
        1:18543:    return 11;
        -:18544:  }
       20:18545:  if (((tmp >> 8) & 4194303) == value) {
        1:18546:    *found = 12;
        1:18547:    return 12;
        -:18548:  }
       19:18549:  tmp2 = tmp >> 30;
        -:18550:  in += sizeof(uint32_t);
        -:18551:  /* consumed: 4 bytes (total: 40) */
       19:18552:  tmp = *(uint32_t *)in;
       19:18553:  if ((tmp2 | (tmp % (1U << 20)) << (22 - 20)) == value) {
        1:18554:    *found = 13;
        1:18555:    return 13;
        -:18556:  }
       18:18557:  tmp2 = tmp >> 20;
        -:18558:  in += sizeof(uint32_t);
        -:18559:  /* consumed: 4 bytes (total: 44) */
       18:18560:  tmp = *(uint32_t *)in;
       18:18561:  if ((tmp2 | (tmp % (1U << 10)) << (22 - 10)) == value) {
        1:18562:    *found = 14;
        1:18563:    return 14;
        -:18564:  }
       17:18565:  if (((tmp >> 10) & 4194303) == value) {
        1:18566:    *found = 15;
        1:18567:    return 15;
        -:18568:  }
        -:18569:  in += sizeof(uint32_t);
       16:18570:  tmp = *(uint32_t *)in;
        -:18571:  /* consumed: 4 bytes (total: 48) */
       16:18572:  if (((tmp >> 0) & 4194303) == value) {
        1:18573:    *found = 16;
        1:18574:    return 16;
        -:18575:  }
       15:18576:  tmp2 = tmp >> 22;
        -:18577:  in += sizeof(uint32_t);
        -:18578:  /* consumed: 4 bytes (total: 52) */
       15:18579:  tmp = *(uint32_t *)in;
       15:18580:  if ((tmp2 | (tmp % (1U << 12)) << (22 - 12)) == value) {
        1:18581:    *found = 17;
        1:18582:    return 17;
        -:18583:  }
       14:18584:  tmp2 = tmp >> 12;
        -:18585:  in += sizeof(uint32_t);
        -:18586:  /* consumed: 4 bytes (total: 56) */
       14:18587:  tmp = *(uint32_t *)in;
       14:18588:  if ((tmp2 | (tmp % (1U << 2)) << (22 - 2)) == value) {
        1:18589:    *found = 18;
        1:18590:    return 18;
        -:18591:  }
       13:18592:  if (((tmp >> 2) & 4194303) == value) {
        1:18593:    *found = 19;
        1:18594:    return 19;
        -:18595:  }
       12:18596:  tmp2 = tmp >> 24;
        -:18597:  in += sizeof(uint32_t);
        -:18598:  /* consumed: 4 bytes (total: 60) */
       12:18599:  tmp = *(uint32_t *)in;
       12:18600:  if ((tmp2 | (tmp % (1U << 14)) << (22 - 14)) == value) {
        1:18601:    *found = 20;
        1:18602:    return 20;
        -:18603:  }
       11:18604:  tmp2 = tmp >> 14;
        -:18605:  in += sizeof(uint32_t);
        -:18606:  /* consumed: 4 bytes (total: 64) */
       11:18607:  tmp = *(uint32_t *)in;
       11:18608:  if ((tmp2 | (tmp % (1U << 4)) << (22 - 4)) == value) {
        1:18609:    *found = 21;
        1:18610:    return 21;
        -:18611:  }
       10:18612:  if (((tmp >> 4) & 4194303) == value) {
        1:18613:    *found = 22;
        1:18614:    return 22;
        -:18615:  }
        9:18616:  tmp2 = tmp >> 26;
        -:18617:  in += sizeof(uint32_t);
        -:18618:  /* consumed: 4 bytes (total: 68) */
        9:18619:  tmp = *(uint32_t *)in;
        9:18620:  if ((tmp2 | (tmp % (1U << 16)) << (22 - 16)) == value) {
        1:18621:    *found = 23;
        1:18622:    return 23;
        -:18623:  }
        8:18624:  tmp2 = tmp >> 16;
        -:18625:  in += sizeof(uint32_t);
        -:18626:  /* consumed: 4 bytes (total: 72) */
        8:18627:  tmp = *(uint32_t *)in;
        8:18628:  if ((tmp2 | (tmp % (1U << 6)) << (22 - 6)) == value) {
        1:18629:    *found = 24;
        1:18630:    return 24;
        -:18631:  }
        7:18632:  if (((tmp >> 6) & 4194303) == value) {
        1:18633:    *found = 25;
        1:18634:    return 25;
        -:18635:  }
        6:18636:  tmp2 = tmp >> 28;
        -:18637:  in += sizeof(uint32_t);
        -:18638:  /* consumed: 4 bytes (total: 76) */
        6:18639:  tmp = *(uint32_t *)in;
        6:18640:  if ((tmp2 | (tmp % (1U << 18)) << (22 - 18)) == value) {
        1:18641:    *found = 26;
        1:18642:    return 26;
        -:18643:  }
        5:18644:  tmp2 = tmp >> 18;
        -:18645:  in += sizeof(uint32_t);
        -:18646:  /* consumed: 4 bytes (total: 80) */
        5:18647:  tmp = *(uint32_t *)in;
        5:18648:  if ((tmp2 | (tmp % (1U << 8)) << (22 - 8)) == value) {
        1:18649:    *found = 27;
        1:18650:    return 27;
        -:18651:  }
        4:18652:  if (((tmp >> 8) & 4194303) == value) {
        1:18653:    *found = 28;
        1:18654:    return 28;
        -:18655:  }
        3:18656:  tmp2 = tmp >> 30;
        -:18657:  in += sizeof(uint32_t);
        -:18658:  /* consumed: 4 bytes (total: 84) */
        3:18659:  tmp = *(uint32_t *)in;
        3:18660:  if ((tmp2 | (tmp % (1U << 20)) << (22 - 20)) == value) {
        1:18661:    *found = 29;
        1:18662:    return 29;
        -:18663:  }
        2:18664:  tmp2 = tmp >> 20;
        -:18665:  in += sizeof(uint32_t);
        -:18666:  /* consumed: 4 bytes (total: 88) */
        2:18667:  tmp = *(uint32_t *)in;
        2:18668:  if ((tmp2 | (tmp % (1U << 10)) << (22 - 10)) == value) {
        1:18669:    *found = 30;
        1:18670:    return 30;
        -:18671:  }
        1:18672:  if (((tmp >> 10) & 4194303) == value) {
        1:18673:    *found = 31;
        1:18674:    return 31;
        -:18675:  }
        -:18676:  /* remaining: 0 bits */
        -:18677:  return (88);
        -:18678:}
        -:18679:
        -:18680:static uint32_t
       32:18681:linsearch23_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:18682:  uint32_t tmp, tmp2;
       32:18683:  value -= base;
        -:18684:  (void)tmp2;
       32:18685:  tmp = *(uint32_t *)in;
        -:18686:  /* consumed: 4 bytes (total: 4) */
       32:18687:  if (((tmp >> 0) & 8388607) == value) {
        1:18688:    *found = 0;
        1:18689:    return 0;
        -:18690:  }
       31:18691:  tmp2 = tmp >> 23;
        -:18692:  in += sizeof(uint32_t);
        -:18693:  /* consumed: 4 bytes (total: 8) */
       31:18694:  tmp = *(uint32_t *)in;
       31:18695:  if ((tmp2 | (tmp % (1U << 14)) << (23 - 14)) == value) {
        1:18696:    *found = 1;
        1:18697:    return 1;
        -:18698:  }
       30:18699:  tmp2 = tmp >> 14;
        -:18700:  in += sizeof(uint32_t);
        -:18701:  /* consumed: 4 bytes (total: 12) */
       30:18702:  tmp = *(uint32_t *)in;
       30:18703:  if ((tmp2 | (tmp % (1U << 5)) << (23 - 5)) == value) {
        1:18704:    *found = 2;
        1:18705:    return 2;
        -:18706:  }
       29:18707:  if (((tmp >> 5) & 8388607) == value) {
        1:18708:    *found = 3;
        1:18709:    return 3;
        -:18710:  }
       28:18711:  tmp2 = tmp >> 28;
        -:18712:  in += sizeof(uint32_t);
        -:18713:  /* consumed: 4 bytes (total: 16) */
       28:18714:  tmp = *(uint32_t *)in;
       28:18715:  if ((tmp2 | (tmp % (1U << 19)) << (23 - 19)) == value) {
        1:18716:    *found = 4;
        1:18717:    return 4;
        -:18718:  }
       27:18719:  tmp2 = tmp >> 19;
        -:18720:  in += sizeof(uint32_t);
        -:18721:  /* consumed: 4 bytes (total: 20) */
       27:18722:  tmp = *(uint32_t *)in;
       27:18723:  if ((tmp2 | (tmp % (1U << 10)) << (23 - 10)) == value) {
        1:18724:    *found = 5;
        1:18725:    return 5;
        -:18726:  }
       26:18727:  tmp2 = tmp >> 10;
        -:18728:  in += sizeof(uint32_t);
        -:18729:  /* consumed: 4 bytes (total: 24) */
       26:18730:  tmp = *(uint32_t *)in;
       26:18731:  if ((tmp2 | (tmp % (1U << 1)) << (23 - 1)) == value) {
        1:18732:    *found = 6;
        1:18733:    return 6;
        -:18734:  }
       25:18735:  if (((tmp >> 1) & 8388607) == value) {
        1:18736:    *found = 7;
        1:18737:    return 7;
        -:18738:  }
       24:18739:  tmp2 = tmp >> 24;
        -:18740:  in += sizeof(uint32_t);
        -:18741:  /* consumed: 4 bytes (total: 28) */
       24:18742:  tmp = *(uint32_t *)in;
       24:18743:  if ((tmp2 | (tmp % (1U << 15)) << (23 - 15)) == value) {
        1:18744:    *found = 8;
        1:18745:    return 8;
        -:18746:  }
       23:18747:  tmp2 = tmp >> 15;
        -:18748:  in += sizeof(uint32_t);
        -:18749:  /* consumed: 4 bytes (total: 32) */
       23:18750:  tmp = *(uint32_t *)in;
       23:18751:  if ((tmp2 | (tmp % (1U << 6)) << (23 - 6)) == value) {
        1:18752:    *found = 9;
        1:18753:    return 9;
        -:18754:  }
       22:18755:  if (((tmp >> 6) & 8388607) == value) {
        1:18756:    *found = 10;
        1:18757:    return 10;
        -:18758:  }
       21:18759:  tmp2 = tmp >> 29;
        -:18760:  in += sizeof(uint32_t);
        -:18761:  /* consumed: 4 bytes (total: 36) */
       21:18762:  tmp = *(uint32_t *)in;
       21:18763:  if ((tmp2 | (tmp % (1U << 20)) << (23 - 20)) == value) {
        1:18764:    *found = 11;
        1:18765:    return 11;
        -:18766:  }
       20:18767:  tmp2 = tmp >> 20;
        -:18768:  in += sizeof(uint32_t);
        -:18769:  /* consumed: 4 bytes (total: 40) */
       20:18770:  tmp = *(uint32_t *)in;
       20:18771:  if ((tmp2 | (tmp % (1U << 11)) << (23 - 11)) == value) {
        1:18772:    *found = 12;
        1:18773:    return 12;
        -:18774:  }
       19:18775:  tmp2 = tmp >> 11;
        -:18776:  in += sizeof(uint32_t);
        -:18777:  /* consumed: 4 bytes (total: 44) */
       19:18778:  tmp = *(uint32_t *)in;
       19:18779:  if ((tmp2 | (tmp % (1U << 2)) << (23 - 2)) == value) {
        1:18780:    *found = 13;
        1:18781:    return 13;
        -:18782:  }
       18:18783:  if (((tmp >> 2) & 8388607) == value) {
        1:18784:    *found = 14;
        1:18785:    return 14;
        -:18786:  }
       17:18787:  tmp2 = tmp >> 25;
        -:18788:  in += sizeof(uint32_t);
        -:18789:  /* consumed: 4 bytes (total: 48) */
       17:18790:  tmp = *(uint32_t *)in;
       17:18791:  if ((tmp2 | (tmp % (1U << 16)) << (23 - 16)) == value) {
        1:18792:    *found = 15;
        1:18793:    return 15;
        -:18794:  }
       16:18795:  tmp2 = tmp >> 16;
        -:18796:  in += sizeof(uint32_t);
        -:18797:  /* consumed: 4 bytes (total: 52) */
       16:18798:  tmp = *(uint32_t *)in;
       16:18799:  if ((tmp2 | (tmp % (1U << 7)) << (23 - 7)) == value) {
        1:18800:    *found = 16;
        1:18801:    return 16;
        -:18802:  }
       15:18803:  if (((tmp >> 7) & 8388607) == value) {
        1:18804:    *found = 17;
        1:18805:    return 17;
        -:18806:  }
       14:18807:  tmp2 = tmp >> 30;
        -:18808:  in += sizeof(uint32_t);
        -:18809:  /* consumed: 4 bytes (total: 56) */
       14:18810:  tmp = *(uint32_t *)in;
       14:18811:  if ((tmp2 | (tmp % (1U << 21)) << (23 - 21)) == value) {
        1:18812:    *found = 18;
        1:18813:    return 18;
        -:18814:  }
       13:18815:  tmp2 = tmp >> 21;
        -:18816:  in += sizeof(uint32_t);
        -:18817:  /* consumed: 4 bytes (total: 60) */
       13:18818:  tmp = *(uint32_t *)in;
       13:18819:  if ((tmp2 | (tmp % (1U << 12)) << (23 - 12)) == value) {
        1:18820:    *found = 19;
        1:18821:    return 19;
        -:18822:  }
       12:18823:  tmp2 = tmp >> 12;
        -:18824:  in += sizeof(uint32_t);
        -:18825:  /* consumed: 4 bytes (total: 64) */
       12:18826:  tmp = *(uint32_t *)in;
       12:18827:  if ((tmp2 | (tmp % (1U << 3)) << (23 - 3)) == value) {
        1:18828:    *found = 20;
        1:18829:    return 20;
        -:18830:  }
       11:18831:  if (((tmp >> 3) & 8388607) == value) {
        1:18832:    *found = 21;
        1:18833:    return 21;
        -:18834:  }
       10:18835:  tmp2 = tmp >> 26;
        -:18836:  in += sizeof(uint32_t);
        -:18837:  /* consumed: 4 bytes (total: 68) */
       10:18838:  tmp = *(uint32_t *)in;
       10:18839:  if ((tmp2 | (tmp % (1U << 17)) << (23 - 17)) == value) {
        1:18840:    *found = 22;
        1:18841:    return 22;
        -:18842:  }
        9:18843:  tmp2 = tmp >> 17;
        -:18844:  in += sizeof(uint32_t);
        -:18845:  /* consumed: 4 bytes (total: 72) */
        9:18846:  tmp = *(uint32_t *)in;
        9:18847:  if ((tmp2 | (tmp % (1U << 8)) << (23 - 8)) == value) {
        1:18848:    *found = 23;
        1:18849:    return 23;
        -:18850:  }
        8:18851:  if (((tmp >> 8) & 8388607) == value) {
        1:18852:    *found = 24;
        1:18853:    return 24;
        -:18854:  }
        7:18855:  tmp2 = tmp >> 31;
        -:18856:  in += sizeof(uint32_t);
        -:18857:  /* consumed: 4 bytes (total: 76) */
        7:18858:  tmp = *(uint32_t *)in;
        7:18859:  if ((tmp2 | (tmp % (1U << 22)) << (23 - 22)) == value) {
        1:18860:    *found = 25;
        1:18861:    return 25;
        -:18862:  }
        6:18863:  tmp2 = tmp >> 22;
        -:18864:  in += sizeof(uint32_t);
        -:18865:  /* consumed: 4 bytes (total: 80) */
        6:18866:  tmp = *(uint32_t *)in;
        6:18867:  if ((tmp2 | (tmp % (1U << 13)) << (23 - 13)) == value) {
        1:18868:    *found = 26;
        1:18869:    return 26;
        -:18870:  }
        5:18871:  tmp2 = tmp >> 13;
        -:18872:  in += sizeof(uint32_t);
        -:18873:  /* consumed: 4 bytes (total: 84) */
        5:18874:  tmp = *(uint32_t *)in;
        5:18875:  if ((tmp2 | (tmp % (1U << 4)) << (23 - 4)) == value) {
        1:18876:    *found = 27;
        1:18877:    return 27;
        -:18878:  }
        4:18879:  if (((tmp >> 4) & 8388607) == value) {
        1:18880:    *found = 28;
        1:18881:    return 28;
        -:18882:  }
        3:18883:  tmp2 = tmp >> 27;
        -:18884:  in += sizeof(uint32_t);
        -:18885:  /* consumed: 4 bytes (total: 88) */
        3:18886:  tmp = *(uint32_t *)in;
        3:18887:  if ((tmp2 | (tmp % (1U << 18)) << (23 - 18)) == value) {
        1:18888:    *found = 29;
        1:18889:    return 29;
        -:18890:  }
        2:18891:  tmp2 = tmp >> 18;
        -:18892:  in += sizeof(uint32_t);
        -:18893:  /* consumed: 4 bytes (total: 92) */
        2:18894:  tmp = *(uint32_t *)in;
        2:18895:  if ((tmp2 | (tmp % (1U << 9)) << (23 - 9)) == value) {
        1:18896:    *found = 30;
        1:18897:    return 30;
        -:18898:  }
        1:18899:  if (((tmp >> 9) & 8388607) == value) {
        1:18900:    *found = 31;
        1:18901:    return 31;
        -:18902:  }
        -:18903:  /* remaining: 0 bits */
        -:18904:  return (92);
        -:18905:}
        -:18906:
        -:18907:static uint32_t
       32:18908:linsearch24_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:18909:  uint32_t tmp, tmp2;
       32:18910:  value -= base;
        -:18911:  (void)tmp2;
       32:18912:  tmp = *(uint32_t *)in;
        -:18913:  /* consumed: 4 bytes (total: 4) */
       32:18914:  if (((tmp >> 0) & 16777215) == value) {
        1:18915:    *found = 0;
        1:18916:    return 0;
        -:18917:  }
       31:18918:  tmp2 = tmp >> 24;
        -:18919:  in += sizeof(uint32_t);
        -:18920:  /* consumed: 4 bytes (total: 8) */
       31:18921:  tmp = *(uint32_t *)in;
       31:18922:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:18923:    *found = 1;
        1:18924:    return 1;
        -:18925:  }
       30:18926:  tmp2 = tmp >> 16;
        -:18927:  in += sizeof(uint32_t);
        -:18928:  /* consumed: 4 bytes (total: 12) */
       30:18929:  tmp = *(uint32_t *)in;
       30:18930:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:18931:    *found = 2;
        1:18932:    return 2;
        -:18933:  }
       29:18934:  if (((tmp >> 8) & 16777215) == value) {
        1:18935:    *found = 3;
        1:18936:    return 3;
        -:18937:  }
        -:18938:  in += sizeof(uint32_t);
       28:18939:  tmp = *(uint32_t *)in;
        -:18940:  /* consumed: 4 bytes (total: 16) */
       28:18941:  if (((tmp >> 0) & 16777215) == value) {
        1:18942:    *found = 4;
        1:18943:    return 4;
        -:18944:  }
       27:18945:  tmp2 = tmp >> 24;
        -:18946:  in += sizeof(uint32_t);
        -:18947:  /* consumed: 4 bytes (total: 20) */
       27:18948:  tmp = *(uint32_t *)in;
       27:18949:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:18950:    *found = 5;
        1:18951:    return 5;
        -:18952:  }
       26:18953:  tmp2 = tmp >> 16;
        -:18954:  in += sizeof(uint32_t);
        -:18955:  /* consumed: 4 bytes (total: 24) */
       26:18956:  tmp = *(uint32_t *)in;
       26:18957:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:18958:    *found = 6;
        1:18959:    return 6;
        -:18960:  }
       25:18961:  if (((tmp >> 8) & 16777215) == value) {
        1:18962:    *found = 7;
        1:18963:    return 7;
        -:18964:  }
        -:18965:  in += sizeof(uint32_t);
       24:18966:  tmp = *(uint32_t *)in;
        -:18967:  /* consumed: 4 bytes (total: 28) */
       24:18968:  if (((tmp >> 0) & 16777215) == value) {
        1:18969:    *found = 8;
        1:18970:    return 8;
        -:18971:  }
       23:18972:  tmp2 = tmp >> 24;
        -:18973:  in += sizeof(uint32_t);
        -:18974:  /* consumed: 4 bytes (total: 32) */
       23:18975:  tmp = *(uint32_t *)in;
       23:18976:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:18977:    *found = 9;
        1:18978:    return 9;
        -:18979:  }
       22:18980:  tmp2 = tmp >> 16;
        -:18981:  in += sizeof(uint32_t);
        -:18982:  /* consumed: 4 bytes (total: 36) */
       22:18983:  tmp = *(uint32_t *)in;
       22:18984:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:18985:    *found = 10;
        1:18986:    return 10;
        -:18987:  }
       21:18988:  if (((tmp >> 8) & 16777215) == value) {
        1:18989:    *found = 11;
        1:18990:    return 11;
        -:18991:  }
        -:18992:  in += sizeof(uint32_t);
       20:18993:  tmp = *(uint32_t *)in;
        -:18994:  /* consumed: 4 bytes (total: 40) */
       20:18995:  if (((tmp >> 0) & 16777215) == value) {
        1:18996:    *found = 12;
        1:18997:    return 12;
        -:18998:  }
       19:18999:  tmp2 = tmp >> 24;
        -:19000:  in += sizeof(uint32_t);
        -:19001:  /* consumed: 4 bytes (total: 44) */
       19:19002:  tmp = *(uint32_t *)in;
       19:19003:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:19004:    *found = 13;
        1:19005:    return 13;
        -:19006:  }
       18:19007:  tmp2 = tmp >> 16;
        -:19008:  in += sizeof(uint32_t);
        -:19009:  /* consumed: 4 bytes (total: 48) */
       18:19010:  tmp = *(uint32_t *)in;
       18:19011:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:19012:    *found = 14;
        1:19013:    return 14;
        -:19014:  }
       17:19015:  if (((tmp >> 8) & 16777215) == value) {
        1:19016:    *found = 15;
        1:19017:    return 15;
        -:19018:  }
        -:19019:  in += sizeof(uint32_t);
       16:19020:  tmp = *(uint32_t *)in;
        -:19021:  /* consumed: 4 bytes (total: 52) */
       16:19022:  if (((tmp >> 0) & 16777215) == value) {
        1:19023:    *found = 16;
        1:19024:    return 16;
        -:19025:  }
       15:19026:  tmp2 = tmp >> 24;
        -:19027:  in += sizeof(uint32_t);
        -:19028:  /* consumed: 4 bytes (total: 56) */
       15:19029:  tmp = *(uint32_t *)in;
       15:19030:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:19031:    *found = 17;
        1:19032:    return 17;
        -:19033:  }
       14:19034:  tmp2 = tmp >> 16;
        -:19035:  in += sizeof(uint32_t);
        -:19036:  /* consumed: 4 bytes (total: 60) */
       14:19037:  tmp = *(uint32_t *)in;
       14:19038:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:19039:    *found = 18;
        1:19040:    return 18;
        -:19041:  }
       13:19042:  if (((tmp >> 8) & 16777215) == value) {
        1:19043:    *found = 19;
        1:19044:    return 19;
        -:19045:  }
        -:19046:  in += sizeof(uint32_t);
       12:19047:  tmp = *(uint32_t *)in;
        -:19048:  /* consumed: 4 bytes (total: 64) */
       12:19049:  if (((tmp >> 0) & 16777215) == value) {
        1:19050:    *found = 20;
        1:19051:    return 20;
        -:19052:  }
       11:19053:  tmp2 = tmp >> 24;
        -:19054:  in += sizeof(uint32_t);
        -:19055:  /* consumed: 4 bytes (total: 68) */
       11:19056:  tmp = *(uint32_t *)in;
       11:19057:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:19058:    *found = 21;
        1:19059:    return 21;
        -:19060:  }
       10:19061:  tmp2 = tmp >> 16;
        -:19062:  in += sizeof(uint32_t);
        -:19063:  /* consumed: 4 bytes (total: 72) */
       10:19064:  tmp = *(uint32_t *)in;
       10:19065:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:19066:    *found = 22;
        1:19067:    return 22;
        -:19068:  }
        9:19069:  if (((tmp >> 8) & 16777215) == value) {
        1:19070:    *found = 23;
        1:19071:    return 23;
        -:19072:  }
        -:19073:  in += sizeof(uint32_t);
        8:19074:  tmp = *(uint32_t *)in;
        -:19075:  /* consumed: 4 bytes (total: 76) */
        8:19076:  if (((tmp >> 0) & 16777215) == value) {
        1:19077:    *found = 24;
        1:19078:    return 24;
        -:19079:  }
        7:19080:  tmp2 = tmp >> 24;
        -:19081:  in += sizeof(uint32_t);
        -:19082:  /* consumed: 4 bytes (total: 80) */
        7:19083:  tmp = *(uint32_t *)in;
        7:19084:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:19085:    *found = 25;
        1:19086:    return 25;
        -:19087:  }
        6:19088:  tmp2 = tmp >> 16;
        -:19089:  in += sizeof(uint32_t);
        -:19090:  /* consumed: 4 bytes (total: 84) */
        6:19091:  tmp = *(uint32_t *)in;
        6:19092:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:19093:    *found = 26;
        1:19094:    return 26;
        -:19095:  }
        5:19096:  if (((tmp >> 8) & 16777215) == value) {
        1:19097:    *found = 27;
        1:19098:    return 27;
        -:19099:  }
        -:19100:  in += sizeof(uint32_t);
        4:19101:  tmp = *(uint32_t *)in;
        -:19102:  /* consumed: 4 bytes (total: 88) */
        4:19103:  if (((tmp >> 0) & 16777215) == value) {
        1:19104:    *found = 28;
        1:19105:    return 28;
        -:19106:  }
        3:19107:  tmp2 = tmp >> 24;
        -:19108:  in += sizeof(uint32_t);
        -:19109:  /* consumed: 4 bytes (total: 92) */
        3:19110:  tmp = *(uint32_t *)in;
        3:19111:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:19112:    *found = 29;
        1:19113:    return 29;
        -:19114:  }
        2:19115:  tmp2 = tmp >> 16;
        -:19116:  in += sizeof(uint32_t);
        -:19117:  /* consumed: 4 bytes (total: 96) */
        2:19118:  tmp = *(uint32_t *)in;
        2:19119:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:19120:    *found = 30;
        1:19121:    return 30;
        -:19122:  }
        1:19123:  if (((tmp >> 8) & 16777215) == value) {
        1:19124:    *found = 31;
        1:19125:    return 31;
        -:19126:  }
        -:19127:  /* remaining: 0 bits */
        -:19128:  return (96);
        -:19129:}
        -:19130:
        -:19131:static uint32_t
       32:19132:linsearch25_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:19133:  uint32_t tmp, tmp2;
       32:19134:  value -= base;
        -:19135:  (void)tmp2;
       32:19136:  tmp = *(uint32_t *)in;
        -:19137:  /* consumed: 4 bytes (total: 4) */
       32:19138:  if (((tmp >> 0) & 33554431) == value) {
        1:19139:    *found = 0;
        1:19140:    return 0;
        -:19141:  }
       31:19142:  tmp2 = tmp >> 25;
        -:19143:  in += sizeof(uint32_t);
        -:19144:  /* consumed: 4 bytes (total: 8) */
       31:19145:  tmp = *(uint32_t *)in;
       31:19146:  if ((tmp2 | (tmp % (1U << 18)) << (25 - 18)) == value) {
        1:19147:    *found = 1;
        1:19148:    return 1;
        -:19149:  }
       30:19150:  tmp2 = tmp >> 18;
        -:19151:  in += sizeof(uint32_t);
        -:19152:  /* consumed: 4 bytes (total: 12) */
       30:19153:  tmp = *(uint32_t *)in;
       30:19154:  if ((tmp2 | (tmp % (1U << 11)) << (25 - 11)) == value) {
        1:19155:    *found = 2;
        1:19156:    return 2;
        -:19157:  }
       29:19158:  tmp2 = tmp >> 11;
        -:19159:  in += sizeof(uint32_t);
        -:19160:  /* consumed: 4 bytes (total: 16) */
       29:19161:  tmp = *(uint32_t *)in;
       29:19162:  if ((tmp2 | (tmp % (1U << 4)) << (25 - 4)) == value) {
        1:19163:    *found = 3;
        1:19164:    return 3;
        -:19165:  }
       28:19166:  if (((tmp >> 4) & 33554431) == value) {
        1:19167:    *found = 4;
        1:19168:    return 4;
        -:19169:  }
       27:19170:  tmp2 = tmp >> 29;
        -:19171:  in += sizeof(uint32_t);
        -:19172:  /* consumed: 4 bytes (total: 20) */
       27:19173:  tmp = *(uint32_t *)in;
       27:19174:  if ((tmp2 | (tmp % (1U << 22)) << (25 - 22)) == value) {
        1:19175:    *found = 5;
        1:19176:    return 5;
        -:19177:  }
       26:19178:  tmp2 = tmp >> 22;
        -:19179:  in += sizeof(uint32_t);
        -:19180:  /* consumed: 4 bytes (total: 24) */
       26:19181:  tmp = *(uint32_t *)in;
       26:19182:  if ((tmp2 | (tmp % (1U << 15)) << (25 - 15)) == value) {
        1:19183:    *found = 6;
        1:19184:    return 6;
        -:19185:  }
       25:19186:  tmp2 = tmp >> 15;
        -:19187:  in += sizeof(uint32_t);
        -:19188:  /* consumed: 4 bytes (total: 28) */
       25:19189:  tmp = *(uint32_t *)in;
       25:19190:  if ((tmp2 | (tmp % (1U << 8)) << (25 - 8)) == value) {
        1:19191:    *found = 7;
        1:19192:    return 7;
        -:19193:  }
       24:19194:  tmp2 = tmp >> 8;
        -:19195:  in += sizeof(uint32_t);
        -:19196:  /* consumed: 4 bytes (total: 32) */
       24:19197:  tmp = *(uint32_t *)in;
       24:19198:  if ((tmp2 | (tmp % (1U << 1)) << (25 - 1)) == value) {
        1:19199:    *found = 8;
        1:19200:    return 8;
        -:19201:  }
       23:19202:  if (((tmp >> 1) & 33554431) == value) {
        1:19203:    *found = 9;
        1:19204:    return 9;
        -:19205:  }
       22:19206:  tmp2 = tmp >> 26;
        -:19207:  in += sizeof(uint32_t);
        -:19208:  /* consumed: 4 bytes (total: 36) */
       22:19209:  tmp = *(uint32_t *)in;
       22:19210:  if ((tmp2 | (tmp % (1U << 19)) << (25 - 19)) == value) {
        1:19211:    *found = 10;
        1:19212:    return 10;
        -:19213:  }
       21:19214:  tmp2 = tmp >> 19;
        -:19215:  in += sizeof(uint32_t);
        -:19216:  /* consumed: 4 bytes (total: 40) */
       21:19217:  tmp = *(uint32_t *)in;
       21:19218:  if ((tmp2 | (tmp % (1U << 12)) << (25 - 12)) == value) {
        1:19219:    *found = 11;
        1:19220:    return 11;
        -:19221:  }
       20:19222:  tmp2 = tmp >> 12;
        -:19223:  in += sizeof(uint32_t);
        -:19224:  /* consumed: 4 bytes (total: 44) */
       20:19225:  tmp = *(uint32_t *)in;
       20:19226:  if ((tmp2 | (tmp % (1U << 5)) << (25 - 5)) == value) {
        1:19227:    *found = 12;
        1:19228:    return 12;
        -:19229:  }
       19:19230:  if (((tmp >> 5) & 33554431) == value) {
        1:19231:    *found = 13;
        1:19232:    return 13;
        -:19233:  }
       18:19234:  tmp2 = tmp >> 30;
        -:19235:  in += sizeof(uint32_t);
        -:19236:  /* consumed: 4 bytes (total: 48) */
       18:19237:  tmp = *(uint32_t *)in;
       18:19238:  if ((tmp2 | (tmp % (1U << 23)) << (25 - 23)) == value) {
        1:19239:    *found = 14;
        1:19240:    return 14;
        -:19241:  }
       17:19242:  tmp2 = tmp >> 23;
        -:19243:  in += sizeof(uint32_t);
        -:19244:  /* consumed: 4 bytes (total: 52) */
       17:19245:  tmp = *(uint32_t *)in;
       17:19246:  if ((tmp2 | (tmp % (1U << 16)) << (25 - 16)) == value) {
        1:19247:    *found = 15;
        1:19248:    return 15;
        -:19249:  }
       16:19250:  tmp2 = tmp >> 16;
        -:19251:  in += sizeof(uint32_t);
        -:19252:  /* consumed: 4 bytes (total: 56) */
       16:19253:  tmp = *(uint32_t *)in;
       16:19254:  if ((tmp2 | (tmp % (1U << 9)) << (25 - 9)) == value) {
        1:19255:    *found = 16;
        1:19256:    return 16;
        -:19257:  }
       15:19258:  tmp2 = tmp >> 9;
        -:19259:  in += sizeof(uint32_t);
        -:19260:  /* consumed: 4 bytes (total: 60) */
       15:19261:  tmp = *(uint32_t *)in;
       15:19262:  if ((tmp2 | (tmp % (1U << 2)) << (25 - 2)) == value) {
        1:19263:    *found = 17;
        1:19264:    return 17;
        -:19265:  }
       14:19266:  if (((tmp >> 2) & 33554431) == value) {
        1:19267:    *found = 18;
        1:19268:    return 18;
        -:19269:  }
       13:19270:  tmp2 = tmp >> 27;
        -:19271:  in += sizeof(uint32_t);
        -:19272:  /* consumed: 4 bytes (total: 64) */
       13:19273:  tmp = *(uint32_t *)in;
       13:19274:  if ((tmp2 | (tmp % (1U << 20)) << (25 - 20)) == value) {
        1:19275:    *found = 19;
        1:19276:    return 19;
        -:19277:  }
       12:19278:  tmp2 = tmp >> 20;
        -:19279:  in += sizeof(uint32_t);
        -:19280:  /* consumed: 4 bytes (total: 68) */
       12:19281:  tmp = *(uint32_t *)in;
       12:19282:  if ((tmp2 | (tmp % (1U << 13)) << (25 - 13)) == value) {
        1:19283:    *found = 20;
        1:19284:    return 20;
        -:19285:  }
       11:19286:  tmp2 = tmp >> 13;
        -:19287:  in += sizeof(uint32_t);
        -:19288:  /* consumed: 4 bytes (total: 72) */
       11:19289:  tmp = *(uint32_t *)in;
       11:19290:  if ((tmp2 | (tmp % (1U << 6)) << (25 - 6)) == value) {
        1:19291:    *found = 21;
        1:19292:    return 21;
        -:19293:  }
       10:19294:  if (((tmp >> 6) & 33554431) == value) {
        1:19295:    *found = 22;
        1:19296:    return 22;
        -:19297:  }
        9:19298:  tmp2 = tmp >> 31;
        -:19299:  in += sizeof(uint32_t);
        -:19300:  /* consumed: 4 bytes (total: 76) */
        9:19301:  tmp = *(uint32_t *)in;
        9:19302:  if ((tmp2 | (tmp % (1U << 24)) << (25 - 24)) == value) {
        1:19303:    *found = 23;
        1:19304:    return 23;
        -:19305:  }
        8:19306:  tmp2 = tmp >> 24;
        -:19307:  in += sizeof(uint32_t);
        -:19308:  /* consumed: 4 bytes (total: 80) */
        8:19309:  tmp = *(uint32_t *)in;
        8:19310:  if ((tmp2 | (tmp % (1U << 17)) << (25 - 17)) == value) {
        1:19311:    *found = 24;
        1:19312:    return 24;
        -:19313:  }
        7:19314:  tmp2 = tmp >> 17;
        -:19315:  in += sizeof(uint32_t);
        -:19316:  /* consumed: 4 bytes (total: 84) */
        7:19317:  tmp = *(uint32_t *)in;
        7:19318:  if ((tmp2 | (tmp % (1U << 10)) << (25 - 10)) == value) {
        1:19319:    *found = 25;
        1:19320:    return 25;
        -:19321:  }
        6:19322:  tmp2 = tmp >> 10;
        -:19323:  in += sizeof(uint32_t);
        -:19324:  /* consumed: 4 bytes (total: 88) */
        6:19325:  tmp = *(uint32_t *)in;
        6:19326:  if ((tmp2 | (tmp % (1U << 3)) << (25 - 3)) == value) {
        1:19327:    *found = 26;
        1:19328:    return 26;
        -:19329:  }
        5:19330:  if (((tmp >> 3) & 33554431) == value) {
        1:19331:    *found = 27;
        1:19332:    return 27;
        -:19333:  }
        4:19334:  tmp2 = tmp >> 28;
        -:19335:  in += sizeof(uint32_t);
        -:19336:  /* consumed: 4 bytes (total: 92) */
        4:19337:  tmp = *(uint32_t *)in;
        4:19338:  if ((tmp2 | (tmp % (1U << 21)) << (25 - 21)) == value) {
        1:19339:    *found = 28;
        1:19340:    return 28;
        -:19341:  }
        3:19342:  tmp2 = tmp >> 21;
        -:19343:  in += sizeof(uint32_t);
        -:19344:  /* consumed: 4 bytes (total: 96) */
        3:19345:  tmp = *(uint32_t *)in;
        3:19346:  if ((tmp2 | (tmp % (1U << 14)) << (25 - 14)) == value) {
        1:19347:    *found = 29;
        1:19348:    return 29;
        -:19349:  }
        2:19350:  tmp2 = tmp >> 14;
        -:19351:  in += sizeof(uint32_t);
        -:19352:  /* consumed: 4 bytes (total: 100) */
        2:19353:  tmp = *(uint32_t *)in;
        2:19354:  if ((tmp2 | (tmp % (1U << 7)) << (25 - 7)) == value) {
        1:19355:    *found = 30;
        1:19356:    return 30;
        -:19357:  }
        1:19358:  if (((tmp >> 7) & 33554431) == value) {
        1:19359:    *found = 31;
        1:19360:    return 31;
        -:19361:  }
        -:19362:  /* remaining: 0 bits */
        -:19363:  return (100);
        -:19364:}
        -:19365:
        -:19366:static uint32_t
       32:19367:linsearch26_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:19368:  uint32_t tmp, tmp2;
       32:19369:  value -= base;
        -:19370:  (void)tmp2;
       32:19371:  tmp = *(uint32_t *)in;
        -:19372:  /* consumed: 4 bytes (total: 4) */
       32:19373:  if (((tmp >> 0) & 67108863) == value) {
        1:19374:    *found = 0;
        1:19375:    return 0;
        -:19376:  }
       31:19377:  tmp2 = tmp >> 26;
        -:19378:  in += sizeof(uint32_t);
        -:19379:  /* consumed: 4 bytes (total: 8) */
       31:19380:  tmp = *(uint32_t *)in;
       31:19381:  if ((tmp2 | (tmp % (1U << 20)) << (26 - 20)) == value) {
        1:19382:    *found = 1;
        1:19383:    return 1;
        -:19384:  }
       30:19385:  tmp2 = tmp >> 20;
        -:19386:  in += sizeof(uint32_t);
        -:19387:  /* consumed: 4 bytes (total: 12) */
       30:19388:  tmp = *(uint32_t *)in;
       30:19389:  if ((tmp2 | (tmp % (1U << 14)) << (26 - 14)) == value) {
        1:19390:    *found = 2;
        1:19391:    return 2;
        -:19392:  }
       29:19393:  tmp2 = tmp >> 14;
        -:19394:  in += sizeof(uint32_t);
        -:19395:  /* consumed: 4 bytes (total: 16) */
       29:19396:  tmp = *(uint32_t *)in;
       29:19397:  if ((tmp2 | (tmp % (1U << 8)) << (26 - 8)) == value) {
        1:19398:    *found = 3;
        1:19399:    return 3;
        -:19400:  }
       28:19401:  tmp2 = tmp >> 8;
        -:19402:  in += sizeof(uint32_t);
        -:19403:  /* consumed: 4 bytes (total: 20) */
       28:19404:  tmp = *(uint32_t *)in;
       28:19405:  if ((tmp2 | (tmp % (1U << 2)) << (26 - 2)) == value) {
        1:19406:    *found = 4;
        1:19407:    return 4;
        -:19408:  }
       27:19409:  if (((tmp >> 2) & 67108863) == value) {
        1:19410:    *found = 5;
        1:19411:    return 5;
        -:19412:  }
       26:19413:  tmp2 = tmp >> 28;
        -:19414:  in += sizeof(uint32_t);
        -:19415:  /* consumed: 4 bytes (total: 24) */
       26:19416:  tmp = *(uint32_t *)in;
       26:19417:  if ((tmp2 | (tmp % (1U << 22)) << (26 - 22)) == value) {
        1:19418:    *found = 6;
        1:19419:    return 6;
        -:19420:  }
       25:19421:  tmp2 = tmp >> 22;
        -:19422:  in += sizeof(uint32_t);
        -:19423:  /* consumed: 4 bytes (total: 28) */
       25:19424:  tmp = *(uint32_t *)in;
       25:19425:  if ((tmp2 | (tmp % (1U << 16)) << (26 - 16)) == value) {
        1:19426:    *found = 7;
        1:19427:    return 7;
        -:19428:  }
       24:19429:  tmp2 = tmp >> 16;
        -:19430:  in += sizeof(uint32_t);
        -:19431:  /* consumed: 4 bytes (total: 32) */
       24:19432:  tmp = *(uint32_t *)in;
       24:19433:  if ((tmp2 | (tmp % (1U << 10)) << (26 - 10)) == value) {
        1:19434:    *found = 8;
        1:19435:    return 8;
        -:19436:  }
       23:19437:  tmp2 = tmp >> 10;
        -:19438:  in += sizeof(uint32_t);
        -:19439:  /* consumed: 4 bytes (total: 36) */
       23:19440:  tmp = *(uint32_t *)in;
       23:19441:  if ((tmp2 | (tmp % (1U << 4)) << (26 - 4)) == value) {
        1:19442:    *found = 9;
        1:19443:    return 9;
        -:19444:  }
       22:19445:  if (((tmp >> 4) & 67108863) == value) {
        1:19446:    *found = 10;
        1:19447:    return 10;
        -:19448:  }
       21:19449:  tmp2 = tmp >> 30;
        -:19450:  in += sizeof(uint32_t);
        -:19451:  /* consumed: 4 bytes (total: 40) */
       21:19452:  tmp = *(uint32_t *)in;
       21:19453:  if ((tmp2 | (tmp % (1U << 24)) << (26 - 24)) == value) {
        1:19454:    *found = 11;
        1:19455:    return 11;
        -:19456:  }
       20:19457:  tmp2 = tmp >> 24;
        -:19458:  in += sizeof(uint32_t);
        -:19459:  /* consumed: 4 bytes (total: 44) */
       20:19460:  tmp = *(uint32_t *)in;
       20:19461:  if ((tmp2 | (tmp % (1U << 18)) << (26 - 18)) == value) {
        1:19462:    *found = 12;
        1:19463:    return 12;
        -:19464:  }
       19:19465:  tmp2 = tmp >> 18;
        -:19466:  in += sizeof(uint32_t);
        -:19467:  /* consumed: 4 bytes (total: 48) */
       19:19468:  tmp = *(uint32_t *)in;
       19:19469:  if ((tmp2 | (tmp % (1U << 12)) << (26 - 12)) == value) {
        1:19470:    *found = 13;
        1:19471:    return 13;
        -:19472:  }
       18:19473:  tmp2 = tmp >> 12;
        -:19474:  in += sizeof(uint32_t);
        -:19475:  /* consumed: 4 bytes (total: 52) */
       18:19476:  tmp = *(uint32_t *)in;
       18:19477:  if ((tmp2 | (tmp % (1U << 6)) << (26 - 6)) == value) {
        1:19478:    *found = 14;
        1:19479:    return 14;
        -:19480:  }
       17:19481:  if (((tmp >> 6) & 67108863) == value) {
        1:19482:    *found = 15;
        1:19483:    return 15;
        -:19484:  }
        -:19485:  in += sizeof(uint32_t);
       16:19486:  tmp = *(uint32_t *)in;
        -:19487:  /* consumed: 4 bytes (total: 56) */
       16:19488:  if (((tmp >> 0) & 67108863) == value) {
        1:19489:    *found = 16;
        1:19490:    return 16;
        -:19491:  }
       15:19492:  tmp2 = tmp >> 26;
        -:19493:  in += sizeof(uint32_t);
        -:19494:  /* consumed: 4 bytes (total: 60) */
       15:19495:  tmp = *(uint32_t *)in;
       15:19496:  if ((tmp2 | (tmp % (1U << 20)) << (26 - 20)) == value) {
        1:19497:    *found = 17;
        1:19498:    return 17;
        -:19499:  }
       14:19500:  tmp2 = tmp >> 20;
        -:19501:  in += sizeof(uint32_t);
        -:19502:  /* consumed: 4 bytes (total: 64) */
       14:19503:  tmp = *(uint32_t *)in;
       14:19504:  if ((tmp2 | (tmp % (1U << 14)) << (26 - 14)) == value) {
        1:19505:    *found = 18;
        1:19506:    return 18;
        -:19507:  }
       13:19508:  tmp2 = tmp >> 14;
        -:19509:  in += sizeof(uint32_t);
        -:19510:  /* consumed: 4 bytes (total: 68) */
       13:19511:  tmp = *(uint32_t *)in;
       13:19512:  if ((tmp2 | (tmp % (1U << 8)) << (26 - 8)) == value) {
        1:19513:    *found = 19;
        1:19514:    return 19;
        -:19515:  }
       12:19516:  tmp2 = tmp >> 8;
        -:19517:  in += sizeof(uint32_t);
        -:19518:  /* consumed: 4 bytes (total: 72) */
       12:19519:  tmp = *(uint32_t *)in;
       12:19520:  if ((tmp2 | (tmp % (1U << 2)) << (26 - 2)) == value) {
        1:19521:    *found = 20;
        1:19522:    return 20;
        -:19523:  }
       11:19524:  if (((tmp >> 2) & 67108863) == value) {
        1:19525:    *found = 21;
        1:19526:    return 21;
        -:19527:  }
       10:19528:  tmp2 = tmp >> 28;
        -:19529:  in += sizeof(uint32_t);
        -:19530:  /* consumed: 4 bytes (total: 76) */
       10:19531:  tmp = *(uint32_t *)in;
       10:19532:  if ((tmp2 | (tmp % (1U << 22)) << (26 - 22)) == value) {
        1:19533:    *found = 22;
        1:19534:    return 22;
        -:19535:  }
        9:19536:  tmp2 = tmp >> 22;
        -:19537:  in += sizeof(uint32_t);
        -:19538:  /* consumed: 4 bytes (total: 80) */
        9:19539:  tmp = *(uint32_t *)in;
        9:19540:  if ((tmp2 | (tmp % (1U << 16)) << (26 - 16)) == value) {
        1:19541:    *found = 23;
        1:19542:    return 23;
        -:19543:  }
        8:19544:  tmp2 = tmp >> 16;
        -:19545:  in += sizeof(uint32_t);
        -:19546:  /* consumed: 4 bytes (total: 84) */
        8:19547:  tmp = *(uint32_t *)in;
        8:19548:  if ((tmp2 | (tmp % (1U << 10)) << (26 - 10)) == value) {
        1:19549:    *found = 24;
        1:19550:    return 24;
        -:19551:  }
        7:19552:  tmp2 = tmp >> 10;
        -:19553:  in += sizeof(uint32_t);
        -:19554:  /* consumed: 4 bytes (total: 88) */
        7:19555:  tmp = *(uint32_t *)in;
        7:19556:  if ((tmp2 | (tmp % (1U << 4)) << (26 - 4)) == value) {
        1:19557:    *found = 25;
        1:19558:    return 25;
        -:19559:  }
        6:19560:  if (((tmp >> 4) & 67108863) == value) {
        1:19561:    *found = 26;
        1:19562:    return 26;
        -:19563:  }
        5:19564:  tmp2 = tmp >> 30;
        -:19565:  in += sizeof(uint32_t);
        -:19566:  /* consumed: 4 bytes (total: 92) */
        5:19567:  tmp = *(uint32_t *)in;
        5:19568:  if ((tmp2 | (tmp % (1U << 24)) << (26 - 24)) == value) {
        1:19569:    *found = 27;
        1:19570:    return 27;
        -:19571:  }
        4:19572:  tmp2 = tmp >> 24;
        -:19573:  in += sizeof(uint32_t);
        -:19574:  /* consumed: 4 bytes (total: 96) */
        4:19575:  tmp = *(uint32_t *)in;
        4:19576:  if ((tmp2 | (tmp % (1U << 18)) << (26 - 18)) == value) {
        1:19577:    *found = 28;
        1:19578:    return 28;
        -:19579:  }
        3:19580:  tmp2 = tmp >> 18;
        -:19581:  in += sizeof(uint32_t);
        -:19582:  /* consumed: 4 bytes (total: 100) */
        3:19583:  tmp = *(uint32_t *)in;
        3:19584:  if ((tmp2 | (tmp % (1U << 12)) << (26 - 12)) == value) {
        1:19585:    *found = 29;
        1:19586:    return 29;
        -:19587:  }
        2:19588:  tmp2 = tmp >> 12;
        -:19589:  in += sizeof(uint32_t);
        -:19590:  /* consumed: 4 bytes (total: 104) */
        2:19591:  tmp = *(uint32_t *)in;
        2:19592:  if ((tmp2 | (tmp % (1U << 6)) << (26 - 6)) == value) {
        1:19593:    *found = 30;
        1:19594:    return 30;
        -:19595:  }
        1:19596:  if (((tmp >> 6) & 67108863) == value) {
        1:19597:    *found = 31;
        1:19598:    return 31;
        -:19599:  }
        -:19600:  /* remaining: 0 bits */
        -:19601:  return (104);
        -:19602:}
        -:19603:
        -:19604:static uint32_t
       32:19605:linsearch27_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:19606:  uint32_t tmp, tmp2;
       32:19607:  value -= base;
        -:19608:  (void)tmp2;
       32:19609:  tmp = *(uint32_t *)in;
        -:19610:  /* consumed: 4 bytes (total: 4) */
       32:19611:  if (((tmp >> 0) & 134217727) == value) {
        1:19612:    *found = 0;
        1:19613:    return 0;
        -:19614:  }
       31:19615:  tmp2 = tmp >> 27;
        -:19616:  in += sizeof(uint32_t);
        -:19617:  /* consumed: 4 bytes (total: 8) */
       31:19618:  tmp = *(uint32_t *)in;
       31:19619:  if ((tmp2 | (tmp % (1U << 22)) << (27 - 22)) == value) {
        1:19620:    *found = 1;
        1:19621:    return 1;
        -:19622:  }
       30:19623:  tmp2 = tmp >> 22;
        -:19624:  in += sizeof(uint32_t);
        -:19625:  /* consumed: 4 bytes (total: 12) */
       30:19626:  tmp = *(uint32_t *)in;
       30:19627:  if ((tmp2 | (tmp % (1U << 17)) << (27 - 17)) == value) {
        1:19628:    *found = 2;
        1:19629:    return 2;
        -:19630:  }
       29:19631:  tmp2 = tmp >> 17;
        -:19632:  in += sizeof(uint32_t);
        -:19633:  /* consumed: 4 bytes (total: 16) */
       29:19634:  tmp = *(uint32_t *)in;
       29:19635:  if ((tmp2 | (tmp % (1U << 12)) << (27 - 12)) == value) {
        1:19636:    *found = 3;
        1:19637:    return 3;
        -:19638:  }
       28:19639:  tmp2 = tmp >> 12;
        -:19640:  in += sizeof(uint32_t);
        -:19641:  /* consumed: 4 bytes (total: 20) */
       28:19642:  tmp = *(uint32_t *)in;
       28:19643:  if ((tmp2 | (tmp % (1U << 7)) << (27 - 7)) == value) {
        1:19644:    *found = 4;
        1:19645:    return 4;
        -:19646:  }
       27:19647:  tmp2 = tmp >> 7;
        -:19648:  in += sizeof(uint32_t);
        -:19649:  /* consumed: 4 bytes (total: 24) */
       27:19650:  tmp = *(uint32_t *)in;
       27:19651:  if ((tmp2 | (tmp % (1U << 2)) << (27 - 2)) == value) {
        1:19652:    *found = 5;
        1:19653:    return 5;
        -:19654:  }
       26:19655:  if (((tmp >> 2) & 134217727) == value) {
        1:19656:    *found = 6;
        1:19657:    return 6;
        -:19658:  }
       25:19659:  tmp2 = tmp >> 29;
        -:19660:  in += sizeof(uint32_t);
        -:19661:  /* consumed: 4 bytes (total: 28) */
       25:19662:  tmp = *(uint32_t *)in;
       25:19663:  if ((tmp2 | (tmp % (1U << 24)) << (27 - 24)) == value) {
        1:19664:    *found = 7;
        1:19665:    return 7;
        -:19666:  }
       24:19667:  tmp2 = tmp >> 24;
        -:19668:  in += sizeof(uint32_t);
        -:19669:  /* consumed: 4 bytes (total: 32) */
       24:19670:  tmp = *(uint32_t *)in;
       24:19671:  if ((tmp2 | (tmp % (1U << 19)) << (27 - 19)) == value) {
        1:19672:    *found = 8;
        1:19673:    return 8;
        -:19674:  }
       23:19675:  tmp2 = tmp >> 19;
        -:19676:  in += sizeof(uint32_t);
        -:19677:  /* consumed: 4 bytes (total: 36) */
       23:19678:  tmp = *(uint32_t *)in;
       23:19679:  if ((tmp2 | (tmp % (1U << 14)) << (27 - 14)) == value) {
        1:19680:    *found = 9;
        1:19681:    return 9;
        -:19682:  }
       22:19683:  tmp2 = tmp >> 14;
        -:19684:  in += sizeof(uint32_t);
        -:19685:  /* consumed: 4 bytes (total: 40) */
       22:19686:  tmp = *(uint32_t *)in;
       22:19687:  if ((tmp2 | (tmp % (1U << 9)) << (27 - 9)) == value) {
        1:19688:    *found = 10;
        1:19689:    return 10;
        -:19690:  }
       21:19691:  tmp2 = tmp >> 9;
        -:19692:  in += sizeof(uint32_t);
        -:19693:  /* consumed: 4 bytes (total: 44) */
       21:19694:  tmp = *(uint32_t *)in;
       21:19695:  if ((tmp2 | (tmp % (1U << 4)) << (27 - 4)) == value) {
        1:19696:    *found = 11;
        1:19697:    return 11;
        -:19698:  }
       20:19699:  if (((tmp >> 4) & 134217727) == value) {
        1:19700:    *found = 12;
        1:19701:    return 12;
        -:19702:  }
       19:19703:  tmp2 = tmp >> 31;
        -:19704:  in += sizeof(uint32_t);
        -:19705:  /* consumed: 4 bytes (total: 48) */
       19:19706:  tmp = *(uint32_t *)in;
       19:19707:  if ((tmp2 | (tmp % (1U << 26)) << (27 - 26)) == value) {
        1:19708:    *found = 13;
        1:19709:    return 13;
        -:19710:  }
       18:19711:  tmp2 = tmp >> 26;
        -:19712:  in += sizeof(uint32_t);
        -:19713:  /* consumed: 4 bytes (total: 52) */
       18:19714:  tmp = *(uint32_t *)in;
       18:19715:  if ((tmp2 | (tmp % (1U << 21)) << (27 - 21)) == value) {
        1:19716:    *found = 14;
        1:19717:    return 14;
        -:19718:  }
       17:19719:  tmp2 = tmp >> 21;
        -:19720:  in += sizeof(uint32_t);
        -:19721:  /* consumed: 4 bytes (total: 56) */
       17:19722:  tmp = *(uint32_t *)in;
       17:19723:  if ((tmp2 | (tmp % (1U << 16)) << (27 - 16)) == value) {
        1:19724:    *found = 15;
        1:19725:    return 15;
        -:19726:  }
       16:19727:  tmp2 = tmp >> 16;
        -:19728:  in += sizeof(uint32_t);
        -:19729:  /* consumed: 4 bytes (total: 60) */
       16:19730:  tmp = *(uint32_t *)in;
       16:19731:  if ((tmp2 | (tmp % (1U << 11)) << (27 - 11)) == value) {
        1:19732:    *found = 16;
        1:19733:    return 16;
        -:19734:  }
       15:19735:  tmp2 = tmp >> 11;
        -:19736:  in += sizeof(uint32_t);
        -:19737:  /* consumed: 4 bytes (total: 64) */
       15:19738:  tmp = *(uint32_t *)in;
       15:19739:  if ((tmp2 | (tmp % (1U << 6)) << (27 - 6)) == value) {
        1:19740:    *found = 17;
        1:19741:    return 17;
        -:19742:  }
       14:19743:  tmp2 = tmp >> 6;
        -:19744:  in += sizeof(uint32_t);
        -:19745:  /* consumed: 4 bytes (total: 68) */
       14:19746:  tmp = *(uint32_t *)in;
       14:19747:  if ((tmp2 | (tmp % (1U << 1)) << (27 - 1)) == value) {
        1:19748:    *found = 18;
        1:19749:    return 18;
        -:19750:  }
       13:19751:  if (((tmp >> 1) & 134217727) == value) {
        1:19752:    *found = 19;
        1:19753:    return 19;
        -:19754:  }
       12:19755:  tmp2 = tmp >> 28;
        -:19756:  in += sizeof(uint32_t);
        -:19757:  /* consumed: 4 bytes (total: 72) */
       12:19758:  tmp = *(uint32_t *)in;
       12:19759:  if ((tmp2 | (tmp % (1U << 23)) << (27 - 23)) == value) {
        1:19760:    *found = 20;
        1:19761:    return 20;
        -:19762:  }
       11:19763:  tmp2 = tmp >> 23;
        -:19764:  in += sizeof(uint32_t);
        -:19765:  /* consumed: 4 bytes (total: 76) */
       11:19766:  tmp = *(uint32_t *)in;
       11:19767:  if ((tmp2 | (tmp % (1U << 18)) << (27 - 18)) == value) {
        1:19768:    *found = 21;
        1:19769:    return 21;
        -:19770:  }
       10:19771:  tmp2 = tmp >> 18;
        -:19772:  in += sizeof(uint32_t);
        -:19773:  /* consumed: 4 bytes (total: 80) */
       10:19774:  tmp = *(uint32_t *)in;
       10:19775:  if ((tmp2 | (tmp % (1U << 13)) << (27 - 13)) == value) {
        1:19776:    *found = 22;
        1:19777:    return 22;
        -:19778:  }
        9:19779:  tmp2 = tmp >> 13;
        -:19780:  in += sizeof(uint32_t);
        -:19781:  /* consumed: 4 bytes (total: 84) */
        9:19782:  tmp = *(uint32_t *)in;
        9:19783:  if ((tmp2 | (tmp % (1U << 8)) << (27 - 8)) == value) {
        1:19784:    *found = 23;
        1:19785:    return 23;
        -:19786:  }
        8:19787:  tmp2 = tmp >> 8;
        -:19788:  in += sizeof(uint32_t);
        -:19789:  /* consumed: 4 bytes (total: 88) */
        8:19790:  tmp = *(uint32_t *)in;
        8:19791:  if ((tmp2 | (tmp % (1U << 3)) << (27 - 3)) == value) {
        1:19792:    *found = 24;
        1:19793:    return 24;
        -:19794:  }
        7:19795:  if (((tmp >> 3) & 134217727) == value) {
        1:19796:    *found = 25;
        1:19797:    return 25;
        -:19798:  }
        6:19799:  tmp2 = tmp >> 30;
        -:19800:  in += sizeof(uint32_t);
        -:19801:  /* consumed: 4 bytes (total: 92) */
        6:19802:  tmp = *(uint32_t *)in;
        6:19803:  if ((tmp2 | (tmp % (1U << 25)) << (27 - 25)) == value) {
        1:19804:    *found = 26;
        1:19805:    return 26;
        -:19806:  }
        5:19807:  tmp2 = tmp >> 25;
        -:19808:  in += sizeof(uint32_t);
        -:19809:  /* consumed: 4 bytes (total: 96) */
        5:19810:  tmp = *(uint32_t *)in;
        5:19811:  if ((tmp2 | (tmp % (1U << 20)) << (27 - 20)) == value) {
        1:19812:    *found = 27;
        1:19813:    return 27;
        -:19814:  }
        4:19815:  tmp2 = tmp >> 20;
        -:19816:  in += sizeof(uint32_t);
        -:19817:  /* consumed: 4 bytes (total: 100) */
        4:19818:  tmp = *(uint32_t *)in;
        4:19819:  if ((tmp2 | (tmp % (1U << 15)) << (27 - 15)) == value) {
        1:19820:    *found = 28;
        1:19821:    return 28;
        -:19822:  }
        3:19823:  tmp2 = tmp >> 15;
        -:19824:  in += sizeof(uint32_t);
        -:19825:  /* consumed: 4 bytes (total: 104) */
        3:19826:  tmp = *(uint32_t *)in;
        3:19827:  if ((tmp2 | (tmp % (1U << 10)) << (27 - 10)) == value) {
        1:19828:    *found = 29;
        1:19829:    return 29;
        -:19830:  }
        2:19831:  tmp2 = tmp >> 10;
        -:19832:  in += sizeof(uint32_t);
        -:19833:  /* consumed: 4 bytes (total: 108) */
        2:19834:  tmp = *(uint32_t *)in;
        2:19835:  if ((tmp2 | (tmp % (1U << 5)) << (27 - 5)) == value) {
        1:19836:    *found = 30;
        1:19837:    return 30;
        -:19838:  }
        1:19839:  if (((tmp >> 5) & 134217727) == value) {
        1:19840:    *found = 31;
        1:19841:    return 31;
        -:19842:  }
        -:19843:  /* remaining: 0 bits */
        -:19844:  return (108);
        -:19845:}
        -:19846:
        -:19847:static uint32_t
       32:19848:linsearch28_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:19849:  uint32_t tmp, tmp2;
       32:19850:  value -= base;
        -:19851:  (void)tmp2;
       32:19852:  tmp = *(uint32_t *)in;
        -:19853:  /* consumed: 4 bytes (total: 4) */
       32:19854:  if (((tmp >> 0) & 268435455) == value) {
        1:19855:    *found = 0;
        1:19856:    return 0;
        -:19857:  }
       31:19858:  tmp2 = tmp >> 28;
        -:19859:  in += sizeof(uint32_t);
        -:19860:  /* consumed: 4 bytes (total: 8) */
       31:19861:  tmp = *(uint32_t *)in;
       31:19862:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:19863:    *found = 1;
        1:19864:    return 1;
        -:19865:  }
       30:19866:  tmp2 = tmp >> 24;
        -:19867:  in += sizeof(uint32_t);
        -:19868:  /* consumed: 4 bytes (total: 12) */
       30:19869:  tmp = *(uint32_t *)in;
       30:19870:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:19871:    *found = 2;
        1:19872:    return 2;
        -:19873:  }
       29:19874:  tmp2 = tmp >> 20;
        -:19875:  in += sizeof(uint32_t);
        -:19876:  /* consumed: 4 bytes (total: 16) */
       29:19877:  tmp = *(uint32_t *)in;
       29:19878:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:19879:    *found = 3;
        1:19880:    return 3;
        -:19881:  }
       28:19882:  tmp2 = tmp >> 16;
        -:19883:  in += sizeof(uint32_t);
        -:19884:  /* consumed: 4 bytes (total: 20) */
       28:19885:  tmp = *(uint32_t *)in;
       28:19886:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:19887:    *found = 4;
        1:19888:    return 4;
        -:19889:  }
       27:19890:  tmp2 = tmp >> 12;
        -:19891:  in += sizeof(uint32_t);
        -:19892:  /* consumed: 4 bytes (total: 24) */
       27:19893:  tmp = *(uint32_t *)in;
       27:19894:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:19895:    *found = 5;
        1:19896:    return 5;
        -:19897:  }
       26:19898:  tmp2 = tmp >> 8;
        -:19899:  in += sizeof(uint32_t);
        -:19900:  /* consumed: 4 bytes (total: 28) */
       26:19901:  tmp = *(uint32_t *)in;
       26:19902:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:19903:    *found = 6;
        1:19904:    return 6;
        -:19905:  }
       25:19906:  if (((tmp >> 4) & 268435455) == value) {
        1:19907:    *found = 7;
        1:19908:    return 7;
        -:19909:  }
        -:19910:  in += sizeof(uint32_t);
       24:19911:  tmp = *(uint32_t *)in;
        -:19912:  /* consumed: 4 bytes (total: 32) */
       24:19913:  if (((tmp >> 0) & 268435455) == value) {
        1:19914:    *found = 8;
        1:19915:    return 8;
        -:19916:  }
       23:19917:  tmp2 = tmp >> 28;
        -:19918:  in += sizeof(uint32_t);
        -:19919:  /* consumed: 4 bytes (total: 36) */
       23:19920:  tmp = *(uint32_t *)in;
       23:19921:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:19922:    *found = 9;
        1:19923:    return 9;
        -:19924:  }
       22:19925:  tmp2 = tmp >> 24;
        -:19926:  in += sizeof(uint32_t);
        -:19927:  /* consumed: 4 bytes (total: 40) */
       22:19928:  tmp = *(uint32_t *)in;
       22:19929:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:19930:    *found = 10;
        1:19931:    return 10;
        -:19932:  }
       21:19933:  tmp2 = tmp >> 20;
        -:19934:  in += sizeof(uint32_t);
        -:19935:  /* consumed: 4 bytes (total: 44) */
       21:19936:  tmp = *(uint32_t *)in;
       21:19937:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:19938:    *found = 11;
        1:19939:    return 11;
        -:19940:  }
       20:19941:  tmp2 = tmp >> 16;
        -:19942:  in += sizeof(uint32_t);
        -:19943:  /* consumed: 4 bytes (total: 48) */
       20:19944:  tmp = *(uint32_t *)in;
       20:19945:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:19946:    *found = 12;
        1:19947:    return 12;
        -:19948:  }
       19:19949:  tmp2 = tmp >> 12;
        -:19950:  in += sizeof(uint32_t);
        -:19951:  /* consumed: 4 bytes (total: 52) */
       19:19952:  tmp = *(uint32_t *)in;
       19:19953:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:19954:    *found = 13;
        1:19955:    return 13;
        -:19956:  }
       18:19957:  tmp2 = tmp >> 8;
        -:19958:  in += sizeof(uint32_t);
        -:19959:  /* consumed: 4 bytes (total: 56) */
       18:19960:  tmp = *(uint32_t *)in;
       18:19961:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:19962:    *found = 14;
        1:19963:    return 14;
        -:19964:  }
       17:19965:  if (((tmp >> 4) & 268435455) == value) {
        1:19966:    *found = 15;
        1:19967:    return 15;
        -:19968:  }
        -:19969:  in += sizeof(uint32_t);
       16:19970:  tmp = *(uint32_t *)in;
        -:19971:  /* consumed: 4 bytes (total: 60) */
       16:19972:  if (((tmp >> 0) & 268435455) == value) {
        1:19973:    *found = 16;
        1:19974:    return 16;
        -:19975:  }
       15:19976:  tmp2 = tmp >> 28;
        -:19977:  in += sizeof(uint32_t);
        -:19978:  /* consumed: 4 bytes (total: 64) */
       15:19979:  tmp = *(uint32_t *)in;
       15:19980:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:19981:    *found = 17;
        1:19982:    return 17;
        -:19983:  }
       14:19984:  tmp2 = tmp >> 24;
        -:19985:  in += sizeof(uint32_t);
        -:19986:  /* consumed: 4 bytes (total: 68) */
       14:19987:  tmp = *(uint32_t *)in;
       14:19988:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:19989:    *found = 18;
        1:19990:    return 18;
        -:19991:  }
       13:19992:  tmp2 = tmp >> 20;
        -:19993:  in += sizeof(uint32_t);
        -:19994:  /* consumed: 4 bytes (total: 72) */
       13:19995:  tmp = *(uint32_t *)in;
       13:19996:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:19997:    *found = 19;
        1:19998:    return 19;
        -:19999:  }
       12:20000:  tmp2 = tmp >> 16;
        -:20001:  in += sizeof(uint32_t);
        -:20002:  /* consumed: 4 bytes (total: 76) */
       12:20003:  tmp = *(uint32_t *)in;
       12:20004:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:20005:    *found = 20;
        1:20006:    return 20;
        -:20007:  }
       11:20008:  tmp2 = tmp >> 12;
        -:20009:  in += sizeof(uint32_t);
        -:20010:  /* consumed: 4 bytes (total: 80) */
       11:20011:  tmp = *(uint32_t *)in;
       11:20012:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:20013:    *found = 21;
        1:20014:    return 21;
        -:20015:  }
       10:20016:  tmp2 = tmp >> 8;
        -:20017:  in += sizeof(uint32_t);
        -:20018:  /* consumed: 4 bytes (total: 84) */
       10:20019:  tmp = *(uint32_t *)in;
       10:20020:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:20021:    *found = 22;
        1:20022:    return 22;
        -:20023:  }
        9:20024:  if (((tmp >> 4) & 268435455) == value) {
        1:20025:    *found = 23;
        1:20026:    return 23;
        -:20027:  }
        -:20028:  in += sizeof(uint32_t);
        8:20029:  tmp = *(uint32_t *)in;
        -:20030:  /* consumed: 4 bytes (total: 88) */
        8:20031:  if (((tmp >> 0) & 268435455) == value) {
        1:20032:    *found = 24;
        1:20033:    return 24;
        -:20034:  }
        7:20035:  tmp2 = tmp >> 28;
        -:20036:  in += sizeof(uint32_t);
        -:20037:  /* consumed: 4 bytes (total: 92) */
        7:20038:  tmp = *(uint32_t *)in;
        7:20039:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:20040:    *found = 25;
        1:20041:    return 25;
        -:20042:  }
        6:20043:  tmp2 = tmp >> 24;
        -:20044:  in += sizeof(uint32_t);
        -:20045:  /* consumed: 4 bytes (total: 96) */
        6:20046:  tmp = *(uint32_t *)in;
        6:20047:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:20048:    *found = 26;
        1:20049:    return 26;
        -:20050:  }
        5:20051:  tmp2 = tmp >> 20;
        -:20052:  in += sizeof(uint32_t);
        -:20053:  /* consumed: 4 bytes (total: 100) */
        5:20054:  tmp = *(uint32_t *)in;
        5:20055:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:20056:    *found = 27;
        1:20057:    return 27;
        -:20058:  }
        4:20059:  tmp2 = tmp >> 16;
        -:20060:  in += sizeof(uint32_t);
        -:20061:  /* consumed: 4 bytes (total: 104) */
        4:20062:  tmp = *(uint32_t *)in;
        4:20063:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:20064:    *found = 28;
        1:20065:    return 28;
        -:20066:  }
        3:20067:  tmp2 = tmp >> 12;
        -:20068:  in += sizeof(uint32_t);
        -:20069:  /* consumed: 4 bytes (total: 108) */
        3:20070:  tmp = *(uint32_t *)in;
        3:20071:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:20072:    *found = 29;
        1:20073:    return 29;
        -:20074:  }
        2:20075:  tmp2 = tmp >> 8;
        -:20076:  in += sizeof(uint32_t);
        -:20077:  /* consumed: 4 bytes (total: 112) */
        2:20078:  tmp = *(uint32_t *)in;
        2:20079:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:20080:    *found = 30;
        1:20081:    return 30;
        -:20082:  }
        1:20083:  if (((tmp >> 4) & 268435455) == value) {
        1:20084:    *found = 31;
        1:20085:    return 31;
        -:20086:  }
        -:20087:  /* remaining: 0 bits */
        -:20088:  return (112);
        -:20089:}
        -:20090:
        -:20091:static uint32_t
       32:20092:linsearch29_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:20093:  uint32_t tmp, tmp2;
       32:20094:  value -= base;
        -:20095:  (void)tmp2;
       32:20096:  tmp = *(uint32_t *)in;
        -:20097:  /* consumed: 4 bytes (total: 4) */
       32:20098:  if (((tmp >> 0) & 536870911) == value) {
        1:20099:    *found = 0;
        1:20100:    return 0;
        -:20101:  }
       31:20102:  tmp2 = tmp >> 29;
        -:20103:  in += sizeof(uint32_t);
        -:20104:  /* consumed: 4 bytes (total: 8) */
       31:20105:  tmp = *(uint32_t *)in;
       31:20106:  if ((tmp2 | (tmp % (1U << 26)) << (29 - 26)) == value) {
        1:20107:    *found = 1;
        1:20108:    return 1;
        -:20109:  }
       30:20110:  tmp2 = tmp >> 26;
        -:20111:  in += sizeof(uint32_t);
        -:20112:  /* consumed: 4 bytes (total: 12) */
       30:20113:  tmp = *(uint32_t *)in;
       30:20114:  if ((tmp2 | (tmp % (1U << 23)) << (29 - 23)) == value) {
        1:20115:    *found = 2;
        1:20116:    return 2;
        -:20117:  }
       29:20118:  tmp2 = tmp >> 23;
        -:20119:  in += sizeof(uint32_t);
        -:20120:  /* consumed: 4 bytes (total: 16) */
       29:20121:  tmp = *(uint32_t *)in;
       29:20122:  if ((tmp2 | (tmp % (1U << 20)) << (29 - 20)) == value) {
        1:20123:    *found = 3;
        1:20124:    return 3;
        -:20125:  }
       28:20126:  tmp2 = tmp >> 20;
        -:20127:  in += sizeof(uint32_t);
        -:20128:  /* consumed: 4 bytes (total: 20) */
       28:20129:  tmp = *(uint32_t *)in;
       28:20130:  if ((tmp2 | (tmp % (1U << 17)) << (29 - 17)) == value) {
        1:20131:    *found = 4;
        1:20132:    return 4;
        -:20133:  }
       27:20134:  tmp2 = tmp >> 17;
        -:20135:  in += sizeof(uint32_t);
        -:20136:  /* consumed: 4 bytes (total: 24) */
       27:20137:  tmp = *(uint32_t *)in;
       27:20138:  if ((tmp2 | (tmp % (1U << 14)) << (29 - 14)) == value) {
        1:20139:    *found = 5;
        1:20140:    return 5;
        -:20141:  }
       26:20142:  tmp2 = tmp >> 14;
        -:20143:  in += sizeof(uint32_t);
        -:20144:  /* consumed: 4 bytes (total: 28) */
       26:20145:  tmp = *(uint32_t *)in;
       26:20146:  if ((tmp2 | (tmp % (1U << 11)) << (29 - 11)) == value) {
        1:20147:    *found = 6;
        1:20148:    return 6;
        -:20149:  }
       25:20150:  tmp2 = tmp >> 11;
        -:20151:  in += sizeof(uint32_t);
        -:20152:  /* consumed: 4 bytes (total: 32) */
       25:20153:  tmp = *(uint32_t *)in;
       25:20154:  if ((tmp2 | (tmp % (1U << 8)) << (29 - 8)) == value) {
        1:20155:    *found = 7;
        1:20156:    return 7;
        -:20157:  }
       24:20158:  tmp2 = tmp >> 8;
        -:20159:  in += sizeof(uint32_t);
        -:20160:  /* consumed: 4 bytes (total: 36) */
       24:20161:  tmp = *(uint32_t *)in;
       24:20162:  if ((tmp2 | (tmp % (1U << 5)) << (29 - 5)) == value) {
        1:20163:    *found = 8;
        1:20164:    return 8;
        -:20165:  }
       23:20166:  tmp2 = tmp >> 5;
        -:20167:  in += sizeof(uint32_t);
        -:20168:  /* consumed: 4 bytes (total: 40) */
       23:20169:  tmp = *(uint32_t *)in;
       23:20170:  if ((tmp2 | (tmp % (1U << 2)) << (29 - 2)) == value) {
        1:20171:    *found = 9;
        1:20172:    return 9;
        -:20173:  }
       22:20174:  if (((tmp >> 2) & 536870911) == value) {
        1:20175:    *found = 10;
        1:20176:    return 10;
        -:20177:  }
       21:20178:  tmp2 = tmp >> 31;
        -:20179:  in += sizeof(uint32_t);
        -:20180:  /* consumed: 4 bytes (total: 44) */
       21:20181:  tmp = *(uint32_t *)in;
       21:20182:  if ((tmp2 | (tmp % (1U << 28)) << (29 - 28)) == value) {
        1:20183:    *found = 11;
        1:20184:    return 11;
        -:20185:  }
       20:20186:  tmp2 = tmp >> 28;
        -:20187:  in += sizeof(uint32_t);
        -:20188:  /* consumed: 4 bytes (total: 48) */
       20:20189:  tmp = *(uint32_t *)in;
       20:20190:  if ((tmp2 | (tmp % (1U << 25)) << (29 - 25)) == value) {
        1:20191:    *found = 12;
        1:20192:    return 12;
        -:20193:  }
       19:20194:  tmp2 = tmp >> 25;
        -:20195:  in += sizeof(uint32_t);
        -:20196:  /* consumed: 4 bytes (total: 52) */
       19:20197:  tmp = *(uint32_t *)in;
       19:20198:  if ((tmp2 | (tmp % (1U << 22)) << (29 - 22)) == value) {
        1:20199:    *found = 13;
        1:20200:    return 13;
        -:20201:  }
       18:20202:  tmp2 = tmp >> 22;
        -:20203:  in += sizeof(uint32_t);
        -:20204:  /* consumed: 4 bytes (total: 56) */
       18:20205:  tmp = *(uint32_t *)in;
       18:20206:  if ((tmp2 | (tmp % (1U << 19)) << (29 - 19)) == value) {
        1:20207:    *found = 14;
        1:20208:    return 14;
        -:20209:  }
       17:20210:  tmp2 = tmp >> 19;
        -:20211:  in += sizeof(uint32_t);
        -:20212:  /* consumed: 4 bytes (total: 60) */
       17:20213:  tmp = *(uint32_t *)in;
       17:20214:  if ((tmp2 | (tmp % (1U << 16)) << (29 - 16)) == value) {
        1:20215:    *found = 15;
        1:20216:    return 15;
        -:20217:  }
       16:20218:  tmp2 = tmp >> 16;
        -:20219:  in += sizeof(uint32_t);
        -:20220:  /* consumed: 4 bytes (total: 64) */
       16:20221:  tmp = *(uint32_t *)in;
       16:20222:  if ((tmp2 | (tmp % (1U << 13)) << (29 - 13)) == value) {
        1:20223:    *found = 16;
        1:20224:    return 16;
        -:20225:  }
       15:20226:  tmp2 = tmp >> 13;
        -:20227:  in += sizeof(uint32_t);
        -:20228:  /* consumed: 4 bytes (total: 68) */
       15:20229:  tmp = *(uint32_t *)in;
       15:20230:  if ((tmp2 | (tmp % (1U << 10)) << (29 - 10)) == value) {
        1:20231:    *found = 17;
        1:20232:    return 17;
        -:20233:  }
       14:20234:  tmp2 = tmp >> 10;
        -:20235:  in += sizeof(uint32_t);
        -:20236:  /* consumed: 4 bytes (total: 72) */
       14:20237:  tmp = *(uint32_t *)in;
       14:20238:  if ((tmp2 | (tmp % (1U << 7)) << (29 - 7)) == value) {
        1:20239:    *found = 18;
        1:20240:    return 18;
        -:20241:  }
       13:20242:  tmp2 = tmp >> 7;
        -:20243:  in += sizeof(uint32_t);
        -:20244:  /* consumed: 4 bytes (total: 76) */
       13:20245:  tmp = *(uint32_t *)in;
       13:20246:  if ((tmp2 | (tmp % (1U << 4)) << (29 - 4)) == value) {
        1:20247:    *found = 19;
        1:20248:    return 19;
        -:20249:  }
       12:20250:  tmp2 = tmp >> 4;
        -:20251:  in += sizeof(uint32_t);
        -:20252:  /* consumed: 4 bytes (total: 80) */
       12:20253:  tmp = *(uint32_t *)in;
       12:20254:  if ((tmp2 | (tmp % (1U << 1)) << (29 - 1)) == value) {
        1:20255:    *found = 20;
        1:20256:    return 20;
        -:20257:  }
       11:20258:  if (((tmp >> 1) & 536870911) == value) {
        1:20259:    *found = 21;
        1:20260:    return 21;
        -:20261:  }
       10:20262:  tmp2 = tmp >> 30;
        -:20263:  in += sizeof(uint32_t);
        -:20264:  /* consumed: 4 bytes (total: 84) */
       10:20265:  tmp = *(uint32_t *)in;
       10:20266:  if ((tmp2 | (tmp % (1U << 27)) << (29 - 27)) == value) {
        1:20267:    *found = 22;
        1:20268:    return 22;
        -:20269:  }
        9:20270:  tmp2 = tmp >> 27;
        -:20271:  in += sizeof(uint32_t);
        -:20272:  /* consumed: 4 bytes (total: 88) */
        9:20273:  tmp = *(uint32_t *)in;
        9:20274:  if ((tmp2 | (tmp % (1U << 24)) << (29 - 24)) == value) {
        1:20275:    *found = 23;
        1:20276:    return 23;
        -:20277:  }
        8:20278:  tmp2 = tmp >> 24;
        -:20279:  in += sizeof(uint32_t);
        -:20280:  /* consumed: 4 bytes (total: 92) */
        8:20281:  tmp = *(uint32_t *)in;
        8:20282:  if ((tmp2 | (tmp % (1U << 21)) << (29 - 21)) == value) {
        1:20283:    *found = 24;
        1:20284:    return 24;
        -:20285:  }
        7:20286:  tmp2 = tmp >> 21;
        -:20287:  in += sizeof(uint32_t);
        -:20288:  /* consumed: 4 bytes (total: 96) */
        7:20289:  tmp = *(uint32_t *)in;
        7:20290:  if ((tmp2 | (tmp % (1U << 18)) << (29 - 18)) == value) {
        1:20291:    *found = 25;
        1:20292:    return 25;
        -:20293:  }
        6:20294:  tmp2 = tmp >> 18;
        -:20295:  in += sizeof(uint32_t);
        -:20296:  /* consumed: 4 bytes (total: 100) */
        6:20297:  tmp = *(uint32_t *)in;
        6:20298:  if ((tmp2 | (tmp % (1U << 15)) << (29 - 15)) == value) {
        1:20299:    *found = 26;
        1:20300:    return 26;
        -:20301:  }
        5:20302:  tmp2 = tmp >> 15;
        -:20303:  in += sizeof(uint32_t);
        -:20304:  /* consumed: 4 bytes (total: 104) */
        5:20305:  tmp = *(uint32_t *)in;
        5:20306:  if ((tmp2 | (tmp % (1U << 12)) << (29 - 12)) == value) {
        1:20307:    *found = 27;
        1:20308:    return 27;
        -:20309:  }
        4:20310:  tmp2 = tmp >> 12;
        -:20311:  in += sizeof(uint32_t);
        -:20312:  /* consumed: 4 bytes (total: 108) */
        4:20313:  tmp = *(uint32_t *)in;
        4:20314:  if ((tmp2 | (tmp % (1U << 9)) << (29 - 9)) == value) {
        1:20315:    *found = 28;
        1:20316:    return 28;
        -:20317:  }
        3:20318:  tmp2 = tmp >> 9;
        -:20319:  in += sizeof(uint32_t);
        -:20320:  /* consumed: 4 bytes (total: 112) */
        3:20321:  tmp = *(uint32_t *)in;
        3:20322:  if ((tmp2 | (tmp % (1U << 6)) << (29 - 6)) == value) {
        1:20323:    *found = 29;
        1:20324:    return 29;
        -:20325:  }
        2:20326:  tmp2 = tmp >> 6;
        -:20327:  in += sizeof(uint32_t);
        -:20328:  /* consumed: 4 bytes (total: 116) */
        2:20329:  tmp = *(uint32_t *)in;
        2:20330:  if ((tmp2 | (tmp % (1U << 3)) << (29 - 3)) == value) {
        1:20331:    *found = 30;
        1:20332:    return 30;
        -:20333:  }
        1:20334:  if (((tmp >> 3) & 536870911) == value) {
        1:20335:    *found = 31;
        1:20336:    return 31;
        -:20337:  }
        -:20338:  /* remaining: 0 bits */
        -:20339:  return (116);
        -:20340:}
        -:20341:
        -:20342:static uint32_t
       32:20343:linsearch30_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:20344:  uint32_t tmp, tmp2;
       32:20345:  value -= base;
        -:20346:  (void)tmp2;
       32:20347:  tmp = *(uint32_t *)in;
        -:20348:  /* consumed: 4 bytes (total: 4) */
       32:20349:  if (((tmp >> 0) & 1073741823) == value) {
        1:20350:    *found = 0;
        1:20351:    return 0;
        -:20352:  }
       31:20353:  tmp2 = tmp >> 30;
        -:20354:  in += sizeof(uint32_t);
        -:20355:  /* consumed: 4 bytes (total: 8) */
       31:20356:  tmp = *(uint32_t *)in;
       31:20357:  if ((tmp2 | (tmp % (1U << 28)) << (30 - 28)) == value) {
        1:20358:    *found = 1;
        1:20359:    return 1;
        -:20360:  }
       30:20361:  tmp2 = tmp >> 28;
        -:20362:  in += sizeof(uint32_t);
        -:20363:  /* consumed: 4 bytes (total: 12) */
       30:20364:  tmp = *(uint32_t *)in;
       30:20365:  if ((tmp2 | (tmp % (1U << 26)) << (30 - 26)) == value) {
        1:20366:    *found = 2;
        1:20367:    return 2;
        -:20368:  }
       29:20369:  tmp2 = tmp >> 26;
        -:20370:  in += sizeof(uint32_t);
        -:20371:  /* consumed: 4 bytes (total: 16) */
       29:20372:  tmp = *(uint32_t *)in;
       29:20373:  if ((tmp2 | (tmp % (1U << 24)) << (30 - 24)) == value) {
        1:20374:    *found = 3;
        1:20375:    return 3;
        -:20376:  }
       28:20377:  tmp2 = tmp >> 24;
        -:20378:  in += sizeof(uint32_t);
        -:20379:  /* consumed: 4 bytes (total: 20) */
       28:20380:  tmp = *(uint32_t *)in;
       28:20381:  if ((tmp2 | (tmp % (1U << 22)) << (30 - 22)) == value) {
        1:20382:    *found = 4;
        1:20383:    return 4;
        -:20384:  }
       27:20385:  tmp2 = tmp >> 22;
        -:20386:  in += sizeof(uint32_t);
        -:20387:  /* consumed: 4 bytes (total: 24) */
       27:20388:  tmp = *(uint32_t *)in;
       27:20389:  if ((tmp2 | (tmp % (1U << 20)) << (30 - 20)) == value) {
        1:20390:    *found = 5;
        1:20391:    return 5;
        -:20392:  }
       26:20393:  tmp2 = tmp >> 20;
        -:20394:  in += sizeof(uint32_t);
        -:20395:  /* consumed: 4 bytes (total: 28) */
       26:20396:  tmp = *(uint32_t *)in;
       26:20397:  if ((tmp2 | (tmp % (1U << 18)) << (30 - 18)) == value) {
        1:20398:    *found = 6;
        1:20399:    return 6;
        -:20400:  }
       25:20401:  tmp2 = tmp >> 18;
        -:20402:  in += sizeof(uint32_t);
        -:20403:  /* consumed: 4 bytes (total: 32) */
       25:20404:  tmp = *(uint32_t *)in;
       25:20405:  if ((tmp2 | (tmp % (1U << 16)) << (30 - 16)) == value) {
        1:20406:    *found = 7;
        1:20407:    return 7;
        -:20408:  }
       24:20409:  tmp2 = tmp >> 16;
        -:20410:  in += sizeof(uint32_t);
        -:20411:  /* consumed: 4 bytes (total: 36) */
       24:20412:  tmp = *(uint32_t *)in;
       24:20413:  if ((tmp2 | (tmp % (1U << 14)) << (30 - 14)) == value) {
        1:20414:    *found = 8;
        1:20415:    return 8;
        -:20416:  }
       23:20417:  tmp2 = tmp >> 14;
        -:20418:  in += sizeof(uint32_t);
        -:20419:  /* consumed: 4 bytes (total: 40) */
       23:20420:  tmp = *(uint32_t *)in;
       23:20421:  if ((tmp2 | (tmp % (1U << 12)) << (30 - 12)) == value) {
        1:20422:    *found = 9;
        1:20423:    return 9;
        -:20424:  }
       22:20425:  tmp2 = tmp >> 12;
        -:20426:  in += sizeof(uint32_t);
        -:20427:  /* consumed: 4 bytes (total: 44) */
       22:20428:  tmp = *(uint32_t *)in;
       22:20429:  if ((tmp2 | (tmp % (1U << 10)) << (30 - 10)) == value) {
        1:20430:    *found = 10;
        1:20431:    return 10;
        -:20432:  }
       21:20433:  tmp2 = tmp >> 10;
        -:20434:  in += sizeof(uint32_t);
        -:20435:  /* consumed: 4 bytes (total: 48) */
       21:20436:  tmp = *(uint32_t *)in;
       21:20437:  if ((tmp2 | (tmp % (1U << 8)) << (30 - 8)) == value) {
        1:20438:    *found = 11;
        1:20439:    return 11;
        -:20440:  }
       20:20441:  tmp2 = tmp >> 8;
        -:20442:  in += sizeof(uint32_t);
        -:20443:  /* consumed: 4 bytes (total: 52) */
       20:20444:  tmp = *(uint32_t *)in;
       20:20445:  if ((tmp2 | (tmp % (1U << 6)) << (30 - 6)) == value) {
        1:20446:    *found = 12;
        1:20447:    return 12;
        -:20448:  }
       19:20449:  tmp2 = tmp >> 6;
        -:20450:  in += sizeof(uint32_t);
        -:20451:  /* consumed: 4 bytes (total: 56) */
       19:20452:  tmp = *(uint32_t *)in;
       19:20453:  if ((tmp2 | (tmp % (1U << 4)) << (30 - 4)) == value) {
        1:20454:    *found = 13;
        1:20455:    return 13;
        -:20456:  }
       18:20457:  tmp2 = tmp >> 4;
        -:20458:  in += sizeof(uint32_t);
        -:20459:  /* consumed: 4 bytes (total: 60) */
       18:20460:  tmp = *(uint32_t *)in;
       18:20461:  if ((tmp2 | (tmp % (1U << 2)) << (30 - 2)) == value) {
        1:20462:    *found = 14;
        1:20463:    return 14;
        -:20464:  }
       17:20465:  if (((tmp >> 2) & 1073741823) == value) {
        1:20466:    *found = 15;
        1:20467:    return 15;
        -:20468:  }
        -:20469:  in += sizeof(uint32_t);
       16:20470:  tmp = *(uint32_t *)in;
        -:20471:  /* consumed: 4 bytes (total: 64) */
       16:20472:  if (((tmp >> 0) & 1073741823) == value) {
        1:20473:    *found = 16;
        1:20474:    return 16;
        -:20475:  }
       15:20476:  tmp2 = tmp >> 30;
        -:20477:  in += sizeof(uint32_t);
        -:20478:  /* consumed: 4 bytes (total: 68) */
       15:20479:  tmp = *(uint32_t *)in;
       15:20480:  if ((tmp2 | (tmp % (1U << 28)) << (30 - 28)) == value) {
        1:20481:    *found = 17;
        1:20482:    return 17;
        -:20483:  }
       14:20484:  tmp2 = tmp >> 28;
        -:20485:  in += sizeof(uint32_t);
        -:20486:  /* consumed: 4 bytes (total: 72) */
       14:20487:  tmp = *(uint32_t *)in;
       14:20488:  if ((tmp2 | (tmp % (1U << 26)) << (30 - 26)) == value) {
        1:20489:    *found = 18;
        1:20490:    return 18;
        -:20491:  }
       13:20492:  tmp2 = tmp >> 26;
        -:20493:  in += sizeof(uint32_t);
        -:20494:  /* consumed: 4 bytes (total: 76) */
       13:20495:  tmp = *(uint32_t *)in;
       13:20496:  if ((tmp2 | (tmp % (1U << 24)) << (30 - 24)) == value) {
        1:20497:    *found = 19;
        1:20498:    return 19;
        -:20499:  }
       12:20500:  tmp2 = tmp >> 24;
        -:20501:  in += sizeof(uint32_t);
        -:20502:  /* consumed: 4 bytes (total: 80) */
       12:20503:  tmp = *(uint32_t *)in;
       12:20504:  if ((tmp2 | (tmp % (1U << 22)) << (30 - 22)) == value) {
        1:20505:    *found = 20;
        1:20506:    return 20;
        -:20507:  }
       11:20508:  tmp2 = tmp >> 22;
        -:20509:  in += sizeof(uint32_t);
        -:20510:  /* consumed: 4 bytes (total: 84) */
       11:20511:  tmp = *(uint32_t *)in;
       11:20512:  if ((tmp2 | (tmp % (1U << 20)) << (30 - 20)) == value) {
        1:20513:    *found = 21;
        1:20514:    return 21;
        -:20515:  }
       10:20516:  tmp2 = tmp >> 20;
        -:20517:  in += sizeof(uint32_t);
        -:20518:  /* consumed: 4 bytes (total: 88) */
       10:20519:  tmp = *(uint32_t *)in;
       10:20520:  if ((tmp2 | (tmp % (1U << 18)) << (30 - 18)) == value) {
        1:20521:    *found = 22;
        1:20522:    return 22;
        -:20523:  }
        9:20524:  tmp2 = tmp >> 18;
        -:20525:  in += sizeof(uint32_t);
        -:20526:  /* consumed: 4 bytes (total: 92) */
        9:20527:  tmp = *(uint32_t *)in;
        9:20528:  if ((tmp2 | (tmp % (1U << 16)) << (30 - 16)) == value) {
        1:20529:    *found = 23;
        1:20530:    return 23;
        -:20531:  }
        8:20532:  tmp2 = tmp >> 16;
        -:20533:  in += sizeof(uint32_t);
        -:20534:  /* consumed: 4 bytes (total: 96) */
        8:20535:  tmp = *(uint32_t *)in;
        8:20536:  if ((tmp2 | (tmp % (1U << 14)) << (30 - 14)) == value) {
        1:20537:    *found = 24;
        1:20538:    return 24;
        -:20539:  }
        7:20540:  tmp2 = tmp >> 14;
        -:20541:  in += sizeof(uint32_t);
        -:20542:  /* consumed: 4 bytes (total: 100) */
        7:20543:  tmp = *(uint32_t *)in;
        7:20544:  if ((tmp2 | (tmp % (1U << 12)) << (30 - 12)) == value) {
        1:20545:    *found = 25;
        1:20546:    return 25;
        -:20547:  }
        6:20548:  tmp2 = tmp >> 12;
        -:20549:  in += sizeof(uint32_t);
        -:20550:  /* consumed: 4 bytes (total: 104) */
        6:20551:  tmp = *(uint32_t *)in;
        6:20552:  if ((tmp2 | (tmp % (1U << 10)) << (30 - 10)) == value) {
        1:20553:    *found = 26;
        1:20554:    return 26;
        -:20555:  }
        5:20556:  tmp2 = tmp >> 10;
        -:20557:  in += sizeof(uint32_t);
        -:20558:  /* consumed: 4 bytes (total: 108) */
        5:20559:  tmp = *(uint32_t *)in;
        5:20560:  if ((tmp2 | (tmp % (1U << 8)) << (30 - 8)) == value) {
        1:20561:    *found = 27;
        1:20562:    return 27;
        -:20563:  }
        4:20564:  tmp2 = tmp >> 8;
        -:20565:  in += sizeof(uint32_t);
        -:20566:  /* consumed: 4 bytes (total: 112) */
        4:20567:  tmp = *(uint32_t *)in;
        4:20568:  if ((tmp2 | (tmp % (1U << 6)) << (30 - 6)) == value) {
        1:20569:    *found = 28;
        1:20570:    return 28;
        -:20571:  }
        3:20572:  tmp2 = tmp >> 6;
        -:20573:  in += sizeof(uint32_t);
        -:20574:  /* consumed: 4 bytes (total: 116) */
        3:20575:  tmp = *(uint32_t *)in;
        3:20576:  if ((tmp2 | (tmp % (1U << 4)) << (30 - 4)) == value) {
        1:20577:    *found = 29;
        1:20578:    return 29;
        -:20579:  }
        2:20580:  tmp2 = tmp >> 4;
        -:20581:  in += sizeof(uint32_t);
        -:20582:  /* consumed: 4 bytes (total: 120) */
        2:20583:  tmp = *(uint32_t *)in;
        2:20584:  if ((tmp2 | (tmp % (1U << 2)) << (30 - 2)) == value) {
        1:20585:    *found = 30;
        1:20586:    return 30;
        -:20587:  }
        1:20588:  if (((tmp >> 2) & 1073741823) == value) {
        1:20589:    *found = 31;
        1:20590:    return 31;
        -:20591:  }
        -:20592:  /* remaining: 0 bits */
        -:20593:  return (120);
        -:20594:}
        -:20595:
        -:20596:static uint32_t
       32:20597:linsearch31_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:20598:  uint32_t tmp, tmp2;
       32:20599:  value -= base;
        -:20600:  (void)tmp2;
       32:20601:  tmp = *(uint32_t *)in;
        -:20602:  /* consumed: 4 bytes (total: 4) */
       32:20603:  if (((tmp >> 0) & 2147483647) == value) {
        1:20604:    *found = 0;
        1:20605:    return 0;
        -:20606:  }
       31:20607:  tmp2 = tmp >> 31;
        -:20608:  in += sizeof(uint32_t);
        -:20609:  /* consumed: 4 bytes (total: 8) */
       31:20610:  tmp = *(uint32_t *)in;
       31:20611:  if ((tmp2 | (tmp % (1U << 30)) << (31 - 30)) == value) {
        1:20612:    *found = 1;
        1:20613:    return 1;
        -:20614:  }
       30:20615:  tmp2 = tmp >> 30;
        -:20616:  in += sizeof(uint32_t);
        -:20617:  /* consumed: 4 bytes (total: 12) */
       30:20618:  tmp = *(uint32_t *)in;
       30:20619:  if ((tmp2 | (tmp % (1U << 29)) << (31 - 29)) == value) {
        1:20620:    *found = 2;
        1:20621:    return 2;
        -:20622:  }
       29:20623:  tmp2 = tmp >> 29;
        -:20624:  in += sizeof(uint32_t);
        -:20625:  /* consumed: 4 bytes (total: 16) */
       29:20626:  tmp = *(uint32_t *)in;
       29:20627:  if ((tmp2 | (tmp % (1U << 28)) << (31 - 28)) == value) {
        1:20628:    *found = 3;
        1:20629:    return 3;
        -:20630:  }
       28:20631:  tmp2 = tmp >> 28;
        -:20632:  in += sizeof(uint32_t);
        -:20633:  /* consumed: 4 bytes (total: 20) */
       28:20634:  tmp = *(uint32_t *)in;
       28:20635:  if ((tmp2 | (tmp % (1U << 27)) << (31 - 27)) == value) {
        1:20636:    *found = 4;
        1:20637:    return 4;
        -:20638:  }
       27:20639:  tmp2 = tmp >> 27;
        -:20640:  in += sizeof(uint32_t);
        -:20641:  /* consumed: 4 bytes (total: 24) */
       27:20642:  tmp = *(uint32_t *)in;
       27:20643:  if ((tmp2 | (tmp % (1U << 26)) << (31 - 26)) == value) {
        1:20644:    *found = 5;
        1:20645:    return 5;
        -:20646:  }
       26:20647:  tmp2 = tmp >> 26;
        -:20648:  in += sizeof(uint32_t);
        -:20649:  /* consumed: 4 bytes (total: 28) */
       26:20650:  tmp = *(uint32_t *)in;
       26:20651:  if ((tmp2 | (tmp % (1U << 25)) << (31 - 25)) == value) {
        1:20652:    *found = 6;
        1:20653:    return 6;
        -:20654:  }
       25:20655:  tmp2 = tmp >> 25;
        -:20656:  in += sizeof(uint32_t);
        -:20657:  /* consumed: 4 bytes (total: 32) */
       25:20658:  tmp = *(uint32_t *)in;
       25:20659:  if ((tmp2 | (tmp % (1U << 24)) << (31 - 24)) == value) {
        1:20660:    *found = 7;
        1:20661:    return 7;
        -:20662:  }
       24:20663:  tmp2 = tmp >> 24;
        -:20664:  in += sizeof(uint32_t);
        -:20665:  /* consumed: 4 bytes (total: 36) */
       24:20666:  tmp = *(uint32_t *)in;
       24:20667:  if ((tmp2 | (tmp % (1U << 23)) << (31 - 23)) == value) {
        1:20668:    *found = 8;
        1:20669:    return 8;
        -:20670:  }
       23:20671:  tmp2 = tmp >> 23;
        -:20672:  in += sizeof(uint32_t);
        -:20673:  /* consumed: 4 bytes (total: 40) */
       23:20674:  tmp = *(uint32_t *)in;
       23:20675:  if ((tmp2 | (tmp % (1U << 22)) << (31 - 22)) == value) {
        1:20676:    *found = 9;
        1:20677:    return 9;
        -:20678:  }
       22:20679:  tmp2 = tmp >> 22;
        -:20680:  in += sizeof(uint32_t);
        -:20681:  /* consumed: 4 bytes (total: 44) */
       22:20682:  tmp = *(uint32_t *)in;
       22:20683:  if ((tmp2 | (tmp % (1U << 21)) << (31 - 21)) == value) {
        1:20684:    *found = 10;
        1:20685:    return 10;
        -:20686:  }
       21:20687:  tmp2 = tmp >> 21;
        -:20688:  in += sizeof(uint32_t);
        -:20689:  /* consumed: 4 bytes (total: 48) */
       21:20690:  tmp = *(uint32_t *)in;
       21:20691:  if ((tmp2 | (tmp % (1U << 20)) << (31 - 20)) == value) {
        1:20692:    *found = 11;
        1:20693:    return 11;
        -:20694:  }
       20:20695:  tmp2 = tmp >> 20;
        -:20696:  in += sizeof(uint32_t);
        -:20697:  /* consumed: 4 bytes (total: 52) */
       20:20698:  tmp = *(uint32_t *)in;
       20:20699:  if ((tmp2 | (tmp % (1U << 19)) << (31 - 19)) == value) {
        1:20700:    *found = 12;
        1:20701:    return 12;
        -:20702:  }
       19:20703:  tmp2 = tmp >> 19;
        -:20704:  in += sizeof(uint32_t);
        -:20705:  /* consumed: 4 bytes (total: 56) */
       19:20706:  tmp = *(uint32_t *)in;
       19:20707:  if ((tmp2 | (tmp % (1U << 18)) << (31 - 18)) == value) {
        1:20708:    *found = 13;
        1:20709:    return 13;
        -:20710:  }
       18:20711:  tmp2 = tmp >> 18;
        -:20712:  in += sizeof(uint32_t);
        -:20713:  /* consumed: 4 bytes (total: 60) */
       18:20714:  tmp = *(uint32_t *)in;
       18:20715:  if ((tmp2 | (tmp % (1U << 17)) << (31 - 17)) == value) {
        1:20716:    *found = 14;
        1:20717:    return 14;
        -:20718:  }
       17:20719:  tmp2 = tmp >> 17;
        -:20720:  in += sizeof(uint32_t);
        -:20721:  /* consumed: 4 bytes (total: 64) */
       17:20722:  tmp = *(uint32_t *)in;
       17:20723:  if ((tmp2 | (tmp % (1U << 16)) << (31 - 16)) == value) {
        1:20724:    *found = 15;
        1:20725:    return 15;
        -:20726:  }
       16:20727:  tmp2 = tmp >> 16;
        -:20728:  in += sizeof(uint32_t);
        -:20729:  /* consumed: 4 bytes (total: 68) */
       16:20730:  tmp = *(uint32_t *)in;
       16:20731:  if ((tmp2 | (tmp % (1U << 15)) << (31 - 15)) == value) {
        1:20732:    *found = 16;
        1:20733:    return 16;
        -:20734:  }
       15:20735:  tmp2 = tmp >> 15;
        -:20736:  in += sizeof(uint32_t);
        -:20737:  /* consumed: 4 bytes (total: 72) */
       15:20738:  tmp = *(uint32_t *)in;
       15:20739:  if ((tmp2 | (tmp % (1U << 14)) << (31 - 14)) == value) {
        1:20740:    *found = 17;
        1:20741:    return 17;
        -:20742:  }
       14:20743:  tmp2 = tmp >> 14;
        -:20744:  in += sizeof(uint32_t);
        -:20745:  /* consumed: 4 bytes (total: 76) */
       14:20746:  tmp = *(uint32_t *)in;
       14:20747:  if ((tmp2 | (tmp % (1U << 13)) << (31 - 13)) == value) {
        1:20748:    *found = 18;
        1:20749:    return 18;
        -:20750:  }
       13:20751:  tmp2 = tmp >> 13;
        -:20752:  in += sizeof(uint32_t);
        -:20753:  /* consumed: 4 bytes (total: 80) */
       13:20754:  tmp = *(uint32_t *)in;
       13:20755:  if ((tmp2 | (tmp % (1U << 12)) << (31 - 12)) == value) {
        1:20756:    *found = 19;
        1:20757:    return 19;
        -:20758:  }
       12:20759:  tmp2 = tmp >> 12;
        -:20760:  in += sizeof(uint32_t);
        -:20761:  /* consumed: 4 bytes (total: 84) */
       12:20762:  tmp = *(uint32_t *)in;
       12:20763:  if ((tmp2 | (tmp % (1U << 11)) << (31 - 11)) == value) {
        1:20764:    *found = 20;
        1:20765:    return 20;
        -:20766:  }
       11:20767:  tmp2 = tmp >> 11;
        -:20768:  in += sizeof(uint32_t);
        -:20769:  /* consumed: 4 bytes (total: 88) */
       11:20770:  tmp = *(uint32_t *)in;
       11:20771:  if ((tmp2 | (tmp % (1U << 10)) << (31 - 10)) == value) {
        1:20772:    *found = 21;
        1:20773:    return 21;
        -:20774:  }
       10:20775:  tmp2 = tmp >> 10;
        -:20776:  in += sizeof(uint32_t);
        -:20777:  /* consumed: 4 bytes (total: 92) */
       10:20778:  tmp = *(uint32_t *)in;
       10:20779:  if ((tmp2 | (tmp % (1U << 9)) << (31 - 9)) == value) {
        1:20780:    *found = 22;
        1:20781:    return 22;
        -:20782:  }
        9:20783:  tmp2 = tmp >> 9;
        -:20784:  in += sizeof(uint32_t);
        -:20785:  /* consumed: 4 bytes (total: 96) */
        9:20786:  tmp = *(uint32_t *)in;
        9:20787:  if ((tmp2 | (tmp % (1U << 8)) << (31 - 8)) == value) {
        1:20788:    *found = 23;
        1:20789:    return 23;
        -:20790:  }
        8:20791:  tmp2 = tmp >> 8;
        -:20792:  in += sizeof(uint32_t);
        -:20793:  /* consumed: 4 bytes (total: 100) */
        8:20794:  tmp = *(uint32_t *)in;
        8:20795:  if ((tmp2 | (tmp % (1U << 7)) << (31 - 7)) == value) {
        1:20796:    *found = 24;
        1:20797:    return 24;
        -:20798:  }
        7:20799:  tmp2 = tmp >> 7;
        -:20800:  in += sizeof(uint32_t);
        -:20801:  /* consumed: 4 bytes (total: 104) */
        7:20802:  tmp = *(uint32_t *)in;
        7:20803:  if ((tmp2 | (tmp % (1U << 6)) << (31 - 6)) == value) {
        1:20804:    *found = 25;
        1:20805:    return 25;
        -:20806:  }
        6:20807:  tmp2 = tmp >> 6;
        -:20808:  in += sizeof(uint32_t);
        -:20809:  /* consumed: 4 bytes (total: 108) */
        6:20810:  tmp = *(uint32_t *)in;
        6:20811:  if ((tmp2 | (tmp % (1U << 5)) << (31 - 5)) == value) {
        1:20812:    *found = 26;
        1:20813:    return 26;
        -:20814:  }
        5:20815:  tmp2 = tmp >> 5;
        -:20816:  in += sizeof(uint32_t);
        -:20817:  /* consumed: 4 bytes (total: 112) */
        5:20818:  tmp = *(uint32_t *)in;
        5:20819:  if ((tmp2 | (tmp % (1U << 4)) << (31 - 4)) == value) {
        1:20820:    *found = 27;
        1:20821:    return 27;
        -:20822:  }
        4:20823:  tmp2 = tmp >> 4;
        -:20824:  in += sizeof(uint32_t);
        -:20825:  /* consumed: 4 bytes (total: 116) */
        4:20826:  tmp = *(uint32_t *)in;
        4:20827:  if ((tmp2 | (tmp % (1U << 3)) << (31 - 3)) == value) {
        1:20828:    *found = 28;
        1:20829:    return 28;
        -:20830:  }
        3:20831:  tmp2 = tmp >> 3;
        -:20832:  in += sizeof(uint32_t);
        -:20833:  /* consumed: 4 bytes (total: 120) */
        3:20834:  tmp = *(uint32_t *)in;
        3:20835:  if ((tmp2 | (tmp % (1U << 2)) << (31 - 2)) == value) {
        1:20836:    *found = 29;
        1:20837:    return 29;
        -:20838:  }
        2:20839:  tmp2 = tmp >> 2;
        -:20840:  in += sizeof(uint32_t);
        -:20841:  /* consumed: 4 bytes (total: 124) */
        2:20842:  tmp = *(uint32_t *)in;
        2:20843:  if ((tmp2 | (tmp % (1U << 1)) << (31 - 1)) == value) {
        1:20844:    *found = 30;
        1:20845:    return 30;
        -:20846:  }
        1:20847:  if (((tmp >> 1) & 2147483647) == value) {
        1:20848:    *found = 31;
        1:20849:    return 31;
        -:20850:  }
        -:20851:  /* remaining: 0 bits */
        -:20852:  return (124);
        -:20853:}
        -:20854:
        -:20855:static uint32_t
       32:20856:linsearch32_32(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:20857:  uint32_t i;
        -:20858:  uint32_t *in32 = (uint32_t *)in;
       32:20859:  value -= base;
      528:20860:  for (i = 0; i < 32; i++) {
      528:20861:    if (in32[i] == value) {
       32:20862:      *found = i;
       32:20863:      return 0;
        -:20864:    }
        -:20865:  }
        -:20866:  return 32 * sizeof(uint32_t);
        -:20867:}
        -:20868:
        -:20869:for_linsearchfunc_t for_linsearch32[33] = {
        -:20870:                       linsearch0_32,
        -:20871:                       linsearch1_32,
        -:20872:                       linsearch2_32,
        -:20873:                       linsearch3_32,
        -:20874:                       linsearch4_32,
        -:20875:                       linsearch5_32,
        -:20876:                       linsearch6_32,
        -:20877:                       linsearch7_32,
        -:20878:                       linsearch8_32,
        -:20879:                       linsearch9_32,
        -:20880:                       linsearch10_32,
        -:20881:                       linsearch11_32,
        -:20882:                       linsearch12_32,
        -:20883:                       linsearch13_32,
        -:20884:                       linsearch14_32,
        -:20885:                       linsearch15_32,
        -:20886:                       linsearch16_32,
        -:20887:                       linsearch17_32,
        -:20888:                       linsearch18_32,
        -:20889:                       linsearch19_32,
        -:20890:                       linsearch20_32,
        -:20891:                       linsearch21_32,
        -:20892:                       linsearch22_32,
        -:20893:                       linsearch23_32,
        -:20894:                       linsearch24_32,
        -:20895:                       linsearch25_32,
        -:20896:                       linsearch26_32,
        -:20897:                       linsearch27_32,
        -:20898:                       linsearch28_32,
        -:20899:                       linsearch29_32,
        -:20900:                       linsearch30_32,
        -:20901:                       linsearch31_32,
        -:20902:                       linsearch32_32
        -:20903:};
        -:20904:
        -:20905:static uint32_t
       16:20906:linsearch1_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:20907:  uint32_t tmp, tmp2;
       16:20908:  value -= base;
        -:20909:  (void)tmp2;
       16:20910:  tmp = *(uint32_t *)in;
        -:20911:  /* consumed: 4 bytes (total: 4) */
       16:20912:  if (((tmp >> 0) & 1) == value) {
       16:20913:    *found = 0;
       16:20914:    return 0;
        -:20915:  }
    #####:20916:  if (((tmp >> 1) & 1) == value) {
    #####:20917:    *found = 1;
    #####:20918:    return 1;
        -:20919:  }
    #####:20920:  if (((tmp >> 2) & 1) == value) {
    #####:20921:    *found = 2;
    #####:20922:    return 2;
        -:20923:  }
    #####:20924:  if (((tmp >> 3) & 1) == value) {
    #####:20925:    *found = 3;
    #####:20926:    return 3;
        -:20927:  }
    #####:20928:  if (((tmp >> 4) & 1) == value) {
    #####:20929:    *found = 4;
    #####:20930:    return 4;
        -:20931:  }
    #####:20932:  if (((tmp >> 5) & 1) == value) {
    #####:20933:    *found = 5;
    #####:20934:    return 5;
        -:20935:  }
    #####:20936:  if (((tmp >> 6) & 1) == value) {
    #####:20937:    *found = 6;
    #####:20938:    return 6;
        -:20939:  }
    #####:20940:  if (((tmp >> 7) & 1) == value) {
    #####:20941:    *found = 7;
    #####:20942:    return 7;
        -:20943:  }
    #####:20944:  if (((tmp >> 8) & 1) == value) {
    #####:20945:    *found = 8;
    #####:20946:    return 8;
        -:20947:  }
    #####:20948:  if (((tmp >> 9) & 1) == value) {
    #####:20949:    *found = 9;
    #####:20950:    return 9;
        -:20951:  }
    #####:20952:  if (((tmp >> 10) & 1) == value) {
    #####:20953:    *found = 10;
    #####:20954:    return 10;
        -:20955:  }
    #####:20956:  if (((tmp >> 11) & 1) == value) {
    #####:20957:    *found = 11;
    #####:20958:    return 11;
        -:20959:  }
    #####:20960:  if (((tmp >> 12) & 1) == value) {
    #####:20961:    *found = 12;
    #####:20962:    return 12;
        -:20963:  }
    #####:20964:  if (((tmp >> 13) & 1) == value) {
    #####:20965:    *found = 13;
    #####:20966:    return 13;
        -:20967:  }
    #####:20968:  if (((tmp >> 14) & 1) == value) {
    #####:20969:    *found = 14;
    #####:20970:    return 14;
        -:20971:  }
    #####:20972:  if (((tmp >> 15) & 1) == value) {
    #####:20973:    *found = 15;
    #####:20974:    return 15;
        -:20975:  }
        -:20976:  /* remaining: 16 bits */
        -:20977:  return (2);
        -:20978:}
        -:20979:
        -:20980:static uint32_t
       16:20981:linsearch2_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:20982:  uint32_t tmp, tmp2;
       16:20983:  value -= base;
        -:20984:  (void)tmp2;
       16:20985:  tmp = *(uint32_t *)in;
        -:20986:  /* consumed: 4 bytes (total: 4) */
       16:20987:  if (((tmp >> 0) & 3) == value) {
        6:20988:    *found = 0;
        6:20989:    return 0;
        -:20990:  }
       10:20991:  if (((tmp >> 2) & 3) == value) {
        5:20992:    *found = 1;
        5:20993:    return 1;
        -:20994:  }
        5:20995:  if (((tmp >> 4) & 3) == value) {
        5:20996:    *found = 2;
        5:20997:    return 2;
        -:20998:  }
    #####:20999:  if (((tmp >> 6) & 3) == value) {
    #####:21000:    *found = 3;
    #####:21001:    return 3;
        -:21002:  }
    #####:21003:  if (((tmp >> 8) & 3) == value) {
    #####:21004:    *found = 4;
    #####:21005:    return 4;
        -:21006:  }
    #####:21007:  if (((tmp >> 10) & 3) == value) {
    #####:21008:    *found = 5;
    #####:21009:    return 5;
        -:21010:  }
    #####:21011:  if (((tmp >> 12) & 3) == value) {
    #####:21012:    *found = 6;
    #####:21013:    return 6;
        -:21014:  }
    #####:21015:  if (((tmp >> 14) & 3) == value) {
    #####:21016:    *found = 7;
    #####:21017:    return 7;
        -:21018:  }
    #####:21019:  if (((tmp >> 16) & 3) == value) {
    #####:21020:    *found = 8;
    #####:21021:    return 8;
        -:21022:  }
    #####:21023:  if (((tmp >> 18) & 3) == value) {
    #####:21024:    *found = 9;
    #####:21025:    return 9;
        -:21026:  }
    #####:21027:  if (((tmp >> 20) & 3) == value) {
    #####:21028:    *found = 10;
    #####:21029:    return 10;
        -:21030:  }
    #####:21031:  if (((tmp >> 22) & 3) == value) {
    #####:21032:    *found = 11;
    #####:21033:    return 11;
        -:21034:  }
    #####:21035:  if (((tmp >> 24) & 3) == value) {
    #####:21036:    *found = 12;
    #####:21037:    return 12;
        -:21038:  }
    #####:21039:  if (((tmp >> 26) & 3) == value) {
    #####:21040:    *found = 13;
    #####:21041:    return 13;
        -:21042:  }
    #####:21043:  if (((tmp >> 28) & 3) == value) {
    #####:21044:    *found = 14;
    #####:21045:    return 14;
        -:21046:  }
    #####:21047:  if (((tmp >> 30) & 3) == value) {
    #####:21048:    *found = 15;
    #####:21049:    return 15;
        -:21050:  }
        -:21051:  /* remaining: 0 bits */
        -:21052:  return (4);
        -:21053:}
        -:21054:
        -:21055:static uint32_t
       16:21056:linsearch3_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21057:  uint32_t tmp, tmp2;
       16:21058:  value -= base;
        -:21059:  (void)tmp2;
       16:21060:  tmp = *(uint32_t *)in;
        -:21061:  /* consumed: 4 bytes (total: 4) */
       16:21062:  if (((tmp >> 0) & 7) == value) {
        3:21063:    *found = 0;
        3:21064:    return 0;
        -:21065:  }
       13:21066:  if (((tmp >> 3) & 7) == value) {
        3:21067:    *found = 1;
        3:21068:    return 1;
        -:21069:  }
       10:21070:  if (((tmp >> 6) & 7) == value) {
        2:21071:    *found = 2;
        2:21072:    return 2;
        -:21073:  }
        8:21074:  if (((tmp >> 9) & 7) == value) {
        2:21075:    *found = 3;
        2:21076:    return 3;
        -:21077:  }
        6:21078:  if (((tmp >> 12) & 7) == value) {
        2:21079:    *found = 4;
        2:21080:    return 4;
        -:21081:  }
        4:21082:  if (((tmp >> 15) & 7) == value) {
        2:21083:    *found = 5;
        2:21084:    return 5;
        -:21085:  }
        2:21086:  if (((tmp >> 18) & 7) == value) {
        2:21087:    *found = 6;
        2:21088:    return 6;
        -:21089:  }
    #####:21090:  if (((tmp >> 21) & 7) == value) {
    #####:21091:    *found = 7;
    #####:21092:    return 7;
        -:21093:  }
    #####:21094:  if (((tmp >> 24) & 7) == value) {
    #####:21095:    *found = 8;
    #####:21096:    return 8;
        -:21097:  }
    #####:21098:  if (((tmp >> 27) & 7) == value) {
    #####:21099:    *found = 9;
    #####:21100:    return 9;
        -:21101:  }
    #####:21102:  tmp2 = tmp >> 30;
        -:21103:  in += sizeof(uint32_t);
        -:21104:  /* consumed: 4 bytes (total: 8) */
    #####:21105:  tmp = *(uint32_t *)in;
    #####:21106:  if ((tmp2 | (tmp % (1U << 1)) << (3 - 1)) == value) {
    #####:21107:    *found = 10;
    #####:21108:    return 10;
        -:21109:  }
    #####:21110:  if (((tmp >> 1) & 7) == value) {
    #####:21111:    *found = 11;
    #####:21112:    return 11;
        -:21113:  }
    #####:21114:  if (((tmp >> 4) & 7) == value) {
    #####:21115:    *found = 12;
    #####:21116:    return 12;
        -:21117:  }
    #####:21118:  if (((tmp >> 7) & 7) == value) {
    #####:21119:    *found = 13;
    #####:21120:    return 13;
        -:21121:  }
    #####:21122:  if (((tmp >> 10) & 7) == value) {
    #####:21123:    *found = 14;
    #####:21124:    return 14;
        -:21125:  }
    #####:21126:  if (((tmp >> 13) & 7) == value) {
    #####:21127:    *found = 15;
    #####:21128:    return 15;
        -:21129:  }
        -:21130:  /* remaining: 16 bits */
        -:21131:  return (6);
        -:21132:}
        -:21133:
        -:21134:static uint32_t
       32:21135:linsearch4_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21136:  uint32_t tmp, tmp2;
       32:21137:  value -= base;
        -:21138:  (void)tmp2;
       32:21139:  tmp = *(uint32_t *)in;
        -:21140:  /* consumed: 4 bytes (total: 4) */
       32:21141:  if (((tmp >> 0) & 15) == value) {
        3:21142:    *found = 0;
        3:21143:    return 0;
        -:21144:  }
       29:21145:  if (((tmp >> 4) & 15) == value) {
        2:21146:    *found = 1;
        2:21147:    return 1;
        -:21148:  }
       27:21149:  if (((tmp >> 8) & 15) == value) {
        2:21150:    *found = 2;
        2:21151:    return 2;
        -:21152:  }
       25:21153:  if (((tmp >> 12) & 15) == value) {
        2:21154:    *found = 3;
        2:21155:    return 3;
        -:21156:  }
       23:21157:  if (((tmp >> 16) & 15) == value) {
        2:21158:    *found = 4;
        2:21159:    return 4;
        -:21160:  }
       21:21161:  if (((tmp >> 20) & 15) == value) {
        2:21162:    *found = 5;
        2:21163:    return 5;
        -:21164:  }
       19:21165:  if (((tmp >> 24) & 15) == value) {
        2:21166:    *found = 6;
        2:21167:    return 6;
        -:21168:  }
       17:21169:  if (((tmp >> 28) & 15) == value) {
        2:21170:    *found = 7;
        2:21171:    return 7;
        -:21172:  }
        -:21173:  in += sizeof(uint32_t);
       15:21174:  tmp = *(uint32_t *)in;
        -:21175:  /* consumed: 4 bytes (total: 8) */
       15:21176:  if (((tmp >> 0) & 15) == value) {
        2:21177:    *found = 8;
        2:21178:    return 8;
        -:21179:  }
       13:21180:  if (((tmp >> 4) & 15) == value) {
        2:21181:    *found = 9;
        2:21182:    return 9;
        -:21183:  }
       11:21184:  if (((tmp >> 8) & 15) == value) {
        2:21185:    *found = 10;
        2:21186:    return 10;
        -:21187:  }
        9:21188:  if (((tmp >> 12) & 15) == value) {
        2:21189:    *found = 11;
        2:21190:    return 11;
        -:21191:  }
        7:21192:  if (((tmp >> 16) & 15) == value) {
        2:21193:    *found = 12;
        2:21194:    return 12;
        -:21195:  }
        5:21196:  if (((tmp >> 20) & 15) == value) {
        2:21197:    *found = 13;
        2:21198:    return 13;
        -:21199:  }
        3:21200:  if (((tmp >> 24) & 15) == value) {
        2:21201:    *found = 14;
        2:21202:    return 14;
        -:21203:  }
        1:21204:  if (((tmp >> 28) & 15) == value) {
        1:21205:    *found = 15;
        1:21206:    return 15;
        -:21207:  }
        -:21208:  /* remaining: 0 bits */
        -:21209:  return (8);
        -:21210:}
        -:21211:
        -:21212:static uint32_t
       33:21213:linsearch5_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21214:  uint32_t tmp, tmp2;
       33:21215:  value -= base;
        -:21216:  (void)tmp2;
       33:21217:  tmp = *(uint32_t *)in;
        -:21218:  /* consumed: 4 bytes (total: 4) */
       33:21219:  if (((tmp >> 0) & 31) == value) {
        2:21220:    *found = 0;
        2:21221:    return 0;
        -:21222:  }
       31:21223:  if (((tmp >> 5) & 31) == value) {
        2:21224:    *found = 1;
        2:21225:    return 1;
        -:21226:  }
       29:21227:  if (((tmp >> 10) & 31) == value) {
        2:21228:    *found = 2;
        2:21229:    return 2;
        -:21230:  }
       27:21231:  if (((tmp >> 15) & 31) == value) {
        2:21232:    *found = 3;
        2:21233:    return 3;
        -:21234:  }
       25:21235:  if (((tmp >> 20) & 31) == value) {
        2:21236:    *found = 4;
        2:21237:    return 4;
        -:21238:  }
       23:21239:  if (((tmp >> 25) & 31) == value) {
        2:21240:    *found = 5;
        2:21241:    return 5;
        -:21242:  }
       21:21243:  tmp2 = tmp >> 30;
        -:21244:  in += sizeof(uint32_t);
        -:21245:  /* consumed: 4 bytes (total: 8) */
       21:21246:  tmp = *(uint32_t *)in;
       21:21247:  if ((tmp2 | (tmp % (1U << 3)) << (5 - 3)) == value) {
        2:21248:    *found = 6;
        2:21249:    return 6;
        -:21250:  }
       19:21251:  if (((tmp >> 3) & 31) == value) {
        2:21252:    *found = 7;
        2:21253:    return 7;
        -:21254:  }
       17:21255:  if (((tmp >> 8) & 31) == value) {
        2:21256:    *found = 8;
        2:21257:    return 8;
        -:21258:  }
       15:21259:  if (((tmp >> 13) & 31) == value) {
        2:21260:    *found = 9;
        2:21261:    return 9;
        -:21262:  }
       13:21263:  if (((tmp >> 18) & 31) == value) {
        2:21264:    *found = 10;
        2:21265:    return 10;
        -:21266:  }
       11:21267:  if (((tmp >> 23) & 31) == value) {
        2:21268:    *found = 11;
        2:21269:    return 11;
        -:21270:  }
        9:21271:  tmp2 = tmp >> 28;
        -:21272:  in += sizeof(uint32_t);
        -:21273:  /* consumed: 4 bytes (total: 12) */
        9:21274:  tmp = *(uint32_t *)in;
        9:21275:  if ((tmp2 | (tmp % (1U << 1)) << (5 - 1)) == value) {
        2:21276:    *found = 12;
        2:21277:    return 12;
        -:21278:  }
        7:21279:  if (((tmp >> 1) & 31) == value) {
        2:21280:    *found = 13;
        2:21281:    return 13;
        -:21282:  }
        5:21283:  if (((tmp >> 6) & 31) == value) {
        2:21284:    *found = 14;
        2:21285:    return 14;
        -:21286:  }
        3:21287:  if (((tmp >> 11) & 31) == value) {
        2:21288:    *found = 15;
        2:21289:    return 15;
        -:21290:  }
        -:21291:  /* remaining: 16 bits */
        -:21292:  return (10);
        -:21293:}
        -:21294:
        -:21295:static uint32_t
       16:21296:linsearch6_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21297:  uint32_t tmp, tmp2;
       16:21298:  value -= base;
        -:21299:  (void)tmp2;
       16:21300:  tmp = *(uint32_t *)in;
        -:21301:  /* consumed: 4 bytes (total: 4) */
       16:21302:  if (((tmp >> 0) & 63) == value) {
        1:21303:    *found = 0;
        1:21304:    return 0;
        -:21305:  }
       15:21306:  if (((tmp >> 6) & 63) == value) {
        1:21307:    *found = 1;
        1:21308:    return 1;
        -:21309:  }
       14:21310:  if (((tmp >> 12) & 63) == value) {
        1:21311:    *found = 2;
        1:21312:    return 2;
        -:21313:  }
       13:21314:  if (((tmp >> 18) & 63) == value) {
        1:21315:    *found = 3;
        1:21316:    return 3;
        -:21317:  }
       12:21318:  if (((tmp >> 24) & 63) == value) {
        1:21319:    *found = 4;
        1:21320:    return 4;
        -:21321:  }
       11:21322:  tmp2 = tmp >> 30;
        -:21323:  in += sizeof(uint32_t);
        -:21324:  /* consumed: 4 bytes (total: 8) */
       11:21325:  tmp = *(uint32_t *)in;
       11:21326:  if ((tmp2 | (tmp % (1U << 4)) << (6 - 4)) == value) {
        1:21327:    *found = 5;
        1:21328:    return 5;
        -:21329:  }
       10:21330:  if (((tmp >> 4) & 63) == value) {
        1:21331:    *found = 6;
        1:21332:    return 6;
        -:21333:  }
        9:21334:  if (((tmp >> 10) & 63) == value) {
        1:21335:    *found = 7;
        1:21336:    return 7;
        -:21337:  }
        8:21338:  if (((tmp >> 16) & 63) == value) {
        1:21339:    *found = 8;
        1:21340:    return 8;
        -:21341:  }
        7:21342:  if (((tmp >> 22) & 63) == value) {
        1:21343:    *found = 9;
        1:21344:    return 9;
        -:21345:  }
        6:21346:  tmp2 = tmp >> 28;
        -:21347:  in += sizeof(uint32_t);
        -:21348:  /* consumed: 4 bytes (total: 12) */
        6:21349:  tmp = *(uint32_t *)in;
        6:21350:  if ((tmp2 | (tmp % (1U << 2)) << (6 - 2)) == value) {
        1:21351:    *found = 10;
        1:21352:    return 10;
        -:21353:  }
        5:21354:  if (((tmp >> 2) & 63) == value) {
        1:21355:    *found = 11;
        1:21356:    return 11;
        -:21357:  }
        4:21358:  if (((tmp >> 8) & 63) == value) {
        1:21359:    *found = 12;
        1:21360:    return 12;
        -:21361:  }
        3:21362:  if (((tmp >> 14) & 63) == value) {
        1:21363:    *found = 13;
        1:21364:    return 13;
        -:21365:  }
        2:21366:  if (((tmp >> 20) & 63) == value) {
        1:21367:    *found = 14;
        1:21368:    return 14;
        -:21369:  }
        1:21370:  if (((tmp >> 26) & 63) == value) {
        1:21371:    *found = 15;
        1:21372:    return 15;
        -:21373:  }
        -:21374:  /* remaining: 0 bits */
        -:21375:  return (12);
        -:21376:}
        -:21377:
        -:21378:static uint32_t
       16:21379:linsearch7_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21380:  uint32_t tmp, tmp2;
       16:21381:  value -= base;
        -:21382:  (void)tmp2;
       16:21383:  tmp = *(uint32_t *)in;
        -:21384:  /* consumed: 4 bytes (total: 4) */
       16:21385:  if (((tmp >> 0) & 127) == value) {
        1:21386:    *found = 0;
        1:21387:    return 0;
        -:21388:  }
       15:21389:  if (((tmp >> 7) & 127) == value) {
        1:21390:    *found = 1;
        1:21391:    return 1;
        -:21392:  }
       14:21393:  if (((tmp >> 14) & 127) == value) {
        1:21394:    *found = 2;
        1:21395:    return 2;
        -:21396:  }
       13:21397:  if (((tmp >> 21) & 127) == value) {
        1:21398:    *found = 3;
        1:21399:    return 3;
        -:21400:  }
       12:21401:  tmp2 = tmp >> 28;
        -:21402:  in += sizeof(uint32_t);
        -:21403:  /* consumed: 4 bytes (total: 8) */
       12:21404:  tmp = *(uint32_t *)in;
       12:21405:  if ((tmp2 | (tmp % (1U << 3)) << (7 - 3)) == value) {
        1:21406:    *found = 4;
        1:21407:    return 4;
        -:21408:  }
       11:21409:  if (((tmp >> 3) & 127) == value) {
        1:21410:    *found = 5;
        1:21411:    return 5;
        -:21412:  }
       10:21413:  if (((tmp >> 10) & 127) == value) {
        1:21414:    *found = 6;
        1:21415:    return 6;
        -:21416:  }
        9:21417:  if (((tmp >> 17) & 127) == value) {
        1:21418:    *found = 7;
        1:21419:    return 7;
        -:21420:  }
        8:21421:  if (((tmp >> 24) & 127) == value) {
        1:21422:    *found = 8;
        1:21423:    return 8;
        -:21424:  }
        7:21425:  tmp2 = tmp >> 31;
        -:21426:  in += sizeof(uint32_t);
        -:21427:  /* consumed: 4 bytes (total: 12) */
        7:21428:  tmp = *(uint32_t *)in;
        7:21429:  if ((tmp2 | (tmp % (1U << 6)) << (7 - 6)) == value) {
        1:21430:    *found = 9;
        1:21431:    return 9;
        -:21432:  }
        6:21433:  if (((tmp >> 6) & 127) == value) {
        1:21434:    *found = 10;
        1:21435:    return 10;
        -:21436:  }
        5:21437:  if (((tmp >> 13) & 127) == value) {
        1:21438:    *found = 11;
        1:21439:    return 11;
        -:21440:  }
        4:21441:  if (((tmp >> 20) & 127) == value) {
        1:21442:    *found = 12;
        1:21443:    return 12;
        -:21444:  }
        3:21445:  tmp2 = tmp >> 27;
        -:21446:  in += sizeof(uint32_t);
        -:21447:  /* consumed: 4 bytes (total: 16) */
        3:21448:  tmp = *(uint32_t *)in;
        3:21449:  if ((tmp2 | (tmp % (1U << 2)) << (7 - 2)) == value) {
        1:21450:    *found = 13;
        1:21451:    return 13;
        -:21452:  }
        2:21453:  if (((tmp >> 2) & 127) == value) {
        1:21454:    *found = 14;
        1:21455:    return 14;
        -:21456:  }
        1:21457:  if (((tmp >> 9) & 127) == value) {
        1:21458:    *found = 15;
        1:21459:    return 15;
        -:21460:  }
        -:21461:  /* remaining: 16 bits */
        -:21462:  return (14);
        -:21463:}
        -:21464:
        -:21465:static uint32_t
       16:21466:linsearch8_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21467:  uint32_t tmp, tmp2;
       16:21468:  value -= base;
        -:21469:  (void)tmp2;
       16:21470:  tmp = *(uint32_t *)in;
        -:21471:  /* consumed: 4 bytes (total: 4) */
       16:21472:  if (((tmp >> 0) & 255) == value) {
        1:21473:    *found = 0;
        1:21474:    return 0;
        -:21475:  }
       15:21476:  if (((tmp >> 8) & 255) == value) {
        1:21477:    *found = 1;
        1:21478:    return 1;
        -:21479:  }
       14:21480:  if (((tmp >> 16) & 255) == value) {
        1:21481:    *found = 2;
        1:21482:    return 2;
        -:21483:  }
       13:21484:  if (((tmp >> 24) & 255) == value) {
        1:21485:    *found = 3;
        1:21486:    return 3;
        -:21487:  }
        -:21488:  in += sizeof(uint32_t);
       12:21489:  tmp = *(uint32_t *)in;
        -:21490:  /* consumed: 4 bytes (total: 8) */
       12:21491:  if (((tmp >> 0) & 255) == value) {
        1:21492:    *found = 4;
        1:21493:    return 4;
        -:21494:  }
       11:21495:  if (((tmp >> 8) & 255) == value) {
        1:21496:    *found = 5;
        1:21497:    return 5;
        -:21498:  }
       10:21499:  if (((tmp >> 16) & 255) == value) {
        1:21500:    *found = 6;
        1:21501:    return 6;
        -:21502:  }
        9:21503:  if (((tmp >> 24) & 255) == value) {
        1:21504:    *found = 7;
        1:21505:    return 7;
        -:21506:  }
        -:21507:  in += sizeof(uint32_t);
        8:21508:  tmp = *(uint32_t *)in;
        -:21509:  /* consumed: 4 bytes (total: 12) */
        8:21510:  if (((tmp >> 0) & 255) == value) {
        1:21511:    *found = 8;
        1:21512:    return 8;
        -:21513:  }
        7:21514:  if (((tmp >> 8) & 255) == value) {
        1:21515:    *found = 9;
        1:21516:    return 9;
        -:21517:  }
        6:21518:  if (((tmp >> 16) & 255) == value) {
        1:21519:    *found = 10;
        1:21520:    return 10;
        -:21521:  }
        5:21522:  if (((tmp >> 24) & 255) == value) {
        1:21523:    *found = 11;
        1:21524:    return 11;
        -:21525:  }
        -:21526:  in += sizeof(uint32_t);
        4:21527:  tmp = *(uint32_t *)in;
        -:21528:  /* consumed: 4 bytes (total: 16) */
        4:21529:  if (((tmp >> 0) & 255) == value) {
        1:21530:    *found = 12;
        1:21531:    return 12;
        -:21532:  }
        3:21533:  if (((tmp >> 8) & 255) == value) {
        1:21534:    *found = 13;
        1:21535:    return 13;
        -:21536:  }
        2:21537:  if (((tmp >> 16) & 255) == value) {
        1:21538:    *found = 14;
        1:21539:    return 14;
        -:21540:  }
        1:21541:  if (((tmp >> 24) & 255) == value) {
        1:21542:    *found = 15;
        1:21543:    return 15;
        -:21544:  }
        -:21545:  /* remaining: 0 bits */
        -:21546:  return (16);
        -:21547:}
        -:21548:
        -:21549:static uint32_t
       16:21550:linsearch9_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21551:  uint32_t tmp, tmp2;
       16:21552:  value -= base;
        -:21553:  (void)tmp2;
       16:21554:  tmp = *(uint32_t *)in;
        -:21555:  /* consumed: 4 bytes (total: 4) */
       16:21556:  if (((tmp >> 0) & 511) == value) {
        1:21557:    *found = 0;
        1:21558:    return 0;
        -:21559:  }
       15:21560:  if (((tmp >> 9) & 511) == value) {
        1:21561:    *found = 1;
        1:21562:    return 1;
        -:21563:  }
       14:21564:  if (((tmp >> 18) & 511) == value) {
        1:21565:    *found = 2;
        1:21566:    return 2;
        -:21567:  }
       13:21568:  tmp2 = tmp >> 27;
        -:21569:  in += sizeof(uint32_t);
        -:21570:  /* consumed: 4 bytes (total: 8) */
       13:21571:  tmp = *(uint32_t *)in;
       13:21572:  if ((tmp2 | (tmp % (1U << 4)) << (9 - 4)) == value) {
        1:21573:    *found = 3;
        1:21574:    return 3;
        -:21575:  }
       12:21576:  if (((tmp >> 4) & 511) == value) {
        1:21577:    *found = 4;
        1:21578:    return 4;
        -:21579:  }
       11:21580:  if (((tmp >> 13) & 511) == value) {
        1:21581:    *found = 5;
        1:21582:    return 5;
        -:21583:  }
       10:21584:  if (((tmp >> 22) & 511) == value) {
        1:21585:    *found = 6;
        1:21586:    return 6;
        -:21587:  }
        9:21588:  tmp2 = tmp >> 31;
        -:21589:  in += sizeof(uint32_t);
        -:21590:  /* consumed: 4 bytes (total: 12) */
        9:21591:  tmp = *(uint32_t *)in;
        9:21592:  if ((tmp2 | (tmp % (1U << 8)) << (9 - 8)) == value) {
        1:21593:    *found = 7;
        1:21594:    return 7;
        -:21595:  }
        8:21596:  if (((tmp >> 8) & 511) == value) {
        1:21597:    *found = 8;
        1:21598:    return 8;
        -:21599:  }
        7:21600:  if (((tmp >> 17) & 511) == value) {
        1:21601:    *found = 9;
        1:21602:    return 9;
        -:21603:  }
        6:21604:  tmp2 = tmp >> 26;
        -:21605:  in += sizeof(uint32_t);
        -:21606:  /* consumed: 4 bytes (total: 16) */
        6:21607:  tmp = *(uint32_t *)in;
        6:21608:  if ((tmp2 | (tmp % (1U << 3)) << (9 - 3)) == value) {
        1:21609:    *found = 10;
        1:21610:    return 10;
        -:21611:  }
        5:21612:  if (((tmp >> 3) & 511) == value) {
        1:21613:    *found = 11;
        1:21614:    return 11;
        -:21615:  }
        4:21616:  if (((tmp >> 12) & 511) == value) {
        1:21617:    *found = 12;
        1:21618:    return 12;
        -:21619:  }
        3:21620:  if (((tmp >> 21) & 511) == value) {
        1:21621:    *found = 13;
        1:21622:    return 13;
        -:21623:  }
        2:21624:  tmp2 = tmp >> 30;
        -:21625:  in += sizeof(uint32_t);
        -:21626:  /* consumed: 4 bytes (total: 20) */
        2:21627:  tmp = *(uint32_t *)in;
        2:21628:  if ((tmp2 | (tmp % (1U << 7)) << (9 - 7)) == value) {
        1:21629:    *found = 14;
        1:21630:    return 14;
        -:21631:  }
        1:21632:  if (((tmp >> 7) & 511) == value) {
        1:21633:    *found = 15;
        1:21634:    return 15;
        -:21635:  }
        -:21636:  /* remaining: 16 bits */
        -:21637:  return (18);
        -:21638:}
        -:21639:
        -:21640:static uint32_t
       16:21641:linsearch10_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21642:  uint32_t tmp, tmp2;
       16:21643:  value -= base;
        -:21644:  (void)tmp2;
       16:21645:  tmp = *(uint32_t *)in;
        -:21646:  /* consumed: 4 bytes (total: 4) */
       16:21647:  if (((tmp >> 0) & 1023) == value) {
        1:21648:    *found = 0;
        1:21649:    return 0;
        -:21650:  }
       15:21651:  if (((tmp >> 10) & 1023) == value) {
        1:21652:    *found = 1;
        1:21653:    return 1;
        -:21654:  }
       14:21655:  if (((tmp >> 20) & 1023) == value) {
        1:21656:    *found = 2;
        1:21657:    return 2;
        -:21658:  }
       13:21659:  tmp2 = tmp >> 30;
        -:21660:  in += sizeof(uint32_t);
        -:21661:  /* consumed: 4 bytes (total: 8) */
       13:21662:  tmp = *(uint32_t *)in;
       13:21663:  if ((tmp2 | (tmp % (1U << 8)) << (10 - 8)) == value) {
        1:21664:    *found = 3;
        1:21665:    return 3;
        -:21666:  }
       12:21667:  if (((tmp >> 8) & 1023) == value) {
        1:21668:    *found = 4;
        1:21669:    return 4;
        -:21670:  }
       11:21671:  if (((tmp >> 18) & 1023) == value) {
        1:21672:    *found = 5;
        1:21673:    return 5;
        -:21674:  }
       10:21675:  tmp2 = tmp >> 28;
        -:21676:  in += sizeof(uint32_t);
        -:21677:  /* consumed: 4 bytes (total: 12) */
       10:21678:  tmp = *(uint32_t *)in;
       10:21679:  if ((tmp2 | (tmp % (1U << 6)) << (10 - 6)) == value) {
        1:21680:    *found = 6;
        1:21681:    return 6;
        -:21682:  }
        9:21683:  if (((tmp >> 6) & 1023) == value) {
        1:21684:    *found = 7;
        1:21685:    return 7;
        -:21686:  }
        8:21687:  if (((tmp >> 16) & 1023) == value) {
        1:21688:    *found = 8;
        1:21689:    return 8;
        -:21690:  }
        7:21691:  tmp2 = tmp >> 26;
        -:21692:  in += sizeof(uint32_t);
        -:21693:  /* consumed: 4 bytes (total: 16) */
        7:21694:  tmp = *(uint32_t *)in;
        7:21695:  if ((tmp2 | (tmp % (1U << 4)) << (10 - 4)) == value) {
        1:21696:    *found = 9;
        1:21697:    return 9;
        -:21698:  }
        6:21699:  if (((tmp >> 4) & 1023) == value) {
        1:21700:    *found = 10;
        1:21701:    return 10;
        -:21702:  }
        5:21703:  if (((tmp >> 14) & 1023) == value) {
        1:21704:    *found = 11;
        1:21705:    return 11;
        -:21706:  }
        4:21707:  tmp2 = tmp >> 24;
        -:21708:  in += sizeof(uint32_t);
        -:21709:  /* consumed: 4 bytes (total: 20) */
        4:21710:  tmp = *(uint32_t *)in;
        4:21711:  if ((tmp2 | (tmp % (1U << 2)) << (10 - 2)) == value) {
        1:21712:    *found = 12;
        1:21713:    return 12;
        -:21714:  }
        3:21715:  if (((tmp >> 2) & 1023) == value) {
        1:21716:    *found = 13;
        1:21717:    return 13;
        -:21718:  }
        2:21719:  if (((tmp >> 12) & 1023) == value) {
        1:21720:    *found = 14;
        1:21721:    return 14;
        -:21722:  }
        1:21723:  if (((tmp >> 22) & 1023) == value) {
        1:21724:    *found = 15;
        1:21725:    return 15;
        -:21726:  }
        -:21727:  /* remaining: 0 bits */
        -:21728:  return (20);
        -:21729:}
        -:21730:
        -:21731:static uint32_t
       37:21732:linsearch11_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21733:  uint32_t tmp, tmp2;
       37:21734:  value -= base;
        -:21735:  (void)tmp2;
       37:21736:  tmp = *(uint32_t *)in;
        -:21737:  /* consumed: 4 bytes (total: 4) */
       37:21738:  if (((tmp >> 0) & 2047) == value) {
        2:21739:    *found = 0;
        2:21740:    return 0;
        -:21741:  }
       35:21742:  if (((tmp >> 11) & 2047) == value) {
        2:21743:    *found = 1;
        2:21744:    return 1;
        -:21745:  }
       33:21746:  tmp2 = tmp >> 22;
        -:21747:  in += sizeof(uint32_t);
        -:21748:  /* consumed: 4 bytes (total: 8) */
       33:21749:  tmp = *(uint32_t *)in;
       33:21750:  if ((tmp2 | (tmp % (1U << 1)) << (11 - 1)) == value) {
        2:21751:    *found = 2;
        2:21752:    return 2;
        -:21753:  }
       31:21754:  if (((tmp >> 1) & 2047) == value) {
        2:21755:    *found = 3;
        2:21756:    return 3;
        -:21757:  }
       29:21758:  if (((tmp >> 12) & 2047) == value) {
        2:21759:    *found = 4;
        2:21760:    return 4;
        -:21761:  }
       27:21762:  tmp2 = tmp >> 23;
        -:21763:  in += sizeof(uint32_t);
        -:21764:  /* consumed: 4 bytes (total: 12) */
       27:21765:  tmp = *(uint32_t *)in;
       27:21766:  if ((tmp2 | (tmp % (1U << 2)) << (11 - 2)) == value) {
        2:21767:    *found = 5;
        2:21768:    return 5;
        -:21769:  }
       25:21770:  if (((tmp >> 2) & 2047) == value) {
        2:21771:    *found = 6;
        2:21772:    return 6;
        -:21773:  }
       23:21774:  if (((tmp >> 13) & 2047) == value) {
        2:21775:    *found = 7;
        2:21776:    return 7;
        -:21777:  }
       21:21778:  tmp2 = tmp >> 24;
        -:21779:  in += sizeof(uint32_t);
        -:21780:  /* consumed: 4 bytes (total: 16) */
       21:21781:  tmp = *(uint32_t *)in;
       21:21782:  if ((tmp2 | (tmp % (1U << 3)) << (11 - 3)) == value) {
        2:21783:    *found = 8;
        2:21784:    return 8;
        -:21785:  }
       19:21786:  if (((tmp >> 3) & 2047) == value) {
        2:21787:    *found = 9;
        2:21788:    return 9;
        -:21789:  }
       17:21790:  if (((tmp >> 14) & 2047) == value) {
        2:21791:    *found = 10;
        2:21792:    return 10;
        -:21793:  }
       15:21794:  tmp2 = tmp >> 25;
        -:21795:  in += sizeof(uint32_t);
        -:21796:  /* consumed: 4 bytes (total: 20) */
       15:21797:  tmp = *(uint32_t *)in;
       15:21798:  if ((tmp2 | (tmp % (1U << 4)) << (11 - 4)) == value) {
        2:21799:    *found = 11;
        2:21800:    return 11;
        -:21801:  }
       13:21802:  if (((tmp >> 4) & 2047) == value) {
        2:21803:    *found = 12;
        2:21804:    return 12;
        -:21805:  }
       11:21806:  if (((tmp >> 15) & 2047) == value) {
        2:21807:    *found = 13;
        2:21808:    return 13;
        -:21809:  }
        9:21810:  tmp2 = tmp >> 26;
        -:21811:  in += sizeof(uint32_t);
        -:21812:  /* consumed: 4 bytes (total: 24) */
        9:21813:  tmp = *(uint32_t *)in;
        9:21814:  if ((tmp2 | (tmp % (1U << 5)) << (11 - 5)) == value) {
        2:21815:    *found = 14;
        2:21816:    return 14;
        -:21817:  }
        7:21818:  if (((tmp >> 5) & 2047) == value) {
        2:21819:    *found = 15;
        2:21820:    return 15;
        -:21821:  }
        -:21822:  /* remaining: 16 bits */
        -:21823:  return (22);
        -:21824:}
        -:21825:
        -:21826:static uint32_t
       16:21827:linsearch12_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21828:  uint32_t tmp, tmp2;
       16:21829:  value -= base;
        -:21830:  (void)tmp2;
       16:21831:  tmp = *(uint32_t *)in;
        -:21832:  /* consumed: 4 bytes (total: 4) */
       16:21833:  if (((tmp >> 0) & 4095) == value) {
        1:21834:    *found = 0;
        1:21835:    return 0;
        -:21836:  }
       15:21837:  if (((tmp >> 12) & 4095) == value) {
        1:21838:    *found = 1;
        1:21839:    return 1;
        -:21840:  }
       14:21841:  tmp2 = tmp >> 24;
        -:21842:  in += sizeof(uint32_t);
        -:21843:  /* consumed: 4 bytes (total: 8) */
       14:21844:  tmp = *(uint32_t *)in;
       14:21845:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:21846:    *found = 2;
        1:21847:    return 2;
        -:21848:  }
       13:21849:  if (((tmp >> 4) & 4095) == value) {
        1:21850:    *found = 3;
        1:21851:    return 3;
        -:21852:  }
       12:21853:  if (((tmp >> 16) & 4095) == value) {
        1:21854:    *found = 4;
        1:21855:    return 4;
        -:21856:  }
       11:21857:  tmp2 = tmp >> 28;
        -:21858:  in += sizeof(uint32_t);
        -:21859:  /* consumed: 4 bytes (total: 12) */
       11:21860:  tmp = *(uint32_t *)in;
       11:21861:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:21862:    *found = 5;
        1:21863:    return 5;
        -:21864:  }
       10:21865:  if (((tmp >> 8) & 4095) == value) {
        1:21866:    *found = 6;
        1:21867:    return 6;
        -:21868:  }
        9:21869:  if (((tmp >> 20) & 4095) == value) {
        1:21870:    *found = 7;
        1:21871:    return 7;
        -:21872:  }
        -:21873:  in += sizeof(uint32_t);
        8:21874:  tmp = *(uint32_t *)in;
        -:21875:  /* consumed: 4 bytes (total: 16) */
        8:21876:  if (((tmp >> 0) & 4095) == value) {
        1:21877:    *found = 8;
        1:21878:    return 8;
        -:21879:  }
        7:21880:  if (((tmp >> 12) & 4095) == value) {
        1:21881:    *found = 9;
        1:21882:    return 9;
        -:21883:  }
        6:21884:  tmp2 = tmp >> 24;
        -:21885:  in += sizeof(uint32_t);
        -:21886:  /* consumed: 4 bytes (total: 20) */
        6:21887:  tmp = *(uint32_t *)in;
        6:21888:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:21889:    *found = 10;
        1:21890:    return 10;
        -:21891:  }
        5:21892:  if (((tmp >> 4) & 4095) == value) {
        1:21893:    *found = 11;
        1:21894:    return 11;
        -:21895:  }
        4:21896:  if (((tmp >> 16) & 4095) == value) {
        1:21897:    *found = 12;
        1:21898:    return 12;
        -:21899:  }
        3:21900:  tmp2 = tmp >> 28;
        -:21901:  in += sizeof(uint32_t);
        -:21902:  /* consumed: 4 bytes (total: 24) */
        3:21903:  tmp = *(uint32_t *)in;
        3:21904:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:21905:    *found = 13;
        1:21906:    return 13;
        -:21907:  }
        2:21908:  if (((tmp >> 8) & 4095) == value) {
        1:21909:    *found = 14;
        1:21910:    return 14;
        -:21911:  }
        1:21912:  if (((tmp >> 20) & 4095) == value) {
        1:21913:    *found = 15;
        1:21914:    return 15;
        -:21915:  }
        -:21916:  /* remaining: 0 bits */
        -:21917:  return (24);
        -:21918:}
        -:21919:
        -:21920:static uint32_t
       16:21921:linsearch13_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:21922:  uint32_t tmp, tmp2;
       16:21923:  value -= base;
        -:21924:  (void)tmp2;
       16:21925:  tmp = *(uint32_t *)in;
        -:21926:  /* consumed: 4 bytes (total: 4) */
       16:21927:  if (((tmp >> 0) & 8191) == value) {
        1:21928:    *found = 0;
        1:21929:    return 0;
        -:21930:  }
       15:21931:  if (((tmp >> 13) & 8191) == value) {
        1:21932:    *found = 1;
        1:21933:    return 1;
        -:21934:  }
       14:21935:  tmp2 = tmp >> 26;
        -:21936:  in += sizeof(uint32_t);
        -:21937:  /* consumed: 4 bytes (total: 8) */
       14:21938:  tmp = *(uint32_t *)in;
       14:21939:  if ((tmp2 | (tmp % (1U << 7)) << (13 - 7)) == value) {
        1:21940:    *found = 2;
        1:21941:    return 2;
        -:21942:  }
       13:21943:  if (((tmp >> 7) & 8191) == value) {
        1:21944:    *found = 3;
        1:21945:    return 3;
        -:21946:  }
       12:21947:  tmp2 = tmp >> 20;
        -:21948:  in += sizeof(uint32_t);
        -:21949:  /* consumed: 4 bytes (total: 12) */
       12:21950:  tmp = *(uint32_t *)in;
       12:21951:  if ((tmp2 | (tmp % (1U << 1)) << (13 - 1)) == value) {
        1:21952:    *found = 4;
        1:21953:    return 4;
        -:21954:  }
       11:21955:  if (((tmp >> 1) & 8191) == value) {
        1:21956:    *found = 5;
        1:21957:    return 5;
        -:21958:  }
       10:21959:  if (((tmp >> 14) & 8191) == value) {
        1:21960:    *found = 6;
        1:21961:    return 6;
        -:21962:  }
        9:21963:  tmp2 = tmp >> 27;
        -:21964:  in += sizeof(uint32_t);
        -:21965:  /* consumed: 4 bytes (total: 16) */
        9:21966:  tmp = *(uint32_t *)in;
        9:21967:  if ((tmp2 | (tmp % (1U << 8)) << (13 - 8)) == value) {
        1:21968:    *found = 7;
        1:21969:    return 7;
        -:21970:  }
        8:21971:  if (((tmp >> 8) & 8191) == value) {
        1:21972:    *found = 8;
        1:21973:    return 8;
        -:21974:  }
        7:21975:  tmp2 = tmp >> 21;
        -:21976:  in += sizeof(uint32_t);
        -:21977:  /* consumed: 4 bytes (total: 20) */
        7:21978:  tmp = *(uint32_t *)in;
        7:21979:  if ((tmp2 | (tmp % (1U << 2)) << (13 - 2)) == value) {
        1:21980:    *found = 9;
        1:21981:    return 9;
        -:21982:  }
        6:21983:  if (((tmp >> 2) & 8191) == value) {
        1:21984:    *found = 10;
        1:21985:    return 10;
        -:21986:  }
        5:21987:  if (((tmp >> 15) & 8191) == value) {
        1:21988:    *found = 11;
        1:21989:    return 11;
        -:21990:  }
        4:21991:  tmp2 = tmp >> 28;
        -:21992:  in += sizeof(uint32_t);
        -:21993:  /* consumed: 4 bytes (total: 24) */
        4:21994:  tmp = *(uint32_t *)in;
        4:21995:  if ((tmp2 | (tmp % (1U << 9)) << (13 - 9)) == value) {
        1:21996:    *found = 12;
        1:21997:    return 12;
        -:21998:  }
        3:21999:  if (((tmp >> 9) & 8191) == value) {
        1:22000:    *found = 13;
        1:22001:    return 13;
        -:22002:  }
        2:22003:  tmp2 = tmp >> 22;
        -:22004:  in += sizeof(uint32_t);
        -:22005:  /* consumed: 4 bytes (total: 28) */
        2:22006:  tmp = *(uint32_t *)in;
        2:22007:  if ((tmp2 | (tmp % (1U << 3)) << (13 - 3)) == value) {
        1:22008:    *found = 14;
        1:22009:    return 14;
        -:22010:  }
        1:22011:  if (((tmp >> 3) & 8191) == value) {
        1:22012:    *found = 15;
        1:22013:    return 15;
        -:22014:  }
        -:22015:  /* remaining: 16 bits */
        -:22016:  return (26);
        -:22017:}
        -:22018:
        -:22019:static uint32_t
       16:22020:linsearch14_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22021:  uint32_t tmp, tmp2;
       16:22022:  value -= base;
        -:22023:  (void)tmp2;
       16:22024:  tmp = *(uint32_t *)in;
        -:22025:  /* consumed: 4 bytes (total: 4) */
       16:22026:  if (((tmp >> 0) & 16383) == value) {
        1:22027:    *found = 0;
        1:22028:    return 0;
        -:22029:  }
       15:22030:  if (((tmp >> 14) & 16383) == value) {
        1:22031:    *found = 1;
        1:22032:    return 1;
        -:22033:  }
       14:22034:  tmp2 = tmp >> 28;
        -:22035:  in += sizeof(uint32_t);
        -:22036:  /* consumed: 4 bytes (total: 8) */
       14:22037:  tmp = *(uint32_t *)in;
       14:22038:  if ((tmp2 | (tmp % (1U << 10)) << (14 - 10)) == value) {
        1:22039:    *found = 2;
        1:22040:    return 2;
        -:22041:  }
       13:22042:  if (((tmp >> 10) & 16383) == value) {
        1:22043:    *found = 3;
        1:22044:    return 3;
        -:22045:  }
       12:22046:  tmp2 = tmp >> 24;
        -:22047:  in += sizeof(uint32_t);
        -:22048:  /* consumed: 4 bytes (total: 12) */
       12:22049:  tmp = *(uint32_t *)in;
       12:22050:  if ((tmp2 | (tmp % (1U << 6)) << (14 - 6)) == value) {
        1:22051:    *found = 4;
        1:22052:    return 4;
        -:22053:  }
       11:22054:  if (((tmp >> 6) & 16383) == value) {
        1:22055:    *found = 5;
        1:22056:    return 5;
        -:22057:  }
       10:22058:  tmp2 = tmp >> 20;
        -:22059:  in += sizeof(uint32_t);
        -:22060:  /* consumed: 4 bytes (total: 16) */
       10:22061:  tmp = *(uint32_t *)in;
       10:22062:  if ((tmp2 | (tmp % (1U << 2)) << (14 - 2)) == value) {
        1:22063:    *found = 6;
        1:22064:    return 6;
        -:22065:  }
        9:22066:  if (((tmp >> 2) & 16383) == value) {
        1:22067:    *found = 7;
        1:22068:    return 7;
        -:22069:  }
        8:22070:  if (((tmp >> 16) & 16383) == value) {
        1:22071:    *found = 8;
        1:22072:    return 8;
        -:22073:  }
        7:22074:  tmp2 = tmp >> 30;
        -:22075:  in += sizeof(uint32_t);
        -:22076:  /* consumed: 4 bytes (total: 20) */
        7:22077:  tmp = *(uint32_t *)in;
        7:22078:  if ((tmp2 | (tmp % (1U << 12)) << (14 - 12)) == value) {
        1:22079:    *found = 9;
        1:22080:    return 9;
        -:22081:  }
        6:22082:  if (((tmp >> 12) & 16383) == value) {
        1:22083:    *found = 10;
        1:22084:    return 10;
        -:22085:  }
        5:22086:  tmp2 = tmp >> 26;
        -:22087:  in += sizeof(uint32_t);
        -:22088:  /* consumed: 4 bytes (total: 24) */
        5:22089:  tmp = *(uint32_t *)in;
        5:22090:  if ((tmp2 | (tmp % (1U << 8)) << (14 - 8)) == value) {
        1:22091:    *found = 11;
        1:22092:    return 11;
        -:22093:  }
        4:22094:  if (((tmp >> 8) & 16383) == value) {
        1:22095:    *found = 12;
        1:22096:    return 12;
        -:22097:  }
        3:22098:  tmp2 = tmp >> 22;
        -:22099:  in += sizeof(uint32_t);
        -:22100:  /* consumed: 4 bytes (total: 28) */
        3:22101:  tmp = *(uint32_t *)in;
        3:22102:  if ((tmp2 | (tmp % (1U << 4)) << (14 - 4)) == value) {
        1:22103:    *found = 13;
        1:22104:    return 13;
        -:22105:  }
        2:22106:  if (((tmp >> 4) & 16383) == value) {
        1:22107:    *found = 14;
        1:22108:    return 14;
        -:22109:  }
        1:22110:  if (((tmp >> 18) & 16383) == value) {
        1:22111:    *found = 15;
        1:22112:    return 15;
        -:22113:  }
        -:22114:  /* remaining: 0 bits */
        -:22115:  return (28);
        -:22116:}
        -:22117:
        -:22118:static uint32_t
       49:22119:linsearch15_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22120:  uint32_t tmp, tmp2;
       49:22121:  value -= base;
        -:22122:  (void)tmp2;
       49:22123:  tmp = *(uint32_t *)in;
        -:22124:  /* consumed: 4 bytes (total: 4) */
       49:22125:  if (((tmp >> 0) & 32767) == value) {
        3:22126:    *found = 0;
        3:22127:    return 0;
        -:22128:  }
       46:22129:  if (((tmp >> 15) & 32767) == value) {
        3:22130:    *found = 1;
        3:22131:    return 1;
        -:22132:  }
       43:22133:  tmp2 = tmp >> 30;
        -:22134:  in += sizeof(uint32_t);
        -:22135:  /* consumed: 4 bytes (total: 8) */
       43:22136:  tmp = *(uint32_t *)in;
       43:22137:  if ((tmp2 | (tmp % (1U << 13)) << (15 - 13)) == value) {
        3:22138:    *found = 2;
        3:22139:    return 2;
        -:22140:  }
       40:22141:  if (((tmp >> 13) & 32767) == value) {
        3:22142:    *found = 3;
        3:22143:    return 3;
        -:22144:  }
       37:22145:  tmp2 = tmp >> 28;
        -:22146:  in += sizeof(uint32_t);
        -:22147:  /* consumed: 4 bytes (total: 12) */
       37:22148:  tmp = *(uint32_t *)in;
       37:22149:  if ((tmp2 | (tmp % (1U << 11)) << (15 - 11)) == value) {
        3:22150:    *found = 4;
        3:22151:    return 4;
        -:22152:  }
       34:22153:  if (((tmp >> 11) & 32767) == value) {
        3:22154:    *found = 5;
        3:22155:    return 5;
        -:22156:  }
       31:22157:  tmp2 = tmp >> 26;
        -:22158:  in += sizeof(uint32_t);
        -:22159:  /* consumed: 4 bytes (total: 16) */
       31:22160:  tmp = *(uint32_t *)in;
       31:22161:  if ((tmp2 | (tmp % (1U << 9)) << (15 - 9)) == value) {
        3:22162:    *found = 6;
        3:22163:    return 6;
        -:22164:  }
       28:22165:  if (((tmp >> 9) & 32767) == value) {
        3:22166:    *found = 7;
        3:22167:    return 7;
        -:22168:  }
       25:22169:  tmp2 = tmp >> 24;
        -:22170:  in += sizeof(uint32_t);
        -:22171:  /* consumed: 4 bytes (total: 20) */
       25:22172:  tmp = *(uint32_t *)in;
       25:22173:  if ((tmp2 | (tmp % (1U << 7)) << (15 - 7)) == value) {
        3:22174:    *found = 8;
        3:22175:    return 8;
        -:22176:  }
       22:22177:  if (((tmp >> 7) & 32767) == value) {
        3:22178:    *found = 9;
        3:22179:    return 9;
        -:22180:  }
       19:22181:  tmp2 = tmp >> 22;
        -:22182:  in += sizeof(uint32_t);
        -:22183:  /* consumed: 4 bytes (total: 24) */
       19:22184:  tmp = *(uint32_t *)in;
       19:22185:  if ((tmp2 | (tmp % (1U << 5)) << (15 - 5)) == value) {
        3:22186:    *found = 10;
        3:22187:    return 10;
        -:22188:  }
       16:22189:  if (((tmp >> 5) & 32767) == value) {
        3:22190:    *found = 11;
        3:22191:    return 11;
        -:22192:  }
       13:22193:  tmp2 = tmp >> 20;
        -:22194:  in += sizeof(uint32_t);
        -:22195:  /* consumed: 4 bytes (total: 28) */
       13:22196:  tmp = *(uint32_t *)in;
       13:22197:  if ((tmp2 | (tmp % (1U << 3)) << (15 - 3)) == value) {
        3:22198:    *found = 12;
        3:22199:    return 12;
        -:22200:  }
       10:22201:  if (((tmp >> 3) & 32767) == value) {
        3:22202:    *found = 13;
        3:22203:    return 13;
        -:22204:  }
        7:22205:  tmp2 = tmp >> 18;
        -:22206:  in += sizeof(uint32_t);
        -:22207:  /* consumed: 4 bytes (total: 32) */
        7:22208:  tmp = *(uint32_t *)in;
        7:22209:  if ((tmp2 | (tmp % (1U << 1)) << (15 - 1)) == value) {
        3:22210:    *found = 14;
        3:22211:    return 14;
        -:22212:  }
        4:22213:  if (((tmp >> 1) & 32767) == value) {
        3:22214:    *found = 15;
        3:22215:    return 15;
        -:22216:  }
        -:22217:  /* remaining: 16 bits */
        -:22218:  return (30);
        -:22219:}
        -:22220:
        -:22221:static uint32_t
       16:22222:linsearch16_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22223:  uint32_t tmp, tmp2;
       16:22224:  value -= base;
        -:22225:  (void)tmp2;
       16:22226:  tmp = *(uint32_t *)in;
        -:22227:  /* consumed: 4 bytes (total: 4) */
       16:22228:  if (((tmp >> 0) & 65535) == value) {
        1:22229:    *found = 0;
        1:22230:    return 0;
        -:22231:  }
       15:22232:  if (((tmp >> 16) & 65535) == value) {
        1:22233:    *found = 1;
        1:22234:    return 1;
        -:22235:  }
        -:22236:  in += sizeof(uint32_t);
       14:22237:  tmp = *(uint32_t *)in;
        -:22238:  /* consumed: 4 bytes (total: 8) */
       14:22239:  if (((tmp >> 0) & 65535) == value) {
        1:22240:    *found = 2;
        1:22241:    return 2;
        -:22242:  }
       13:22243:  if (((tmp >> 16) & 65535) == value) {
        1:22244:    *found = 3;
        1:22245:    return 3;
        -:22246:  }
        -:22247:  in += sizeof(uint32_t);
       12:22248:  tmp = *(uint32_t *)in;
        -:22249:  /* consumed: 4 bytes (total: 12) */
       12:22250:  if (((tmp >> 0) & 65535) == value) {
        1:22251:    *found = 4;
        1:22252:    return 4;
        -:22253:  }
       11:22254:  if (((tmp >> 16) & 65535) == value) {
        1:22255:    *found = 5;
        1:22256:    return 5;
        -:22257:  }
        -:22258:  in += sizeof(uint32_t);
       10:22259:  tmp = *(uint32_t *)in;
        -:22260:  /* consumed: 4 bytes (total: 16) */
       10:22261:  if (((tmp >> 0) & 65535) == value) {
        1:22262:    *found = 6;
        1:22263:    return 6;
        -:22264:  }
        9:22265:  if (((tmp >> 16) & 65535) == value) {
        1:22266:    *found = 7;
        1:22267:    return 7;
        -:22268:  }
        -:22269:  in += sizeof(uint32_t);
        8:22270:  tmp = *(uint32_t *)in;
        -:22271:  /* consumed: 4 bytes (total: 20) */
        8:22272:  if (((tmp >> 0) & 65535) == value) {
        1:22273:    *found = 8;
        1:22274:    return 8;
        -:22275:  }
        7:22276:  if (((tmp >> 16) & 65535) == value) {
        1:22277:    *found = 9;
        1:22278:    return 9;
        -:22279:  }
        -:22280:  in += sizeof(uint32_t);
        6:22281:  tmp = *(uint32_t *)in;
        -:22282:  /* consumed: 4 bytes (total: 24) */
        6:22283:  if (((tmp >> 0) & 65535) == value) {
        1:22284:    *found = 10;
        1:22285:    return 10;
        -:22286:  }
        5:22287:  if (((tmp >> 16) & 65535) == value) {
        1:22288:    *found = 11;
        1:22289:    return 11;
        -:22290:  }
        -:22291:  in += sizeof(uint32_t);
        4:22292:  tmp = *(uint32_t *)in;
        -:22293:  /* consumed: 4 bytes (total: 28) */
        4:22294:  if (((tmp >> 0) & 65535) == value) {
        1:22295:    *found = 12;
        1:22296:    return 12;
        -:22297:  }
        3:22298:  if (((tmp >> 16) & 65535) == value) {
        1:22299:    *found = 13;
        1:22300:    return 13;
        -:22301:  }
        -:22302:  in += sizeof(uint32_t);
        2:22303:  tmp = *(uint32_t *)in;
        -:22304:  /* consumed: 4 bytes (total: 32) */
        2:22305:  if (((tmp >> 0) & 65535) == value) {
        1:22306:    *found = 14;
        1:22307:    return 14;
        -:22308:  }
        1:22309:  if (((tmp >> 16) & 65535) == value) {
        1:22310:    *found = 15;
        1:22311:    return 15;
        -:22312:  }
        -:22313:  /* remaining: 0 bits */
        -:22314:  return (32);
        -:22315:}
        -:22316:
        -:22317:static uint32_t
       16:22318:linsearch17_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22319:  uint32_t tmp, tmp2;
       16:22320:  value -= base;
        -:22321:  (void)tmp2;
       16:22322:  tmp = *(uint32_t *)in;
        -:22323:  /* consumed: 4 bytes (total: 4) */
       16:22324:  if (((tmp >> 0) & 131071) == value) {
        1:22325:    *found = 0;
        1:22326:    return 0;
        -:22327:  }
       15:22328:  tmp2 = tmp >> 17;
        -:22329:  in += sizeof(uint32_t);
        -:22330:  /* consumed: 4 bytes (total: 8) */
       15:22331:  tmp = *(uint32_t *)in;
       15:22332:  if ((tmp2 | (tmp % (1U << 2)) << (17 - 2)) == value) {
        1:22333:    *found = 1;
        1:22334:    return 1;
        -:22335:  }
       14:22336:  if (((tmp >> 2) & 131071) == value) {
        1:22337:    *found = 2;
        1:22338:    return 2;
        -:22339:  }
       13:22340:  tmp2 = tmp >> 19;
        -:22341:  in += sizeof(uint32_t);
        -:22342:  /* consumed: 4 bytes (total: 12) */
       13:22343:  tmp = *(uint32_t *)in;
       13:22344:  if ((tmp2 | (tmp % (1U << 4)) << (17 - 4)) == value) {
        1:22345:    *found = 3;
        1:22346:    return 3;
        -:22347:  }
       12:22348:  if (((tmp >> 4) & 131071) == value) {
        1:22349:    *found = 4;
        1:22350:    return 4;
        -:22351:  }
       11:22352:  tmp2 = tmp >> 21;
        -:22353:  in += sizeof(uint32_t);
        -:22354:  /* consumed: 4 bytes (total: 16) */
       11:22355:  tmp = *(uint32_t *)in;
       11:22356:  if ((tmp2 | (tmp % (1U << 6)) << (17 - 6)) == value) {
        1:22357:    *found = 5;
        1:22358:    return 5;
        -:22359:  }
       10:22360:  if (((tmp >> 6) & 131071) == value) {
        1:22361:    *found = 6;
        1:22362:    return 6;
        -:22363:  }
        9:22364:  tmp2 = tmp >> 23;
        -:22365:  in += sizeof(uint32_t);
        -:22366:  /* consumed: 4 bytes (total: 20) */
        9:22367:  tmp = *(uint32_t *)in;
        9:22368:  if ((tmp2 | (tmp % (1U << 8)) << (17 - 8)) == value) {
        1:22369:    *found = 7;
        1:22370:    return 7;
        -:22371:  }
        8:22372:  if (((tmp >> 8) & 131071) == value) {
        1:22373:    *found = 8;
        1:22374:    return 8;
        -:22375:  }
        7:22376:  tmp2 = tmp >> 25;
        -:22377:  in += sizeof(uint32_t);
        -:22378:  /* consumed: 4 bytes (total: 24) */
        7:22379:  tmp = *(uint32_t *)in;
        7:22380:  if ((tmp2 | (tmp % (1U << 10)) << (17 - 10)) == value) {
        1:22381:    *found = 9;
        1:22382:    return 9;
        -:22383:  }
        6:22384:  if (((tmp >> 10) & 131071) == value) {
        1:22385:    *found = 10;
        1:22386:    return 10;
        -:22387:  }
        5:22388:  tmp2 = tmp >> 27;
        -:22389:  in += sizeof(uint32_t);
        -:22390:  /* consumed: 4 bytes (total: 28) */
        5:22391:  tmp = *(uint32_t *)in;
        5:22392:  if ((tmp2 | (tmp % (1U << 12)) << (17 - 12)) == value) {
        1:22393:    *found = 11;
        1:22394:    return 11;
        -:22395:  }
        4:22396:  if (((tmp >> 12) & 131071) == value) {
        1:22397:    *found = 12;
        1:22398:    return 12;
        -:22399:  }
        3:22400:  tmp2 = tmp >> 29;
        -:22401:  in += sizeof(uint32_t);
        -:22402:  /* consumed: 4 bytes (total: 32) */
        3:22403:  tmp = *(uint32_t *)in;
        3:22404:  if ((tmp2 | (tmp % (1U << 14)) << (17 - 14)) == value) {
        1:22405:    *found = 13;
        1:22406:    return 13;
        -:22407:  }
        2:22408:  if (((tmp >> 14) & 131071) == value) {
        1:22409:    *found = 14;
        1:22410:    return 14;
        -:22411:  }
        1:22412:  tmp2 = tmp >> 31;
        -:22413:  in += sizeof(uint32_t);
        -:22414:  /* consumed: 4 bytes (total: 36) */
        1:22415:  tmp = *(uint32_t *)in;
        1:22416:  if ((tmp2 | (tmp % (1U << 16)) << (17 - 16)) == value) {
        1:22417:    *found = 15;
        1:22418:    return 15;
        -:22419:  }
        -:22420:  /* remaining: 16 bits */
        -:22421:  return (34);
        -:22422:}
        -:22423:
        -:22424:static uint32_t
       16:22425:linsearch18_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22426:  uint32_t tmp, tmp2;
       16:22427:  value -= base;
        -:22428:  (void)tmp2;
       16:22429:  tmp = *(uint32_t *)in;
        -:22430:  /* consumed: 4 bytes (total: 4) */
       16:22431:  if (((tmp >> 0) & 262143) == value) {
        1:22432:    *found = 0;
        1:22433:    return 0;
        -:22434:  }
       15:22435:  tmp2 = tmp >> 18;
        -:22436:  in += sizeof(uint32_t);
        -:22437:  /* consumed: 4 bytes (total: 8) */
       15:22438:  tmp = *(uint32_t *)in;
       15:22439:  if ((tmp2 | (tmp % (1U << 4)) << (18 - 4)) == value) {
        1:22440:    *found = 1;
        1:22441:    return 1;
        -:22442:  }
       14:22443:  if (((tmp >> 4) & 262143) == value) {
        1:22444:    *found = 2;
        1:22445:    return 2;
        -:22446:  }
       13:22447:  tmp2 = tmp >> 22;
        -:22448:  in += sizeof(uint32_t);
        -:22449:  /* consumed: 4 bytes (total: 12) */
       13:22450:  tmp = *(uint32_t *)in;
       13:22451:  if ((tmp2 | (tmp % (1U << 8)) << (18 - 8)) == value) {
        1:22452:    *found = 3;
        1:22453:    return 3;
        -:22454:  }
       12:22455:  if (((tmp >> 8) & 262143) == value) {
        1:22456:    *found = 4;
        1:22457:    return 4;
        -:22458:  }
       11:22459:  tmp2 = tmp >> 26;
        -:22460:  in += sizeof(uint32_t);
        -:22461:  /* consumed: 4 bytes (total: 16) */
       11:22462:  tmp = *(uint32_t *)in;
       11:22463:  if ((tmp2 | (tmp % (1U << 12)) << (18 - 12)) == value) {
        1:22464:    *found = 5;
        1:22465:    return 5;
        -:22466:  }
       10:22467:  if (((tmp >> 12) & 262143) == value) {
        1:22468:    *found = 6;
        1:22469:    return 6;
        -:22470:  }
        9:22471:  tmp2 = tmp >> 30;
        -:22472:  in += sizeof(uint32_t);
        -:22473:  /* consumed: 4 bytes (total: 20) */
        9:22474:  tmp = *(uint32_t *)in;
        9:22475:  if ((tmp2 | (tmp % (1U << 16)) << (18 - 16)) == value) {
        1:22476:    *found = 7;
        1:22477:    return 7;
        -:22478:  }
        8:22479:  tmp2 = tmp >> 16;
        -:22480:  in += sizeof(uint32_t);
        -:22481:  /* consumed: 4 bytes (total: 24) */
        8:22482:  tmp = *(uint32_t *)in;
        8:22483:  if ((tmp2 | (tmp % (1U << 2)) << (18 - 2)) == value) {
        1:22484:    *found = 8;
        1:22485:    return 8;
        -:22486:  }
        7:22487:  if (((tmp >> 2) & 262143) == value) {
        1:22488:    *found = 9;
        1:22489:    return 9;
        -:22490:  }
        6:22491:  tmp2 = tmp >> 20;
        -:22492:  in += sizeof(uint32_t);
        -:22493:  /* consumed: 4 bytes (total: 28) */
        6:22494:  tmp = *(uint32_t *)in;
        6:22495:  if ((tmp2 | (tmp % (1U << 6)) << (18 - 6)) == value) {
        1:22496:    *found = 10;
        1:22497:    return 10;
        -:22498:  }
        5:22499:  if (((tmp >> 6) & 262143) == value) {
        1:22500:    *found = 11;
        1:22501:    return 11;
        -:22502:  }
        4:22503:  tmp2 = tmp >> 24;
        -:22504:  in += sizeof(uint32_t);
        -:22505:  /* consumed: 4 bytes (total: 32) */
        4:22506:  tmp = *(uint32_t *)in;
        4:22507:  if ((tmp2 | (tmp % (1U << 10)) << (18 - 10)) == value) {
        1:22508:    *found = 12;
        1:22509:    return 12;
        -:22510:  }
        3:22511:  if (((tmp >> 10) & 262143) == value) {
        1:22512:    *found = 13;
        1:22513:    return 13;
        -:22514:  }
        2:22515:  tmp2 = tmp >> 28;
        -:22516:  in += sizeof(uint32_t);
        -:22517:  /* consumed: 4 bytes (total: 36) */
        2:22518:  tmp = *(uint32_t *)in;
        2:22519:  if ((tmp2 | (tmp % (1U << 14)) << (18 - 14)) == value) {
        1:22520:    *found = 14;
        1:22521:    return 14;
        -:22522:  }
        1:22523:  if (((tmp >> 14) & 262143) == value) {
        1:22524:    *found = 15;
        1:22525:    return 15;
        -:22526:  }
        -:22527:  /* remaining: 0 bits */
        -:22528:  return (36);
        -:22529:}
        -:22530:
        -:22531:static uint32_t
       16:22532:linsearch19_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22533:  uint32_t tmp, tmp2;
       16:22534:  value -= base;
        -:22535:  (void)tmp2;
       16:22536:  tmp = *(uint32_t *)in;
        -:22537:  /* consumed: 4 bytes (total: 4) */
       16:22538:  if (((tmp >> 0) & 524287) == value) {
        1:22539:    *found = 0;
        1:22540:    return 0;
        -:22541:  }
       15:22542:  tmp2 = tmp >> 19;
        -:22543:  in += sizeof(uint32_t);
        -:22544:  /* consumed: 4 bytes (total: 8) */
       15:22545:  tmp = *(uint32_t *)in;
       15:22546:  if ((tmp2 | (tmp % (1U << 6)) << (19 - 6)) == value) {
        1:22547:    *found = 1;
        1:22548:    return 1;
        -:22549:  }
       14:22550:  if (((tmp >> 6) & 524287) == value) {
        1:22551:    *found = 2;
        1:22552:    return 2;
        -:22553:  }
       13:22554:  tmp2 = tmp >> 25;
        -:22555:  in += sizeof(uint32_t);
        -:22556:  /* consumed: 4 bytes (total: 12) */
       13:22557:  tmp = *(uint32_t *)in;
       13:22558:  if ((tmp2 | (tmp % (1U << 12)) << (19 - 12)) == value) {
        1:22559:    *found = 3;
        1:22560:    return 3;
        -:22561:  }
       12:22562:  if (((tmp >> 12) & 524287) == value) {
        1:22563:    *found = 4;
        1:22564:    return 4;
        -:22565:  }
       11:22566:  tmp2 = tmp >> 31;
        -:22567:  in += sizeof(uint32_t);
        -:22568:  /* consumed: 4 bytes (total: 16) */
       11:22569:  tmp = *(uint32_t *)in;
       11:22570:  if ((tmp2 | (tmp % (1U << 18)) << (19 - 18)) == value) {
        1:22571:    *found = 5;
        1:22572:    return 5;
        -:22573:  }
       10:22574:  tmp2 = tmp >> 18;
        -:22575:  in += sizeof(uint32_t);
        -:22576:  /* consumed: 4 bytes (total: 20) */
       10:22577:  tmp = *(uint32_t *)in;
       10:22578:  if ((tmp2 | (tmp % (1U << 5)) << (19 - 5)) == value) {
        1:22579:    *found = 6;
        1:22580:    return 6;
        -:22581:  }
        9:22582:  if (((tmp >> 5) & 524287) == value) {
        1:22583:    *found = 7;
        1:22584:    return 7;
        -:22585:  }
        8:22586:  tmp2 = tmp >> 24;
        -:22587:  in += sizeof(uint32_t);
        -:22588:  /* consumed: 4 bytes (total: 24) */
        8:22589:  tmp = *(uint32_t *)in;
        8:22590:  if ((tmp2 | (tmp % (1U << 11)) << (19 - 11)) == value) {
        1:22591:    *found = 8;
        1:22592:    return 8;
        -:22593:  }
        7:22594:  if (((tmp >> 11) & 524287) == value) {
        1:22595:    *found = 9;
        1:22596:    return 9;
        -:22597:  }
        6:22598:  tmp2 = tmp >> 30;
        -:22599:  in += sizeof(uint32_t);
        -:22600:  /* consumed: 4 bytes (total: 28) */
        6:22601:  tmp = *(uint32_t *)in;
        6:22602:  if ((tmp2 | (tmp % (1U << 17)) << (19 - 17)) == value) {
        1:22603:    *found = 10;
        1:22604:    return 10;
        -:22605:  }
        5:22606:  tmp2 = tmp >> 17;
        -:22607:  in += sizeof(uint32_t);
        -:22608:  /* consumed: 4 bytes (total: 32) */
        5:22609:  tmp = *(uint32_t *)in;
        5:22610:  if ((tmp2 | (tmp % (1U << 4)) << (19 - 4)) == value) {
        1:22611:    *found = 11;
        1:22612:    return 11;
        -:22613:  }
        4:22614:  if (((tmp >> 4) & 524287) == value) {
        1:22615:    *found = 12;
        1:22616:    return 12;
        -:22617:  }
        3:22618:  tmp2 = tmp >> 23;
        -:22619:  in += sizeof(uint32_t);
        -:22620:  /* consumed: 4 bytes (total: 36) */
        3:22621:  tmp = *(uint32_t *)in;
        3:22622:  if ((tmp2 | (tmp % (1U << 10)) << (19 - 10)) == value) {
        1:22623:    *found = 13;
        1:22624:    return 13;
        -:22625:  }
        2:22626:  if (((tmp >> 10) & 524287) == value) {
        1:22627:    *found = 14;
        1:22628:    return 14;
        -:22629:  }
        1:22630:  tmp2 = tmp >> 29;
        -:22631:  in += sizeof(uint32_t);
        -:22632:  /* consumed: 4 bytes (total: 40) */
        1:22633:  tmp = *(uint32_t *)in;
        1:22634:  if ((tmp2 | (tmp % (1U << 16)) << (19 - 16)) == value) {
        1:22635:    *found = 15;
        1:22636:    return 15;
        -:22637:  }
        -:22638:  /* remaining: 16 bits */
        -:22639:  return (38);
        -:22640:}
        -:22641:
        -:22642:static uint32_t
       16:22643:linsearch20_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22644:  uint32_t tmp, tmp2;
       16:22645:  value -= base;
        -:22646:  (void)tmp2;
       16:22647:  tmp = *(uint32_t *)in;
        -:22648:  /* consumed: 4 bytes (total: 4) */
       16:22649:  if (((tmp >> 0) & 1048575) == value) {
        1:22650:    *found = 0;
        1:22651:    return 0;
        -:22652:  }
       15:22653:  tmp2 = tmp >> 20;
        -:22654:  in += sizeof(uint32_t);
        -:22655:  /* consumed: 4 bytes (total: 8) */
       15:22656:  tmp = *(uint32_t *)in;
       15:22657:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:22658:    *found = 1;
        1:22659:    return 1;
        -:22660:  }
       14:22661:  if (((tmp >> 8) & 1048575) == value) {
        1:22662:    *found = 2;
        1:22663:    return 2;
        -:22664:  }
       13:22665:  tmp2 = tmp >> 28;
        -:22666:  in += sizeof(uint32_t);
        -:22667:  /* consumed: 4 bytes (total: 12) */
       13:22668:  tmp = *(uint32_t *)in;
       13:22669:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:22670:    *found = 3;
        1:22671:    return 3;
        -:22672:  }
       12:22673:  tmp2 = tmp >> 16;
        -:22674:  in += sizeof(uint32_t);
        -:22675:  /* consumed: 4 bytes (total: 16) */
       12:22676:  tmp = *(uint32_t *)in;
       12:22677:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:22678:    *found = 4;
        1:22679:    return 4;
        -:22680:  }
       11:22681:  if (((tmp >> 4) & 1048575) == value) {
        1:22682:    *found = 5;
        1:22683:    return 5;
        -:22684:  }
       10:22685:  tmp2 = tmp >> 24;
        -:22686:  in += sizeof(uint32_t);
        -:22687:  /* consumed: 4 bytes (total: 20) */
       10:22688:  tmp = *(uint32_t *)in;
       10:22689:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:22690:    *found = 6;
        1:22691:    return 6;
        -:22692:  }
        9:22693:  if (((tmp >> 12) & 1048575) == value) {
        1:22694:    *found = 7;
        1:22695:    return 7;
        -:22696:  }
        -:22697:  in += sizeof(uint32_t);
        8:22698:  tmp = *(uint32_t *)in;
        -:22699:  /* consumed: 4 bytes (total: 24) */
        8:22700:  if (((tmp >> 0) & 1048575) == value) {
        1:22701:    *found = 8;
        1:22702:    return 8;
        -:22703:  }
        7:22704:  tmp2 = tmp >> 20;
        -:22705:  in += sizeof(uint32_t);
        -:22706:  /* consumed: 4 bytes (total: 28) */
        7:22707:  tmp = *(uint32_t *)in;
        7:22708:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:22709:    *found = 9;
        1:22710:    return 9;
        -:22711:  }
        6:22712:  if (((tmp >> 8) & 1048575) == value) {
        1:22713:    *found = 10;
        1:22714:    return 10;
        -:22715:  }
        5:22716:  tmp2 = tmp >> 28;
        -:22717:  in += sizeof(uint32_t);
        -:22718:  /* consumed: 4 bytes (total: 32) */
        5:22719:  tmp = *(uint32_t *)in;
        5:22720:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:22721:    *found = 11;
        1:22722:    return 11;
        -:22723:  }
        4:22724:  tmp2 = tmp >> 16;
        -:22725:  in += sizeof(uint32_t);
        -:22726:  /* consumed: 4 bytes (total: 36) */
        4:22727:  tmp = *(uint32_t *)in;
        4:22728:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:22729:    *found = 12;
        1:22730:    return 12;
        -:22731:  }
        3:22732:  if (((tmp >> 4) & 1048575) == value) {
        1:22733:    *found = 13;
        1:22734:    return 13;
        -:22735:  }
        2:22736:  tmp2 = tmp >> 24;
        -:22737:  in += sizeof(uint32_t);
        -:22738:  /* consumed: 4 bytes (total: 40) */
        2:22739:  tmp = *(uint32_t *)in;
        2:22740:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:22741:    *found = 14;
        1:22742:    return 14;
        -:22743:  }
        1:22744:  if (((tmp >> 12) & 1048575) == value) {
        1:22745:    *found = 15;
        1:22746:    return 15;
        -:22747:  }
        -:22748:  /* remaining: 0 bits */
        -:22749:  return (40);
        -:22750:}
        -:22751:
        -:22752:static uint32_t
       16:22753:linsearch21_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22754:  uint32_t tmp, tmp2;
       16:22755:  value -= base;
        -:22756:  (void)tmp2;
       16:22757:  tmp = *(uint32_t *)in;
        -:22758:  /* consumed: 4 bytes (total: 4) */
       16:22759:  if (((tmp >> 0) & 2097151) == value) {
        1:22760:    *found = 0;
        1:22761:    return 0;
        -:22762:  }
       15:22763:  tmp2 = tmp >> 21;
        -:22764:  in += sizeof(uint32_t);
        -:22765:  /* consumed: 4 bytes (total: 8) */
       15:22766:  tmp = *(uint32_t *)in;
       15:22767:  if ((tmp2 | (tmp % (1U << 10)) << (21 - 10)) == value) {
        1:22768:    *found = 1;
        1:22769:    return 1;
        -:22770:  }
       14:22771:  if (((tmp >> 10) & 2097151) == value) {
        1:22772:    *found = 2;
        1:22773:    return 2;
        -:22774:  }
       13:22775:  tmp2 = tmp >> 31;
        -:22776:  in += sizeof(uint32_t);
        -:22777:  /* consumed: 4 bytes (total: 12) */
       13:22778:  tmp = *(uint32_t *)in;
       13:22779:  if ((tmp2 | (tmp % (1U << 20)) << (21 - 20)) == value) {
        1:22780:    *found = 3;
        1:22781:    return 3;
        -:22782:  }
       12:22783:  tmp2 = tmp >> 20;
        -:22784:  in += sizeof(uint32_t);
        -:22785:  /* consumed: 4 bytes (total: 16) */
       12:22786:  tmp = *(uint32_t *)in;
       12:22787:  if ((tmp2 | (tmp % (1U << 9)) << (21 - 9)) == value) {
        1:22788:    *found = 4;
        1:22789:    return 4;
        -:22790:  }
       11:22791:  if (((tmp >> 9) & 2097151) == value) {
        1:22792:    *found = 5;
        1:22793:    return 5;
        -:22794:  }
       10:22795:  tmp2 = tmp >> 30;
        -:22796:  in += sizeof(uint32_t);
        -:22797:  /* consumed: 4 bytes (total: 20) */
       10:22798:  tmp = *(uint32_t *)in;
       10:22799:  if ((tmp2 | (tmp % (1U << 19)) << (21 - 19)) == value) {
        1:22800:    *found = 6;
        1:22801:    return 6;
        -:22802:  }
        9:22803:  tmp2 = tmp >> 19;
        -:22804:  in += sizeof(uint32_t);
        -:22805:  /* consumed: 4 bytes (total: 24) */
        9:22806:  tmp = *(uint32_t *)in;
        9:22807:  if ((tmp2 | (tmp % (1U << 8)) << (21 - 8)) == value) {
        1:22808:    *found = 7;
        1:22809:    return 7;
        -:22810:  }
        8:22811:  if (((tmp >> 8) & 2097151) == value) {
        1:22812:    *found = 8;
        1:22813:    return 8;
        -:22814:  }
        7:22815:  tmp2 = tmp >> 29;
        -:22816:  in += sizeof(uint32_t);
        -:22817:  /* consumed: 4 bytes (total: 28) */
        7:22818:  tmp = *(uint32_t *)in;
        7:22819:  if ((tmp2 | (tmp % (1U << 18)) << (21 - 18)) == value) {
        1:22820:    *found = 9;
        1:22821:    return 9;
        -:22822:  }
        6:22823:  tmp2 = tmp >> 18;
        -:22824:  in += sizeof(uint32_t);
        -:22825:  /* consumed: 4 bytes (total: 32) */
        6:22826:  tmp = *(uint32_t *)in;
        6:22827:  if ((tmp2 | (tmp % (1U << 7)) << (21 - 7)) == value) {
        1:22828:    *found = 10;
        1:22829:    return 10;
        -:22830:  }
        5:22831:  if (((tmp >> 7) & 2097151) == value) {
        1:22832:    *found = 11;
        1:22833:    return 11;
        -:22834:  }
        4:22835:  tmp2 = tmp >> 28;
        -:22836:  in += sizeof(uint32_t);
        -:22837:  /* consumed: 4 bytes (total: 36) */
        4:22838:  tmp = *(uint32_t *)in;
        4:22839:  if ((tmp2 | (tmp % (1U << 17)) << (21 - 17)) == value) {
        1:22840:    *found = 12;
        1:22841:    return 12;
        -:22842:  }
        3:22843:  tmp2 = tmp >> 17;
        -:22844:  in += sizeof(uint32_t);
        -:22845:  /* consumed: 4 bytes (total: 40) */
        3:22846:  tmp = *(uint32_t *)in;
        3:22847:  if ((tmp2 | (tmp % (1U << 6)) << (21 - 6)) == value) {
        1:22848:    *found = 13;
        1:22849:    return 13;
        -:22850:  }
        2:22851:  if (((tmp >> 6) & 2097151) == value) {
        1:22852:    *found = 14;
        1:22853:    return 14;
        -:22854:  }
        1:22855:  tmp2 = tmp >> 27;
        -:22856:  in += sizeof(uint32_t);
        -:22857:  /* consumed: 4 bytes (total: 44) */
        1:22858:  tmp = *(uint32_t *)in;
        1:22859:  if ((tmp2 | (tmp % (1U << 16)) << (21 - 16)) == value) {
        1:22860:    *found = 15;
        1:22861:    return 15;
        -:22862:  }
        -:22863:  /* remaining: 16 bits */
        -:22864:  return (42);
        -:22865:}
        -:22866:
        -:22867:static uint32_t
       16:22868:linsearch22_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22869:  uint32_t tmp, tmp2;
       16:22870:  value -= base;
        -:22871:  (void)tmp2;
       16:22872:  tmp = *(uint32_t *)in;
        -:22873:  /* consumed: 4 bytes (total: 4) */
       16:22874:  if (((tmp >> 0) & 4194303) == value) {
        1:22875:    *found = 0;
        1:22876:    return 0;
        -:22877:  }
       15:22878:  tmp2 = tmp >> 22;
        -:22879:  in += sizeof(uint32_t);
        -:22880:  /* consumed: 4 bytes (total: 8) */
       15:22881:  tmp = *(uint32_t *)in;
       15:22882:  if ((tmp2 | (tmp % (1U << 12)) << (22 - 12)) == value) {
        1:22883:    *found = 1;
        1:22884:    return 1;
        -:22885:  }
       14:22886:  tmp2 = tmp >> 12;
        -:22887:  in += sizeof(uint32_t);
        -:22888:  /* consumed: 4 bytes (total: 12) */
       14:22889:  tmp = *(uint32_t *)in;
       14:22890:  if ((tmp2 | (tmp % (1U << 2)) << (22 - 2)) == value) {
        1:22891:    *found = 2;
        1:22892:    return 2;
        -:22893:  }
       13:22894:  if (((tmp >> 2) & 4194303) == value) {
        1:22895:    *found = 3;
        1:22896:    return 3;
        -:22897:  }
       12:22898:  tmp2 = tmp >> 24;
        -:22899:  in += sizeof(uint32_t);
        -:22900:  /* consumed: 4 bytes (total: 16) */
       12:22901:  tmp = *(uint32_t *)in;
       12:22902:  if ((tmp2 | (tmp % (1U << 14)) << (22 - 14)) == value) {
        1:22903:    *found = 4;
        1:22904:    return 4;
        -:22905:  }
       11:22906:  tmp2 = tmp >> 14;
        -:22907:  in += sizeof(uint32_t);
        -:22908:  /* consumed: 4 bytes (total: 20) */
       11:22909:  tmp = *(uint32_t *)in;
       11:22910:  if ((tmp2 | (tmp % (1U << 4)) << (22 - 4)) == value) {
        1:22911:    *found = 5;
        1:22912:    return 5;
        -:22913:  }
       10:22914:  if (((tmp >> 4) & 4194303) == value) {
        1:22915:    *found = 6;
        1:22916:    return 6;
        -:22917:  }
        9:22918:  tmp2 = tmp >> 26;
        -:22919:  in += sizeof(uint32_t);
        -:22920:  /* consumed: 4 bytes (total: 24) */
        9:22921:  tmp = *(uint32_t *)in;
        9:22922:  if ((tmp2 | (tmp % (1U << 16)) << (22 - 16)) == value) {
        1:22923:    *found = 7;
        1:22924:    return 7;
        -:22925:  }
        8:22926:  tmp2 = tmp >> 16;
        -:22927:  in += sizeof(uint32_t);
        -:22928:  /* consumed: 4 bytes (total: 28) */
        8:22929:  tmp = *(uint32_t *)in;
        8:22930:  if ((tmp2 | (tmp % (1U << 6)) << (22 - 6)) == value) {
        1:22931:    *found = 8;
        1:22932:    return 8;
        -:22933:  }
        7:22934:  if (((tmp >> 6) & 4194303) == value) {
        1:22935:    *found = 9;
        1:22936:    return 9;
        -:22937:  }
        6:22938:  tmp2 = tmp >> 28;
        -:22939:  in += sizeof(uint32_t);
        -:22940:  /* consumed: 4 bytes (total: 32) */
        6:22941:  tmp = *(uint32_t *)in;
        6:22942:  if ((tmp2 | (tmp % (1U << 18)) << (22 - 18)) == value) {
        1:22943:    *found = 10;
        1:22944:    return 10;
        -:22945:  }
        5:22946:  tmp2 = tmp >> 18;
        -:22947:  in += sizeof(uint32_t);
        -:22948:  /* consumed: 4 bytes (total: 36) */
        5:22949:  tmp = *(uint32_t *)in;
        5:22950:  if ((tmp2 | (tmp % (1U << 8)) << (22 - 8)) == value) {
        1:22951:    *found = 11;
        1:22952:    return 11;
        -:22953:  }
        4:22954:  if (((tmp >> 8) & 4194303) == value) {
        1:22955:    *found = 12;
        1:22956:    return 12;
        -:22957:  }
        3:22958:  tmp2 = tmp >> 30;
        -:22959:  in += sizeof(uint32_t);
        -:22960:  /* consumed: 4 bytes (total: 40) */
        3:22961:  tmp = *(uint32_t *)in;
        3:22962:  if ((tmp2 | (tmp % (1U << 20)) << (22 - 20)) == value) {
        1:22963:    *found = 13;
        1:22964:    return 13;
        -:22965:  }
        2:22966:  tmp2 = tmp >> 20;
        -:22967:  in += sizeof(uint32_t);
        -:22968:  /* consumed: 4 bytes (total: 44) */
        2:22969:  tmp = *(uint32_t *)in;
        2:22970:  if ((tmp2 | (tmp % (1U << 10)) << (22 - 10)) == value) {
        1:22971:    *found = 14;
        1:22972:    return 14;
        -:22973:  }
        1:22974:  if (((tmp >> 10) & 4194303) == value) {
        1:22975:    *found = 15;
        1:22976:    return 15;
        -:22977:  }
        -:22978:  /* remaining: 0 bits */
        -:22979:  return (44);
        -:22980:}
        -:22981:
        -:22982:static uint32_t
       16:22983:linsearch23_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:22984:  uint32_t tmp, tmp2;
       16:22985:  value -= base;
        -:22986:  (void)tmp2;
       16:22987:  tmp = *(uint32_t *)in;
        -:22988:  /* consumed: 4 bytes (total: 4) */
       16:22989:  if (((tmp >> 0) & 8388607) == value) {
        1:22990:    *found = 0;
        1:22991:    return 0;
        -:22992:  }
       15:22993:  tmp2 = tmp >> 23;
        -:22994:  in += sizeof(uint32_t);
        -:22995:  /* consumed: 4 bytes (total: 8) */
       15:22996:  tmp = *(uint32_t *)in;
       15:22997:  if ((tmp2 | (tmp % (1U << 14)) << (23 - 14)) == value) {
        1:22998:    *found = 1;
        1:22999:    return 1;
        -:23000:  }
       14:23001:  tmp2 = tmp >> 14;
        -:23002:  in += sizeof(uint32_t);
        -:23003:  /* consumed: 4 bytes (total: 12) */
       14:23004:  tmp = *(uint32_t *)in;
       14:23005:  if ((tmp2 | (tmp % (1U << 5)) << (23 - 5)) == value) {
        1:23006:    *found = 2;
        1:23007:    return 2;
        -:23008:  }
       13:23009:  if (((tmp >> 5) & 8388607) == value) {
        1:23010:    *found = 3;
        1:23011:    return 3;
        -:23012:  }
       12:23013:  tmp2 = tmp >> 28;
        -:23014:  in += sizeof(uint32_t);
        -:23015:  /* consumed: 4 bytes (total: 16) */
       12:23016:  tmp = *(uint32_t *)in;
       12:23017:  if ((tmp2 | (tmp % (1U << 19)) << (23 - 19)) == value) {
        1:23018:    *found = 4;
        1:23019:    return 4;
        -:23020:  }
       11:23021:  tmp2 = tmp >> 19;
        -:23022:  in += sizeof(uint32_t);
        -:23023:  /* consumed: 4 bytes (total: 20) */
       11:23024:  tmp = *(uint32_t *)in;
       11:23025:  if ((tmp2 | (tmp % (1U << 10)) << (23 - 10)) == value) {
        1:23026:    *found = 5;
        1:23027:    return 5;
        -:23028:  }
       10:23029:  tmp2 = tmp >> 10;
        -:23030:  in += sizeof(uint32_t);
        -:23031:  /* consumed: 4 bytes (total: 24) */
       10:23032:  tmp = *(uint32_t *)in;
       10:23033:  if ((tmp2 | (tmp % (1U << 1)) << (23 - 1)) == value) {
        1:23034:    *found = 6;
        1:23035:    return 6;
        -:23036:  }
        9:23037:  if (((tmp >> 1) & 8388607) == value) {
        1:23038:    *found = 7;
        1:23039:    return 7;
        -:23040:  }
        8:23041:  tmp2 = tmp >> 24;
        -:23042:  in += sizeof(uint32_t);
        -:23043:  /* consumed: 4 bytes (total: 28) */
        8:23044:  tmp = *(uint32_t *)in;
        8:23045:  if ((tmp2 | (tmp % (1U << 15)) << (23 - 15)) == value) {
        1:23046:    *found = 8;
        1:23047:    return 8;
        -:23048:  }
        7:23049:  tmp2 = tmp >> 15;
        -:23050:  in += sizeof(uint32_t);
        -:23051:  /* consumed: 4 bytes (total: 32) */
        7:23052:  tmp = *(uint32_t *)in;
        7:23053:  if ((tmp2 | (tmp % (1U << 6)) << (23 - 6)) == value) {
        1:23054:    *found = 9;
        1:23055:    return 9;
        -:23056:  }
        6:23057:  if (((tmp >> 6) & 8388607) == value) {
        1:23058:    *found = 10;
        1:23059:    return 10;
        -:23060:  }
        5:23061:  tmp2 = tmp >> 29;
        -:23062:  in += sizeof(uint32_t);
        -:23063:  /* consumed: 4 bytes (total: 36) */
        5:23064:  tmp = *(uint32_t *)in;
        5:23065:  if ((tmp2 | (tmp % (1U << 20)) << (23 - 20)) == value) {
        1:23066:    *found = 11;
        1:23067:    return 11;
        -:23068:  }
        4:23069:  tmp2 = tmp >> 20;
        -:23070:  in += sizeof(uint32_t);
        -:23071:  /* consumed: 4 bytes (total: 40) */
        4:23072:  tmp = *(uint32_t *)in;
        4:23073:  if ((tmp2 | (tmp % (1U << 11)) << (23 - 11)) == value) {
        1:23074:    *found = 12;
        1:23075:    return 12;
        -:23076:  }
        3:23077:  tmp2 = tmp >> 11;
        -:23078:  in += sizeof(uint32_t);
        -:23079:  /* consumed: 4 bytes (total: 44) */
        3:23080:  tmp = *(uint32_t *)in;
        3:23081:  if ((tmp2 | (tmp % (1U << 2)) << (23 - 2)) == value) {
        1:23082:    *found = 13;
        1:23083:    return 13;
        -:23084:  }
        2:23085:  if (((tmp >> 2) & 8388607) == value) {
        1:23086:    *found = 14;
        1:23087:    return 14;
        -:23088:  }
        1:23089:  tmp2 = tmp >> 25;
        -:23090:  in += sizeof(uint32_t);
        -:23091:  /* consumed: 4 bytes (total: 48) */
        1:23092:  tmp = *(uint32_t *)in;
        1:23093:  if ((tmp2 | (tmp % (1U << 16)) << (23 - 16)) == value) {
        1:23094:    *found = 15;
        1:23095:    return 15;
        -:23096:  }
        -:23097:  /* remaining: 16 bits */
        -:23098:  return (46);
        -:23099:}
        -:23100:
        -:23101:static uint32_t
       16:23102:linsearch24_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23103:  uint32_t tmp, tmp2;
       16:23104:  value -= base;
        -:23105:  (void)tmp2;
       16:23106:  tmp = *(uint32_t *)in;
        -:23107:  /* consumed: 4 bytes (total: 4) */
       16:23108:  if (((tmp >> 0) & 16777215) == value) {
        1:23109:    *found = 0;
        1:23110:    return 0;
        -:23111:  }
       15:23112:  tmp2 = tmp >> 24;
        -:23113:  in += sizeof(uint32_t);
        -:23114:  /* consumed: 4 bytes (total: 8) */
       15:23115:  tmp = *(uint32_t *)in;
       15:23116:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:23117:    *found = 1;
        1:23118:    return 1;
        -:23119:  }
       14:23120:  tmp2 = tmp >> 16;
        -:23121:  in += sizeof(uint32_t);
        -:23122:  /* consumed: 4 bytes (total: 12) */
       14:23123:  tmp = *(uint32_t *)in;
       14:23124:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:23125:    *found = 2;
        1:23126:    return 2;
        -:23127:  }
       13:23128:  if (((tmp >> 8) & 16777215) == value) {
        1:23129:    *found = 3;
        1:23130:    return 3;
        -:23131:  }
        -:23132:  in += sizeof(uint32_t);
       12:23133:  tmp = *(uint32_t *)in;
        -:23134:  /* consumed: 4 bytes (total: 16) */
       12:23135:  if (((tmp >> 0) & 16777215) == value) {
        1:23136:    *found = 4;
        1:23137:    return 4;
        -:23138:  }
       11:23139:  tmp2 = tmp >> 24;
        -:23140:  in += sizeof(uint32_t);
        -:23141:  /* consumed: 4 bytes (total: 20) */
       11:23142:  tmp = *(uint32_t *)in;
       11:23143:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:23144:    *found = 5;
        1:23145:    return 5;
        -:23146:  }
       10:23147:  tmp2 = tmp >> 16;
        -:23148:  in += sizeof(uint32_t);
        -:23149:  /* consumed: 4 bytes (total: 24) */
       10:23150:  tmp = *(uint32_t *)in;
       10:23151:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:23152:    *found = 6;
        1:23153:    return 6;
        -:23154:  }
        9:23155:  if (((tmp >> 8) & 16777215) == value) {
        1:23156:    *found = 7;
        1:23157:    return 7;
        -:23158:  }
        -:23159:  in += sizeof(uint32_t);
        8:23160:  tmp = *(uint32_t *)in;
        -:23161:  /* consumed: 4 bytes (total: 28) */
        8:23162:  if (((tmp >> 0) & 16777215) == value) {
        1:23163:    *found = 8;
        1:23164:    return 8;
        -:23165:  }
        7:23166:  tmp2 = tmp >> 24;
        -:23167:  in += sizeof(uint32_t);
        -:23168:  /* consumed: 4 bytes (total: 32) */
        7:23169:  tmp = *(uint32_t *)in;
        7:23170:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:23171:    *found = 9;
        1:23172:    return 9;
        -:23173:  }
        6:23174:  tmp2 = tmp >> 16;
        -:23175:  in += sizeof(uint32_t);
        -:23176:  /* consumed: 4 bytes (total: 36) */
        6:23177:  tmp = *(uint32_t *)in;
        6:23178:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:23179:    *found = 10;
        1:23180:    return 10;
        -:23181:  }
        5:23182:  if (((tmp >> 8) & 16777215) == value) {
        1:23183:    *found = 11;
        1:23184:    return 11;
        -:23185:  }
        -:23186:  in += sizeof(uint32_t);
        4:23187:  tmp = *(uint32_t *)in;
        -:23188:  /* consumed: 4 bytes (total: 40) */
        4:23189:  if (((tmp >> 0) & 16777215) == value) {
        1:23190:    *found = 12;
        1:23191:    return 12;
        -:23192:  }
        3:23193:  tmp2 = tmp >> 24;
        -:23194:  in += sizeof(uint32_t);
        -:23195:  /* consumed: 4 bytes (total: 44) */
        3:23196:  tmp = *(uint32_t *)in;
        3:23197:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:23198:    *found = 13;
        1:23199:    return 13;
        -:23200:  }
        2:23201:  tmp2 = tmp >> 16;
        -:23202:  in += sizeof(uint32_t);
        -:23203:  /* consumed: 4 bytes (total: 48) */
        2:23204:  tmp = *(uint32_t *)in;
        2:23205:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:23206:    *found = 14;
        1:23207:    return 14;
        -:23208:  }
        1:23209:  if (((tmp >> 8) & 16777215) == value) {
        1:23210:    *found = 15;
        1:23211:    return 15;
        -:23212:  }
        -:23213:  /* remaining: 0 bits */
        -:23214:  return (48);
        -:23215:}
        -:23216:
        -:23217:static uint32_t
       16:23218:linsearch25_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23219:  uint32_t tmp, tmp2;
       16:23220:  value -= base;
        -:23221:  (void)tmp2;
       16:23222:  tmp = *(uint32_t *)in;
        -:23223:  /* consumed: 4 bytes (total: 4) */
       16:23224:  if (((tmp >> 0) & 33554431) == value) {
        1:23225:    *found = 0;
        1:23226:    return 0;
        -:23227:  }
       15:23228:  tmp2 = tmp >> 25;
        -:23229:  in += sizeof(uint32_t);
        -:23230:  /* consumed: 4 bytes (total: 8) */
       15:23231:  tmp = *(uint32_t *)in;
       15:23232:  if ((tmp2 | (tmp % (1U << 18)) << (25 - 18)) == value) {
        1:23233:    *found = 1;
        1:23234:    return 1;
        -:23235:  }
       14:23236:  tmp2 = tmp >> 18;
        -:23237:  in += sizeof(uint32_t);
        -:23238:  /* consumed: 4 bytes (total: 12) */
       14:23239:  tmp = *(uint32_t *)in;
       14:23240:  if ((tmp2 | (tmp % (1U << 11)) << (25 - 11)) == value) {
        1:23241:    *found = 2;
        1:23242:    return 2;
        -:23243:  }
       13:23244:  tmp2 = tmp >> 11;
        -:23245:  in += sizeof(uint32_t);
        -:23246:  /* consumed: 4 bytes (total: 16) */
       13:23247:  tmp = *(uint32_t *)in;
       13:23248:  if ((tmp2 | (tmp % (1U << 4)) << (25 - 4)) == value) {
        1:23249:    *found = 3;
        1:23250:    return 3;
        -:23251:  }
       12:23252:  if (((tmp >> 4) & 33554431) == value) {
        1:23253:    *found = 4;
        1:23254:    return 4;
        -:23255:  }
       11:23256:  tmp2 = tmp >> 29;
        -:23257:  in += sizeof(uint32_t);
        -:23258:  /* consumed: 4 bytes (total: 20) */
       11:23259:  tmp = *(uint32_t *)in;
       11:23260:  if ((tmp2 | (tmp % (1U << 22)) << (25 - 22)) == value) {
        1:23261:    *found = 5;
        1:23262:    return 5;
        -:23263:  }
       10:23264:  tmp2 = tmp >> 22;
        -:23265:  in += sizeof(uint32_t);
        -:23266:  /* consumed: 4 bytes (total: 24) */
       10:23267:  tmp = *(uint32_t *)in;
       10:23268:  if ((tmp2 | (tmp % (1U << 15)) << (25 - 15)) == value) {
        1:23269:    *found = 6;
        1:23270:    return 6;
        -:23271:  }
        9:23272:  tmp2 = tmp >> 15;
        -:23273:  in += sizeof(uint32_t);
        -:23274:  /* consumed: 4 bytes (total: 28) */
        9:23275:  tmp = *(uint32_t *)in;
        9:23276:  if ((tmp2 | (tmp % (1U << 8)) << (25 - 8)) == value) {
        1:23277:    *found = 7;
        1:23278:    return 7;
        -:23279:  }
        8:23280:  tmp2 = tmp >> 8;
        -:23281:  in += sizeof(uint32_t);
        -:23282:  /* consumed: 4 bytes (total: 32) */
        8:23283:  tmp = *(uint32_t *)in;
        8:23284:  if ((tmp2 | (tmp % (1U << 1)) << (25 - 1)) == value) {
        1:23285:    *found = 8;
        1:23286:    return 8;
        -:23287:  }
        7:23288:  if (((tmp >> 1) & 33554431) == value) {
        1:23289:    *found = 9;
        1:23290:    return 9;
        -:23291:  }
        6:23292:  tmp2 = tmp >> 26;
        -:23293:  in += sizeof(uint32_t);
        -:23294:  /* consumed: 4 bytes (total: 36) */
        6:23295:  tmp = *(uint32_t *)in;
        6:23296:  if ((tmp2 | (tmp % (1U << 19)) << (25 - 19)) == value) {
        1:23297:    *found = 10;
        1:23298:    return 10;
        -:23299:  }
        5:23300:  tmp2 = tmp >> 19;
        -:23301:  in += sizeof(uint32_t);
        -:23302:  /* consumed: 4 bytes (total: 40) */
        5:23303:  tmp = *(uint32_t *)in;
        5:23304:  if ((tmp2 | (tmp % (1U << 12)) << (25 - 12)) == value) {
        1:23305:    *found = 11;
        1:23306:    return 11;
        -:23307:  }
        4:23308:  tmp2 = tmp >> 12;
        -:23309:  in += sizeof(uint32_t);
        -:23310:  /* consumed: 4 bytes (total: 44) */
        4:23311:  tmp = *(uint32_t *)in;
        4:23312:  if ((tmp2 | (tmp % (1U << 5)) << (25 - 5)) == value) {
        1:23313:    *found = 12;
        1:23314:    return 12;
        -:23315:  }
        3:23316:  if (((tmp >> 5) & 33554431) == value) {
        1:23317:    *found = 13;
        1:23318:    return 13;
        -:23319:  }
        2:23320:  tmp2 = tmp >> 30;
        -:23321:  in += sizeof(uint32_t);
        -:23322:  /* consumed: 4 bytes (total: 48) */
        2:23323:  tmp = *(uint32_t *)in;
        2:23324:  if ((tmp2 | (tmp % (1U << 23)) << (25 - 23)) == value) {
        1:23325:    *found = 14;
        1:23326:    return 14;
        -:23327:  }
        1:23328:  tmp2 = tmp >> 23;
        -:23329:  in += sizeof(uint32_t);
        -:23330:  /* consumed: 4 bytes (total: 52) */
        1:23331:  tmp = *(uint32_t *)in;
        1:23332:  if ((tmp2 | (tmp % (1U << 16)) << (25 - 16)) == value) {
        1:23333:    *found = 15;
        1:23334:    return 15;
        -:23335:  }
        -:23336:  /* remaining: 16 bits */
        -:23337:  return (50);
        -:23338:}
        -:23339:
        -:23340:static uint32_t
       16:23341:linsearch26_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23342:  uint32_t tmp, tmp2;
       16:23343:  value -= base;
        -:23344:  (void)tmp2;
       16:23345:  tmp = *(uint32_t *)in;
        -:23346:  /* consumed: 4 bytes (total: 4) */
       16:23347:  if (((tmp >> 0) & 67108863) == value) {
        1:23348:    *found = 0;
        1:23349:    return 0;
        -:23350:  }
       15:23351:  tmp2 = tmp >> 26;
        -:23352:  in += sizeof(uint32_t);
        -:23353:  /* consumed: 4 bytes (total: 8) */
       15:23354:  tmp = *(uint32_t *)in;
       15:23355:  if ((tmp2 | (tmp % (1U << 20)) << (26 - 20)) == value) {
        1:23356:    *found = 1;
        1:23357:    return 1;
        -:23358:  }
       14:23359:  tmp2 = tmp >> 20;
        -:23360:  in += sizeof(uint32_t);
        -:23361:  /* consumed: 4 bytes (total: 12) */
       14:23362:  tmp = *(uint32_t *)in;
       14:23363:  if ((tmp2 | (tmp % (1U << 14)) << (26 - 14)) == value) {
        1:23364:    *found = 2;
        1:23365:    return 2;
        -:23366:  }
       13:23367:  tmp2 = tmp >> 14;
        -:23368:  in += sizeof(uint32_t);
        -:23369:  /* consumed: 4 bytes (total: 16) */
       13:23370:  tmp = *(uint32_t *)in;
       13:23371:  if ((tmp2 | (tmp % (1U << 8)) << (26 - 8)) == value) {
        1:23372:    *found = 3;
        1:23373:    return 3;
        -:23374:  }
       12:23375:  tmp2 = tmp >> 8;
        -:23376:  in += sizeof(uint32_t);
        -:23377:  /* consumed: 4 bytes (total: 20) */
       12:23378:  tmp = *(uint32_t *)in;
       12:23379:  if ((tmp2 | (tmp % (1U << 2)) << (26 - 2)) == value) {
        1:23380:    *found = 4;
        1:23381:    return 4;
        -:23382:  }
       11:23383:  if (((tmp >> 2) & 67108863) == value) {
        1:23384:    *found = 5;
        1:23385:    return 5;
        -:23386:  }
       10:23387:  tmp2 = tmp >> 28;
        -:23388:  in += sizeof(uint32_t);
        -:23389:  /* consumed: 4 bytes (total: 24) */
       10:23390:  tmp = *(uint32_t *)in;
       10:23391:  if ((tmp2 | (tmp % (1U << 22)) << (26 - 22)) == value) {
        1:23392:    *found = 6;
        1:23393:    return 6;
        -:23394:  }
        9:23395:  tmp2 = tmp >> 22;
        -:23396:  in += sizeof(uint32_t);
        -:23397:  /* consumed: 4 bytes (total: 28) */
        9:23398:  tmp = *(uint32_t *)in;
        9:23399:  if ((tmp2 | (tmp % (1U << 16)) << (26 - 16)) == value) {
        1:23400:    *found = 7;
        1:23401:    return 7;
        -:23402:  }
        8:23403:  tmp2 = tmp >> 16;
        -:23404:  in += sizeof(uint32_t);
        -:23405:  /* consumed: 4 bytes (total: 32) */
        8:23406:  tmp = *(uint32_t *)in;
        8:23407:  if ((tmp2 | (tmp % (1U << 10)) << (26 - 10)) == value) {
        1:23408:    *found = 8;
        1:23409:    return 8;
        -:23410:  }
        7:23411:  tmp2 = tmp >> 10;
        -:23412:  in += sizeof(uint32_t);
        -:23413:  /* consumed: 4 bytes (total: 36) */
        7:23414:  tmp = *(uint32_t *)in;
        7:23415:  if ((tmp2 | (tmp % (1U << 4)) << (26 - 4)) == value) {
        1:23416:    *found = 9;
        1:23417:    return 9;
        -:23418:  }
        6:23419:  if (((tmp >> 4) & 67108863) == value) {
        1:23420:    *found = 10;
        1:23421:    return 10;
        -:23422:  }
        5:23423:  tmp2 = tmp >> 30;
        -:23424:  in += sizeof(uint32_t);
        -:23425:  /* consumed: 4 bytes (total: 40) */
        5:23426:  tmp = *(uint32_t *)in;
        5:23427:  if ((tmp2 | (tmp % (1U << 24)) << (26 - 24)) == value) {
        1:23428:    *found = 11;
        1:23429:    return 11;
        -:23430:  }
        4:23431:  tmp2 = tmp >> 24;
        -:23432:  in += sizeof(uint32_t);
        -:23433:  /* consumed: 4 bytes (total: 44) */
        4:23434:  tmp = *(uint32_t *)in;
        4:23435:  if ((tmp2 | (tmp % (1U << 18)) << (26 - 18)) == value) {
        1:23436:    *found = 12;
        1:23437:    return 12;
        -:23438:  }
        3:23439:  tmp2 = tmp >> 18;
        -:23440:  in += sizeof(uint32_t);
        -:23441:  /* consumed: 4 bytes (total: 48) */
        3:23442:  tmp = *(uint32_t *)in;
        3:23443:  if ((tmp2 | (tmp % (1U << 12)) << (26 - 12)) == value) {
        1:23444:    *found = 13;
        1:23445:    return 13;
        -:23446:  }
        2:23447:  tmp2 = tmp >> 12;
        -:23448:  in += sizeof(uint32_t);
        -:23449:  /* consumed: 4 bytes (total: 52) */
        2:23450:  tmp = *(uint32_t *)in;
        2:23451:  if ((tmp2 | (tmp % (1U << 6)) << (26 - 6)) == value) {
        1:23452:    *found = 14;
        1:23453:    return 14;
        -:23454:  }
        1:23455:  if (((tmp >> 6) & 67108863) == value) {
        1:23456:    *found = 15;
        1:23457:    return 15;
        -:23458:  }
        -:23459:  /* remaining: 0 bits */
        -:23460:  return (52);
        -:23461:}
        -:23462:
        -:23463:static uint32_t
       16:23464:linsearch27_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23465:  uint32_t tmp, tmp2;
       16:23466:  value -= base;
        -:23467:  (void)tmp2;
       16:23468:  tmp = *(uint32_t *)in;
        -:23469:  /* consumed: 4 bytes (total: 4) */
       16:23470:  if (((tmp >> 0) & 134217727) == value) {
        1:23471:    *found = 0;
        1:23472:    return 0;
        -:23473:  }
       15:23474:  tmp2 = tmp >> 27;
        -:23475:  in += sizeof(uint32_t);
        -:23476:  /* consumed: 4 bytes (total: 8) */
       15:23477:  tmp = *(uint32_t *)in;
       15:23478:  if ((tmp2 | (tmp % (1U << 22)) << (27 - 22)) == value) {
        1:23479:    *found = 1;
        1:23480:    return 1;
        -:23481:  }
       14:23482:  tmp2 = tmp >> 22;
        -:23483:  in += sizeof(uint32_t);
        -:23484:  /* consumed: 4 bytes (total: 12) */
       14:23485:  tmp = *(uint32_t *)in;
       14:23486:  if ((tmp2 | (tmp % (1U << 17)) << (27 - 17)) == value) {
        1:23487:    *found = 2;
        1:23488:    return 2;
        -:23489:  }
       13:23490:  tmp2 = tmp >> 17;
        -:23491:  in += sizeof(uint32_t);
        -:23492:  /* consumed: 4 bytes (total: 16) */
       13:23493:  tmp = *(uint32_t *)in;
       13:23494:  if ((tmp2 | (tmp % (1U << 12)) << (27 - 12)) == value) {
        1:23495:    *found = 3;
        1:23496:    return 3;
        -:23497:  }
       12:23498:  tmp2 = tmp >> 12;
        -:23499:  in += sizeof(uint32_t);
        -:23500:  /* consumed: 4 bytes (total: 20) */
       12:23501:  tmp = *(uint32_t *)in;
       12:23502:  if ((tmp2 | (tmp % (1U << 7)) << (27 - 7)) == value) {
        1:23503:    *found = 4;
        1:23504:    return 4;
        -:23505:  }
       11:23506:  tmp2 = tmp >> 7;
        -:23507:  in += sizeof(uint32_t);
        -:23508:  /* consumed: 4 bytes (total: 24) */
       11:23509:  tmp = *(uint32_t *)in;
       11:23510:  if ((tmp2 | (tmp % (1U << 2)) << (27 - 2)) == value) {
        1:23511:    *found = 5;
        1:23512:    return 5;
        -:23513:  }
       10:23514:  if (((tmp >> 2) & 134217727) == value) {
        1:23515:    *found = 6;
        1:23516:    return 6;
        -:23517:  }
        9:23518:  tmp2 = tmp >> 29;
        -:23519:  in += sizeof(uint32_t);
        -:23520:  /* consumed: 4 bytes (total: 28) */
        9:23521:  tmp = *(uint32_t *)in;
        9:23522:  if ((tmp2 | (tmp % (1U << 24)) << (27 - 24)) == value) {
        1:23523:    *found = 7;
        1:23524:    return 7;
        -:23525:  }
        8:23526:  tmp2 = tmp >> 24;
        -:23527:  in += sizeof(uint32_t);
        -:23528:  /* consumed: 4 bytes (total: 32) */
        8:23529:  tmp = *(uint32_t *)in;
        8:23530:  if ((tmp2 | (tmp % (1U << 19)) << (27 - 19)) == value) {
        1:23531:    *found = 8;
        1:23532:    return 8;
        -:23533:  }
        7:23534:  tmp2 = tmp >> 19;
        -:23535:  in += sizeof(uint32_t);
        -:23536:  /* consumed: 4 bytes (total: 36) */
        7:23537:  tmp = *(uint32_t *)in;
        7:23538:  if ((tmp2 | (tmp % (1U << 14)) << (27 - 14)) == value) {
        1:23539:    *found = 9;
        1:23540:    return 9;
        -:23541:  }
        6:23542:  tmp2 = tmp >> 14;
        -:23543:  in += sizeof(uint32_t);
        -:23544:  /* consumed: 4 bytes (total: 40) */
        6:23545:  tmp = *(uint32_t *)in;
        6:23546:  if ((tmp2 | (tmp % (1U << 9)) << (27 - 9)) == value) {
        1:23547:    *found = 10;
        1:23548:    return 10;
        -:23549:  }
        5:23550:  tmp2 = tmp >> 9;
        -:23551:  in += sizeof(uint32_t);
        -:23552:  /* consumed: 4 bytes (total: 44) */
        5:23553:  tmp = *(uint32_t *)in;
        5:23554:  if ((tmp2 | (tmp % (1U << 4)) << (27 - 4)) == value) {
        1:23555:    *found = 11;
        1:23556:    return 11;
        -:23557:  }
        4:23558:  if (((tmp >> 4) & 134217727) == value) {
        1:23559:    *found = 12;
        1:23560:    return 12;
        -:23561:  }
        3:23562:  tmp2 = tmp >> 31;
        -:23563:  in += sizeof(uint32_t);
        -:23564:  /* consumed: 4 bytes (total: 48) */
        3:23565:  tmp = *(uint32_t *)in;
        3:23566:  if ((tmp2 | (tmp % (1U << 26)) << (27 - 26)) == value) {
        1:23567:    *found = 13;
        1:23568:    return 13;
        -:23569:  }
        2:23570:  tmp2 = tmp >> 26;
        -:23571:  in += sizeof(uint32_t);
        -:23572:  /* consumed: 4 bytes (total: 52) */
        2:23573:  tmp = *(uint32_t *)in;
        2:23574:  if ((tmp2 | (tmp % (1U << 21)) << (27 - 21)) == value) {
        1:23575:    *found = 14;
        1:23576:    return 14;
        -:23577:  }
        1:23578:  tmp2 = tmp >> 21;
        -:23579:  in += sizeof(uint32_t);
        -:23580:  /* consumed: 4 bytes (total: 56) */
        1:23581:  tmp = *(uint32_t *)in;
        1:23582:  if ((tmp2 | (tmp % (1U << 16)) << (27 - 16)) == value) {
        1:23583:    *found = 15;
        1:23584:    return 15;
        -:23585:  }
        -:23586:  /* remaining: 16 bits */
        -:23587:  return (54);
        -:23588:}
        -:23589:
        -:23590:static uint32_t
       16:23591:linsearch28_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23592:  uint32_t tmp, tmp2;
       16:23593:  value -= base;
        -:23594:  (void)tmp2;
       16:23595:  tmp = *(uint32_t *)in;
        -:23596:  /* consumed: 4 bytes (total: 4) */
       16:23597:  if (((tmp >> 0) & 268435455) == value) {
        1:23598:    *found = 0;
        1:23599:    return 0;
        -:23600:  }
       15:23601:  tmp2 = tmp >> 28;
        -:23602:  in += sizeof(uint32_t);
        -:23603:  /* consumed: 4 bytes (total: 8) */
       15:23604:  tmp = *(uint32_t *)in;
       15:23605:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:23606:    *found = 1;
        1:23607:    return 1;
        -:23608:  }
       14:23609:  tmp2 = tmp >> 24;
        -:23610:  in += sizeof(uint32_t);
        -:23611:  /* consumed: 4 bytes (total: 12) */
       14:23612:  tmp = *(uint32_t *)in;
       14:23613:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:23614:    *found = 2;
        1:23615:    return 2;
        -:23616:  }
       13:23617:  tmp2 = tmp >> 20;
        -:23618:  in += sizeof(uint32_t);
        -:23619:  /* consumed: 4 bytes (total: 16) */
       13:23620:  tmp = *(uint32_t *)in;
       13:23621:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:23622:    *found = 3;
        1:23623:    return 3;
        -:23624:  }
       12:23625:  tmp2 = tmp >> 16;
        -:23626:  in += sizeof(uint32_t);
        -:23627:  /* consumed: 4 bytes (total: 20) */
       12:23628:  tmp = *(uint32_t *)in;
       12:23629:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:23630:    *found = 4;
        1:23631:    return 4;
        -:23632:  }
       11:23633:  tmp2 = tmp >> 12;
        -:23634:  in += sizeof(uint32_t);
        -:23635:  /* consumed: 4 bytes (total: 24) */
       11:23636:  tmp = *(uint32_t *)in;
       11:23637:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:23638:    *found = 5;
        1:23639:    return 5;
        -:23640:  }
       10:23641:  tmp2 = tmp >> 8;
        -:23642:  in += sizeof(uint32_t);
        -:23643:  /* consumed: 4 bytes (total: 28) */
       10:23644:  tmp = *(uint32_t *)in;
       10:23645:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:23646:    *found = 6;
        1:23647:    return 6;
        -:23648:  }
        9:23649:  if (((tmp >> 4) & 268435455) == value) {
        1:23650:    *found = 7;
        1:23651:    return 7;
        -:23652:  }
        -:23653:  in += sizeof(uint32_t);
        8:23654:  tmp = *(uint32_t *)in;
        -:23655:  /* consumed: 4 bytes (total: 32) */
        8:23656:  if (((tmp >> 0) & 268435455) == value) {
        1:23657:    *found = 8;
        1:23658:    return 8;
        -:23659:  }
        7:23660:  tmp2 = tmp >> 28;
        -:23661:  in += sizeof(uint32_t);
        -:23662:  /* consumed: 4 bytes (total: 36) */
        7:23663:  tmp = *(uint32_t *)in;
        7:23664:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:23665:    *found = 9;
        1:23666:    return 9;
        -:23667:  }
        6:23668:  tmp2 = tmp >> 24;
        -:23669:  in += sizeof(uint32_t);
        -:23670:  /* consumed: 4 bytes (total: 40) */
        6:23671:  tmp = *(uint32_t *)in;
        6:23672:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:23673:    *found = 10;
        1:23674:    return 10;
        -:23675:  }
        5:23676:  tmp2 = tmp >> 20;
        -:23677:  in += sizeof(uint32_t);
        -:23678:  /* consumed: 4 bytes (total: 44) */
        5:23679:  tmp = *(uint32_t *)in;
        5:23680:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:23681:    *found = 11;
        1:23682:    return 11;
        -:23683:  }
        4:23684:  tmp2 = tmp >> 16;
        -:23685:  in += sizeof(uint32_t);
        -:23686:  /* consumed: 4 bytes (total: 48) */
        4:23687:  tmp = *(uint32_t *)in;
        4:23688:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:23689:    *found = 12;
        1:23690:    return 12;
        -:23691:  }
        3:23692:  tmp2 = tmp >> 12;
        -:23693:  in += sizeof(uint32_t);
        -:23694:  /* consumed: 4 bytes (total: 52) */
        3:23695:  tmp = *(uint32_t *)in;
        3:23696:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:23697:    *found = 13;
        1:23698:    return 13;
        -:23699:  }
        2:23700:  tmp2 = tmp >> 8;
        -:23701:  in += sizeof(uint32_t);
        -:23702:  /* consumed: 4 bytes (total: 56) */
        2:23703:  tmp = *(uint32_t *)in;
        2:23704:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:23705:    *found = 14;
        1:23706:    return 14;
        -:23707:  }
        1:23708:  if (((tmp >> 4) & 268435455) == value) {
        1:23709:    *found = 15;
        1:23710:    return 15;
        -:23711:  }
        -:23712:  /* remaining: 0 bits */
        -:23713:  return (56);
        -:23714:}
        -:23715:
        -:23716:static uint32_t
       16:23717:linsearch29_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23718:  uint32_t tmp, tmp2;
       16:23719:  value -= base;
        -:23720:  (void)tmp2;
       16:23721:  tmp = *(uint32_t *)in;
        -:23722:  /* consumed: 4 bytes (total: 4) */
       16:23723:  if (((tmp >> 0) & 536870911) == value) {
        1:23724:    *found = 0;
        1:23725:    return 0;
        -:23726:  }
       15:23727:  tmp2 = tmp >> 29;
        -:23728:  in += sizeof(uint32_t);
        -:23729:  /* consumed: 4 bytes (total: 8) */
       15:23730:  tmp = *(uint32_t *)in;
       15:23731:  if ((tmp2 | (tmp % (1U << 26)) << (29 - 26)) == value) {
        1:23732:    *found = 1;
        1:23733:    return 1;
        -:23734:  }
       14:23735:  tmp2 = tmp >> 26;
        -:23736:  in += sizeof(uint32_t);
        -:23737:  /* consumed: 4 bytes (total: 12) */
       14:23738:  tmp = *(uint32_t *)in;
       14:23739:  if ((tmp2 | (tmp % (1U << 23)) << (29 - 23)) == value) {
        1:23740:    *found = 2;
        1:23741:    return 2;
        -:23742:  }
       13:23743:  tmp2 = tmp >> 23;
        -:23744:  in += sizeof(uint32_t);
        -:23745:  /* consumed: 4 bytes (total: 16) */
       13:23746:  tmp = *(uint32_t *)in;
       13:23747:  if ((tmp2 | (tmp % (1U << 20)) << (29 - 20)) == value) {
        1:23748:    *found = 3;
        1:23749:    return 3;
        -:23750:  }
       12:23751:  tmp2 = tmp >> 20;
        -:23752:  in += sizeof(uint32_t);
        -:23753:  /* consumed: 4 bytes (total: 20) */
       12:23754:  tmp = *(uint32_t *)in;
       12:23755:  if ((tmp2 | (tmp % (1U << 17)) << (29 - 17)) == value) {
        1:23756:    *found = 4;
        1:23757:    return 4;
        -:23758:  }
       11:23759:  tmp2 = tmp >> 17;
        -:23760:  in += sizeof(uint32_t);
        -:23761:  /* consumed: 4 bytes (total: 24) */
       11:23762:  tmp = *(uint32_t *)in;
       11:23763:  if ((tmp2 | (tmp % (1U << 14)) << (29 - 14)) == value) {
        1:23764:    *found = 5;
        1:23765:    return 5;
        -:23766:  }
       10:23767:  tmp2 = tmp >> 14;
        -:23768:  in += sizeof(uint32_t);
        -:23769:  /* consumed: 4 bytes (total: 28) */
       10:23770:  tmp = *(uint32_t *)in;
       10:23771:  if ((tmp2 | (tmp % (1U << 11)) << (29 - 11)) == value) {
        1:23772:    *found = 6;
        1:23773:    return 6;
        -:23774:  }
        9:23775:  tmp2 = tmp >> 11;
        -:23776:  in += sizeof(uint32_t);
        -:23777:  /* consumed: 4 bytes (total: 32) */
        9:23778:  tmp = *(uint32_t *)in;
        9:23779:  if ((tmp2 | (tmp % (1U << 8)) << (29 - 8)) == value) {
        1:23780:    *found = 7;
        1:23781:    return 7;
        -:23782:  }
        8:23783:  tmp2 = tmp >> 8;
        -:23784:  in += sizeof(uint32_t);
        -:23785:  /* consumed: 4 bytes (total: 36) */
        8:23786:  tmp = *(uint32_t *)in;
        8:23787:  if ((tmp2 | (tmp % (1U << 5)) << (29 - 5)) == value) {
        1:23788:    *found = 8;
        1:23789:    return 8;
        -:23790:  }
        7:23791:  tmp2 = tmp >> 5;
        -:23792:  in += sizeof(uint32_t);
        -:23793:  /* consumed: 4 bytes (total: 40) */
        7:23794:  tmp = *(uint32_t *)in;
        7:23795:  if ((tmp2 | (tmp % (1U << 2)) << (29 - 2)) == value) {
        1:23796:    *found = 9;
        1:23797:    return 9;
        -:23798:  }
        6:23799:  if (((tmp >> 2) & 536870911) == value) {
        1:23800:    *found = 10;
        1:23801:    return 10;
        -:23802:  }
        5:23803:  tmp2 = tmp >> 31;
        -:23804:  in += sizeof(uint32_t);
        -:23805:  /* consumed: 4 bytes (total: 44) */
        5:23806:  tmp = *(uint32_t *)in;
        5:23807:  if ((tmp2 | (tmp % (1U << 28)) << (29 - 28)) == value) {
        1:23808:    *found = 11;
        1:23809:    return 11;
        -:23810:  }
        4:23811:  tmp2 = tmp >> 28;
        -:23812:  in += sizeof(uint32_t);
        -:23813:  /* consumed: 4 bytes (total: 48) */
        4:23814:  tmp = *(uint32_t *)in;
        4:23815:  if ((tmp2 | (tmp % (1U << 25)) << (29 - 25)) == value) {
        1:23816:    *found = 12;
        1:23817:    return 12;
        -:23818:  }
        3:23819:  tmp2 = tmp >> 25;
        -:23820:  in += sizeof(uint32_t);
        -:23821:  /* consumed: 4 bytes (total: 52) */
        3:23822:  tmp = *(uint32_t *)in;
        3:23823:  if ((tmp2 | (tmp % (1U << 22)) << (29 - 22)) == value) {
        1:23824:    *found = 13;
        1:23825:    return 13;
        -:23826:  }
        2:23827:  tmp2 = tmp >> 22;
        -:23828:  in += sizeof(uint32_t);
        -:23829:  /* consumed: 4 bytes (total: 56) */
        2:23830:  tmp = *(uint32_t *)in;
        2:23831:  if ((tmp2 | (tmp % (1U << 19)) << (29 - 19)) == value) {
        1:23832:    *found = 14;
        1:23833:    return 14;
        -:23834:  }
        1:23835:  tmp2 = tmp >> 19;
        -:23836:  in += sizeof(uint32_t);
        -:23837:  /* consumed: 4 bytes (total: 60) */
        1:23838:  tmp = *(uint32_t *)in;
        1:23839:  if ((tmp2 | (tmp % (1U << 16)) << (29 - 16)) == value) {
        1:23840:    *found = 15;
        1:23841:    return 15;
        -:23842:  }
        -:23843:  /* remaining: 16 bits */
        -:23844:  return (58);
        -:23845:}
        -:23846:
        -:23847:static uint32_t
       16:23848:linsearch30_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23849:  uint32_t tmp, tmp2;
       16:23850:  value -= base;
        -:23851:  (void)tmp2;
       16:23852:  tmp = *(uint32_t *)in;
        -:23853:  /* consumed: 4 bytes (total: 4) */
       16:23854:  if (((tmp >> 0) & 1073741823) == value) {
        1:23855:    *found = 0;
        1:23856:    return 0;
        -:23857:  }
       15:23858:  tmp2 = tmp >> 30;
        -:23859:  in += sizeof(uint32_t);
        -:23860:  /* consumed: 4 bytes (total: 8) */
       15:23861:  tmp = *(uint32_t *)in;
       15:23862:  if ((tmp2 | (tmp % (1U << 28)) << (30 - 28)) == value) {
        1:23863:    *found = 1;
        1:23864:    return 1;
        -:23865:  }
       14:23866:  tmp2 = tmp >> 28;
        -:23867:  in += sizeof(uint32_t);
        -:23868:  /* consumed: 4 bytes (total: 12) */
       14:23869:  tmp = *(uint32_t *)in;
       14:23870:  if ((tmp2 | (tmp % (1U << 26)) << (30 - 26)) == value) {
        1:23871:    *found = 2;
        1:23872:    return 2;
        -:23873:  }
       13:23874:  tmp2 = tmp >> 26;
        -:23875:  in += sizeof(uint32_t);
        -:23876:  /* consumed: 4 bytes (total: 16) */
       13:23877:  tmp = *(uint32_t *)in;
       13:23878:  if ((tmp2 | (tmp % (1U << 24)) << (30 - 24)) == value) {
        1:23879:    *found = 3;
        1:23880:    return 3;
        -:23881:  }
       12:23882:  tmp2 = tmp >> 24;
        -:23883:  in += sizeof(uint32_t);
        -:23884:  /* consumed: 4 bytes (total: 20) */
       12:23885:  tmp = *(uint32_t *)in;
       12:23886:  if ((tmp2 | (tmp % (1U << 22)) << (30 - 22)) == value) {
        1:23887:    *found = 4;
        1:23888:    return 4;
        -:23889:  }
       11:23890:  tmp2 = tmp >> 22;
        -:23891:  in += sizeof(uint32_t);
        -:23892:  /* consumed: 4 bytes (total: 24) */
       11:23893:  tmp = *(uint32_t *)in;
       11:23894:  if ((tmp2 | (tmp % (1U << 20)) << (30 - 20)) == value) {
        1:23895:    *found = 5;
        1:23896:    return 5;
        -:23897:  }
       10:23898:  tmp2 = tmp >> 20;
        -:23899:  in += sizeof(uint32_t);
        -:23900:  /* consumed: 4 bytes (total: 28) */
       10:23901:  tmp = *(uint32_t *)in;
       10:23902:  if ((tmp2 | (tmp % (1U << 18)) << (30 - 18)) == value) {
        1:23903:    *found = 6;
        1:23904:    return 6;
        -:23905:  }
        9:23906:  tmp2 = tmp >> 18;
        -:23907:  in += sizeof(uint32_t);
        -:23908:  /* consumed: 4 bytes (total: 32) */
        9:23909:  tmp = *(uint32_t *)in;
        9:23910:  if ((tmp2 | (tmp % (1U << 16)) << (30 - 16)) == value) {
        1:23911:    *found = 7;
        1:23912:    return 7;
        -:23913:  }
        8:23914:  tmp2 = tmp >> 16;
        -:23915:  in += sizeof(uint32_t);
        -:23916:  /* consumed: 4 bytes (total: 36) */
        8:23917:  tmp = *(uint32_t *)in;
        8:23918:  if ((tmp2 | (tmp % (1U << 14)) << (30 - 14)) == value) {
        1:23919:    *found = 8;
        1:23920:    return 8;
        -:23921:  }
        7:23922:  tmp2 = tmp >> 14;
        -:23923:  in += sizeof(uint32_t);
        -:23924:  /* consumed: 4 bytes (total: 40) */
        7:23925:  tmp = *(uint32_t *)in;
        7:23926:  if ((tmp2 | (tmp % (1U << 12)) << (30 - 12)) == value) {
        1:23927:    *found = 9;
        1:23928:    return 9;
        -:23929:  }
        6:23930:  tmp2 = tmp >> 12;
        -:23931:  in += sizeof(uint32_t);
        -:23932:  /* consumed: 4 bytes (total: 44) */
        6:23933:  tmp = *(uint32_t *)in;
        6:23934:  if ((tmp2 | (tmp % (1U << 10)) << (30 - 10)) == value) {
        1:23935:    *found = 10;
        1:23936:    return 10;
        -:23937:  }
        5:23938:  tmp2 = tmp >> 10;
        -:23939:  in += sizeof(uint32_t);
        -:23940:  /* consumed: 4 bytes (total: 48) */
        5:23941:  tmp = *(uint32_t *)in;
        5:23942:  if ((tmp2 | (tmp % (1U << 8)) << (30 - 8)) == value) {
        1:23943:    *found = 11;
        1:23944:    return 11;
        -:23945:  }
        4:23946:  tmp2 = tmp >> 8;
        -:23947:  in += sizeof(uint32_t);
        -:23948:  /* consumed: 4 bytes (total: 52) */
        4:23949:  tmp = *(uint32_t *)in;
        4:23950:  if ((tmp2 | (tmp % (1U << 6)) << (30 - 6)) == value) {
        1:23951:    *found = 12;
        1:23952:    return 12;
        -:23953:  }
        3:23954:  tmp2 = tmp >> 6;
        -:23955:  in += sizeof(uint32_t);
        -:23956:  /* consumed: 4 bytes (total: 56) */
        3:23957:  tmp = *(uint32_t *)in;
        3:23958:  if ((tmp2 | (tmp % (1U << 4)) << (30 - 4)) == value) {
        1:23959:    *found = 13;
        1:23960:    return 13;
        -:23961:  }
        2:23962:  tmp2 = tmp >> 4;
        -:23963:  in += sizeof(uint32_t);
        -:23964:  /* consumed: 4 bytes (total: 60) */
        2:23965:  tmp = *(uint32_t *)in;
        2:23966:  if ((tmp2 | (tmp % (1U << 2)) << (30 - 2)) == value) {
        1:23967:    *found = 14;
        1:23968:    return 14;
        -:23969:  }
        1:23970:  if (((tmp >> 2) & 1073741823) == value) {
        1:23971:    *found = 15;
        1:23972:    return 15;
        -:23973:  }
        -:23974:  /* remaining: 0 bits */
        -:23975:  return (60);
        -:23976:}
        -:23977:
        -:23978:static uint32_t
       16:23979:linsearch31_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:23980:  uint32_t tmp, tmp2;
       16:23981:  value -= base;
        -:23982:  (void)tmp2;
       16:23983:  tmp = *(uint32_t *)in;
        -:23984:  /* consumed: 4 bytes (total: 4) */
       16:23985:  if (((tmp >> 0) & 2147483647) == value) {
        1:23986:    *found = 0;
        1:23987:    return 0;
        -:23988:  }
       15:23989:  tmp2 = tmp >> 31;
        -:23990:  in += sizeof(uint32_t);
        -:23991:  /* consumed: 4 bytes (total: 8) */
       15:23992:  tmp = *(uint32_t *)in;
       15:23993:  if ((tmp2 | (tmp % (1U << 30)) << (31 - 30)) == value) {
        1:23994:    *found = 1;
        1:23995:    return 1;
        -:23996:  }
       14:23997:  tmp2 = tmp >> 30;
        -:23998:  in += sizeof(uint32_t);
        -:23999:  /* consumed: 4 bytes (total: 12) */
       14:24000:  tmp = *(uint32_t *)in;
       14:24001:  if ((tmp2 | (tmp % (1U << 29)) << (31 - 29)) == value) {
        1:24002:    *found = 2;
        1:24003:    return 2;
        -:24004:  }
       13:24005:  tmp2 = tmp >> 29;
        -:24006:  in += sizeof(uint32_t);
        -:24007:  /* consumed: 4 bytes (total: 16) */
       13:24008:  tmp = *(uint32_t *)in;
       13:24009:  if ((tmp2 | (tmp % (1U << 28)) << (31 - 28)) == value) {
        1:24010:    *found = 3;
        1:24011:    return 3;
        -:24012:  }
       12:24013:  tmp2 = tmp >> 28;
        -:24014:  in += sizeof(uint32_t);
        -:24015:  /* consumed: 4 bytes (total: 20) */
       12:24016:  tmp = *(uint32_t *)in;
       12:24017:  if ((tmp2 | (tmp % (1U << 27)) << (31 - 27)) == value) {
        1:24018:    *found = 4;
        1:24019:    return 4;
        -:24020:  }
       11:24021:  tmp2 = tmp >> 27;
        -:24022:  in += sizeof(uint32_t);
        -:24023:  /* consumed: 4 bytes (total: 24) */
       11:24024:  tmp = *(uint32_t *)in;
       11:24025:  if ((tmp2 | (tmp % (1U << 26)) << (31 - 26)) == value) {
        1:24026:    *found = 5;
        1:24027:    return 5;
        -:24028:  }
       10:24029:  tmp2 = tmp >> 26;
        -:24030:  in += sizeof(uint32_t);
        -:24031:  /* consumed: 4 bytes (total: 28) */
       10:24032:  tmp = *(uint32_t *)in;
       10:24033:  if ((tmp2 | (tmp % (1U << 25)) << (31 - 25)) == value) {
        1:24034:    *found = 6;
        1:24035:    return 6;
        -:24036:  }
        9:24037:  tmp2 = tmp >> 25;
        -:24038:  in += sizeof(uint32_t);
        -:24039:  /* consumed: 4 bytes (total: 32) */
        9:24040:  tmp = *(uint32_t *)in;
        9:24041:  if ((tmp2 | (tmp % (1U << 24)) << (31 - 24)) == value) {
        1:24042:    *found = 7;
        1:24043:    return 7;
        -:24044:  }
        8:24045:  tmp2 = tmp >> 24;
        -:24046:  in += sizeof(uint32_t);
        -:24047:  /* consumed: 4 bytes (total: 36) */
        8:24048:  tmp = *(uint32_t *)in;
        8:24049:  if ((tmp2 | (tmp % (1U << 23)) << (31 - 23)) == value) {
        1:24050:    *found = 8;
        1:24051:    return 8;
        -:24052:  }
        7:24053:  tmp2 = tmp >> 23;
        -:24054:  in += sizeof(uint32_t);
        -:24055:  /* consumed: 4 bytes (total: 40) */
        7:24056:  tmp = *(uint32_t *)in;
        7:24057:  if ((tmp2 | (tmp % (1U << 22)) << (31 - 22)) == value) {
        1:24058:    *found = 9;
        1:24059:    return 9;
        -:24060:  }
        6:24061:  tmp2 = tmp >> 22;
        -:24062:  in += sizeof(uint32_t);
        -:24063:  /* consumed: 4 bytes (total: 44) */
        6:24064:  tmp = *(uint32_t *)in;
        6:24065:  if ((tmp2 | (tmp % (1U << 21)) << (31 - 21)) == value) {
        1:24066:    *found = 10;
        1:24067:    return 10;
        -:24068:  }
        5:24069:  tmp2 = tmp >> 21;
        -:24070:  in += sizeof(uint32_t);
        -:24071:  /* consumed: 4 bytes (total: 48) */
        5:24072:  tmp = *(uint32_t *)in;
        5:24073:  if ((tmp2 | (tmp % (1U << 20)) << (31 - 20)) == value) {
        1:24074:    *found = 11;
        1:24075:    return 11;
        -:24076:  }
        4:24077:  tmp2 = tmp >> 20;
        -:24078:  in += sizeof(uint32_t);
        -:24079:  /* consumed: 4 bytes (total: 52) */
        4:24080:  tmp = *(uint32_t *)in;
        4:24081:  if ((tmp2 | (tmp % (1U << 19)) << (31 - 19)) == value) {
        1:24082:    *found = 12;
        1:24083:    return 12;
        -:24084:  }
        3:24085:  tmp2 = tmp >> 19;
        -:24086:  in += sizeof(uint32_t);
        -:24087:  /* consumed: 4 bytes (total: 56) */
        3:24088:  tmp = *(uint32_t *)in;
        3:24089:  if ((tmp2 | (tmp % (1U << 18)) << (31 - 18)) == value) {
        1:24090:    *found = 13;
        1:24091:    return 13;
        -:24092:  }
        2:24093:  tmp2 = tmp >> 18;
        -:24094:  in += sizeof(uint32_t);
        -:24095:  /* consumed: 4 bytes (total: 60) */
        2:24096:  tmp = *(uint32_t *)in;
        2:24097:  if ((tmp2 | (tmp % (1U << 17)) << (31 - 17)) == value) {
        1:24098:    *found = 14;
        1:24099:    return 14;
        -:24100:  }
        1:24101:  tmp2 = tmp >> 17;
        -:24102:  in += sizeof(uint32_t);
        -:24103:  /* consumed: 4 bytes (total: 64) */
        1:24104:  tmp = *(uint32_t *)in;
        1:24105:  if ((tmp2 | (tmp % (1U << 16)) << (31 - 16)) == value) {
        1:24106:    *found = 15;
        1:24107:    return 15;
        -:24108:  }
        -:24109:  /* remaining: 16 bits */
        -:24110:  return (62);
        -:24111:}
        -:24112:
        -:24113:static uint32_t
       16:24114:linsearch32_16(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24115:  uint32_t i;
        -:24116:  uint32_t *in32 = (uint32_t *)in;
       16:24117:  value -= base;
      136:24118:  for (i = 0; i < 16; i++) {
      136:24119:    if (in32[i] == value) {
       16:24120:      *found = i;
       16:24121:      return 0;
        -:24122:    }
        -:24123:  }
        -:24124:  return 16 * sizeof(uint32_t);
        -:24125:}
        -:24126:
        -:24127:for_linsearchfunc_t for_linsearch16[33] = {
        -:24128:                       linsearch0_16,
        -:24129:                       linsearch1_16,
        -:24130:                       linsearch2_16,
        -:24131:                       linsearch3_16,
        -:24132:                       linsearch4_16,
        -:24133:                       linsearch5_16,
        -:24134:                       linsearch6_16,
        -:24135:                       linsearch7_16,
        -:24136:                       linsearch8_16,
        -:24137:                       linsearch9_16,
        -:24138:                       linsearch10_16,
        -:24139:                       linsearch11_16,
        -:24140:                       linsearch12_16,
        -:24141:                       linsearch13_16,
        -:24142:                       linsearch14_16,
        -:24143:                       linsearch15_16,
        -:24144:                       linsearch16_16,
        -:24145:                       linsearch17_16,
        -:24146:                       linsearch18_16,
        -:24147:                       linsearch19_16,
        -:24148:                       linsearch20_16,
        -:24149:                       linsearch21_16,
        -:24150:                       linsearch22_16,
        -:24151:                       linsearch23_16,
        -:24152:                       linsearch24_16,
        -:24153:                       linsearch25_16,
        -:24154:                       linsearch26_16,
        -:24155:                       linsearch27_16,
        -:24156:                       linsearch28_16,
        -:24157:                       linsearch29_16,
        -:24158:                       linsearch30_16,
        -:24159:                       linsearch31_16,
        -:24160:                       linsearch32_16
        -:24161:};
        -:24162:
        -:24163:static uint32_t
        8:24164:linsearch1_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24165:  uint32_t tmp, tmp2;
        8:24166:  value -= base;
        -:24167:  (void)tmp2;
        8:24168:  tmp = *(uint32_t *)in;
        -:24169:  /* consumed: 4 bytes (total: 4) */
        8:24170:  if (((tmp >> 0) & 1) == value) {
        8:24171:    *found = 0;
        8:24172:    return 0;
        -:24173:  }
    #####:24174:  if (((tmp >> 1) & 1) == value) {
    #####:24175:    *found = 1;
    #####:24176:    return 1;
        -:24177:  }
    #####:24178:  if (((tmp >> 2) & 1) == value) {
    #####:24179:    *found = 2;
    #####:24180:    return 2;
        -:24181:  }
    #####:24182:  if (((tmp >> 3) & 1) == value) {
    #####:24183:    *found = 3;
    #####:24184:    return 3;
        -:24185:  }
    #####:24186:  if (((tmp >> 4) & 1) == value) {
    #####:24187:    *found = 4;
    #####:24188:    return 4;
        -:24189:  }
    #####:24190:  if (((tmp >> 5) & 1) == value) {
    #####:24191:    *found = 5;
    #####:24192:    return 5;
        -:24193:  }
    #####:24194:  if (((tmp >> 6) & 1) == value) {
    #####:24195:    *found = 6;
    #####:24196:    return 6;
        -:24197:  }
    #####:24198:  if (((tmp >> 7) & 1) == value) {
    #####:24199:    *found = 7;
    #####:24200:    return 7;
        -:24201:  }
        -:24202:  /* remaining: 24 bits */
        -:24203:  return (1);
        -:24204:}
        -:24205:
        -:24206:static uint32_t
        8:24207:linsearch2_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24208:  uint32_t tmp, tmp2;
        8:24209:  value -= base;
        -:24210:  (void)tmp2;
        8:24211:  tmp = *(uint32_t *)in;
        -:24212:  /* consumed: 4 bytes (total: 4) */
        8:24213:  if (((tmp >> 0) & 3) == value) {
        3:24214:    *found = 0;
        3:24215:    return 0;
        -:24216:  }
        5:24217:  if (((tmp >> 2) & 3) == value) {
        3:24218:    *found = 1;
        3:24219:    return 1;
        -:24220:  }
        2:24221:  if (((tmp >> 4) & 3) == value) {
        2:24222:    *found = 2;
        2:24223:    return 2;
        -:24224:  }
    #####:24225:  if (((tmp >> 6) & 3) == value) {
    #####:24226:    *found = 3;
    #####:24227:    return 3;
        -:24228:  }
    #####:24229:  if (((tmp >> 8) & 3) == value) {
    #####:24230:    *found = 4;
    #####:24231:    return 4;
        -:24232:  }
    #####:24233:  if (((tmp >> 10) & 3) == value) {
    #####:24234:    *found = 5;
    #####:24235:    return 5;
        -:24236:  }
    #####:24237:  if (((tmp >> 12) & 3) == value) {
    #####:24238:    *found = 6;
    #####:24239:    return 6;
        -:24240:  }
    #####:24241:  if (((tmp >> 14) & 3) == value) {
    #####:24242:    *found = 7;
    #####:24243:    return 7;
        -:24244:  }
        -:24245:  /* remaining: 16 bits */
        -:24246:  return (2);
        -:24247:}
        -:24248:
        -:24249:static uint32_t
        8:24250:linsearch3_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24251:  uint32_t tmp, tmp2;
        8:24252:  value -= base;
        -:24253:  (void)tmp2;
        8:24254:  tmp = *(uint32_t *)in;
        -:24255:  /* consumed: 4 bytes (total: 4) */
        8:24256:  if (((tmp >> 0) & 7) == value) {
        2:24257:    *found = 0;
        2:24258:    return 0;
        -:24259:  }
        6:24260:  if (((tmp >> 3) & 7) == value) {
        1:24261:    *found = 1;
        1:24262:    return 1;
        -:24263:  }
        5:24264:  if (((tmp >> 6) & 7) == value) {
        1:24265:    *found = 2;
        1:24266:    return 2;
        -:24267:  }
        4:24268:  if (((tmp >> 9) & 7) == value) {
        1:24269:    *found = 3;
        1:24270:    return 3;
        -:24271:  }
        3:24272:  if (((tmp >> 12) & 7) == value) {
        1:24273:    *found = 4;
        1:24274:    return 4;
        -:24275:  }
        2:24276:  if (((tmp >> 15) & 7) == value) {
        1:24277:    *found = 5;
        1:24278:    return 5;
        -:24279:  }
        1:24280:  if (((tmp >> 18) & 7) == value) {
        1:24281:    *found = 6;
        1:24282:    return 6;
        -:24283:  }
    #####:24284:  if (((tmp >> 21) & 7) == value) {
    #####:24285:    *found = 7;
    #####:24286:    return 7;
        -:24287:  }
        -:24288:  /* remaining: 8 bits */
        -:24289:  return (3);
        -:24290:}
        -:24291:
        -:24292:static uint32_t
        8:24293:linsearch4_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24294:  uint32_t tmp, tmp2;
        8:24295:  value -= base;
        -:24296:  (void)tmp2;
        8:24297:  tmp = *(uint32_t *)in;
        -:24298:  /* consumed: 4 bytes (total: 4) */
        8:24299:  if (((tmp >> 0) & 15) == value) {
        1:24300:    *found = 0;
        1:24301:    return 0;
        -:24302:  }
        7:24303:  if (((tmp >> 4) & 15) == value) {
        1:24304:    *found = 1;
        1:24305:    return 1;
        -:24306:  }
        6:24307:  if (((tmp >> 8) & 15) == value) {
        1:24308:    *found = 2;
        1:24309:    return 2;
        -:24310:  }
        5:24311:  if (((tmp >> 12) & 15) == value) {
        1:24312:    *found = 3;
        1:24313:    return 3;
        -:24314:  }
        4:24315:  if (((tmp >> 16) & 15) == value) {
        1:24316:    *found = 4;
        1:24317:    return 4;
        -:24318:  }
        3:24319:  if (((tmp >> 20) & 15) == value) {
        1:24320:    *found = 5;
        1:24321:    return 5;
        -:24322:  }
        2:24323:  if (((tmp >> 24) & 15) == value) {
        1:24324:    *found = 6;
        1:24325:    return 6;
        -:24326:  }
        1:24327:  if (((tmp >> 28) & 15) == value) {
        1:24328:    *found = 7;
        1:24329:    return 7;
        -:24330:  }
        -:24331:  /* remaining: 0 bits */
        -:24332:  return (4);
        -:24333:}
        -:24334:
        -:24335:static uint32_t
        8:24336:linsearch5_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24337:  uint32_t tmp, tmp2;
        8:24338:  value -= base;
        -:24339:  (void)tmp2;
        8:24340:  tmp = *(uint32_t *)in;
        -:24341:  /* consumed: 4 bytes (total: 4) */
        8:24342:  if (((tmp >> 0) & 31) == value) {
        1:24343:    *found = 0;
        1:24344:    return 0;
        -:24345:  }
        7:24346:  if (((tmp >> 5) & 31) == value) {
        1:24347:    *found = 1;
        1:24348:    return 1;
        -:24349:  }
        6:24350:  if (((tmp >> 10) & 31) == value) {
        1:24351:    *found = 2;
        1:24352:    return 2;
        -:24353:  }
        5:24354:  if (((tmp >> 15) & 31) == value) {
        1:24355:    *found = 3;
        1:24356:    return 3;
        -:24357:  }
        4:24358:  if (((tmp >> 20) & 31) == value) {
        1:24359:    *found = 4;
        1:24360:    return 4;
        -:24361:  }
        3:24362:  if (((tmp >> 25) & 31) == value) {
        1:24363:    *found = 5;
        1:24364:    return 5;
        -:24365:  }
        2:24366:  tmp2 = tmp >> 30;
        -:24367:  in += sizeof(uint32_t);
        -:24368:  /* consumed: 4 bytes (total: 8) */
        2:24369:  tmp = *(uint32_t *)in;
        2:24370:  if ((tmp2 | (tmp % (1U << 3)) << (5 - 3)) == value) {
        1:24371:    *found = 6;
        1:24372:    return 6;
        -:24373:  }
        1:24374:  if (((tmp >> 3) & 31) == value) {
        1:24375:    *found = 7;
        1:24376:    return 7;
        -:24377:  }
        -:24378:  /* remaining: 24 bits */
        -:24379:  return (5);
        -:24380:}
        -:24381:
        -:24382:static uint32_t
        8:24383:linsearch6_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24384:  uint32_t tmp, tmp2;
        8:24385:  value -= base;
        -:24386:  (void)tmp2;
        8:24387:  tmp = *(uint32_t *)in;
        -:24388:  /* consumed: 4 bytes (total: 4) */
        8:24389:  if (((tmp >> 0) & 63) == value) {
        1:24390:    *found = 0;
        1:24391:    return 0;
        -:24392:  }
        7:24393:  if (((tmp >> 6) & 63) == value) {
        1:24394:    *found = 1;
        1:24395:    return 1;
        -:24396:  }
        6:24397:  if (((tmp >> 12) & 63) == value) {
        1:24398:    *found = 2;
        1:24399:    return 2;
        -:24400:  }
        5:24401:  if (((tmp >> 18) & 63) == value) {
        1:24402:    *found = 3;
        1:24403:    return 3;
        -:24404:  }
        4:24405:  if (((tmp >> 24) & 63) == value) {
        1:24406:    *found = 4;
        1:24407:    return 4;
        -:24408:  }
        3:24409:  tmp2 = tmp >> 30;
        -:24410:  in += sizeof(uint32_t);
        -:24411:  /* consumed: 4 bytes (total: 8) */
        3:24412:  tmp = *(uint32_t *)in;
        3:24413:  if ((tmp2 | (tmp % (1U << 4)) << (6 - 4)) == value) {
        1:24414:    *found = 5;
        1:24415:    return 5;
        -:24416:  }
        2:24417:  if (((tmp >> 4) & 63) == value) {
        1:24418:    *found = 6;
        1:24419:    return 6;
        -:24420:  }
        1:24421:  if (((tmp >> 10) & 63) == value) {
        1:24422:    *found = 7;
        1:24423:    return 7;
        -:24424:  }
        -:24425:  /* remaining: 16 bits */
        -:24426:  return (6);
        -:24427:}
        -:24428:
        -:24429:static uint32_t
        8:24430:linsearch7_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24431:  uint32_t tmp, tmp2;
        8:24432:  value -= base;
        -:24433:  (void)tmp2;
        8:24434:  tmp = *(uint32_t *)in;
        -:24435:  /* consumed: 4 bytes (total: 4) */
        8:24436:  if (((tmp >> 0) & 127) == value) {
        1:24437:    *found = 0;
        1:24438:    return 0;
        -:24439:  }
        7:24440:  if (((tmp >> 7) & 127) == value) {
        1:24441:    *found = 1;
        1:24442:    return 1;
        -:24443:  }
        6:24444:  if (((tmp >> 14) & 127) == value) {
        1:24445:    *found = 2;
        1:24446:    return 2;
        -:24447:  }
        5:24448:  if (((tmp >> 21) & 127) == value) {
        1:24449:    *found = 3;
        1:24450:    return 3;
        -:24451:  }
        4:24452:  tmp2 = tmp >> 28;
        -:24453:  in += sizeof(uint32_t);
        -:24454:  /* consumed: 4 bytes (total: 8) */
        4:24455:  tmp = *(uint32_t *)in;
        4:24456:  if ((tmp2 | (tmp % (1U << 3)) << (7 - 3)) == value) {
        1:24457:    *found = 4;
        1:24458:    return 4;
        -:24459:  }
        3:24460:  if (((tmp >> 3) & 127) == value) {
        1:24461:    *found = 5;
        1:24462:    return 5;
        -:24463:  }
        2:24464:  if (((tmp >> 10) & 127) == value) {
        1:24465:    *found = 6;
        1:24466:    return 6;
        -:24467:  }
        1:24468:  if (((tmp >> 17) & 127) == value) {
        1:24469:    *found = 7;
        1:24470:    return 7;
        -:24471:  }
        -:24472:  /* remaining: 8 bits */
        -:24473:  return (7);
        -:24474:}
        -:24475:
        -:24476:static uint32_t
        8:24477:linsearch8_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24478:  uint32_t tmp, tmp2;
        8:24479:  value -= base;
        -:24480:  (void)tmp2;
        8:24481:  tmp = *(uint32_t *)in;
        -:24482:  /* consumed: 4 bytes (total: 4) */
        8:24483:  if (((tmp >> 0) & 255) == value) {
        1:24484:    *found = 0;
        1:24485:    return 0;
        -:24486:  }
        7:24487:  if (((tmp >> 8) & 255) == value) {
        1:24488:    *found = 1;
        1:24489:    return 1;
        -:24490:  }
        6:24491:  if (((tmp >> 16) & 255) == value) {
        1:24492:    *found = 2;
        1:24493:    return 2;
        -:24494:  }
        5:24495:  if (((tmp >> 24) & 255) == value) {
        1:24496:    *found = 3;
        1:24497:    return 3;
        -:24498:  }
        -:24499:  in += sizeof(uint32_t);
        4:24500:  tmp = *(uint32_t *)in;
        -:24501:  /* consumed: 4 bytes (total: 8) */
        4:24502:  if (((tmp >> 0) & 255) == value) {
        1:24503:    *found = 4;
        1:24504:    return 4;
        -:24505:  }
        3:24506:  if (((tmp >> 8) & 255) == value) {
        1:24507:    *found = 5;
        1:24508:    return 5;
        -:24509:  }
        2:24510:  if (((tmp >> 16) & 255) == value) {
        1:24511:    *found = 6;
        1:24512:    return 6;
        -:24513:  }
        1:24514:  if (((tmp >> 24) & 255) == value) {
        1:24515:    *found = 7;
        1:24516:    return 7;
        -:24517:  }
        -:24518:  /* remaining: 0 bits */
        -:24519:  return (8);
        -:24520:}
        -:24521:
        -:24522:static uint32_t
        8:24523:linsearch9_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24524:  uint32_t tmp, tmp2;
        8:24525:  value -= base;
        -:24526:  (void)tmp2;
        8:24527:  tmp = *(uint32_t *)in;
        -:24528:  /* consumed: 4 bytes (total: 4) */
        8:24529:  if (((tmp >> 0) & 511) == value) {
        1:24530:    *found = 0;
        1:24531:    return 0;
        -:24532:  }
        7:24533:  if (((tmp >> 9) & 511) == value) {
        1:24534:    *found = 1;
        1:24535:    return 1;
        -:24536:  }
        6:24537:  if (((tmp >> 18) & 511) == value) {
        1:24538:    *found = 2;
        1:24539:    return 2;
        -:24540:  }
        5:24541:  tmp2 = tmp >> 27;
        -:24542:  in += sizeof(uint32_t);
        -:24543:  /* consumed: 4 bytes (total: 8) */
        5:24544:  tmp = *(uint32_t *)in;
        5:24545:  if ((tmp2 | (tmp % (1U << 4)) << (9 - 4)) == value) {
        1:24546:    *found = 3;
        1:24547:    return 3;
        -:24548:  }
        4:24549:  if (((tmp >> 4) & 511) == value) {
        1:24550:    *found = 4;
        1:24551:    return 4;
        -:24552:  }
        3:24553:  if (((tmp >> 13) & 511) == value) {
        1:24554:    *found = 5;
        1:24555:    return 5;
        -:24556:  }
        2:24557:  if (((tmp >> 22) & 511) == value) {
        1:24558:    *found = 6;
        1:24559:    return 6;
        -:24560:  }
        1:24561:  tmp2 = tmp >> 31;
        -:24562:  in += sizeof(uint32_t);
        -:24563:  /* consumed: 4 bytes (total: 12) */
        1:24564:  tmp = *(uint32_t *)in;
        1:24565:  if ((tmp2 | (tmp % (1U << 8)) << (9 - 8)) == value) {
        1:24566:    *found = 7;
        1:24567:    return 7;
        -:24568:  }
        -:24569:  /* remaining: 24 bits */
        -:24570:  return (9);
        -:24571:}
        -:24572:
        -:24573:static uint32_t
        8:24574:linsearch10_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24575:  uint32_t tmp, tmp2;
        8:24576:  value -= base;
        -:24577:  (void)tmp2;
        8:24578:  tmp = *(uint32_t *)in;
        -:24579:  /* consumed: 4 bytes (total: 4) */
        8:24580:  if (((tmp >> 0) & 1023) == value) {
        1:24581:    *found = 0;
        1:24582:    return 0;
        -:24583:  }
        7:24584:  if (((tmp >> 10) & 1023) == value) {
        1:24585:    *found = 1;
        1:24586:    return 1;
        -:24587:  }
        6:24588:  if (((tmp >> 20) & 1023) == value) {
        1:24589:    *found = 2;
        1:24590:    return 2;
        -:24591:  }
        5:24592:  tmp2 = tmp >> 30;
        -:24593:  in += sizeof(uint32_t);
        -:24594:  /* consumed: 4 bytes (total: 8) */
        5:24595:  tmp = *(uint32_t *)in;
        5:24596:  if ((tmp2 | (tmp % (1U << 8)) << (10 - 8)) == value) {
        1:24597:    *found = 3;
        1:24598:    return 3;
        -:24599:  }
        4:24600:  if (((tmp >> 8) & 1023) == value) {
        1:24601:    *found = 4;
        1:24602:    return 4;
        -:24603:  }
        3:24604:  if (((tmp >> 18) & 1023) == value) {
        1:24605:    *found = 5;
        1:24606:    return 5;
        -:24607:  }
        2:24608:  tmp2 = tmp >> 28;
        -:24609:  in += sizeof(uint32_t);
        -:24610:  /* consumed: 4 bytes (total: 12) */
        2:24611:  tmp = *(uint32_t *)in;
        2:24612:  if ((tmp2 | (tmp % (1U << 6)) << (10 - 6)) == value) {
        1:24613:    *found = 6;
        1:24614:    return 6;
        -:24615:  }
        1:24616:  if (((tmp >> 6) & 1023) == value) {
        1:24617:    *found = 7;
        1:24618:    return 7;
        -:24619:  }
        -:24620:  /* remaining: 16 bits */
        -:24621:  return (10);
        -:24622:}
        -:24623:
        -:24624:static uint32_t
        8:24625:linsearch11_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24626:  uint32_t tmp, tmp2;
        8:24627:  value -= base;
        -:24628:  (void)tmp2;
        8:24629:  tmp = *(uint32_t *)in;
        -:24630:  /* consumed: 4 bytes (total: 4) */
        8:24631:  if (((tmp >> 0) & 2047) == value) {
        1:24632:    *found = 0;
        1:24633:    return 0;
        -:24634:  }
        7:24635:  if (((tmp >> 11) & 2047) == value) {
        1:24636:    *found = 1;
        1:24637:    return 1;
        -:24638:  }
        6:24639:  tmp2 = tmp >> 22;
        -:24640:  in += sizeof(uint32_t);
        -:24641:  /* consumed: 4 bytes (total: 8) */
        6:24642:  tmp = *(uint32_t *)in;
        6:24643:  if ((tmp2 | (tmp % (1U << 1)) << (11 - 1)) == value) {
        1:24644:    *found = 2;
        1:24645:    return 2;
        -:24646:  }
        5:24647:  if (((tmp >> 1) & 2047) == value) {
        1:24648:    *found = 3;
        1:24649:    return 3;
        -:24650:  }
        4:24651:  if (((tmp >> 12) & 2047) == value) {
        1:24652:    *found = 4;
        1:24653:    return 4;
        -:24654:  }
        3:24655:  tmp2 = tmp >> 23;
        -:24656:  in += sizeof(uint32_t);
        -:24657:  /* consumed: 4 bytes (total: 12) */
        3:24658:  tmp = *(uint32_t *)in;
        3:24659:  if ((tmp2 | (tmp % (1U << 2)) << (11 - 2)) == value) {
        1:24660:    *found = 5;
        1:24661:    return 5;
        -:24662:  }
        2:24663:  if (((tmp >> 2) & 2047) == value) {
        1:24664:    *found = 6;
        1:24665:    return 6;
        -:24666:  }
        1:24667:  if (((tmp >> 13) & 2047) == value) {
        1:24668:    *found = 7;
        1:24669:    return 7;
        -:24670:  }
        -:24671:  /* remaining: 8 bits */
        -:24672:  return (11);
        -:24673:}
        -:24674:
        -:24675:static uint32_t
        8:24676:linsearch12_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24677:  uint32_t tmp, tmp2;
        8:24678:  value -= base;
        -:24679:  (void)tmp2;
        8:24680:  tmp = *(uint32_t *)in;
        -:24681:  /* consumed: 4 bytes (total: 4) */
        8:24682:  if (((tmp >> 0) & 4095) == value) {
        1:24683:    *found = 0;
        1:24684:    return 0;
        -:24685:  }
        7:24686:  if (((tmp >> 12) & 4095) == value) {
        1:24687:    *found = 1;
        1:24688:    return 1;
        -:24689:  }
        6:24690:  tmp2 = tmp >> 24;
        -:24691:  in += sizeof(uint32_t);
        -:24692:  /* consumed: 4 bytes (total: 8) */
        6:24693:  tmp = *(uint32_t *)in;
        6:24694:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        1:24695:    *found = 2;
        1:24696:    return 2;
        -:24697:  }
        5:24698:  if (((tmp >> 4) & 4095) == value) {
        1:24699:    *found = 3;
        1:24700:    return 3;
        -:24701:  }
        4:24702:  if (((tmp >> 16) & 4095) == value) {
        1:24703:    *found = 4;
        1:24704:    return 4;
        -:24705:  }
        3:24706:  tmp2 = tmp >> 28;
        -:24707:  in += sizeof(uint32_t);
        -:24708:  /* consumed: 4 bytes (total: 12) */
        3:24709:  tmp = *(uint32_t *)in;
        3:24710:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        1:24711:    *found = 5;
        1:24712:    return 5;
        -:24713:  }
        2:24714:  if (((tmp >> 8) & 4095) == value) {
        1:24715:    *found = 6;
        1:24716:    return 6;
        -:24717:  }
        1:24718:  if (((tmp >> 20) & 4095) == value) {
        1:24719:    *found = 7;
        1:24720:    return 7;
        -:24721:  }
        -:24722:  /* remaining: 0 bits */
        -:24723:  return (12);
        -:24724:}
        -:24725:
        -:24726:static uint32_t
        8:24727:linsearch13_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24728:  uint32_t tmp, tmp2;
        8:24729:  value -= base;
        -:24730:  (void)tmp2;
        8:24731:  tmp = *(uint32_t *)in;
        -:24732:  /* consumed: 4 bytes (total: 4) */
        8:24733:  if (((tmp >> 0) & 8191) == value) {
        1:24734:    *found = 0;
        1:24735:    return 0;
        -:24736:  }
        7:24737:  if (((tmp >> 13) & 8191) == value) {
        1:24738:    *found = 1;
        1:24739:    return 1;
        -:24740:  }
        6:24741:  tmp2 = tmp >> 26;
        -:24742:  in += sizeof(uint32_t);
        -:24743:  /* consumed: 4 bytes (total: 8) */
        6:24744:  tmp = *(uint32_t *)in;
        6:24745:  if ((tmp2 | (tmp % (1U << 7)) << (13 - 7)) == value) {
        1:24746:    *found = 2;
        1:24747:    return 2;
        -:24748:  }
        5:24749:  if (((tmp >> 7) & 8191) == value) {
        1:24750:    *found = 3;
        1:24751:    return 3;
        -:24752:  }
        4:24753:  tmp2 = tmp >> 20;
        -:24754:  in += sizeof(uint32_t);
        -:24755:  /* consumed: 4 bytes (total: 12) */
        4:24756:  tmp = *(uint32_t *)in;
        4:24757:  if ((tmp2 | (tmp % (1U << 1)) << (13 - 1)) == value) {
        1:24758:    *found = 4;
        1:24759:    return 4;
        -:24760:  }
        3:24761:  if (((tmp >> 1) & 8191) == value) {
        1:24762:    *found = 5;
        1:24763:    return 5;
        -:24764:  }
        2:24765:  if (((tmp >> 14) & 8191) == value) {
        1:24766:    *found = 6;
        1:24767:    return 6;
        -:24768:  }
        1:24769:  tmp2 = tmp >> 27;
        -:24770:  in += sizeof(uint32_t);
        -:24771:  /* consumed: 4 bytes (total: 16) */
        1:24772:  tmp = *(uint32_t *)in;
        1:24773:  if ((tmp2 | (tmp % (1U << 8)) << (13 - 8)) == value) {
        1:24774:    *found = 7;
        1:24775:    return 7;
        -:24776:  }
        -:24777:  /* remaining: 24 bits */
        -:24778:  return (13);
        -:24779:}
        -:24780:
        -:24781:static uint32_t
        8:24782:linsearch14_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24783:  uint32_t tmp, tmp2;
        8:24784:  value -= base;
        -:24785:  (void)tmp2;
        8:24786:  tmp = *(uint32_t *)in;
        -:24787:  /* consumed: 4 bytes (total: 4) */
        8:24788:  if (((tmp >> 0) & 16383) == value) {
        1:24789:    *found = 0;
        1:24790:    return 0;
        -:24791:  }
        7:24792:  if (((tmp >> 14) & 16383) == value) {
        1:24793:    *found = 1;
        1:24794:    return 1;
        -:24795:  }
        6:24796:  tmp2 = tmp >> 28;
        -:24797:  in += sizeof(uint32_t);
        -:24798:  /* consumed: 4 bytes (total: 8) */
        6:24799:  tmp = *(uint32_t *)in;
        6:24800:  if ((tmp2 | (tmp % (1U << 10)) << (14 - 10)) == value) {
        1:24801:    *found = 2;
        1:24802:    return 2;
        -:24803:  }
        5:24804:  if (((tmp >> 10) & 16383) == value) {
        1:24805:    *found = 3;
        1:24806:    return 3;
        -:24807:  }
        4:24808:  tmp2 = tmp >> 24;
        -:24809:  in += sizeof(uint32_t);
        -:24810:  /* consumed: 4 bytes (total: 12) */
        4:24811:  tmp = *(uint32_t *)in;
        4:24812:  if ((tmp2 | (tmp % (1U << 6)) << (14 - 6)) == value) {
        1:24813:    *found = 4;
        1:24814:    return 4;
        -:24815:  }
        3:24816:  if (((tmp >> 6) & 16383) == value) {
        1:24817:    *found = 5;
        1:24818:    return 5;
        -:24819:  }
        2:24820:  tmp2 = tmp >> 20;
        -:24821:  in += sizeof(uint32_t);
        -:24822:  /* consumed: 4 bytes (total: 16) */
        2:24823:  tmp = *(uint32_t *)in;
        2:24824:  if ((tmp2 | (tmp % (1U << 2)) << (14 - 2)) == value) {
        1:24825:    *found = 6;
        1:24826:    return 6;
        -:24827:  }
        1:24828:  if (((tmp >> 2) & 16383) == value) {
        1:24829:    *found = 7;
        1:24830:    return 7;
        -:24831:  }
        -:24832:  /* remaining: 16 bits */
        -:24833:  return (14);
        -:24834:}
        -:24835:
        -:24836:static uint32_t
        8:24837:linsearch15_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24838:  uint32_t tmp, tmp2;
        8:24839:  value -= base;
        -:24840:  (void)tmp2;
        8:24841:  tmp = *(uint32_t *)in;
        -:24842:  /* consumed: 4 bytes (total: 4) */
        8:24843:  if (((tmp >> 0) & 32767) == value) {
        1:24844:    *found = 0;
        1:24845:    return 0;
        -:24846:  }
        7:24847:  if (((tmp >> 15) & 32767) == value) {
        1:24848:    *found = 1;
        1:24849:    return 1;
        -:24850:  }
        6:24851:  tmp2 = tmp >> 30;
        -:24852:  in += sizeof(uint32_t);
        -:24853:  /* consumed: 4 bytes (total: 8) */
        6:24854:  tmp = *(uint32_t *)in;
        6:24855:  if ((tmp2 | (tmp % (1U << 13)) << (15 - 13)) == value) {
        1:24856:    *found = 2;
        1:24857:    return 2;
        -:24858:  }
        5:24859:  if (((tmp >> 13) & 32767) == value) {
        1:24860:    *found = 3;
        1:24861:    return 3;
        -:24862:  }
        4:24863:  tmp2 = tmp >> 28;
        -:24864:  in += sizeof(uint32_t);
        -:24865:  /* consumed: 4 bytes (total: 12) */
        4:24866:  tmp = *(uint32_t *)in;
        4:24867:  if ((tmp2 | (tmp % (1U << 11)) << (15 - 11)) == value) {
        1:24868:    *found = 4;
        1:24869:    return 4;
        -:24870:  }
        3:24871:  if (((tmp >> 11) & 32767) == value) {
        1:24872:    *found = 5;
        1:24873:    return 5;
        -:24874:  }
        2:24875:  tmp2 = tmp >> 26;
        -:24876:  in += sizeof(uint32_t);
        -:24877:  /* consumed: 4 bytes (total: 16) */
        2:24878:  tmp = *(uint32_t *)in;
        2:24879:  if ((tmp2 | (tmp % (1U << 9)) << (15 - 9)) == value) {
        1:24880:    *found = 6;
        1:24881:    return 6;
        -:24882:  }
        1:24883:  if (((tmp >> 9) & 32767) == value) {
        1:24884:    *found = 7;
        1:24885:    return 7;
        -:24886:  }
        -:24887:  /* remaining: 8 bits */
        -:24888:  return (15);
        -:24889:}
        -:24890:
        -:24891:static uint32_t
        8:24892:linsearch16_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24893:  uint32_t tmp, tmp2;
        8:24894:  value -= base;
        -:24895:  (void)tmp2;
        8:24896:  tmp = *(uint32_t *)in;
        -:24897:  /* consumed: 4 bytes (total: 4) */
        8:24898:  if (((tmp >> 0) & 65535) == value) {
        1:24899:    *found = 0;
        1:24900:    return 0;
        -:24901:  }
        7:24902:  if (((tmp >> 16) & 65535) == value) {
        1:24903:    *found = 1;
        1:24904:    return 1;
        -:24905:  }
        -:24906:  in += sizeof(uint32_t);
        6:24907:  tmp = *(uint32_t *)in;
        -:24908:  /* consumed: 4 bytes (total: 8) */
        6:24909:  if (((tmp >> 0) & 65535) == value) {
        1:24910:    *found = 2;
        1:24911:    return 2;
        -:24912:  }
        5:24913:  if (((tmp >> 16) & 65535) == value) {
        1:24914:    *found = 3;
        1:24915:    return 3;
        -:24916:  }
        -:24917:  in += sizeof(uint32_t);
        4:24918:  tmp = *(uint32_t *)in;
        -:24919:  /* consumed: 4 bytes (total: 12) */
        4:24920:  if (((tmp >> 0) & 65535) == value) {
        1:24921:    *found = 4;
        1:24922:    return 4;
        -:24923:  }
        3:24924:  if (((tmp >> 16) & 65535) == value) {
        1:24925:    *found = 5;
        1:24926:    return 5;
        -:24927:  }
        -:24928:  in += sizeof(uint32_t);
        2:24929:  tmp = *(uint32_t *)in;
        -:24930:  /* consumed: 4 bytes (total: 16) */
        2:24931:  if (((tmp >> 0) & 65535) == value) {
        1:24932:    *found = 6;
        1:24933:    return 6;
        -:24934:  }
        1:24935:  if (((tmp >> 16) & 65535) == value) {
        1:24936:    *found = 7;
        1:24937:    return 7;
        -:24938:  }
        -:24939:  /* remaining: 0 bits */
        -:24940:  return (16);
        -:24941:}
        -:24942:
        -:24943:static uint32_t
        8:24944:linsearch17_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:24945:  uint32_t tmp, tmp2;
        8:24946:  value -= base;
        -:24947:  (void)tmp2;
        8:24948:  tmp = *(uint32_t *)in;
        -:24949:  /* consumed: 4 bytes (total: 4) */
        8:24950:  if (((tmp >> 0) & 131071) == value) {
        1:24951:    *found = 0;
        1:24952:    return 0;
        -:24953:  }
        7:24954:  tmp2 = tmp >> 17;
        -:24955:  in += sizeof(uint32_t);
        -:24956:  /* consumed: 4 bytes (total: 8) */
        7:24957:  tmp = *(uint32_t *)in;
        7:24958:  if ((tmp2 | (tmp % (1U << 2)) << (17 - 2)) == value) {
        1:24959:    *found = 1;
        1:24960:    return 1;
        -:24961:  }
        6:24962:  if (((tmp >> 2) & 131071) == value) {
        1:24963:    *found = 2;
        1:24964:    return 2;
        -:24965:  }
        5:24966:  tmp2 = tmp >> 19;
        -:24967:  in += sizeof(uint32_t);
        -:24968:  /* consumed: 4 bytes (total: 12) */
        5:24969:  tmp = *(uint32_t *)in;
        5:24970:  if ((tmp2 | (tmp % (1U << 4)) << (17 - 4)) == value) {
        1:24971:    *found = 3;
        1:24972:    return 3;
        -:24973:  }
        4:24974:  if (((tmp >> 4) & 131071) == value) {
        1:24975:    *found = 4;
        1:24976:    return 4;
        -:24977:  }
        3:24978:  tmp2 = tmp >> 21;
        -:24979:  in += sizeof(uint32_t);
        -:24980:  /* consumed: 4 bytes (total: 16) */
        3:24981:  tmp = *(uint32_t *)in;
        3:24982:  if ((tmp2 | (tmp % (1U << 6)) << (17 - 6)) == value) {
        1:24983:    *found = 5;
        1:24984:    return 5;
        -:24985:  }
        2:24986:  if (((tmp >> 6) & 131071) == value) {
        1:24987:    *found = 6;
        1:24988:    return 6;
        -:24989:  }
        1:24990:  tmp2 = tmp >> 23;
        -:24991:  in += sizeof(uint32_t);
        -:24992:  /* consumed: 4 bytes (total: 20) */
        1:24993:  tmp = *(uint32_t *)in;
        1:24994:  if ((tmp2 | (tmp % (1U << 8)) << (17 - 8)) == value) {
        1:24995:    *found = 7;
        1:24996:    return 7;
        -:24997:  }
        -:24998:  /* remaining: 24 bits */
        -:24999:  return (17);
        -:25000:}
        -:25001:
        -:25002:static uint32_t
        8:25003:linsearch18_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25004:  uint32_t tmp, tmp2;
        8:25005:  value -= base;
        -:25006:  (void)tmp2;
        8:25007:  tmp = *(uint32_t *)in;
        -:25008:  /* consumed: 4 bytes (total: 4) */
        8:25009:  if (((tmp >> 0) & 262143) == value) {
        1:25010:    *found = 0;
        1:25011:    return 0;
        -:25012:  }
        7:25013:  tmp2 = tmp >> 18;
        -:25014:  in += sizeof(uint32_t);
        -:25015:  /* consumed: 4 bytes (total: 8) */
        7:25016:  tmp = *(uint32_t *)in;
        7:25017:  if ((tmp2 | (tmp % (1U << 4)) << (18 - 4)) == value) {
        1:25018:    *found = 1;
        1:25019:    return 1;
        -:25020:  }
        6:25021:  if (((tmp >> 4) & 262143) == value) {
        1:25022:    *found = 2;
        1:25023:    return 2;
        -:25024:  }
        5:25025:  tmp2 = tmp >> 22;
        -:25026:  in += sizeof(uint32_t);
        -:25027:  /* consumed: 4 bytes (total: 12) */
        5:25028:  tmp = *(uint32_t *)in;
        5:25029:  if ((tmp2 | (tmp % (1U << 8)) << (18 - 8)) == value) {
        1:25030:    *found = 3;
        1:25031:    return 3;
        -:25032:  }
        4:25033:  if (((tmp >> 8) & 262143) == value) {
        1:25034:    *found = 4;
        1:25035:    return 4;
        -:25036:  }
        3:25037:  tmp2 = tmp >> 26;
        -:25038:  in += sizeof(uint32_t);
        -:25039:  /* consumed: 4 bytes (total: 16) */
        3:25040:  tmp = *(uint32_t *)in;
        3:25041:  if ((tmp2 | (tmp % (1U << 12)) << (18 - 12)) == value) {
        1:25042:    *found = 5;
        1:25043:    return 5;
        -:25044:  }
        2:25045:  if (((tmp >> 12) & 262143) == value) {
        1:25046:    *found = 6;
        1:25047:    return 6;
        -:25048:  }
        1:25049:  tmp2 = tmp >> 30;
        -:25050:  in += sizeof(uint32_t);
        -:25051:  /* consumed: 4 bytes (total: 20) */
        1:25052:  tmp = *(uint32_t *)in;
        1:25053:  if ((tmp2 | (tmp % (1U << 16)) << (18 - 16)) == value) {
        1:25054:    *found = 7;
        1:25055:    return 7;
        -:25056:  }
        -:25057:  /* remaining: 16 bits */
        -:25058:  return (18);
        -:25059:}
        -:25060:
        -:25061:static uint32_t
        8:25062:linsearch19_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25063:  uint32_t tmp, tmp2;
        8:25064:  value -= base;
        -:25065:  (void)tmp2;
        8:25066:  tmp = *(uint32_t *)in;
        -:25067:  /* consumed: 4 bytes (total: 4) */
        8:25068:  if (((tmp >> 0) & 524287) == value) {
        1:25069:    *found = 0;
        1:25070:    return 0;
        -:25071:  }
        7:25072:  tmp2 = tmp >> 19;
        -:25073:  in += sizeof(uint32_t);
        -:25074:  /* consumed: 4 bytes (total: 8) */
        7:25075:  tmp = *(uint32_t *)in;
        7:25076:  if ((tmp2 | (tmp % (1U << 6)) << (19 - 6)) == value) {
        1:25077:    *found = 1;
        1:25078:    return 1;
        -:25079:  }
        6:25080:  if (((tmp >> 6) & 524287) == value) {
        1:25081:    *found = 2;
        1:25082:    return 2;
        -:25083:  }
        5:25084:  tmp2 = tmp >> 25;
        -:25085:  in += sizeof(uint32_t);
        -:25086:  /* consumed: 4 bytes (total: 12) */
        5:25087:  tmp = *(uint32_t *)in;
        5:25088:  if ((tmp2 | (tmp % (1U << 12)) << (19 - 12)) == value) {
        1:25089:    *found = 3;
        1:25090:    return 3;
        -:25091:  }
        4:25092:  if (((tmp >> 12) & 524287) == value) {
        1:25093:    *found = 4;
        1:25094:    return 4;
        -:25095:  }
        3:25096:  tmp2 = tmp >> 31;
        -:25097:  in += sizeof(uint32_t);
        -:25098:  /* consumed: 4 bytes (total: 16) */
        3:25099:  tmp = *(uint32_t *)in;
        3:25100:  if ((tmp2 | (tmp % (1U << 18)) << (19 - 18)) == value) {
        1:25101:    *found = 5;
        1:25102:    return 5;
        -:25103:  }
        2:25104:  tmp2 = tmp >> 18;
        -:25105:  in += sizeof(uint32_t);
        -:25106:  /* consumed: 4 bytes (total: 20) */
        2:25107:  tmp = *(uint32_t *)in;
        2:25108:  if ((tmp2 | (tmp % (1U << 5)) << (19 - 5)) == value) {
        1:25109:    *found = 6;
        1:25110:    return 6;
        -:25111:  }
        1:25112:  if (((tmp >> 5) & 524287) == value) {
        1:25113:    *found = 7;
        1:25114:    return 7;
        -:25115:  }
        -:25116:  /* remaining: 8 bits */
        -:25117:  return (19);
        -:25118:}
        -:25119:
        -:25120:static uint32_t
        8:25121:linsearch20_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25122:  uint32_t tmp, tmp2;
        8:25123:  value -= base;
        -:25124:  (void)tmp2;
        8:25125:  tmp = *(uint32_t *)in;
        -:25126:  /* consumed: 4 bytes (total: 4) */
        8:25127:  if (((tmp >> 0) & 1048575) == value) {
        1:25128:    *found = 0;
        1:25129:    return 0;
        -:25130:  }
        7:25131:  tmp2 = tmp >> 20;
        -:25132:  in += sizeof(uint32_t);
        -:25133:  /* consumed: 4 bytes (total: 8) */
        7:25134:  tmp = *(uint32_t *)in;
        7:25135:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        1:25136:    *found = 1;
        1:25137:    return 1;
        -:25138:  }
        6:25139:  if (((tmp >> 8) & 1048575) == value) {
        1:25140:    *found = 2;
        1:25141:    return 2;
        -:25142:  }
        5:25143:  tmp2 = tmp >> 28;
        -:25144:  in += sizeof(uint32_t);
        -:25145:  /* consumed: 4 bytes (total: 12) */
        5:25146:  tmp = *(uint32_t *)in;
        5:25147:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        1:25148:    *found = 3;
        1:25149:    return 3;
        -:25150:  }
        4:25151:  tmp2 = tmp >> 16;
        -:25152:  in += sizeof(uint32_t);
        -:25153:  /* consumed: 4 bytes (total: 16) */
        4:25154:  tmp = *(uint32_t *)in;
        4:25155:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        1:25156:    *found = 4;
        1:25157:    return 4;
        -:25158:  }
        3:25159:  if (((tmp >> 4) & 1048575) == value) {
        1:25160:    *found = 5;
        1:25161:    return 5;
        -:25162:  }
        2:25163:  tmp2 = tmp >> 24;
        -:25164:  in += sizeof(uint32_t);
        -:25165:  /* consumed: 4 bytes (total: 20) */
        2:25166:  tmp = *(uint32_t *)in;
        2:25167:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:25168:    *found = 6;
        1:25169:    return 6;
        -:25170:  }
        1:25171:  if (((tmp >> 12) & 1048575) == value) {
        1:25172:    *found = 7;
        1:25173:    return 7;
        -:25174:  }
        -:25175:  /* remaining: 0 bits */
        -:25176:  return (20);
        -:25177:}
        -:25178:
        -:25179:static uint32_t
        8:25180:linsearch21_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25181:  uint32_t tmp, tmp2;
        8:25182:  value -= base;
        -:25183:  (void)tmp2;
        8:25184:  tmp = *(uint32_t *)in;
        -:25185:  /* consumed: 4 bytes (total: 4) */
        8:25186:  if (((tmp >> 0) & 2097151) == value) {
        1:25187:    *found = 0;
        1:25188:    return 0;
        -:25189:  }
        7:25190:  tmp2 = tmp >> 21;
        -:25191:  in += sizeof(uint32_t);
        -:25192:  /* consumed: 4 bytes (total: 8) */
        7:25193:  tmp = *(uint32_t *)in;
        7:25194:  if ((tmp2 | (tmp % (1U << 10)) << (21 - 10)) == value) {
        1:25195:    *found = 1;
        1:25196:    return 1;
        -:25197:  }
        6:25198:  if (((tmp >> 10) & 2097151) == value) {
        1:25199:    *found = 2;
        1:25200:    return 2;
        -:25201:  }
        5:25202:  tmp2 = tmp >> 31;
        -:25203:  in += sizeof(uint32_t);
        -:25204:  /* consumed: 4 bytes (total: 12) */
        5:25205:  tmp = *(uint32_t *)in;
        5:25206:  if ((tmp2 | (tmp % (1U << 20)) << (21 - 20)) == value) {
        1:25207:    *found = 3;
        1:25208:    return 3;
        -:25209:  }
        4:25210:  tmp2 = tmp >> 20;
        -:25211:  in += sizeof(uint32_t);
        -:25212:  /* consumed: 4 bytes (total: 16) */
        4:25213:  tmp = *(uint32_t *)in;
        4:25214:  if ((tmp2 | (tmp % (1U << 9)) << (21 - 9)) == value) {
        1:25215:    *found = 4;
        1:25216:    return 4;
        -:25217:  }
        3:25218:  if (((tmp >> 9) & 2097151) == value) {
        1:25219:    *found = 5;
        1:25220:    return 5;
        -:25221:  }
        2:25222:  tmp2 = tmp >> 30;
        -:25223:  in += sizeof(uint32_t);
        -:25224:  /* consumed: 4 bytes (total: 20) */
        2:25225:  tmp = *(uint32_t *)in;
        2:25226:  if ((tmp2 | (tmp % (1U << 19)) << (21 - 19)) == value) {
        1:25227:    *found = 6;
        1:25228:    return 6;
        -:25229:  }
        1:25230:  tmp2 = tmp >> 19;
        -:25231:  in += sizeof(uint32_t);
        -:25232:  /* consumed: 4 bytes (total: 24) */
        1:25233:  tmp = *(uint32_t *)in;
        1:25234:  if ((tmp2 | (tmp % (1U << 8)) << (21 - 8)) == value) {
        1:25235:    *found = 7;
        1:25236:    return 7;
        -:25237:  }
        -:25238:  /* remaining: 24 bits */
        -:25239:  return (21);
        -:25240:}
        -:25241:
        -:25242:static uint32_t
        8:25243:linsearch22_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25244:  uint32_t tmp, tmp2;
        8:25245:  value -= base;
        -:25246:  (void)tmp2;
        8:25247:  tmp = *(uint32_t *)in;
        -:25248:  /* consumed: 4 bytes (total: 4) */
        8:25249:  if (((tmp >> 0) & 4194303) == value) {
        1:25250:    *found = 0;
        1:25251:    return 0;
        -:25252:  }
        7:25253:  tmp2 = tmp >> 22;
        -:25254:  in += sizeof(uint32_t);
        -:25255:  /* consumed: 4 bytes (total: 8) */
        7:25256:  tmp = *(uint32_t *)in;
        7:25257:  if ((tmp2 | (tmp % (1U << 12)) << (22 - 12)) == value) {
        1:25258:    *found = 1;
        1:25259:    return 1;
        -:25260:  }
        6:25261:  tmp2 = tmp >> 12;
        -:25262:  in += sizeof(uint32_t);
        -:25263:  /* consumed: 4 bytes (total: 12) */
        6:25264:  tmp = *(uint32_t *)in;
        6:25265:  if ((tmp2 | (tmp % (1U << 2)) << (22 - 2)) == value) {
        1:25266:    *found = 2;
        1:25267:    return 2;
        -:25268:  }
        5:25269:  if (((tmp >> 2) & 4194303) == value) {
        1:25270:    *found = 3;
        1:25271:    return 3;
        -:25272:  }
        4:25273:  tmp2 = tmp >> 24;
        -:25274:  in += sizeof(uint32_t);
        -:25275:  /* consumed: 4 bytes (total: 16) */
        4:25276:  tmp = *(uint32_t *)in;
        4:25277:  if ((tmp2 | (tmp % (1U << 14)) << (22 - 14)) == value) {
        1:25278:    *found = 4;
        1:25279:    return 4;
        -:25280:  }
        3:25281:  tmp2 = tmp >> 14;
        -:25282:  in += sizeof(uint32_t);
        -:25283:  /* consumed: 4 bytes (total: 20) */
        3:25284:  tmp = *(uint32_t *)in;
        3:25285:  if ((tmp2 | (tmp % (1U << 4)) << (22 - 4)) == value) {
        1:25286:    *found = 5;
        1:25287:    return 5;
        -:25288:  }
        2:25289:  if (((tmp >> 4) & 4194303) == value) {
        1:25290:    *found = 6;
        1:25291:    return 6;
        -:25292:  }
        1:25293:  tmp2 = tmp >> 26;
        -:25294:  in += sizeof(uint32_t);
        -:25295:  /* consumed: 4 bytes (total: 24) */
        1:25296:  tmp = *(uint32_t *)in;
        1:25297:  if ((tmp2 | (tmp % (1U << 16)) << (22 - 16)) == value) {
        1:25298:    *found = 7;
        1:25299:    return 7;
        -:25300:  }
        -:25301:  /* remaining: 16 bits */
        -:25302:  return (22);
        -:25303:}
        -:25304:
        -:25305:static uint32_t
        8:25306:linsearch23_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25307:  uint32_t tmp, tmp2;
        8:25308:  value -= base;
        -:25309:  (void)tmp2;
        8:25310:  tmp = *(uint32_t *)in;
        -:25311:  /* consumed: 4 bytes (total: 4) */
        8:25312:  if (((tmp >> 0) & 8388607) == value) {
        1:25313:    *found = 0;
        1:25314:    return 0;
        -:25315:  }
        7:25316:  tmp2 = tmp >> 23;
        -:25317:  in += sizeof(uint32_t);
        -:25318:  /* consumed: 4 bytes (total: 8) */
        7:25319:  tmp = *(uint32_t *)in;
        7:25320:  if ((tmp2 | (tmp % (1U << 14)) << (23 - 14)) == value) {
        1:25321:    *found = 1;
        1:25322:    return 1;
        -:25323:  }
        6:25324:  tmp2 = tmp >> 14;
        -:25325:  in += sizeof(uint32_t);
        -:25326:  /* consumed: 4 bytes (total: 12) */
        6:25327:  tmp = *(uint32_t *)in;
        6:25328:  if ((tmp2 | (tmp % (1U << 5)) << (23 - 5)) == value) {
        1:25329:    *found = 2;
        1:25330:    return 2;
        -:25331:  }
        5:25332:  if (((tmp >> 5) & 8388607) == value) {
        1:25333:    *found = 3;
        1:25334:    return 3;
        -:25335:  }
        4:25336:  tmp2 = tmp >> 28;
        -:25337:  in += sizeof(uint32_t);
        -:25338:  /* consumed: 4 bytes (total: 16) */
        4:25339:  tmp = *(uint32_t *)in;
        4:25340:  if ((tmp2 | (tmp % (1U << 19)) << (23 - 19)) == value) {
        1:25341:    *found = 4;
        1:25342:    return 4;
        -:25343:  }
        3:25344:  tmp2 = tmp >> 19;
        -:25345:  in += sizeof(uint32_t);
        -:25346:  /* consumed: 4 bytes (total: 20) */
        3:25347:  tmp = *(uint32_t *)in;
        3:25348:  if ((tmp2 | (tmp % (1U << 10)) << (23 - 10)) == value) {
        1:25349:    *found = 5;
        1:25350:    return 5;
        -:25351:  }
        2:25352:  tmp2 = tmp >> 10;
        -:25353:  in += sizeof(uint32_t);
        -:25354:  /* consumed: 4 bytes (total: 24) */
        2:25355:  tmp = *(uint32_t *)in;
        2:25356:  if ((tmp2 | (tmp % (1U << 1)) << (23 - 1)) == value) {
        1:25357:    *found = 6;
        1:25358:    return 6;
        -:25359:  }
        1:25360:  if (((tmp >> 1) & 8388607) == value) {
        1:25361:    *found = 7;
        1:25362:    return 7;
        -:25363:  }
        -:25364:  /* remaining: 8 bits */
        -:25365:  return (23);
        -:25366:}
        -:25367:
        -:25368:static uint32_t
        8:25369:linsearch24_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25370:  uint32_t tmp, tmp2;
        8:25371:  value -= base;
        -:25372:  (void)tmp2;
        8:25373:  tmp = *(uint32_t *)in;
        -:25374:  /* consumed: 4 bytes (total: 4) */
        8:25375:  if (((tmp >> 0) & 16777215) == value) {
        1:25376:    *found = 0;
        1:25377:    return 0;
        -:25378:  }
        7:25379:  tmp2 = tmp >> 24;
        -:25380:  in += sizeof(uint32_t);
        -:25381:  /* consumed: 4 bytes (total: 8) */
        7:25382:  tmp = *(uint32_t *)in;
        7:25383:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:25384:    *found = 1;
        1:25385:    return 1;
        -:25386:  }
        6:25387:  tmp2 = tmp >> 16;
        -:25388:  in += sizeof(uint32_t);
        -:25389:  /* consumed: 4 bytes (total: 12) */
        6:25390:  tmp = *(uint32_t *)in;
        6:25391:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:25392:    *found = 2;
        1:25393:    return 2;
        -:25394:  }
        5:25395:  if (((tmp >> 8) & 16777215) == value) {
        1:25396:    *found = 3;
        1:25397:    return 3;
        -:25398:  }
        -:25399:  in += sizeof(uint32_t);
        4:25400:  tmp = *(uint32_t *)in;
        -:25401:  /* consumed: 4 bytes (total: 16) */
        4:25402:  if (((tmp >> 0) & 16777215) == value) {
        1:25403:    *found = 4;
        1:25404:    return 4;
        -:25405:  }
        3:25406:  tmp2 = tmp >> 24;
        -:25407:  in += sizeof(uint32_t);
        -:25408:  /* consumed: 4 bytes (total: 20) */
        3:25409:  tmp = *(uint32_t *)in;
        3:25410:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        1:25411:    *found = 5;
        1:25412:    return 5;
        -:25413:  }
        2:25414:  tmp2 = tmp >> 16;
        -:25415:  in += sizeof(uint32_t);
        -:25416:  /* consumed: 4 bytes (total: 24) */
        2:25417:  tmp = *(uint32_t *)in;
        2:25418:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:25419:    *found = 6;
        1:25420:    return 6;
        -:25421:  }
        1:25422:  if (((tmp >> 8) & 16777215) == value) {
        1:25423:    *found = 7;
        1:25424:    return 7;
        -:25425:  }
        -:25426:  /* remaining: 0 bits */
        -:25427:  return (24);
        -:25428:}
        -:25429:
        -:25430:static uint32_t
        8:25431:linsearch25_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25432:  uint32_t tmp, tmp2;
        8:25433:  value -= base;
        -:25434:  (void)tmp2;
        8:25435:  tmp = *(uint32_t *)in;
        -:25436:  /* consumed: 4 bytes (total: 4) */
        8:25437:  if (((tmp >> 0) & 33554431) == value) {
        1:25438:    *found = 0;
        1:25439:    return 0;
        -:25440:  }
        7:25441:  tmp2 = tmp >> 25;
        -:25442:  in += sizeof(uint32_t);
        -:25443:  /* consumed: 4 bytes (total: 8) */
        7:25444:  tmp = *(uint32_t *)in;
        7:25445:  if ((tmp2 | (tmp % (1U << 18)) << (25 - 18)) == value) {
        1:25446:    *found = 1;
        1:25447:    return 1;
        -:25448:  }
        6:25449:  tmp2 = tmp >> 18;
        -:25450:  in += sizeof(uint32_t);
        -:25451:  /* consumed: 4 bytes (total: 12) */
        6:25452:  tmp = *(uint32_t *)in;
        6:25453:  if ((tmp2 | (tmp % (1U << 11)) << (25 - 11)) == value) {
        1:25454:    *found = 2;
        1:25455:    return 2;
        -:25456:  }
        5:25457:  tmp2 = tmp >> 11;
        -:25458:  in += sizeof(uint32_t);
        -:25459:  /* consumed: 4 bytes (total: 16) */
        5:25460:  tmp = *(uint32_t *)in;
        5:25461:  if ((tmp2 | (tmp % (1U << 4)) << (25 - 4)) == value) {
        1:25462:    *found = 3;
        1:25463:    return 3;
        -:25464:  }
        4:25465:  if (((tmp >> 4) & 33554431) == value) {
        1:25466:    *found = 4;
        1:25467:    return 4;
        -:25468:  }
        3:25469:  tmp2 = tmp >> 29;
        -:25470:  in += sizeof(uint32_t);
        -:25471:  /* consumed: 4 bytes (total: 20) */
        3:25472:  tmp = *(uint32_t *)in;
        3:25473:  if ((tmp2 | (tmp % (1U << 22)) << (25 - 22)) == value) {
        1:25474:    *found = 5;
        1:25475:    return 5;
        -:25476:  }
        2:25477:  tmp2 = tmp >> 22;
        -:25478:  in += sizeof(uint32_t);
        -:25479:  /* consumed: 4 bytes (total: 24) */
        2:25480:  tmp = *(uint32_t *)in;
        2:25481:  if ((tmp2 | (tmp % (1U << 15)) << (25 - 15)) == value) {
        1:25482:    *found = 6;
        1:25483:    return 6;
        -:25484:  }
        1:25485:  tmp2 = tmp >> 15;
        -:25486:  in += sizeof(uint32_t);
        -:25487:  /* consumed: 4 bytes (total: 28) */
        1:25488:  tmp = *(uint32_t *)in;
        1:25489:  if ((tmp2 | (tmp % (1U << 8)) << (25 - 8)) == value) {
        1:25490:    *found = 7;
        1:25491:    return 7;
        -:25492:  }
        -:25493:  /* remaining: 24 bits */
        -:25494:  return (25);
        -:25495:}
        -:25496:
        -:25497:static uint32_t
        8:25498:linsearch26_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25499:  uint32_t tmp, tmp2;
        8:25500:  value -= base;
        -:25501:  (void)tmp2;
        8:25502:  tmp = *(uint32_t *)in;
        -:25503:  /* consumed: 4 bytes (total: 4) */
        8:25504:  if (((tmp >> 0) & 67108863) == value) {
        1:25505:    *found = 0;
        1:25506:    return 0;
        -:25507:  }
        7:25508:  tmp2 = tmp >> 26;
        -:25509:  in += sizeof(uint32_t);
        -:25510:  /* consumed: 4 bytes (total: 8) */
        7:25511:  tmp = *(uint32_t *)in;
        7:25512:  if ((tmp2 | (tmp % (1U << 20)) << (26 - 20)) == value) {
        1:25513:    *found = 1;
        1:25514:    return 1;
        -:25515:  }
        6:25516:  tmp2 = tmp >> 20;
        -:25517:  in += sizeof(uint32_t);
        -:25518:  /* consumed: 4 bytes (total: 12) */
        6:25519:  tmp = *(uint32_t *)in;
        6:25520:  if ((tmp2 | (tmp % (1U << 14)) << (26 - 14)) == value) {
        1:25521:    *found = 2;
        1:25522:    return 2;
        -:25523:  }
        5:25524:  tmp2 = tmp >> 14;
        -:25525:  in += sizeof(uint32_t);
        -:25526:  /* consumed: 4 bytes (total: 16) */
        5:25527:  tmp = *(uint32_t *)in;
        5:25528:  if ((tmp2 | (tmp % (1U << 8)) << (26 - 8)) == value) {
        1:25529:    *found = 3;
        1:25530:    return 3;
        -:25531:  }
        4:25532:  tmp2 = tmp >> 8;
        -:25533:  in += sizeof(uint32_t);
        -:25534:  /* consumed: 4 bytes (total: 20) */
        4:25535:  tmp = *(uint32_t *)in;
        4:25536:  if ((tmp2 | (tmp % (1U << 2)) << (26 - 2)) == value) {
        1:25537:    *found = 4;
        1:25538:    return 4;
        -:25539:  }
        3:25540:  if (((tmp >> 2) & 67108863) == value) {
        1:25541:    *found = 5;
        1:25542:    return 5;
        -:25543:  }
        2:25544:  tmp2 = tmp >> 28;
        -:25545:  in += sizeof(uint32_t);
        -:25546:  /* consumed: 4 bytes (total: 24) */
        2:25547:  tmp = *(uint32_t *)in;
        2:25548:  if ((tmp2 | (tmp % (1U << 22)) << (26 - 22)) == value) {
        1:25549:    *found = 6;
        1:25550:    return 6;
        -:25551:  }
        1:25552:  tmp2 = tmp >> 22;
        -:25553:  in += sizeof(uint32_t);
        -:25554:  /* consumed: 4 bytes (total: 28) */
        1:25555:  tmp = *(uint32_t *)in;
        1:25556:  if ((tmp2 | (tmp % (1U << 16)) << (26 - 16)) == value) {
        1:25557:    *found = 7;
        1:25558:    return 7;
        -:25559:  }
        -:25560:  /* remaining: 16 bits */
        -:25561:  return (26);
        -:25562:}
        -:25563:
        -:25564:static uint32_t
        8:25565:linsearch27_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25566:  uint32_t tmp, tmp2;
        8:25567:  value -= base;
        -:25568:  (void)tmp2;
        8:25569:  tmp = *(uint32_t *)in;
        -:25570:  /* consumed: 4 bytes (total: 4) */
        8:25571:  if (((tmp >> 0) & 134217727) == value) {
        1:25572:    *found = 0;
        1:25573:    return 0;
        -:25574:  }
        7:25575:  tmp2 = tmp >> 27;
        -:25576:  in += sizeof(uint32_t);
        -:25577:  /* consumed: 4 bytes (total: 8) */
        7:25578:  tmp = *(uint32_t *)in;
        7:25579:  if ((tmp2 | (tmp % (1U << 22)) << (27 - 22)) == value) {
        1:25580:    *found = 1;
        1:25581:    return 1;
        -:25582:  }
        6:25583:  tmp2 = tmp >> 22;
        -:25584:  in += sizeof(uint32_t);
        -:25585:  /* consumed: 4 bytes (total: 12) */
        6:25586:  tmp = *(uint32_t *)in;
        6:25587:  if ((tmp2 | (tmp % (1U << 17)) << (27 - 17)) == value) {
        1:25588:    *found = 2;
        1:25589:    return 2;
        -:25590:  }
        5:25591:  tmp2 = tmp >> 17;
        -:25592:  in += sizeof(uint32_t);
        -:25593:  /* consumed: 4 bytes (total: 16) */
        5:25594:  tmp = *(uint32_t *)in;
        5:25595:  if ((tmp2 | (tmp % (1U << 12)) << (27 - 12)) == value) {
        1:25596:    *found = 3;
        1:25597:    return 3;
        -:25598:  }
        4:25599:  tmp2 = tmp >> 12;
        -:25600:  in += sizeof(uint32_t);
        -:25601:  /* consumed: 4 bytes (total: 20) */
        4:25602:  tmp = *(uint32_t *)in;
        4:25603:  if ((tmp2 | (tmp % (1U << 7)) << (27 - 7)) == value) {
        1:25604:    *found = 4;
        1:25605:    return 4;
        -:25606:  }
        3:25607:  tmp2 = tmp >> 7;
        -:25608:  in += sizeof(uint32_t);
        -:25609:  /* consumed: 4 bytes (total: 24) */
        3:25610:  tmp = *(uint32_t *)in;
        3:25611:  if ((tmp2 | (tmp % (1U << 2)) << (27 - 2)) == value) {
        1:25612:    *found = 5;
        1:25613:    return 5;
        -:25614:  }
        2:25615:  if (((tmp >> 2) & 134217727) == value) {
        1:25616:    *found = 6;
        1:25617:    return 6;
        -:25618:  }
        1:25619:  tmp2 = tmp >> 29;
        -:25620:  in += sizeof(uint32_t);
        -:25621:  /* consumed: 4 bytes (total: 28) */
        1:25622:  tmp = *(uint32_t *)in;
        1:25623:  if ((tmp2 | (tmp % (1U << 24)) << (27 - 24)) == value) {
        1:25624:    *found = 7;
        1:25625:    return 7;
        -:25626:  }
        -:25627:  /* remaining: 8 bits */
        -:25628:  return (27);
        -:25629:}
        -:25630:
        -:25631:static uint32_t
        8:25632:linsearch28_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25633:  uint32_t tmp, tmp2;
        8:25634:  value -= base;
        -:25635:  (void)tmp2;
        8:25636:  tmp = *(uint32_t *)in;
        -:25637:  /* consumed: 4 bytes (total: 4) */
        8:25638:  if (((tmp >> 0) & 268435455) == value) {
        1:25639:    *found = 0;
        1:25640:    return 0;
        -:25641:  }
        7:25642:  tmp2 = tmp >> 28;
        -:25643:  in += sizeof(uint32_t);
        -:25644:  /* consumed: 4 bytes (total: 8) */
        7:25645:  tmp = *(uint32_t *)in;
        7:25646:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        1:25647:    *found = 1;
        1:25648:    return 1;
        -:25649:  }
        6:25650:  tmp2 = tmp >> 24;
        -:25651:  in += sizeof(uint32_t);
        -:25652:  /* consumed: 4 bytes (total: 12) */
        6:25653:  tmp = *(uint32_t *)in;
        6:25654:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        1:25655:    *found = 2;
        1:25656:    return 2;
        -:25657:  }
        5:25658:  tmp2 = tmp >> 20;
        -:25659:  in += sizeof(uint32_t);
        -:25660:  /* consumed: 4 bytes (total: 16) */
        5:25661:  tmp = *(uint32_t *)in;
        5:25662:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        1:25663:    *found = 3;
        1:25664:    return 3;
        -:25665:  }
        4:25666:  tmp2 = tmp >> 16;
        -:25667:  in += sizeof(uint32_t);
        -:25668:  /* consumed: 4 bytes (total: 20) */
        4:25669:  tmp = *(uint32_t *)in;
        4:25670:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        1:25671:    *found = 4;
        1:25672:    return 4;
        -:25673:  }
        3:25674:  tmp2 = tmp >> 12;
        -:25675:  in += sizeof(uint32_t);
        -:25676:  /* consumed: 4 bytes (total: 24) */
        3:25677:  tmp = *(uint32_t *)in;
        3:25678:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        1:25679:    *found = 5;
        1:25680:    return 5;
        -:25681:  }
        2:25682:  tmp2 = tmp >> 8;
        -:25683:  in += sizeof(uint32_t);
        -:25684:  /* consumed: 4 bytes (total: 28) */
        2:25685:  tmp = *(uint32_t *)in;
        2:25686:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:25687:    *found = 6;
        1:25688:    return 6;
        -:25689:  }
        1:25690:  if (((tmp >> 4) & 268435455) == value) {
        1:25691:    *found = 7;
        1:25692:    return 7;
        -:25693:  }
        -:25694:  /* remaining: 0 bits */
        -:25695:  return (28);
        -:25696:}
        -:25697:
        -:25698:static uint32_t
        8:25699:linsearch29_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25700:  uint32_t tmp, tmp2;
        8:25701:  value -= base;
        -:25702:  (void)tmp2;
        8:25703:  tmp = *(uint32_t *)in;
        -:25704:  /* consumed: 4 bytes (total: 4) */
        8:25705:  if (((tmp >> 0) & 536870911) == value) {
        1:25706:    *found = 0;
        1:25707:    return 0;
        -:25708:  }
        7:25709:  tmp2 = tmp >> 29;
        -:25710:  in += sizeof(uint32_t);
        -:25711:  /* consumed: 4 bytes (total: 8) */
        7:25712:  tmp = *(uint32_t *)in;
        7:25713:  if ((tmp2 | (tmp % (1U << 26)) << (29 - 26)) == value) {
        1:25714:    *found = 1;
        1:25715:    return 1;
        -:25716:  }
        6:25717:  tmp2 = tmp >> 26;
        -:25718:  in += sizeof(uint32_t);
        -:25719:  /* consumed: 4 bytes (total: 12) */
        6:25720:  tmp = *(uint32_t *)in;
        6:25721:  if ((tmp2 | (tmp % (1U << 23)) << (29 - 23)) == value) {
        1:25722:    *found = 2;
        1:25723:    return 2;
        -:25724:  }
        5:25725:  tmp2 = tmp >> 23;
        -:25726:  in += sizeof(uint32_t);
        -:25727:  /* consumed: 4 bytes (total: 16) */
        5:25728:  tmp = *(uint32_t *)in;
        5:25729:  if ((tmp2 | (tmp % (1U << 20)) << (29 - 20)) == value) {
        1:25730:    *found = 3;
        1:25731:    return 3;
        -:25732:  }
        4:25733:  tmp2 = tmp >> 20;
        -:25734:  in += sizeof(uint32_t);
        -:25735:  /* consumed: 4 bytes (total: 20) */
        4:25736:  tmp = *(uint32_t *)in;
        4:25737:  if ((tmp2 | (tmp % (1U << 17)) << (29 - 17)) == value) {
        1:25738:    *found = 4;
        1:25739:    return 4;
        -:25740:  }
        3:25741:  tmp2 = tmp >> 17;
        -:25742:  in += sizeof(uint32_t);
        -:25743:  /* consumed: 4 bytes (total: 24) */
        3:25744:  tmp = *(uint32_t *)in;
        3:25745:  if ((tmp2 | (tmp % (1U << 14)) << (29 - 14)) == value) {
        1:25746:    *found = 5;
        1:25747:    return 5;
        -:25748:  }
        2:25749:  tmp2 = tmp >> 14;
        -:25750:  in += sizeof(uint32_t);
        -:25751:  /* consumed: 4 bytes (total: 28) */
        2:25752:  tmp = *(uint32_t *)in;
        2:25753:  if ((tmp2 | (tmp % (1U << 11)) << (29 - 11)) == value) {
        1:25754:    *found = 6;
        1:25755:    return 6;
        -:25756:  }
        1:25757:  tmp2 = tmp >> 11;
        -:25758:  in += sizeof(uint32_t);
        -:25759:  /* consumed: 4 bytes (total: 32) */
        1:25760:  tmp = *(uint32_t *)in;
        1:25761:  if ((tmp2 | (tmp % (1U << 8)) << (29 - 8)) == value) {
        1:25762:    *found = 7;
        1:25763:    return 7;
        -:25764:  }
        -:25765:  /* remaining: 24 bits */
        -:25766:  return (29);
        -:25767:}
        -:25768:
        -:25769:static uint32_t
        8:25770:linsearch30_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25771:  uint32_t tmp, tmp2;
        8:25772:  value -= base;
        -:25773:  (void)tmp2;
        8:25774:  tmp = *(uint32_t *)in;
        -:25775:  /* consumed: 4 bytes (total: 4) */
        8:25776:  if (((tmp >> 0) & 1073741823) == value) {
        1:25777:    *found = 0;
        1:25778:    return 0;
        -:25779:  }
        7:25780:  tmp2 = tmp >> 30;
        -:25781:  in += sizeof(uint32_t);
        -:25782:  /* consumed: 4 bytes (total: 8) */
        7:25783:  tmp = *(uint32_t *)in;
        7:25784:  if ((tmp2 | (tmp % (1U << 28)) << (30 - 28)) == value) {
        1:25785:    *found = 1;
        1:25786:    return 1;
        -:25787:  }
        6:25788:  tmp2 = tmp >> 28;
        -:25789:  in += sizeof(uint32_t);
        -:25790:  /* consumed: 4 bytes (total: 12) */
        6:25791:  tmp = *(uint32_t *)in;
        6:25792:  if ((tmp2 | (tmp % (1U << 26)) << (30 - 26)) == value) {
        1:25793:    *found = 2;
        1:25794:    return 2;
        -:25795:  }
        5:25796:  tmp2 = tmp >> 26;
        -:25797:  in += sizeof(uint32_t);
        -:25798:  /* consumed: 4 bytes (total: 16) */
        5:25799:  tmp = *(uint32_t *)in;
        5:25800:  if ((tmp2 | (tmp % (1U << 24)) << (30 - 24)) == value) {
        1:25801:    *found = 3;
        1:25802:    return 3;
        -:25803:  }
        4:25804:  tmp2 = tmp >> 24;
        -:25805:  in += sizeof(uint32_t);
        -:25806:  /* consumed: 4 bytes (total: 20) */
        4:25807:  tmp = *(uint32_t *)in;
        4:25808:  if ((tmp2 | (tmp % (1U << 22)) << (30 - 22)) == value) {
        1:25809:    *found = 4;
        1:25810:    return 4;
        -:25811:  }
        3:25812:  tmp2 = tmp >> 22;
        -:25813:  in += sizeof(uint32_t);
        -:25814:  /* consumed: 4 bytes (total: 24) */
        3:25815:  tmp = *(uint32_t *)in;
        3:25816:  if ((tmp2 | (tmp % (1U << 20)) << (30 - 20)) == value) {
        1:25817:    *found = 5;
        1:25818:    return 5;
        -:25819:  }
        2:25820:  tmp2 = tmp >> 20;
        -:25821:  in += sizeof(uint32_t);
        -:25822:  /* consumed: 4 bytes (total: 28) */
        2:25823:  tmp = *(uint32_t *)in;
        2:25824:  if ((tmp2 | (tmp % (1U << 18)) << (30 - 18)) == value) {
        1:25825:    *found = 6;
        1:25826:    return 6;
        -:25827:  }
        1:25828:  tmp2 = tmp >> 18;
        -:25829:  in += sizeof(uint32_t);
        -:25830:  /* consumed: 4 bytes (total: 32) */
        1:25831:  tmp = *(uint32_t *)in;
        1:25832:  if ((tmp2 | (tmp % (1U << 16)) << (30 - 16)) == value) {
        1:25833:    *found = 7;
        1:25834:    return 7;
        -:25835:  }
        -:25836:  /* remaining: 16 bits */
        -:25837:  return (30);
        -:25838:}
        -:25839:
        -:25840:static uint32_t
        8:25841:linsearch31_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25842:  uint32_t tmp, tmp2;
        8:25843:  value -= base;
        -:25844:  (void)tmp2;
        8:25845:  tmp = *(uint32_t *)in;
        -:25846:  /* consumed: 4 bytes (total: 4) */
        8:25847:  if (((tmp >> 0) & 2147483647) == value) {
        1:25848:    *found = 0;
        1:25849:    return 0;
        -:25850:  }
        7:25851:  tmp2 = tmp >> 31;
        -:25852:  in += sizeof(uint32_t);
        -:25853:  /* consumed: 4 bytes (total: 8) */
        7:25854:  tmp = *(uint32_t *)in;
        7:25855:  if ((tmp2 | (tmp % (1U << 30)) << (31 - 30)) == value) {
        1:25856:    *found = 1;
        1:25857:    return 1;
        -:25858:  }
        6:25859:  tmp2 = tmp >> 30;
        -:25860:  in += sizeof(uint32_t);
        -:25861:  /* consumed: 4 bytes (total: 12) */
        6:25862:  tmp = *(uint32_t *)in;
        6:25863:  if ((tmp2 | (tmp % (1U << 29)) << (31 - 29)) == value) {
        1:25864:    *found = 2;
        1:25865:    return 2;
        -:25866:  }
        5:25867:  tmp2 = tmp >> 29;
        -:25868:  in += sizeof(uint32_t);
        -:25869:  /* consumed: 4 bytes (total: 16) */
        5:25870:  tmp = *(uint32_t *)in;
        5:25871:  if ((tmp2 | (tmp % (1U << 28)) << (31 - 28)) == value) {
        1:25872:    *found = 3;
        1:25873:    return 3;
        -:25874:  }
        4:25875:  tmp2 = tmp >> 28;
        -:25876:  in += sizeof(uint32_t);
        -:25877:  /* consumed: 4 bytes (total: 20) */
        4:25878:  tmp = *(uint32_t *)in;
        4:25879:  if ((tmp2 | (tmp % (1U << 27)) << (31 - 27)) == value) {
        1:25880:    *found = 4;
        1:25881:    return 4;
        -:25882:  }
        3:25883:  tmp2 = tmp >> 27;
        -:25884:  in += sizeof(uint32_t);
        -:25885:  /* consumed: 4 bytes (total: 24) */
        3:25886:  tmp = *(uint32_t *)in;
        3:25887:  if ((tmp2 | (tmp % (1U << 26)) << (31 - 26)) == value) {
        1:25888:    *found = 5;
        1:25889:    return 5;
        -:25890:  }
        2:25891:  tmp2 = tmp >> 26;
        -:25892:  in += sizeof(uint32_t);
        -:25893:  /* consumed: 4 bytes (total: 28) */
        2:25894:  tmp = *(uint32_t *)in;
        2:25895:  if ((tmp2 | (tmp % (1U << 25)) << (31 - 25)) == value) {
        1:25896:    *found = 6;
        1:25897:    return 6;
        -:25898:  }
        1:25899:  tmp2 = tmp >> 25;
        -:25900:  in += sizeof(uint32_t);
        -:25901:  /* consumed: 4 bytes (total: 32) */
        1:25902:  tmp = *(uint32_t *)in;
        1:25903:  if ((tmp2 | (tmp % (1U << 24)) << (31 - 24)) == value) {
        1:25904:    *found = 7;
        1:25905:    return 7;
        -:25906:  }
        -:25907:  /* remaining: 8 bits */
        -:25908:  return (31);
        -:25909:}
        -:25910:
        -:25911:static uint32_t
        8:25912:linsearch32_8(uint32_t base, const uint8_t *in, uint32_t value, int *found) {
        -:25913:  uint32_t i;
        -:25914:  uint32_t *in32 = (uint32_t *)in;
        8:25915:  value -= base;
       36:25916:  for (i = 0; i < 8; i++) {
       36:25917:    if (in32[i] == value) {
        8:25918:      *found = i;
        8:25919:      return 0;
        -:25920:    }
        -:25921:  }
        -:25922:  return 8 * sizeof(uint32_t);
        -:25923:}
        -:25924:
        -:25925:for_linsearchfunc_t for_linsearch8[33] = {
        -:25926:                       linsearch0_8,
        -:25927:                       linsearch1_8,
        -:25928:                       linsearch2_8,
        -:25929:                       linsearch3_8,
        -:25930:                       linsearch4_8,
        -:25931:                       linsearch5_8,
        -:25932:                       linsearch6_8,
        -:25933:                       linsearch7_8,
        -:25934:                       linsearch8_8,
        -:25935:                       linsearch9_8,
        -:25936:                       linsearch10_8,
        -:25937:                       linsearch11_8,
        -:25938:                       linsearch12_8,
        -:25939:                       linsearch13_8,
        -:25940:                       linsearch14_8,
        -:25941:                       linsearch15_8,
        -:25942:                       linsearch16_8,
        -:25943:                       linsearch17_8,
        -:25944:                       linsearch18_8,
        -:25945:                       linsearch19_8,
        -:25946:                       linsearch20_8,
        -:25947:                       linsearch21_8,
        -:25948:                       linsearch22_8,
        -:25949:                       linsearch23_8,
        -:25950:                       linsearch24_8,
        -:25951:                       linsearch25_8,
        -:25952:                       linsearch26_8,
        -:25953:                       linsearch27_8,
        -:25954:                       linsearch28_8,
        -:25955:                       linsearch29_8,
        -:25956:                       linsearch30_8,
        -:25957:                       linsearch31_8,
        -:25958:                       linsearch32_8
        -:25959:};
        -:25960:
        -:25961:static uint32_t
       30:25962:linsearch1_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:25963:  uint32_t tmp, tmp2;
        -:25964:  (void)tmp2;
       30:25965:  if (length == 0)
        -:25966:    return 0;
       30:25967:  value -= base;
       30:25968:  tmp = *(uint32_t *)in;
       30:25969:  if (value == ((tmp >> 0) & 1)) {
       29:25970:    *found = 0;
       29:25971:    return 0;
        -:25972:  }
        1:25973:  if (length == 1)
    #####:25974:    goto bail;
        1:25975:  if (value == ((tmp >> 1) & 1)) {
        1:25976:    *found = 1;
        1:25977:    return 1;
        -:25978:  }
    #####:25979:  if (length == 2)
    #####:25980:    goto bail;
    #####:25981:  if (value == ((tmp >> 2) & 1)) {
    #####:25982:    *found = 2;
    #####:25983:    return 2;
        -:25984:  }
    #####:25985:  if (length == 3)
    #####:25986:    goto bail;
    #####:25987:  if (value == ((tmp >> 3) & 1)) {
    #####:25988:    *found = 3;
    #####:25989:    return 3;
        -:25990:  }
    #####:25991:  if (length == 4)
    #####:25992:    goto bail;
    #####:25993:  if (value == ((tmp >> 4) & 1)) {
    #####:25994:    *found = 4;
    #####:25995:    return 4;
        -:25996:  }
    #####:25997:  if (length == 5)
    #####:25998:    goto bail;
    #####:25999:  if (value == ((tmp >> 5) & 1)) {
    #####:26000:    *found = 5;
    #####:26001:    return 5;
        -:26002:  }
    #####:26003:  if (length == 6)
    #####:26004:    goto bail;
    #####:26005:  if (value == ((tmp >> 6) & 1)) {
    #####:26006:    *found = 6;
    #####:26007:    return 6;
        -:26008:  }
    #####:26009:  if (length == 7)
    #####:26010:    goto bail;
    #####:26011:  if (value == ((tmp >> 7) & 1)) {
    #####:26012:    *found = 7;
    #####:26013:    return 7;
        -:26014:  }
        -:26015:  if (length == 8)
        -:26016:    goto bail;
    #####:26017:bail:
    #####:26018:  return ((length * 1) + 7) / 8;
        -:26019:}
        -:26020:
        -:26021:static uint32_t
       31:26022:linsearch2_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26023:  uint32_t tmp, tmp2;
        -:26024:  (void)tmp2;
       31:26025:  if (length == 0)
        -:26026:    return 0;
       31:26027:  value -= base;
       31:26028:  tmp = *(uint32_t *)in;
       31:26029:  if (value == ((tmp >> 0) & 3)) {
       13:26030:    *found = 0;
       13:26031:    return 0;
        -:26032:  }
       18:26033:  if (length == 1)
    #####:26034:    goto bail;
       18:26035:  if (value == ((tmp >> 2) & 3)) {
       10:26036:    *found = 1;
       10:26037:    return 1;
        -:26038:  }
        8:26039:  if (length == 2)
    #####:26040:    goto bail;
        8:26041:  if (value == ((tmp >> 4) & 3)) {
        8:26042:    *found = 2;
        8:26043:    return 2;
        -:26044:  }
    #####:26045:  if (length == 3)
    #####:26046:    goto bail;
    #####:26047:  if (value == ((tmp >> 6) & 3)) {
    #####:26048:    *found = 3;
    #####:26049:    return 3;
        -:26050:  }
    #####:26051:  if (length == 4)
    #####:26052:    goto bail;
    #####:26053:  if (value == ((tmp >> 8) & 3)) {
    #####:26054:    *found = 4;
    #####:26055:    return 4;
        -:26056:  }
    #####:26057:  if (length == 5)
    #####:26058:    goto bail;
    #####:26059:  if (value == ((tmp >> 10) & 3)) {
    #####:26060:    *found = 5;
    #####:26061:    return 5;
        -:26062:  }
    #####:26063:  if (length == 6)
    #####:26064:    goto bail;
    #####:26065:  if (value == ((tmp >> 12) & 3)) {
    #####:26066:    *found = 6;
    #####:26067:    return 6;
        -:26068:  }
    #####:26069:  if (length == 7)
    #####:26070:    goto bail;
    #####:26071:  if (value == ((tmp >> 14) & 3)) {
    #####:26072:    *found = 7;
    #####:26073:    return 7;
        -:26074:  }
        -:26075:  if (length == 8)
        -:26076:    goto bail;
    #####:26077:bail:
    #####:26078:  return ((length * 2) + 7) / 8;
        -:26079:}
        -:26080:
        -:26081:static uint32_t
       28:26082:linsearch3_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26083:  uint32_t tmp, tmp2;
        -:26084:  (void)tmp2;
       28:26085:  if (length == 0)
        -:26086:    return 0;
       28:26087:  value -= base;
       28:26088:  tmp = *(uint32_t *)in;
       28:26089:  if (value == ((tmp >> 0) & 7)) {
        7:26090:    *found = 0;
        7:26091:    return 0;
        -:26092:  }
       21:26093:  if (length == 1)
    #####:26094:    goto bail;
       21:26095:  if (value == ((tmp >> 3) & 7)) {
        6:26096:    *found = 1;
        6:26097:    return 1;
        -:26098:  }
       15:26099:  if (length == 2)
    #####:26100:    goto bail;
       15:26101:  if (value == ((tmp >> 6) & 7)) {
        5:26102:    *found = 2;
        5:26103:    return 2;
        -:26104:  }
       10:26105:  if (length == 3)
    #####:26106:    goto bail;
       10:26107:  if (value == ((tmp >> 9) & 7)) {
        4:26108:    *found = 3;
        4:26109:    return 3;
        -:26110:  }
        6:26111:  if (length == 4)
    #####:26112:    goto bail;
        6:26113:  if (value == ((tmp >> 12) & 7)) {
        3:26114:    *found = 4;
        3:26115:    return 4;
        -:26116:  }
        3:26117:  if (length == 5)
    #####:26118:    goto bail;
        3:26119:  if (value == ((tmp >> 15) & 7)) {
        2:26120:    *found = 5;
        2:26121:    return 5;
        -:26122:  }
        1:26123:  if (length == 6)
    #####:26124:    goto bail;
        1:26125:  if (value == ((tmp >> 18) & 7)) {
        1:26126:    *found = 6;
        1:26127:    return 6;
        -:26128:  }
    #####:26129:  if (length == 7)
    #####:26130:    goto bail;
    #####:26131:  if (value == ((tmp >> 21) & 7)) {
    #####:26132:    *found = 7;
    #####:26133:    return 7;
        -:26134:  }
        -:26135:  if (length == 8)
        -:26136:    goto bail;
    #####:26137:bail:
    #####:26138:  return ((length * 3) + 7) / 8;
        -:26139:}
        -:26140:
        -:26141:static uint32_t
       28:26142:linsearch4_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26143:  uint32_t tmp, tmp2;
        -:26144:  (void)tmp2;
       28:26145:  if (length == 0)
        -:26146:    return 0;
       28:26147:  value -= base;
       28:26148:  tmp = *(uint32_t *)in;
       28:26149:  if (value == ((tmp >> 0) & 15)) {
        7:26150:    *found = 0;
        7:26151:    return 0;
        -:26152:  }
       21:26153:  if (length == 1)
    #####:26154:    goto bail;
       21:26155:  if (value == ((tmp >> 4) & 15)) {
        6:26156:    *found = 1;
        6:26157:    return 1;
        -:26158:  }
       15:26159:  if (length == 2)
    #####:26160:    goto bail;
       15:26161:  if (value == ((tmp >> 8) & 15)) {
        5:26162:    *found = 2;
        5:26163:    return 2;
        -:26164:  }
       10:26165:  if (length == 3)
    #####:26166:    goto bail;
       10:26167:  if (value == ((tmp >> 12) & 15)) {
        4:26168:    *found = 3;
        4:26169:    return 3;
        -:26170:  }
        6:26171:  if (length == 4)
    #####:26172:    goto bail;
        6:26173:  if (value == ((tmp >> 16) & 15)) {
        3:26174:    *found = 4;
        3:26175:    return 4;
        -:26176:  }
        3:26177:  if (length == 5)
    #####:26178:    goto bail;
        3:26179:  if (value == ((tmp >> 20) & 15)) {
        2:26180:    *found = 5;
        2:26181:    return 5;
        -:26182:  }
        1:26183:  if (length == 6)
    #####:26184:    goto bail;
        1:26185:  if (value == ((tmp >> 24) & 15)) {
        1:26186:    *found = 6;
        1:26187:    return 6;
        -:26188:  }
    #####:26189:  if (length == 7)
    #####:26190:    goto bail;
    #####:26191:  if (value == ((tmp >> 28) & 15)) {
    #####:26192:    *found = 7;
    #####:26193:    return 7;
        -:26194:  }
        -:26195:  if (length == 8)
        -:26196:    goto bail;
    #####:26197:bail:
    #####:26198:  return ((length * 4) + 7) / 8;
        -:26199:}
        -:26200:
        -:26201:static uint32_t
       29:26202:linsearch5_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26203:  uint32_t tmp, tmp2;
        -:26204:  (void)tmp2;
       29:26205:  if (length == 0)
        -:26206:    return 0;
       29:26207:  value -= base;
       29:26208:  tmp = *(uint32_t *)in;
       29:26209:  if (value == ((tmp >> 0) & 31)) {
        8:26210:    *found = 0;
        8:26211:    return 0;
        -:26212:  }
       21:26213:  if (length == 1)
    #####:26214:    goto bail;
       21:26215:  if (value == ((tmp >> 5) & 31)) {
        6:26216:    *found = 1;
        6:26217:    return 1;
        -:26218:  }
       15:26219:  if (length == 2)
    #####:26220:    goto bail;
       15:26221:  if (value == ((tmp >> 10) & 31)) {
        5:26222:    *found = 2;
        5:26223:    return 2;
        -:26224:  }
       10:26225:  if (length == 3)
    #####:26226:    goto bail;
       10:26227:  if (value == ((tmp >> 15) & 31)) {
        4:26228:    *found = 3;
        4:26229:    return 3;
        -:26230:  }
        6:26231:  if (length == 4)
    #####:26232:    goto bail;
        6:26233:  if (value == ((tmp >> 20) & 31)) {
        3:26234:    *found = 4;
        3:26235:    return 4;
        -:26236:  }
        3:26237:  if (length == 5)
    #####:26238:    goto bail;
        3:26239:  if (value == ((tmp >> 25) & 31)) {
        2:26240:    *found = 5;
        2:26241:    return 5;
        -:26242:  }
        1:26243:  if (length == 6)
    #####:26244:    goto bail;
        1:26245:  tmp2 = tmp >> 30;
        -:26246:  in += sizeof(uint32_t);
        1:26247:  tmp = *(uint32_t *)in;
        1:26248:  if ((tmp2 | (tmp % (1U << 3)) << (5 - 3)) == value) {
        1:26249:    *found = 6;
        1:26250:    return 6;
        -:26251:  }
    #####:26252:  if (length == 7)
    #####:26253:    goto bail;
    #####:26254:  if (value == ((tmp >> 3) & 31)) {
    #####:26255:    *found = 7;
    #####:26256:    return 7;
        -:26257:  }
        -:26258:  if (length == 8)
        -:26259:    goto bail;
    #####:26260:bail:
    #####:26261:  return ((length * 5) + 7) / 8;
        -:26262:}
        -:26263:
        -:26264:static uint32_t
       29:26265:linsearch6_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26266:  uint32_t tmp, tmp2;
        -:26267:  (void)tmp2;
       29:26268:  if (length == 0)
        -:26269:    return 0;
       29:26270:  value -= base;
       29:26271:  tmp = *(uint32_t *)in;
       29:26272:  if (value == ((tmp >> 0) & 63)) {
        8:26273:    *found = 0;
        8:26274:    return 0;
        -:26275:  }
       21:26276:  if (length == 1)
    #####:26277:    goto bail;
       21:26278:  if (value == ((tmp >> 6) & 63)) {
        6:26279:    *found = 1;
        6:26280:    return 1;
        -:26281:  }
       15:26282:  if (length == 2)
    #####:26283:    goto bail;
       15:26284:  if (value == ((tmp >> 12) & 63)) {
        5:26285:    *found = 2;
        5:26286:    return 2;
        -:26287:  }
       10:26288:  if (length == 3)
    #####:26289:    goto bail;
       10:26290:  if (value == ((tmp >> 18) & 63)) {
        4:26291:    *found = 3;
        4:26292:    return 3;
        -:26293:  }
        6:26294:  if (length == 4)
    #####:26295:    goto bail;
        6:26296:  if (value == ((tmp >> 24) & 63)) {
        3:26297:    *found = 4;
        3:26298:    return 4;
        -:26299:  }
        3:26300:  if (length == 5)
    #####:26301:    goto bail;
        3:26302:  tmp2 = tmp >> 30;
        -:26303:  in += sizeof(uint32_t);
        3:26304:  tmp = *(uint32_t *)in;
        3:26305:  if ((tmp2 | (tmp % (1U << 4)) << (6 - 4)) == value) {
        2:26306:    *found = 5;
        2:26307:    return 5;
        -:26308:  }
        1:26309:  if (length == 6)
    #####:26310:    goto bail;
        1:26311:  if (value == ((tmp >> 4) & 63)) {
        1:26312:    *found = 6;
        1:26313:    return 6;
        -:26314:  }
    #####:26315:  if (length == 7)
    #####:26316:    goto bail;
    #####:26317:  if (value == ((tmp >> 10) & 63)) {
    #####:26318:    *found = 7;
    #####:26319:    return 7;
        -:26320:  }
        -:26321:  if (length == 8)
        -:26322:    goto bail;
    #####:26323:bail:
    #####:26324:  return ((length * 6) + 7) / 8;
        -:26325:}
        -:26326:
        -:26327:static uint32_t
       29:26328:linsearch7_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26329:  uint32_t tmp, tmp2;
        -:26330:  (void)tmp2;
       29:26331:  if (length == 0)
        -:26332:    return 0;
       29:26333:  value -= base;
       29:26334:  tmp = *(uint32_t *)in;
       29:26335:  if (value == ((tmp >> 0) & 127)) {
        8:26336:    *found = 0;
        8:26337:    return 0;
        -:26338:  }
       21:26339:  if (length == 1)
    #####:26340:    goto bail;
       21:26341:  if (value == ((tmp >> 7) & 127)) {
        6:26342:    *found = 1;
        6:26343:    return 1;
        -:26344:  }
       15:26345:  if (length == 2)
    #####:26346:    goto bail;
       15:26347:  if (value == ((tmp >> 14) & 127)) {
        5:26348:    *found = 2;
        5:26349:    return 2;
        -:26350:  }
       10:26351:  if (length == 3)
    #####:26352:    goto bail;
       10:26353:  if (value == ((tmp >> 21) & 127)) {
        4:26354:    *found = 3;
        4:26355:    return 3;
        -:26356:  }
        6:26357:  if (length == 4)
    #####:26358:    goto bail;
        6:26359:  tmp2 = tmp >> 28;
        -:26360:  in += sizeof(uint32_t);
        6:26361:  tmp = *(uint32_t *)in;
        6:26362:  if ((tmp2 | (tmp % (1U << 3)) << (7 - 3)) == value) {
        3:26363:    *found = 4;
        3:26364:    return 4;
        -:26365:  }
        3:26366:  if (length == 5)
    #####:26367:    goto bail;
        3:26368:  if (value == ((tmp >> 3) & 127)) {
        2:26369:    *found = 5;
        2:26370:    return 5;
        -:26371:  }
        1:26372:  if (length == 6)
    #####:26373:    goto bail;
        1:26374:  if (value == ((tmp >> 10) & 127)) {
        1:26375:    *found = 6;
        1:26376:    return 6;
        -:26377:  }
    #####:26378:  if (length == 7)
    #####:26379:    goto bail;
    #####:26380:  if (value == ((tmp >> 17) & 127)) {
    #####:26381:    *found = 7;
    #####:26382:    return 7;
        -:26383:  }
        -:26384:  if (length == 8)
        -:26385:    goto bail;
    #####:26386:bail:
    #####:26387:  return ((length * 7) + 7) / 8;
        -:26388:}
        -:26389:
        -:26390:static uint32_t
       29:26391:linsearch8_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26392:  uint32_t tmp, tmp2;
        -:26393:  (void)tmp2;
       29:26394:  if (length == 0)
        -:26395:    return 0;
       29:26396:  value -= base;
       29:26397:  tmp = *(uint32_t *)in;
       29:26398:  if (value == ((tmp >> 0) & 255)) {
        8:26399:    *found = 0;
        8:26400:    return 0;
        -:26401:  }
       21:26402:  if (length == 1)
    #####:26403:    goto bail;
       21:26404:  if (value == ((tmp >> 8) & 255)) {
        6:26405:    *found = 1;
        6:26406:    return 1;
        -:26407:  }
       15:26408:  if (length == 2)
    #####:26409:    goto bail;
       15:26410:  if (value == ((tmp >> 16) & 255)) {
        5:26411:    *found = 2;
        5:26412:    return 2;
        -:26413:  }
       10:26414:  if (length == 3)
    #####:26415:    goto bail;
       10:26416:  if (value == ((tmp >> 24) & 255)) {
        4:26417:    *found = 3;
        4:26418:    return 3;
        -:26419:  }
        6:26420:  if (length == 4)
    #####:26421:    goto bail;
        -:26422:  in += sizeof(uint32_t);
        6:26423:  tmp = *(uint32_t *)in;
        6:26424:  if (value == ((tmp >> 0) & 255)) {
        3:26425:    *found = 4;
        3:26426:    return 4;
        -:26427:  }
        3:26428:  if (length == 5)
    #####:26429:    goto bail;
        3:26430:  if (value == ((tmp >> 8) & 255)) {
        2:26431:    *found = 5;
        2:26432:    return 5;
        -:26433:  }
        1:26434:  if (length == 6)
    #####:26435:    goto bail;
        1:26436:  if (value == ((tmp >> 16) & 255)) {
        1:26437:    *found = 6;
        1:26438:    return 6;
        -:26439:  }
    #####:26440:  if (length == 7)
    #####:26441:    goto bail;
    #####:26442:  if (value == ((tmp >> 24) & 255)) {
    #####:26443:    *found = 7;
    #####:26444:    return 7;
        -:26445:  }
        -:26446:  if (length == 8)
        -:26447:    goto bail;
    #####:26448:bail:
    #####:26449:  return ((length * 8) + 7) / 8;
        -:26450:}
        -:26451:
        -:26452:static uint32_t
       31:26453:linsearch9_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26454:  uint32_t tmp, tmp2;
        -:26455:  (void)tmp2;
       31:26456:  if (length == 0)
        -:26457:    return 0;
       31:26458:  value -= base;
       31:26459:  tmp = *(uint32_t *)in;
       31:26460:  if (value == ((tmp >> 0) & 511)) {
        9:26461:    *found = 0;
        9:26462:    return 0;
        -:26463:  }
       22:26464:  if (length == 1)
    #####:26465:    goto bail;
       22:26466:  if (value == ((tmp >> 9) & 511)) {
        7:26467:    *found = 1;
        7:26468:    return 1;
        -:26469:  }
       15:26470:  if (length == 2)
    #####:26471:    goto bail;
       15:26472:  if (value == ((tmp >> 18) & 511)) {
        5:26473:    *found = 2;
        5:26474:    return 2;
        -:26475:  }
       10:26476:  if (length == 3)
    #####:26477:    goto bail;
       10:26478:  tmp2 = tmp >> 27;
        -:26479:  in += sizeof(uint32_t);
       10:26480:  tmp = *(uint32_t *)in;
       10:26481:  if ((tmp2 | (tmp % (1U << 4)) << (9 - 4)) == value) {
        4:26482:    *found = 3;
        4:26483:    return 3;
        -:26484:  }
        6:26485:  if (length == 4)
    #####:26486:    goto bail;
        6:26487:  if (value == ((tmp >> 4) & 511)) {
        3:26488:    *found = 4;
        3:26489:    return 4;
        -:26490:  }
        3:26491:  if (length == 5)
    #####:26492:    goto bail;
        3:26493:  if (value == ((tmp >> 13) & 511)) {
        2:26494:    *found = 5;
        2:26495:    return 5;
        -:26496:  }
        1:26497:  if (length == 6)
    #####:26498:    goto bail;
        1:26499:  if (value == ((tmp >> 22) & 511)) {
        1:26500:    *found = 6;
        1:26501:    return 6;
        -:26502:  }
    #####:26503:  if (length == 7)
    #####:26504:    goto bail;
    #####:26505:  tmp2 = tmp >> 31;
        -:26506:  in += sizeof(uint32_t);
    #####:26507:  tmp = *(uint32_t *)in;
    #####:26508:  if ((tmp2 | (tmp % (1U << 8)) << (9 - 8)) == value) {
    #####:26509:    *found = 7;
    #####:26510:    return 7;
        -:26511:  }
        -:26512:  if (length == 8)
        -:26513:    goto bail;
    #####:26514:bail:
    #####:26515:  return ((length * 9) + 7) / 8;
        -:26516:}
        -:26517:
        -:26518:static uint32_t
       28:26519:linsearch10_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26520:  uint32_t tmp, tmp2;
        -:26521:  (void)tmp2;
       28:26522:  if (length == 0)
        -:26523:    return 0;
       28:26524:  value -= base;
       28:26525:  tmp = *(uint32_t *)in;
       28:26526:  if (value == ((tmp >> 0) & 1023)) {
        7:26527:    *found = 0;
        7:26528:    return 0;
        -:26529:  }
       21:26530:  if (length == 1)
    #####:26531:    goto bail;
       21:26532:  if (value == ((tmp >> 10) & 1023)) {
        6:26533:    *found = 1;
        6:26534:    return 1;
        -:26535:  }
       15:26536:  if (length == 2)
    #####:26537:    goto bail;
       15:26538:  if (value == ((tmp >> 20) & 1023)) {
        5:26539:    *found = 2;
        5:26540:    return 2;
        -:26541:  }
       10:26542:  if (length == 3)
    #####:26543:    goto bail;
       10:26544:  tmp2 = tmp >> 30;
        -:26545:  in += sizeof(uint32_t);
       10:26546:  tmp = *(uint32_t *)in;
       10:26547:  if ((tmp2 | (tmp % (1U << 8)) << (10 - 8)) == value) {
        4:26548:    *found = 3;
        4:26549:    return 3;
        -:26550:  }
        6:26551:  if (length == 4)
    #####:26552:    goto bail;
        6:26553:  if (value == ((tmp >> 8) & 1023)) {
        3:26554:    *found = 4;
        3:26555:    return 4;
        -:26556:  }
        3:26557:  if (length == 5)
    #####:26558:    goto bail;
        3:26559:  if (value == ((tmp >> 18) & 1023)) {
        2:26560:    *found = 5;
        2:26561:    return 5;
        -:26562:  }
        1:26563:  if (length == 6)
    #####:26564:    goto bail;
        1:26565:  tmp2 = tmp >> 28;
        -:26566:  in += sizeof(uint32_t);
        1:26567:  tmp = *(uint32_t *)in;
        1:26568:  if ((tmp2 | (tmp % (1U << 6)) << (10 - 6)) == value) {
        1:26569:    *found = 6;
        1:26570:    return 6;
        -:26571:  }
    #####:26572:  if (length == 7)
    #####:26573:    goto bail;
    #####:26574:  if (value == ((tmp >> 6) & 1023)) {
    #####:26575:    *found = 7;
    #####:26576:    return 7;
        -:26577:  }
        -:26578:  if (length == 8)
        -:26579:    goto bail;
    #####:26580:bail:
    #####:26581:  return ((length * 10) + 7) / 8;
        -:26582:}
        -:26583:
        -:26584:static uint32_t
       34:26585:linsearch11_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26586:  uint32_t tmp, tmp2;
        -:26587:  (void)tmp2;
       34:26588:  if (length == 0)
        -:26589:    return 0;
       34:26590:  value -= base;
       34:26591:  tmp = *(uint32_t *)in;
       34:26592:  if (value == ((tmp >> 0) & 2047)) {
        9:26593:    *found = 0;
        9:26594:    return 0;
        -:26595:  }
       25:26596:  if (length == 1)
    #####:26597:    goto bail;
       25:26598:  if (value == ((tmp >> 11) & 2047)) {
        7:26599:    *found = 1;
        7:26600:    return 1;
        -:26601:  }
       18:26602:  if (length == 2)
    #####:26603:    goto bail;
       18:26604:  tmp2 = tmp >> 22;
        -:26605:  in += sizeof(uint32_t);
       18:26606:  tmp = *(uint32_t *)in;
       18:26607:  if ((tmp2 | (tmp % (1U << 1)) << (11 - 1)) == value) {
        6:26608:    *found = 2;
        6:26609:    return 2;
        -:26610:  }
       12:26611:  if (length == 3)
    #####:26612:    goto bail;
       12:26613:  if (value == ((tmp >> 1) & 2047)) {
        5:26614:    *found = 3;
        5:26615:    return 3;
        -:26616:  }
        7:26617:  if (length == 4)
    #####:26618:    goto bail;
        7:26619:  if (value == ((tmp >> 12) & 2047)) {
        4:26620:    *found = 4;
        4:26621:    return 4;
        -:26622:  }
        3:26623:  if (length == 5)
    #####:26624:    goto bail;
        3:26625:  tmp2 = tmp >> 23;
        -:26626:  in += sizeof(uint32_t);
        3:26627:  tmp = *(uint32_t *)in;
        3:26628:  if ((tmp2 | (tmp % (1U << 2)) << (11 - 2)) == value) {
        2:26629:    *found = 5;
        2:26630:    return 5;
        -:26631:  }
        1:26632:  if (length == 6)
    #####:26633:    goto bail;
        1:26634:  if (value == ((tmp >> 2) & 2047)) {
        1:26635:    *found = 6;
        1:26636:    return 6;
        -:26637:  }
    #####:26638:  if (length == 7)
    #####:26639:    goto bail;
    #####:26640:  if (value == ((tmp >> 13) & 2047)) {
    #####:26641:    *found = 7;
    #####:26642:    return 7;
        -:26643:  }
        -:26644:  if (length == 8)
        -:26645:    goto bail;
    #####:26646:bail:
    #####:26647:  return ((length * 11) + 7) / 8;
        -:26648:}
        -:26649:
        -:26650:static uint32_t
       28:26651:linsearch12_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26652:  uint32_t tmp, tmp2;
        -:26653:  (void)tmp2;
       28:26654:  if (length == 0)
        -:26655:    return 0;
       28:26656:  value -= base;
       28:26657:  tmp = *(uint32_t *)in;
       28:26658:  if (value == ((tmp >> 0) & 4095)) {
        7:26659:    *found = 0;
        7:26660:    return 0;
        -:26661:  }
       21:26662:  if (length == 1)
    #####:26663:    goto bail;
       21:26664:  if (value == ((tmp >> 12) & 4095)) {
        6:26665:    *found = 1;
        6:26666:    return 1;
        -:26667:  }
       15:26668:  if (length == 2)
    #####:26669:    goto bail;
       15:26670:  tmp2 = tmp >> 24;
        -:26671:  in += sizeof(uint32_t);
       15:26672:  tmp = *(uint32_t *)in;
       15:26673:  if ((tmp2 | (tmp % (1U << 4)) << (12 - 4)) == value) {
        5:26674:    *found = 2;
        5:26675:    return 2;
        -:26676:  }
       10:26677:  if (length == 3)
    #####:26678:    goto bail;
       10:26679:  if (value == ((tmp >> 4) & 4095)) {
        4:26680:    *found = 3;
        4:26681:    return 3;
        -:26682:  }
        6:26683:  if (length == 4)
    #####:26684:    goto bail;
        6:26685:  if (value == ((tmp >> 16) & 4095)) {
        3:26686:    *found = 4;
        3:26687:    return 4;
        -:26688:  }
        3:26689:  if (length == 5)
    #####:26690:    goto bail;
        3:26691:  tmp2 = tmp >> 28;
        -:26692:  in += sizeof(uint32_t);
        3:26693:  tmp = *(uint32_t *)in;
        3:26694:  if ((tmp2 | (tmp % (1U << 8)) << (12 - 8)) == value) {
        2:26695:    *found = 5;
        2:26696:    return 5;
        -:26697:  }
        1:26698:  if (length == 6)
    #####:26699:    goto bail;
        1:26700:  if (value == ((tmp >> 8) & 4095)) {
        1:26701:    *found = 6;
        1:26702:    return 6;
        -:26703:  }
    #####:26704:  if (length == 7)
    #####:26705:    goto bail;
    #####:26706:  if (value == ((tmp >> 20) & 4095)) {
    #####:26707:    *found = 7;
    #####:26708:    return 7;
        -:26709:  }
        -:26710:  if (length == 8)
        -:26711:    goto bail;
    #####:26712:bail:
    #####:26713:  return ((length * 12) + 7) / 8;
        -:26714:}
        -:26715:
        -:26716:static uint32_t
       28:26717:linsearch13_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26718:  uint32_t tmp, tmp2;
        -:26719:  (void)tmp2;
       28:26720:  if (length == 0)
        -:26721:    return 0;
       28:26722:  value -= base;
       28:26723:  tmp = *(uint32_t *)in;
       28:26724:  if (value == ((tmp >> 0) & 8191)) {
        7:26725:    *found = 0;
        7:26726:    return 0;
        -:26727:  }
       21:26728:  if (length == 1)
    #####:26729:    goto bail;
       21:26730:  if (value == ((tmp >> 13) & 8191)) {
        6:26731:    *found = 1;
        6:26732:    return 1;
        -:26733:  }
       15:26734:  if (length == 2)
    #####:26735:    goto bail;
       15:26736:  tmp2 = tmp >> 26;
        -:26737:  in += sizeof(uint32_t);
       15:26738:  tmp = *(uint32_t *)in;
       15:26739:  if ((tmp2 | (tmp % (1U << 7)) << (13 - 7)) == value) {
        5:26740:    *found = 2;
        5:26741:    return 2;
        -:26742:  }
       10:26743:  if (length == 3)
    #####:26744:    goto bail;
       10:26745:  if (value == ((tmp >> 7) & 8191)) {
        4:26746:    *found = 3;
        4:26747:    return 3;
        -:26748:  }
        6:26749:  if (length == 4)
    #####:26750:    goto bail;
        6:26751:  tmp2 = tmp >> 20;
        -:26752:  in += sizeof(uint32_t);
        6:26753:  tmp = *(uint32_t *)in;
        6:26754:  if ((tmp2 | (tmp % (1U << 1)) << (13 - 1)) == value) {
        3:26755:    *found = 4;
        3:26756:    return 4;
        -:26757:  }
        3:26758:  if (length == 5)
    #####:26759:    goto bail;
        3:26760:  if (value == ((tmp >> 1) & 8191)) {
        2:26761:    *found = 5;
        2:26762:    return 5;
        -:26763:  }
        1:26764:  if (length == 6)
    #####:26765:    goto bail;
        1:26766:  if (value == ((tmp >> 14) & 8191)) {
        1:26767:    *found = 6;
        1:26768:    return 6;
        -:26769:  }
    #####:26770:  if (length == 7)
    #####:26771:    goto bail;
    #####:26772:  tmp2 = tmp >> 27;
        -:26773:  in += sizeof(uint32_t);
    #####:26774:  tmp = *(uint32_t *)in;
    #####:26775:  if ((tmp2 | (tmp % (1U << 8)) << (13 - 8)) == value) {
    #####:26776:    *found = 7;
    #####:26777:    return 7;
        -:26778:  }
        -:26779:  if (length == 8)
        -:26780:    goto bail;
    #####:26781:bail:
    #####:26782:  return ((length * 13) + 7) / 8;
        -:26783:}
        -:26784:
        -:26785:static uint32_t
       28:26786:linsearch14_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26787:  uint32_t tmp, tmp2;
        -:26788:  (void)tmp2;
       28:26789:  if (length == 0)
        -:26790:    return 0;
       28:26791:  value -= base;
       28:26792:  tmp = *(uint32_t *)in;
       28:26793:  if (value == ((tmp >> 0) & 16383)) {
        7:26794:    *found = 0;
        7:26795:    return 0;
        -:26796:  }
       21:26797:  if (length == 1)
    #####:26798:    goto bail;
       21:26799:  if (value == ((tmp >> 14) & 16383)) {
        6:26800:    *found = 1;
        6:26801:    return 1;
        -:26802:  }
       15:26803:  if (length == 2)
    #####:26804:    goto bail;
       15:26805:  tmp2 = tmp >> 28;
        -:26806:  in += sizeof(uint32_t);
       15:26807:  tmp = *(uint32_t *)in;
       15:26808:  if ((tmp2 | (tmp % (1U << 10)) << (14 - 10)) == value) {
        5:26809:    *found = 2;
        5:26810:    return 2;
        -:26811:  }
       10:26812:  if (length == 3)
    #####:26813:    goto bail;
       10:26814:  if (value == ((tmp >> 10) & 16383)) {
        4:26815:    *found = 3;
        4:26816:    return 3;
        -:26817:  }
        6:26818:  if (length == 4)
    #####:26819:    goto bail;
        6:26820:  tmp2 = tmp >> 24;
        -:26821:  in += sizeof(uint32_t);
        6:26822:  tmp = *(uint32_t *)in;
        6:26823:  if ((tmp2 | (tmp % (1U << 6)) << (14 - 6)) == value) {
        3:26824:    *found = 4;
        3:26825:    return 4;
        -:26826:  }
        3:26827:  if (length == 5)
    #####:26828:    goto bail;
        3:26829:  if (value == ((tmp >> 6) & 16383)) {
        2:26830:    *found = 5;
        2:26831:    return 5;
        -:26832:  }
        1:26833:  if (length == 6)
    #####:26834:    goto bail;
        1:26835:  tmp2 = tmp >> 20;
        -:26836:  in += sizeof(uint32_t);
        1:26837:  tmp = *(uint32_t *)in;
        1:26838:  if ((tmp2 | (tmp % (1U << 2)) << (14 - 2)) == value) {
        1:26839:    *found = 6;
        1:26840:    return 6;
        -:26841:  }
    #####:26842:  if (length == 7)
    #####:26843:    goto bail;
    #####:26844:  if (value == ((tmp >> 2) & 16383)) {
    #####:26845:    *found = 7;
    #####:26846:    return 7;
        -:26847:  }
        -:26848:  if (length == 8)
        -:26849:    goto bail;
    #####:26850:bail:
    #####:26851:  return ((length * 14) + 7) / 8;
        -:26852:}
        -:26853:
        -:26854:static uint32_t
       35:26855:linsearch15_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26856:  uint32_t tmp, tmp2;
        -:26857:  (void)tmp2;
       35:26858:  if (length == 0)
        -:26859:    return 0;
       35:26860:  value -= base;
       35:26861:  tmp = *(uint32_t *)in;
       35:26862:  if (value == ((tmp >> 0) & 32767)) {
       12:26863:    *found = 0;
       12:26864:    return 0;
        -:26865:  }
       23:26866:  if (length == 1)
    #####:26867:    goto bail;
       23:26868:  if (value == ((tmp >> 15) & 32767)) {
        7:26869:    *found = 1;
        7:26870:    return 1;
        -:26871:  }
       16:26872:  if (length == 2)
    #####:26873:    goto bail;
       16:26874:  tmp2 = tmp >> 30;
        -:26875:  in += sizeof(uint32_t);
       16:26876:  tmp = *(uint32_t *)in;
       16:26877:  if ((tmp2 | (tmp % (1U << 13)) << (15 - 13)) == value) {
        6:26878:    *found = 2;
        6:26879:    return 2;
        -:26880:  }
       10:26881:  if (length == 3)
    #####:26882:    goto bail;
       10:26883:  if (value == ((tmp >> 13) & 32767)) {
        4:26884:    *found = 3;
        4:26885:    return 3;
        -:26886:  }
        6:26887:  if (length == 4)
    #####:26888:    goto bail;
        6:26889:  tmp2 = tmp >> 28;
        -:26890:  in += sizeof(uint32_t);
        6:26891:  tmp = *(uint32_t *)in;
        6:26892:  if ((tmp2 | (tmp % (1U << 11)) << (15 - 11)) == value) {
        3:26893:    *found = 4;
        3:26894:    return 4;
        -:26895:  }
        3:26896:  if (length == 5)
    #####:26897:    goto bail;
        3:26898:  if (value == ((tmp >> 11) & 32767)) {
        2:26899:    *found = 5;
        2:26900:    return 5;
        -:26901:  }
        1:26902:  if (length == 6)
    #####:26903:    goto bail;
        1:26904:  tmp2 = tmp >> 26;
        -:26905:  in += sizeof(uint32_t);
        1:26906:  tmp = *(uint32_t *)in;
        1:26907:  if ((tmp2 | (tmp % (1U << 9)) << (15 - 9)) == value) {
        1:26908:    *found = 6;
        1:26909:    return 6;
        -:26910:  }
    #####:26911:  if (length == 7)
    #####:26912:    goto bail;
    #####:26913:  if (value == ((tmp >> 9) & 32767)) {
    #####:26914:    *found = 7;
    #####:26915:    return 7;
        -:26916:  }
        -:26917:  if (length == 8)
        -:26918:    goto bail;
    #####:26919:bail:
    #####:26920:  return ((length * 15) + 7) / 8;
        -:26921:}
        -:26922:
        -:26923:static uint32_t
       28:26924:linsearch16_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26925:  uint32_t tmp, tmp2;
        -:26926:  (void)tmp2;
       28:26927:  if (length == 0)
        -:26928:    return 0;
       28:26929:  value -= base;
       28:26930:  tmp = *(uint32_t *)in;
       28:26931:  if (value == ((tmp >> 0) & 65535)) {
        7:26932:    *found = 0;
        7:26933:    return 0;
        -:26934:  }
       21:26935:  if (length == 1)
    #####:26936:    goto bail;
       21:26937:  if (value == ((tmp >> 16) & 65535)) {
        6:26938:    *found = 1;
        6:26939:    return 1;
        -:26940:  }
       15:26941:  if (length == 2)
    #####:26942:    goto bail;
        -:26943:  in += sizeof(uint32_t);
       15:26944:  tmp = *(uint32_t *)in;
       15:26945:  if (value == ((tmp >> 0) & 65535)) {
        5:26946:    *found = 2;
        5:26947:    return 2;
        -:26948:  }
       10:26949:  if (length == 3)
    #####:26950:    goto bail;
       10:26951:  if (value == ((tmp >> 16) & 65535)) {
        4:26952:    *found = 3;
        4:26953:    return 3;
        -:26954:  }
        6:26955:  if (length == 4)
    #####:26956:    goto bail;
        -:26957:  in += sizeof(uint32_t);
        6:26958:  tmp = *(uint32_t *)in;
        6:26959:  if (value == ((tmp >> 0) & 65535)) {
        3:26960:    *found = 4;
        3:26961:    return 4;
        -:26962:  }
        3:26963:  if (length == 5)
    #####:26964:    goto bail;
        3:26965:  if (value == ((tmp >> 16) & 65535)) {
        2:26966:    *found = 5;
        2:26967:    return 5;
        -:26968:  }
        1:26969:  if (length == 6)
    #####:26970:    goto bail;
        -:26971:  in += sizeof(uint32_t);
        1:26972:  tmp = *(uint32_t *)in;
        1:26973:  if (value == ((tmp >> 0) & 65535)) {
        1:26974:    *found = 6;
        1:26975:    return 6;
        -:26976:  }
    #####:26977:  if (length == 7)
    #####:26978:    goto bail;
    #####:26979:  if (value == ((tmp >> 16) & 65535)) {
    #####:26980:    *found = 7;
    #####:26981:    return 7;
        -:26982:  }
        -:26983:  if (length == 8)
        -:26984:    goto bail;
    #####:26985:bail:
    #####:26986:  return ((length * 16) + 7) / 8;
        -:26987:}
        -:26988:
        -:26989:static uint32_t
       28:26990:linsearch17_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:26991:  uint32_t tmp, tmp2;
        -:26992:  (void)tmp2;
       28:26993:  if (length == 0)
        -:26994:    return 0;
       28:26995:  value -= base;
       28:26996:  tmp = *(uint32_t *)in;
       28:26997:  if (value == ((tmp >> 0) & 131071)) {
        7:26998:    *found = 0;
        7:26999:    return 0;
        -:27000:  }
       21:27001:  if (length == 1)
    #####:27002:    goto bail;
       21:27003:  tmp2 = tmp >> 17;
        -:27004:  in += sizeof(uint32_t);
       21:27005:  tmp = *(uint32_t *)in;
       21:27006:  if ((tmp2 | (tmp % (1U << 2)) << (17 - 2)) == value) {
        6:27007:    *found = 1;
        6:27008:    return 1;
        -:27009:  }
       15:27010:  if (length == 2)
    #####:27011:    goto bail;
       15:27012:  if (value == ((tmp >> 2) & 131071)) {
        5:27013:    *found = 2;
        5:27014:    return 2;
        -:27015:  }
       10:27016:  if (length == 3)
    #####:27017:    goto bail;
       10:27018:  tmp2 = tmp >> 19;
        -:27019:  in += sizeof(uint32_t);
       10:27020:  tmp = *(uint32_t *)in;
       10:27021:  if ((tmp2 | (tmp % (1U << 4)) << (17 - 4)) == value) {
        4:27022:    *found = 3;
        4:27023:    return 3;
        -:27024:  }
        6:27025:  if (length == 4)
    #####:27026:    goto bail;
        6:27027:  if (value == ((tmp >> 4) & 131071)) {
        3:27028:    *found = 4;
        3:27029:    return 4;
        -:27030:  }
        3:27031:  if (length == 5)
    #####:27032:    goto bail;
        3:27033:  tmp2 = tmp >> 21;
        -:27034:  in += sizeof(uint32_t);
        3:27035:  tmp = *(uint32_t *)in;
        3:27036:  if ((tmp2 | (tmp % (1U << 6)) << (17 - 6)) == value) {
        2:27037:    *found = 5;
        2:27038:    return 5;
        -:27039:  }
        1:27040:  if (length == 6)
    #####:27041:    goto bail;
        1:27042:  if (value == ((tmp >> 6) & 131071)) {
        1:27043:    *found = 6;
        1:27044:    return 6;
        -:27045:  }
    #####:27046:  if (length == 7)
    #####:27047:    goto bail;
    #####:27048:  tmp2 = tmp >> 23;
        -:27049:  in += sizeof(uint32_t);
    #####:27050:  tmp = *(uint32_t *)in;
    #####:27051:  if ((tmp2 | (tmp % (1U << 8)) << (17 - 8)) == value) {
    #####:27052:    *found = 7;
    #####:27053:    return 7;
        -:27054:  }
        -:27055:  if (length == 8)
        -:27056:    goto bail;
    #####:27057:bail:
    #####:27058:  return ((length * 17) + 7) / 8;
        -:27059:}
        -:27060:
        -:27061:static uint32_t
       28:27062:linsearch18_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27063:  uint32_t tmp, tmp2;
        -:27064:  (void)tmp2;
       28:27065:  if (length == 0)
        -:27066:    return 0;
       28:27067:  value -= base;
       28:27068:  tmp = *(uint32_t *)in;
       28:27069:  if (value == ((tmp >> 0) & 262143)) {
        7:27070:    *found = 0;
        7:27071:    return 0;
        -:27072:  }
       21:27073:  if (length == 1)
    #####:27074:    goto bail;
       21:27075:  tmp2 = tmp >> 18;
        -:27076:  in += sizeof(uint32_t);
       21:27077:  tmp = *(uint32_t *)in;
       21:27078:  if ((tmp2 | (tmp % (1U << 4)) << (18 - 4)) == value) {
        6:27079:    *found = 1;
        6:27080:    return 1;
        -:27081:  }
       15:27082:  if (length == 2)
    #####:27083:    goto bail;
       15:27084:  if (value == ((tmp >> 4) & 262143)) {
        5:27085:    *found = 2;
        5:27086:    return 2;
        -:27087:  }
       10:27088:  if (length == 3)
    #####:27089:    goto bail;
       10:27090:  tmp2 = tmp >> 22;
        -:27091:  in += sizeof(uint32_t);
       10:27092:  tmp = *(uint32_t *)in;
       10:27093:  if ((tmp2 | (tmp % (1U << 8)) << (18 - 8)) == value) {
        4:27094:    *found = 3;
        4:27095:    return 3;
        -:27096:  }
        6:27097:  if (length == 4)
    #####:27098:    goto bail;
        6:27099:  if (value == ((tmp >> 8) & 262143)) {
        3:27100:    *found = 4;
        3:27101:    return 4;
        -:27102:  }
        3:27103:  if (length == 5)
    #####:27104:    goto bail;
        3:27105:  tmp2 = tmp >> 26;
        -:27106:  in += sizeof(uint32_t);
        3:27107:  tmp = *(uint32_t *)in;
        3:27108:  if ((tmp2 | (tmp % (1U << 12)) << (18 - 12)) == value) {
        2:27109:    *found = 5;
        2:27110:    return 5;
        -:27111:  }
        1:27112:  if (length == 6)
    #####:27113:    goto bail;
        1:27114:  if (value == ((tmp >> 12) & 262143)) {
        1:27115:    *found = 6;
        1:27116:    return 6;
        -:27117:  }
    #####:27118:  if (length == 7)
    #####:27119:    goto bail;
    #####:27120:  tmp2 = tmp >> 30;
        -:27121:  in += sizeof(uint32_t);
    #####:27122:  tmp = *(uint32_t *)in;
    #####:27123:  if ((tmp2 | (tmp % (1U << 16)) << (18 - 16)) == value) {
    #####:27124:    *found = 7;
    #####:27125:    return 7;
        -:27126:  }
        -:27127:  if (length == 8)
        -:27128:    goto bail;
    #####:27129:bail:
    #####:27130:  return ((length * 18) + 7) / 8;
        -:27131:}
        -:27132:
        -:27133:static uint32_t
       28:27134:linsearch19_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27135:  uint32_t tmp, tmp2;
        -:27136:  (void)tmp2;
       28:27137:  if (length == 0)
        -:27138:    return 0;
       28:27139:  value -= base;
       28:27140:  tmp = *(uint32_t *)in;
       28:27141:  if (value == ((tmp >> 0) & 524287)) {
        7:27142:    *found = 0;
        7:27143:    return 0;
        -:27144:  }
       21:27145:  if (length == 1)
    #####:27146:    goto bail;
       21:27147:  tmp2 = tmp >> 19;
        -:27148:  in += sizeof(uint32_t);
       21:27149:  tmp = *(uint32_t *)in;
       21:27150:  if ((tmp2 | (tmp % (1U << 6)) << (19 - 6)) == value) {
        6:27151:    *found = 1;
        6:27152:    return 1;
        -:27153:  }
       15:27154:  if (length == 2)
    #####:27155:    goto bail;
       15:27156:  if (value == ((tmp >> 6) & 524287)) {
        5:27157:    *found = 2;
        5:27158:    return 2;
        -:27159:  }
       10:27160:  if (length == 3)
    #####:27161:    goto bail;
       10:27162:  tmp2 = tmp >> 25;
        -:27163:  in += sizeof(uint32_t);
       10:27164:  tmp = *(uint32_t *)in;
       10:27165:  if ((tmp2 | (tmp % (1U << 12)) << (19 - 12)) == value) {
        4:27166:    *found = 3;
        4:27167:    return 3;
        -:27168:  }
        6:27169:  if (length == 4)
    #####:27170:    goto bail;
        6:27171:  if (value == ((tmp >> 12) & 524287)) {
        3:27172:    *found = 4;
        3:27173:    return 4;
        -:27174:  }
        3:27175:  if (length == 5)
    #####:27176:    goto bail;
        3:27177:  tmp2 = tmp >> 31;
        -:27178:  in += sizeof(uint32_t);
        3:27179:  tmp = *(uint32_t *)in;
        3:27180:  if ((tmp2 | (tmp % (1U << 18)) << (19 - 18)) == value) {
        2:27181:    *found = 5;
        2:27182:    return 5;
        -:27183:  }
        1:27184:  if (length == 6)
    #####:27185:    goto bail;
        1:27186:  tmp2 = tmp >> 18;
        -:27187:  in += sizeof(uint32_t);
        1:27188:  tmp = *(uint32_t *)in;
        1:27189:  if ((tmp2 | (tmp % (1U << 5)) << (19 - 5)) == value) {
        1:27190:    *found = 6;
        1:27191:    return 6;
        -:27192:  }
    #####:27193:  if (length == 7)
    #####:27194:    goto bail;
    #####:27195:  if (value == ((tmp >> 5) & 524287)) {
    #####:27196:    *found = 7;
    #####:27197:    return 7;
        -:27198:  }
        -:27199:  if (length == 8)
        -:27200:    goto bail;
    #####:27201:bail:
    #####:27202:  return ((length * 19) + 7) / 8;
        -:27203:}
        -:27204:
        -:27205:static uint32_t
       28:27206:linsearch20_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27207:  uint32_t tmp, tmp2;
        -:27208:  (void)tmp2;
       28:27209:  if (length == 0)
        -:27210:    return 0;
       28:27211:  value -= base;
       28:27212:  tmp = *(uint32_t *)in;
       28:27213:  if (value == ((tmp >> 0) & 1048575)) {
        7:27214:    *found = 0;
        7:27215:    return 0;
        -:27216:  }
       21:27217:  if (length == 1)
    #####:27218:    goto bail;
       21:27219:  tmp2 = tmp >> 20;
        -:27220:  in += sizeof(uint32_t);
       21:27221:  tmp = *(uint32_t *)in;
       21:27222:  if ((tmp2 | (tmp % (1U << 8)) << (20 - 8)) == value) {
        6:27223:    *found = 1;
        6:27224:    return 1;
        -:27225:  }
       15:27226:  if (length == 2)
    #####:27227:    goto bail;
       15:27228:  if (value == ((tmp >> 8) & 1048575)) {
        5:27229:    *found = 2;
        5:27230:    return 2;
        -:27231:  }
       10:27232:  if (length == 3)
    #####:27233:    goto bail;
       10:27234:  tmp2 = tmp >> 28;
        -:27235:  in += sizeof(uint32_t);
       10:27236:  tmp = *(uint32_t *)in;
       10:27237:  if ((tmp2 | (tmp % (1U << 16)) << (20 - 16)) == value) {
        4:27238:    *found = 3;
        4:27239:    return 3;
        -:27240:  }
        6:27241:  if (length == 4)
    #####:27242:    goto bail;
        6:27243:  tmp2 = tmp >> 16;
        -:27244:  in += sizeof(uint32_t);
        6:27245:  tmp = *(uint32_t *)in;
        6:27246:  if ((tmp2 | (tmp % (1U << 4)) << (20 - 4)) == value) {
        3:27247:    *found = 4;
        3:27248:    return 4;
        -:27249:  }
        3:27250:  if (length == 5)
    #####:27251:    goto bail;
        3:27252:  if (value == ((tmp >> 4) & 1048575)) {
        2:27253:    *found = 5;
        2:27254:    return 5;
        -:27255:  }
        1:27256:  if (length == 6)
    #####:27257:    goto bail;
        1:27258:  tmp2 = tmp >> 24;
        -:27259:  in += sizeof(uint32_t);
        1:27260:  tmp = *(uint32_t *)in;
        1:27261:  if ((tmp2 | (tmp % (1U << 12)) << (20 - 12)) == value) {
        1:27262:    *found = 6;
        1:27263:    return 6;
        -:27264:  }
    #####:27265:  if (length == 7)
    #####:27266:    goto bail;
    #####:27267:  if (value == ((tmp >> 12) & 1048575)) {
    #####:27268:    *found = 7;
    #####:27269:    return 7;
        -:27270:  }
        -:27271:  if (length == 8)
        -:27272:    goto bail;
    #####:27273:bail:
    #####:27274:  return ((length * 20) + 7) / 8;
        -:27275:}
        -:27276:
        -:27277:static uint32_t
       28:27278:linsearch21_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27279:  uint32_t tmp, tmp2;
        -:27280:  (void)tmp2;
       28:27281:  if (length == 0)
        -:27282:    return 0;
       28:27283:  value -= base;
       28:27284:  tmp = *(uint32_t *)in;
       28:27285:  if (value == ((tmp >> 0) & 2097151)) {
        7:27286:    *found = 0;
        7:27287:    return 0;
        -:27288:  }
       21:27289:  if (length == 1)
    #####:27290:    goto bail;
       21:27291:  tmp2 = tmp >> 21;
        -:27292:  in += sizeof(uint32_t);
       21:27293:  tmp = *(uint32_t *)in;
       21:27294:  if ((tmp2 | (tmp % (1U << 10)) << (21 - 10)) == value) {
        6:27295:    *found = 1;
        6:27296:    return 1;
        -:27297:  }
       15:27298:  if (length == 2)
    #####:27299:    goto bail;
       15:27300:  if (value == ((tmp >> 10) & 2097151)) {
        5:27301:    *found = 2;
        5:27302:    return 2;
        -:27303:  }
       10:27304:  if (length == 3)
    #####:27305:    goto bail;
       10:27306:  tmp2 = tmp >> 31;
        -:27307:  in += sizeof(uint32_t);
       10:27308:  tmp = *(uint32_t *)in;
       10:27309:  if ((tmp2 | (tmp % (1U << 20)) << (21 - 20)) == value) {
        4:27310:    *found = 3;
        4:27311:    return 3;
        -:27312:  }
        6:27313:  if (length == 4)
    #####:27314:    goto bail;
        6:27315:  tmp2 = tmp >> 20;
        -:27316:  in += sizeof(uint32_t);
        6:27317:  tmp = *(uint32_t *)in;
        6:27318:  if ((tmp2 | (tmp % (1U << 9)) << (21 - 9)) == value) {
        3:27319:    *found = 4;
        3:27320:    return 4;
        -:27321:  }
        3:27322:  if (length == 5)
    #####:27323:    goto bail;
        3:27324:  if (value == ((tmp >> 9) & 2097151)) {
        2:27325:    *found = 5;
        2:27326:    return 5;
        -:27327:  }
        1:27328:  if (length == 6)
    #####:27329:    goto bail;
        1:27330:  tmp2 = tmp >> 30;
        -:27331:  in += sizeof(uint32_t);
        1:27332:  tmp = *(uint32_t *)in;
        1:27333:  if ((tmp2 | (tmp % (1U << 19)) << (21 - 19)) == value) {
        1:27334:    *found = 6;
        1:27335:    return 6;
        -:27336:  }
    #####:27337:  if (length == 7)
    #####:27338:    goto bail;
    #####:27339:  tmp2 = tmp >> 19;
        -:27340:  in += sizeof(uint32_t);
    #####:27341:  tmp = *(uint32_t *)in;
    #####:27342:  if ((tmp2 | (tmp % (1U << 8)) << (21 - 8)) == value) {
    #####:27343:    *found = 7;
    #####:27344:    return 7;
        -:27345:  }
        -:27346:  if (length == 8)
        -:27347:    goto bail;
    #####:27348:bail:
    #####:27349:  return ((length * 21) + 7) / 8;
        -:27350:}
        -:27351:
        -:27352:static uint32_t
       28:27353:linsearch22_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27354:  uint32_t tmp, tmp2;
        -:27355:  (void)tmp2;
       28:27356:  if (length == 0)
        -:27357:    return 0;
       28:27358:  value -= base;
       28:27359:  tmp = *(uint32_t *)in;
       28:27360:  if (value == ((tmp >> 0) & 4194303)) {
        7:27361:    *found = 0;
        7:27362:    return 0;
        -:27363:  }
       21:27364:  if (length == 1)
    #####:27365:    goto bail;
       21:27366:  tmp2 = tmp >> 22;
        -:27367:  in += sizeof(uint32_t);
       21:27368:  tmp = *(uint32_t *)in;
       21:27369:  if ((tmp2 | (tmp % (1U << 12)) << (22 - 12)) == value) {
        6:27370:    *found = 1;
        6:27371:    return 1;
        -:27372:  }
       15:27373:  if (length == 2)
    #####:27374:    goto bail;
       15:27375:  tmp2 = tmp >> 12;
        -:27376:  in += sizeof(uint32_t);
       15:27377:  tmp = *(uint32_t *)in;
       15:27378:  if ((tmp2 | (tmp % (1U << 2)) << (22 - 2)) == value) {
        5:27379:    *found = 2;
        5:27380:    return 2;
        -:27381:  }
       10:27382:  if (length == 3)
    #####:27383:    goto bail;
       10:27384:  if (value == ((tmp >> 2) & 4194303)) {
        4:27385:    *found = 3;
        4:27386:    return 3;
        -:27387:  }
        6:27388:  if (length == 4)
    #####:27389:    goto bail;
        6:27390:  tmp2 = tmp >> 24;
        -:27391:  in += sizeof(uint32_t);
        6:27392:  tmp = *(uint32_t *)in;
        6:27393:  if ((tmp2 | (tmp % (1U << 14)) << (22 - 14)) == value) {
        3:27394:    *found = 4;
        3:27395:    return 4;
        -:27396:  }
        3:27397:  if (length == 5)
    #####:27398:    goto bail;
        3:27399:  tmp2 = tmp >> 14;
        -:27400:  in += sizeof(uint32_t);
        3:27401:  tmp = *(uint32_t *)in;
        3:27402:  if ((tmp2 | (tmp % (1U << 4)) << (22 - 4)) == value) {
        2:27403:    *found = 5;
        2:27404:    return 5;
        -:27405:  }
        1:27406:  if (length == 6)
    #####:27407:    goto bail;
        1:27408:  if (value == ((tmp >> 4) & 4194303)) {
        1:27409:    *found = 6;
        1:27410:    return 6;
        -:27411:  }
    #####:27412:  if (length == 7)
    #####:27413:    goto bail;
    #####:27414:  tmp2 = tmp >> 26;
        -:27415:  in += sizeof(uint32_t);
    #####:27416:  tmp = *(uint32_t *)in;
    #####:27417:  if ((tmp2 | (tmp % (1U << 16)) << (22 - 16)) == value) {
    #####:27418:    *found = 7;
    #####:27419:    return 7;
        -:27420:  }
        -:27421:  if (length == 8)
        -:27422:    goto bail;
    #####:27423:bail:
    #####:27424:  return ((length * 22) + 7) / 8;
        -:27425:}
        -:27426:
        -:27427:static uint32_t
       28:27428:linsearch23_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27429:  uint32_t tmp, tmp2;
        -:27430:  (void)tmp2;
       28:27431:  if (length == 0)
        -:27432:    return 0;
       28:27433:  value -= base;
       28:27434:  tmp = *(uint32_t *)in;
       28:27435:  if (value == ((tmp >> 0) & 8388607)) {
        7:27436:    *found = 0;
        7:27437:    return 0;
        -:27438:  }
       21:27439:  if (length == 1)
    #####:27440:    goto bail;
       21:27441:  tmp2 = tmp >> 23;
        -:27442:  in += sizeof(uint32_t);
       21:27443:  tmp = *(uint32_t *)in;
       21:27444:  if ((tmp2 | (tmp % (1U << 14)) << (23 - 14)) == value) {
        6:27445:    *found = 1;
        6:27446:    return 1;
        -:27447:  }
       15:27448:  if (length == 2)
    #####:27449:    goto bail;
       15:27450:  tmp2 = tmp >> 14;
        -:27451:  in += sizeof(uint32_t);
       15:27452:  tmp = *(uint32_t *)in;
       15:27453:  if ((tmp2 | (tmp % (1U << 5)) << (23 - 5)) == value) {
        5:27454:    *found = 2;
        5:27455:    return 2;
        -:27456:  }
       10:27457:  if (length == 3)
    #####:27458:    goto bail;
       10:27459:  if (value == ((tmp >> 5) & 8388607)) {
        4:27460:    *found = 3;
        4:27461:    return 3;
        -:27462:  }
        6:27463:  if (length == 4)
    #####:27464:    goto bail;
        6:27465:  tmp2 = tmp >> 28;
        -:27466:  in += sizeof(uint32_t);
        6:27467:  tmp = *(uint32_t *)in;
        6:27468:  if ((tmp2 | (tmp % (1U << 19)) << (23 - 19)) == value) {
        3:27469:    *found = 4;
        3:27470:    return 4;
        -:27471:  }
        3:27472:  if (length == 5)
    #####:27473:    goto bail;
        3:27474:  tmp2 = tmp >> 19;
        -:27475:  in += sizeof(uint32_t);
        3:27476:  tmp = *(uint32_t *)in;
        3:27477:  if ((tmp2 | (tmp % (1U << 10)) << (23 - 10)) == value) {
        2:27478:    *found = 5;
        2:27479:    return 5;
        -:27480:  }
        1:27481:  if (length == 6)
    #####:27482:    goto bail;
        1:27483:  tmp2 = tmp >> 10;
        -:27484:  in += sizeof(uint32_t);
        1:27485:  tmp = *(uint32_t *)in;
        1:27486:  if ((tmp2 | (tmp % (1U << 1)) << (23 - 1)) == value) {
        1:27487:    *found = 6;
        1:27488:    return 6;
        -:27489:  }
    #####:27490:  if (length == 7)
    #####:27491:    goto bail;
    #####:27492:  if (value == ((tmp >> 1) & 8388607)) {
    #####:27493:    *found = 7;
    #####:27494:    return 7;
        -:27495:  }
        -:27496:  if (length == 8)
        -:27497:    goto bail;
    #####:27498:bail:
    #####:27499:  return ((length * 23) + 7) / 8;
        -:27500:}
        -:27501:
        -:27502:static uint32_t
       28:27503:linsearch24_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27504:  uint32_t tmp, tmp2;
        -:27505:  (void)tmp2;
       28:27506:  if (length == 0)
        -:27507:    return 0;
       28:27508:  value -= base;
       28:27509:  tmp = *(uint32_t *)in;
       28:27510:  if (value == ((tmp >> 0) & 16777215)) {
        7:27511:    *found = 0;
        7:27512:    return 0;
        -:27513:  }
       21:27514:  if (length == 1)
    #####:27515:    goto bail;
       21:27516:  tmp2 = tmp >> 24;
        -:27517:  in += sizeof(uint32_t);
       21:27518:  tmp = *(uint32_t *)in;
       21:27519:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        6:27520:    *found = 1;
        6:27521:    return 1;
        -:27522:  }
       15:27523:  if (length == 2)
    #####:27524:    goto bail;
       15:27525:  tmp2 = tmp >> 16;
        -:27526:  in += sizeof(uint32_t);
       15:27527:  tmp = *(uint32_t *)in;
       15:27528:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        5:27529:    *found = 2;
        5:27530:    return 2;
        -:27531:  }
       10:27532:  if (length == 3)
    #####:27533:    goto bail;
       10:27534:  if (value == ((tmp >> 8) & 16777215)) {
        4:27535:    *found = 3;
        4:27536:    return 3;
        -:27537:  }
        6:27538:  if (length == 4)
    #####:27539:    goto bail;
        -:27540:  in += sizeof(uint32_t);
        6:27541:  tmp = *(uint32_t *)in;
        6:27542:  if (value == ((tmp >> 0) & 16777215)) {
        3:27543:    *found = 4;
        3:27544:    return 4;
        -:27545:  }
        3:27546:  if (length == 5)
    #####:27547:    goto bail;
        3:27548:  tmp2 = tmp >> 24;
        -:27549:  in += sizeof(uint32_t);
        3:27550:  tmp = *(uint32_t *)in;
        3:27551:  if ((tmp2 | (tmp % (1U << 16)) << (24 - 16)) == value) {
        2:27552:    *found = 5;
        2:27553:    return 5;
        -:27554:  }
        1:27555:  if (length == 6)
    #####:27556:    goto bail;
        1:27557:  tmp2 = tmp >> 16;
        -:27558:  in += sizeof(uint32_t);
        1:27559:  tmp = *(uint32_t *)in;
        1:27560:  if ((tmp2 | (tmp % (1U << 8)) << (24 - 8)) == value) {
        1:27561:    *found = 6;
        1:27562:    return 6;
        -:27563:  }
    #####:27564:  if (length == 7)
    #####:27565:    goto bail;
    #####:27566:  if (value == ((tmp >> 8) & 16777215)) {
    #####:27567:    *found = 7;
    #####:27568:    return 7;
        -:27569:  }
        -:27570:  if (length == 8)
        -:27571:    goto bail;
    #####:27572:bail:
    #####:27573:  return ((length * 24) + 7) / 8;
        -:27574:}
        -:27575:
        -:27576:static uint32_t
       28:27577:linsearch25_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27578:  uint32_t tmp, tmp2;
        -:27579:  (void)tmp2;
       28:27580:  if (length == 0)
        -:27581:    return 0;
       28:27582:  value -= base;
       28:27583:  tmp = *(uint32_t *)in;
       28:27584:  if (value == ((tmp >> 0) & 33554431)) {
        7:27585:    *found = 0;
        7:27586:    return 0;
        -:27587:  }
       21:27588:  if (length == 1)
    #####:27589:    goto bail;
       21:27590:  tmp2 = tmp >> 25;
        -:27591:  in += sizeof(uint32_t);
       21:27592:  tmp = *(uint32_t *)in;
       21:27593:  if ((tmp2 | (tmp % (1U << 18)) << (25 - 18)) == value) {
        6:27594:    *found = 1;
        6:27595:    return 1;
        -:27596:  }
       15:27597:  if (length == 2)
    #####:27598:    goto bail;
       15:27599:  tmp2 = tmp >> 18;
        -:27600:  in += sizeof(uint32_t);
       15:27601:  tmp = *(uint32_t *)in;
       15:27602:  if ((tmp2 | (tmp % (1U << 11)) << (25 - 11)) == value) {
        5:27603:    *found = 2;
        5:27604:    return 2;
        -:27605:  }
       10:27606:  if (length == 3)
    #####:27607:    goto bail;
       10:27608:  tmp2 = tmp >> 11;
        -:27609:  in += sizeof(uint32_t);
       10:27610:  tmp = *(uint32_t *)in;
       10:27611:  if ((tmp2 | (tmp % (1U << 4)) << (25 - 4)) == value) {
        4:27612:    *found = 3;
        4:27613:    return 3;
        -:27614:  }
        6:27615:  if (length == 4)
    #####:27616:    goto bail;
        6:27617:  if (value == ((tmp >> 4) & 33554431)) {
        3:27618:    *found = 4;
        3:27619:    return 4;
        -:27620:  }
        3:27621:  if (length == 5)
    #####:27622:    goto bail;
        3:27623:  tmp2 = tmp >> 29;
        -:27624:  in += sizeof(uint32_t);
        3:27625:  tmp = *(uint32_t *)in;
        3:27626:  if ((tmp2 | (tmp % (1U << 22)) << (25 - 22)) == value) {
        2:27627:    *found = 5;
        2:27628:    return 5;
        -:27629:  }
        1:27630:  if (length == 6)
    #####:27631:    goto bail;
        1:27632:  tmp2 = tmp >> 22;
        -:27633:  in += sizeof(uint32_t);
        1:27634:  tmp = *(uint32_t *)in;
        1:27635:  if ((tmp2 | (tmp % (1U << 15)) << (25 - 15)) == value) {
        1:27636:    *found = 6;
        1:27637:    return 6;
        -:27638:  }
    #####:27639:  if (length == 7)
    #####:27640:    goto bail;
    #####:27641:  tmp2 = tmp >> 15;
        -:27642:  in += sizeof(uint32_t);
    #####:27643:  tmp = *(uint32_t *)in;
    #####:27644:  if ((tmp2 | (tmp % (1U << 8)) << (25 - 8)) == value) {
    #####:27645:    *found = 7;
    #####:27646:    return 7;
        -:27647:  }
        -:27648:  if (length == 8)
        -:27649:    goto bail;
    #####:27650:bail:
    #####:27651:  return ((length * 25) + 7) / 8;
        -:27652:}
        -:27653:
        -:27654:static uint32_t
       28:27655:linsearch26_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27656:  uint32_t tmp, tmp2;
        -:27657:  (void)tmp2;
       28:27658:  if (length == 0)
        -:27659:    return 0;
       28:27660:  value -= base;
       28:27661:  tmp = *(uint32_t *)in;
       28:27662:  if (value == ((tmp >> 0) & 67108863)) {
        7:27663:    *found = 0;
        7:27664:    return 0;
        -:27665:  }
       21:27666:  if (length == 1)
    #####:27667:    goto bail;
       21:27668:  tmp2 = tmp >> 26;
        -:27669:  in += sizeof(uint32_t);
       21:27670:  tmp = *(uint32_t *)in;
       21:27671:  if ((tmp2 | (tmp % (1U << 20)) << (26 - 20)) == value) {
        6:27672:    *found = 1;
        6:27673:    return 1;
        -:27674:  }
       15:27675:  if (length == 2)
    #####:27676:    goto bail;
       15:27677:  tmp2 = tmp >> 20;
        -:27678:  in += sizeof(uint32_t);
       15:27679:  tmp = *(uint32_t *)in;
       15:27680:  if ((tmp2 | (tmp % (1U << 14)) << (26 - 14)) == value) {
        5:27681:    *found = 2;
        5:27682:    return 2;
        -:27683:  }
       10:27684:  if (length == 3)
    #####:27685:    goto bail;
       10:27686:  tmp2 = tmp >> 14;
        -:27687:  in += sizeof(uint32_t);
       10:27688:  tmp = *(uint32_t *)in;
       10:27689:  if ((tmp2 | (tmp % (1U << 8)) << (26 - 8)) == value) {
        4:27690:    *found = 3;
        4:27691:    return 3;
        -:27692:  }
        6:27693:  if (length == 4)
    #####:27694:    goto bail;
        6:27695:  tmp2 = tmp >> 8;
        -:27696:  in += sizeof(uint32_t);
        6:27697:  tmp = *(uint32_t *)in;
        6:27698:  if ((tmp2 | (tmp % (1U << 2)) << (26 - 2)) == value) {
        3:27699:    *found = 4;
        3:27700:    return 4;
        -:27701:  }
        3:27702:  if (length == 5)
    #####:27703:    goto bail;
        3:27704:  if (value == ((tmp >> 2) & 67108863)) {
        2:27705:    *found = 5;
        2:27706:    return 5;
        -:27707:  }
        1:27708:  if (length == 6)
    #####:27709:    goto bail;
        1:27710:  tmp2 = tmp >> 28;
        -:27711:  in += sizeof(uint32_t);
        1:27712:  tmp = *(uint32_t *)in;
        1:27713:  if ((tmp2 | (tmp % (1U << 22)) << (26 - 22)) == value) {
        1:27714:    *found = 6;
        1:27715:    return 6;
        -:27716:  }
    #####:27717:  if (length == 7)
    #####:27718:    goto bail;
    #####:27719:  tmp2 = tmp >> 22;
        -:27720:  in += sizeof(uint32_t);
    #####:27721:  tmp = *(uint32_t *)in;
    #####:27722:  if ((tmp2 | (tmp % (1U << 16)) << (26 - 16)) == value) {
    #####:27723:    *found = 7;
    #####:27724:    return 7;
        -:27725:  }
        -:27726:  if (length == 8)
        -:27727:    goto bail;
    #####:27728:bail:
    #####:27729:  return ((length * 26) + 7) / 8;
        -:27730:}
        -:27731:
        -:27732:static uint32_t
       28:27733:linsearch27_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27734:  uint32_t tmp, tmp2;
        -:27735:  (void)tmp2;
       28:27736:  if (length == 0)
        -:27737:    return 0;
       28:27738:  value -= base;
       28:27739:  tmp = *(uint32_t *)in;
       28:27740:  if (value == ((tmp >> 0) & 134217727)) {
        7:27741:    *found = 0;
        7:27742:    return 0;
        -:27743:  }
       21:27744:  if (length == 1)
    #####:27745:    goto bail;
       21:27746:  tmp2 = tmp >> 27;
        -:27747:  in += sizeof(uint32_t);
       21:27748:  tmp = *(uint32_t *)in;
       21:27749:  if ((tmp2 | (tmp % (1U << 22)) << (27 - 22)) == value) {
        6:27750:    *found = 1;
        6:27751:    return 1;
        -:27752:  }
       15:27753:  if (length == 2)
    #####:27754:    goto bail;
       15:27755:  tmp2 = tmp >> 22;
        -:27756:  in += sizeof(uint32_t);
       15:27757:  tmp = *(uint32_t *)in;
       15:27758:  if ((tmp2 | (tmp % (1U << 17)) << (27 - 17)) == value) {
        5:27759:    *found = 2;
        5:27760:    return 2;
        -:27761:  }
       10:27762:  if (length == 3)
    #####:27763:    goto bail;
       10:27764:  tmp2 = tmp >> 17;
        -:27765:  in += sizeof(uint32_t);
       10:27766:  tmp = *(uint32_t *)in;
       10:27767:  if ((tmp2 | (tmp % (1U << 12)) << (27 - 12)) == value) {
        4:27768:    *found = 3;
        4:27769:    return 3;
        -:27770:  }
        6:27771:  if (length == 4)
    #####:27772:    goto bail;
        6:27773:  tmp2 = tmp >> 12;
        -:27774:  in += sizeof(uint32_t);
        6:27775:  tmp = *(uint32_t *)in;
        6:27776:  if ((tmp2 | (tmp % (1U << 7)) << (27 - 7)) == value) {
        3:27777:    *found = 4;
        3:27778:    return 4;
        -:27779:  }
        3:27780:  if (length == 5)
    #####:27781:    goto bail;
        3:27782:  tmp2 = tmp >> 7;
        -:27783:  in += sizeof(uint32_t);
        3:27784:  tmp = *(uint32_t *)in;
        3:27785:  if ((tmp2 | (tmp % (1U << 2)) << (27 - 2)) == value) {
        2:27786:    *found = 5;
        2:27787:    return 5;
        -:27788:  }
        1:27789:  if (length == 6)
    #####:27790:    goto bail;
        1:27791:  if (value == ((tmp >> 2) & 134217727)) {
        1:27792:    *found = 6;
        1:27793:    return 6;
        -:27794:  }
    #####:27795:  if (length == 7)
    #####:27796:    goto bail;
    #####:27797:  tmp2 = tmp >> 29;
        -:27798:  in += sizeof(uint32_t);
    #####:27799:  tmp = *(uint32_t *)in;
    #####:27800:  if ((tmp2 | (tmp % (1U << 24)) << (27 - 24)) == value) {
    #####:27801:    *found = 7;
    #####:27802:    return 7;
        -:27803:  }
        -:27804:  if (length == 8)
        -:27805:    goto bail;
    #####:27806:bail:
    #####:27807:  return ((length * 27) + 7) / 8;
        -:27808:}
        -:27809:
        -:27810:static uint32_t
       28:27811:linsearch28_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27812:  uint32_t tmp, tmp2;
        -:27813:  (void)tmp2;
       28:27814:  if (length == 0)
        -:27815:    return 0;
       28:27816:  value -= base;
       28:27817:  tmp = *(uint32_t *)in;
       28:27818:  if (value == ((tmp >> 0) & 268435455)) {
        7:27819:    *found = 0;
        7:27820:    return 0;
        -:27821:  }
       21:27822:  if (length == 1)
    #####:27823:    goto bail;
       21:27824:  tmp2 = tmp >> 28;
        -:27825:  in += sizeof(uint32_t);
       21:27826:  tmp = *(uint32_t *)in;
       21:27827:  if ((tmp2 | (tmp % (1U << 24)) << (28 - 24)) == value) {
        6:27828:    *found = 1;
        6:27829:    return 1;
        -:27830:  }
       15:27831:  if (length == 2)
    #####:27832:    goto bail;
       15:27833:  tmp2 = tmp >> 24;
        -:27834:  in += sizeof(uint32_t);
       15:27835:  tmp = *(uint32_t *)in;
       15:27836:  if ((tmp2 | (tmp % (1U << 20)) << (28 - 20)) == value) {
        5:27837:    *found = 2;
        5:27838:    return 2;
        -:27839:  }
       10:27840:  if (length == 3)
    #####:27841:    goto bail;
       10:27842:  tmp2 = tmp >> 20;
        -:27843:  in += sizeof(uint32_t);
       10:27844:  tmp = *(uint32_t *)in;
       10:27845:  if ((tmp2 | (tmp % (1U << 16)) << (28 - 16)) == value) {
        4:27846:    *found = 3;
        4:27847:    return 3;
        -:27848:  }
        6:27849:  if (length == 4)
    #####:27850:    goto bail;
        6:27851:  tmp2 = tmp >> 16;
        -:27852:  in += sizeof(uint32_t);
        6:27853:  tmp = *(uint32_t *)in;
        6:27854:  if ((tmp2 | (tmp % (1U << 12)) << (28 - 12)) == value) {
        3:27855:    *found = 4;
        3:27856:    return 4;
        -:27857:  }
        3:27858:  if (length == 5)
    #####:27859:    goto bail;
        3:27860:  tmp2 = tmp >> 12;
        -:27861:  in += sizeof(uint32_t);
        3:27862:  tmp = *(uint32_t *)in;
        3:27863:  if ((tmp2 | (tmp % (1U << 8)) << (28 - 8)) == value) {
        2:27864:    *found = 5;
        2:27865:    return 5;
        -:27866:  }
        1:27867:  if (length == 6)
    #####:27868:    goto bail;
        1:27869:  tmp2 = tmp >> 8;
        -:27870:  in += sizeof(uint32_t);
        1:27871:  tmp = *(uint32_t *)in;
        1:27872:  if ((tmp2 | (tmp % (1U << 4)) << (28 - 4)) == value) {
        1:27873:    *found = 6;
        1:27874:    return 6;
        -:27875:  }
    #####:27876:  if (length == 7)
    #####:27877:    goto bail;
    #####:27878:  if (value == ((tmp >> 4) & 268435455)) {
    #####:27879:    *found = 7;
    #####:27880:    return 7;
        -:27881:  }
        -:27882:  if (length == 8)
        -:27883:    goto bail;
    #####:27884:bail:
    #####:27885:  return ((length * 28) + 7) / 8;
        -:27886:}
        -:27887:
        -:27888:static uint32_t
       28:27889:linsearch29_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27890:  uint32_t tmp, tmp2;
        -:27891:  (void)tmp2;
       28:27892:  if (length == 0)
        -:27893:    return 0;
       28:27894:  value -= base;
       28:27895:  tmp = *(uint32_t *)in;
       28:27896:  if (value == ((tmp >> 0) & 536870911)) {
        7:27897:    *found = 0;
        7:27898:    return 0;
        -:27899:  }
       21:27900:  if (length == 1)
    #####:27901:    goto bail;
       21:27902:  tmp2 = tmp >> 29;
        -:27903:  in += sizeof(uint32_t);
       21:27904:  tmp = *(uint32_t *)in;
       21:27905:  if ((tmp2 | (tmp % (1U << 26)) << (29 - 26)) == value) {
        6:27906:    *found = 1;
        6:27907:    return 1;
        -:27908:  }
       15:27909:  if (length == 2)
    #####:27910:    goto bail;
       15:27911:  tmp2 = tmp >> 26;
        -:27912:  in += sizeof(uint32_t);
       15:27913:  tmp = *(uint32_t *)in;
       15:27914:  if ((tmp2 | (tmp % (1U << 23)) << (29 - 23)) == value) {
        5:27915:    *found = 2;
        5:27916:    return 2;
        -:27917:  }
       10:27918:  if (length == 3)
    #####:27919:    goto bail;
       10:27920:  tmp2 = tmp >> 23;
        -:27921:  in += sizeof(uint32_t);
       10:27922:  tmp = *(uint32_t *)in;
       10:27923:  if ((tmp2 | (tmp % (1U << 20)) << (29 - 20)) == value) {
        4:27924:    *found = 3;
        4:27925:    return 3;
        -:27926:  }
        6:27927:  if (length == 4)
    #####:27928:    goto bail;
        6:27929:  tmp2 = tmp >> 20;
        -:27930:  in += sizeof(uint32_t);
        6:27931:  tmp = *(uint32_t *)in;
        6:27932:  if ((tmp2 | (tmp % (1U << 17)) << (29 - 17)) == value) {
        3:27933:    *found = 4;
        3:27934:    return 4;
        -:27935:  }
        3:27936:  if (length == 5)
    #####:27937:    goto bail;
        3:27938:  tmp2 = tmp >> 17;
        -:27939:  in += sizeof(uint32_t);
        3:27940:  tmp = *(uint32_t *)in;
        3:27941:  if ((tmp2 | (tmp % (1U << 14)) << (29 - 14)) == value) {
        2:27942:    *found = 5;
        2:27943:    return 5;
        -:27944:  }
        1:27945:  if (length == 6)
    #####:27946:    goto bail;
        1:27947:  tmp2 = tmp >> 14;
        -:27948:  in += sizeof(uint32_t);
        1:27949:  tmp = *(uint32_t *)in;
        1:27950:  if ((tmp2 | (tmp % (1U << 11)) << (29 - 11)) == value) {
        1:27951:    *found = 6;
        1:27952:    return 6;
        -:27953:  }
    #####:27954:  if (length == 7)
    #####:27955:    goto bail;
    #####:27956:  tmp2 = tmp >> 11;
        -:27957:  in += sizeof(uint32_t);
    #####:27958:  tmp = *(uint32_t *)in;
    #####:27959:  if ((tmp2 | (tmp % (1U << 8)) << (29 - 8)) == value) {
    #####:27960:    *found = 7;
    #####:27961:    return 7;
        -:27962:  }
        -:27963:  if (length == 8)
        -:27964:    goto bail;
    #####:27965:bail:
    #####:27966:  return ((length * 29) + 7) / 8;
        -:27967:}
        -:27968:
        -:27969:static uint32_t
       28:27970:linsearch30_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:27971:  uint32_t tmp, tmp2;
        -:27972:  (void)tmp2;
       28:27973:  if (length == 0)
        -:27974:    return 0;
       28:27975:  value -= base;
       28:27976:  tmp = *(uint32_t *)in;
       28:27977:  if (value == ((tmp >> 0) & 1073741823)) {
        7:27978:    *found = 0;
        7:27979:    return 0;
        -:27980:  }
       21:27981:  if (length == 1)
    #####:27982:    goto bail;
       21:27983:  tmp2 = tmp >> 30;
        -:27984:  in += sizeof(uint32_t);
       21:27985:  tmp = *(uint32_t *)in;
       21:27986:  if ((tmp2 | (tmp % (1U << 28)) << (30 - 28)) == value) {
        6:27987:    *found = 1;
        6:27988:    return 1;
        -:27989:  }
       15:27990:  if (length == 2)
    #####:27991:    goto bail;
       15:27992:  tmp2 = tmp >> 28;
        -:27993:  in += sizeof(uint32_t);
       15:27994:  tmp = *(uint32_t *)in;
       15:27995:  if ((tmp2 | (tmp % (1U << 26)) << (30 - 26)) == value) {
        5:27996:    *found = 2;
        5:27997:    return 2;
        -:27998:  }
       10:27999:  if (length == 3)
    #####:28000:    goto bail;
       10:28001:  tmp2 = tmp >> 26;
        -:28002:  in += sizeof(uint32_t);
       10:28003:  tmp = *(uint32_t *)in;
       10:28004:  if ((tmp2 | (tmp % (1U << 24)) << (30 - 24)) == value) {
        4:28005:    *found = 3;
        4:28006:    return 3;
        -:28007:  }
        6:28008:  if (length == 4)
    #####:28009:    goto bail;
        6:28010:  tmp2 = tmp >> 24;
        -:28011:  in += sizeof(uint32_t);
        6:28012:  tmp = *(uint32_t *)in;
        6:28013:  if ((tmp2 | (tmp % (1U << 22)) << (30 - 22)) == value) {
        3:28014:    *found = 4;
        3:28015:    return 4;
        -:28016:  }
        3:28017:  if (length == 5)
    #####:28018:    goto bail;
        3:28019:  tmp2 = tmp >> 22;
        -:28020:  in += sizeof(uint32_t);
        3:28021:  tmp = *(uint32_t *)in;
        3:28022:  if ((tmp2 | (tmp % (1U << 20)) << (30 - 20)) == value) {
        2:28023:    *found = 5;
        2:28024:    return 5;
        -:28025:  }
        1:28026:  if (length == 6)
    #####:28027:    goto bail;
        1:28028:  tmp2 = tmp >> 20;
        -:28029:  in += sizeof(uint32_t);
        1:28030:  tmp = *(uint32_t *)in;
        1:28031:  if ((tmp2 | (tmp % (1U << 18)) << (30 - 18)) == value) {
        1:28032:    *found = 6;
        1:28033:    return 6;
        -:28034:  }
    #####:28035:  if (length == 7)
    #####:28036:    goto bail;
    #####:28037:  tmp2 = tmp >> 18;
        -:28038:  in += sizeof(uint32_t);
    #####:28039:  tmp = *(uint32_t *)in;
    #####:28040:  if ((tmp2 | (tmp % (1U << 16)) << (30 - 16)) == value) {
    #####:28041:    *found = 7;
    #####:28042:    return 7;
        -:28043:  }
        -:28044:  if (length == 8)
        -:28045:    goto bail;
    #####:28046:bail:
    #####:28047:  return ((length * 30) + 7) / 8;
        -:28048:}
        -:28049:
        -:28050:static uint32_t
       28:28051:linsearch31_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:28052:  uint32_t tmp, tmp2;
        -:28053:  (void)tmp2;
       28:28054:  if (length == 0)
        -:28055:    return 0;
       28:28056:  value -= base;
       28:28057:  tmp = *(uint32_t *)in;
       28:28058:  if (value == ((tmp >> 0) & 2147483647)) {
        7:28059:    *found = 0;
        7:28060:    return 0;
        -:28061:  }
       21:28062:  if (length == 1)
    #####:28063:    goto bail;
       21:28064:  tmp2 = tmp >> 31;
        -:28065:  in += sizeof(uint32_t);
       21:28066:  tmp = *(uint32_t *)in;
       21:28067:  if ((tmp2 | (tmp % (1U << 30)) << (31 - 30)) == value) {
        6:28068:    *found = 1;
        6:28069:    return 1;
        -:28070:  }
       15:28071:  if (length == 2)
    #####:28072:    goto bail;
       15:28073:  tmp2 = tmp >> 30;
        -:28074:  in += sizeof(uint32_t);
       15:28075:  tmp = *(uint32_t *)in;
       15:28076:  if ((tmp2 | (tmp % (1U << 29)) << (31 - 29)) == value) {
        5:28077:    *found = 2;
        5:28078:    return 2;
        -:28079:  }
       10:28080:  if (length == 3)
    #####:28081:    goto bail;
       10:28082:  tmp2 = tmp >> 29;
        -:28083:  in += sizeof(uint32_t);
       10:28084:  tmp = *(uint32_t *)in;
       10:28085:  if ((tmp2 | (tmp % (1U << 28)) << (31 - 28)) == value) {
        4:28086:    *found = 3;
        4:28087:    return 3;
        -:28088:  }
        6:28089:  if (length == 4)
    #####:28090:    goto bail;
        6:28091:  tmp2 = tmp >> 28;
        -:28092:  in += sizeof(uint32_t);
        6:28093:  tmp = *(uint32_t *)in;
        6:28094:  if ((tmp2 | (tmp % (1U << 27)) << (31 - 27)) == value) {
        3:28095:    *found = 4;
        3:28096:    return 4;
        -:28097:  }
        3:28098:  if (length == 5)
    #####:28099:    goto bail;
        3:28100:  tmp2 = tmp >> 27;
        -:28101:  in += sizeof(uint32_t);
        3:28102:  tmp = *(uint32_t *)in;
        3:28103:  if ((tmp2 | (tmp % (1U << 26)) << (31 - 26)) == value) {
        2:28104:    *found = 5;
        2:28105:    return 5;
        -:28106:  }
        1:28107:  if (length == 6)
    #####:28108:    goto bail;
        1:28109:  tmp2 = tmp >> 26;
        -:28110:  in += sizeof(uint32_t);
        1:28111:  tmp = *(uint32_t *)in;
        1:28112:  if ((tmp2 | (tmp % (1U << 25)) << (31 - 25)) == value) {
        1:28113:    *found = 6;
        1:28114:    return 6;
        -:28115:  }
    #####:28116:  if (length == 7)
    #####:28117:    goto bail;
    #####:28118:  tmp2 = tmp >> 25;
        -:28119:  in += sizeof(uint32_t);
    #####:28120:  tmp = *(uint32_t *)in;
    #####:28121:  if ((tmp2 | (tmp % (1U << 24)) << (31 - 24)) == value) {
    #####:28122:    *found = 7;
    #####:28123:    return 7;
        -:28124:  }
        -:28125:  if (length == 8)
        -:28126:    goto bail;
    #####:28127:bail:
    #####:28128:  return ((length * 31) + 7) / 8;
        -:28129:}
        -:28130:
        -:28131:static uint32_t
    #####:28132:linsearch32_x(uint32_t base, const uint8_t *in, uint32_t length, uint32_t value, int *found) {
        -:28133:  uint32_t tmp, tmp2;
        -:28134:  (void)tmp2;
    #####:28135:  if (length == 0)
        -:28136:    return 0;
    #####:28137:  value -= base;
    #####:28138:  tmp = *(uint32_t *)in;
    #####:28139:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28140:    *found = 0;
    #####:28141:    return 0;
        -:28142:  }
    #####:28143:  if (length == 1)
    #####:28144:    goto bail;
        -:28145:  in += sizeof(uint32_t);
    #####:28146:  tmp = *(uint32_t *)in;
    #####:28147:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28148:    *found = 1;
    #####:28149:    return 1;
        -:28150:  }
    #####:28151:  if (length == 2)
    #####:28152:    goto bail;
        -:28153:  in += sizeof(uint32_t);
    #####:28154:  tmp = *(uint32_t *)in;
    #####:28155:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28156:    *found = 2;
    #####:28157:    return 2;
        -:28158:  }
    #####:28159:  if (length == 3)
    #####:28160:    goto bail;
        -:28161:  in += sizeof(uint32_t);
    #####:28162:  tmp = *(uint32_t *)in;
    #####:28163:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28164:    *found = 3;
    #####:28165:    return 3;
        -:28166:  }
    #####:28167:  if (length == 4)
    #####:28168:    goto bail;
        -:28169:  in += sizeof(uint32_t);
    #####:28170:  tmp = *(uint32_t *)in;
    #####:28171:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28172:    *found = 4;
    #####:28173:    return 4;
        -:28174:  }
    #####:28175:  if (length == 5)
    #####:28176:    goto bail;
        -:28177:  in += sizeof(uint32_t);
    #####:28178:  tmp = *(uint32_t *)in;
    #####:28179:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28180:    *found = 5;
    #####:28181:    return 5;
        -:28182:  }
    #####:28183:  if (length == 6)
    #####:28184:    goto bail;
        -:28185:  in += sizeof(uint32_t);
    #####:28186:  tmp = *(uint32_t *)in;
    #####:28187:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28188:    *found = 6;
    #####:28189:    return 6;
        -:28190:  }
    #####:28191:  if (length == 7)
    #####:28192:    goto bail;
        -:28193:  in += sizeof(uint32_t);
    #####:28194:  tmp = *(uint32_t *)in;
    #####:28195:  if (value == ((tmp >> 0) & 4294967295)) {
    #####:28196:    *found = 7;
    #####:28197:    return 7;
        -:28198:  }
        -:28199:  if (length == 8)
        -:28200:    goto bail;
    #####:28201:bail:
    #####:28202:  return ((length * 32) + 7) / 8;
        -:28203:}
        -:28204:
        -:28205:for_linsearchxfunc_t for_linsearchx[33] = {
        -:28206:                       linsearch0_x,
        -:28207:                       linsearch1_x,
        -:28208:                       linsearch2_x,
        -:28209:                       linsearch3_x,
        -:28210:                       linsearch4_x,
        -:28211:                       linsearch5_x,
        -:28212:                       linsearch6_x,
        -:28213:                       linsearch7_x,
        -:28214:                       linsearch8_x,
        -:28215:                       linsearch9_x,
        -:28216:                       linsearch10_x,
        -:28217:                       linsearch11_x,
        -:28218:                       linsearch12_x,
        -:28219:                       linsearch13_x,
        -:28220:                       linsearch14_x,
        -:28221:                       linsearch15_x,
        -:28222:                       linsearch16_x,
        -:28223:                       linsearch17_x,
        -:28224:                       linsearch18_x,
        -:28225:                       linsearch19_x,
        -:28226:                       linsearch20_x,
        -:28227:                       linsearch21_x,
        -:28228:                       linsearch22_x,
        -:28229:                       linsearch23_x,
        -:28230:                       linsearch24_x,
        -:28231:                       linsearch25_x,
        -:28232:                       linsearch26_x,
        -:28233:                       linsearch27_x,
        -:28234:                       linsearch28_x,
        -:28235:                       linsearch29_x,
        -:28236:                       linsearch30_x,
        -:28237:                       linsearch31_x,
        -:28238:                       linsearch32_x
        -:28239:};
        -:28240:
