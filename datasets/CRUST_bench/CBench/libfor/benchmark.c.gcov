        -:    0:Source:benchmark.c
        -:    1:/*
        -:    2: * Copyright (C) 2005-2015 Christoph Rupp (chris@crupp.de).
        -:    3: *
        -:    4: * Licensed under the Apache License, Version 2.0 (the "License");
        -:    5: * you may not use this file except in compliance with the License.
        -:    6: * You may obtain a copy of the License at
        -:    7: *
        -:    8: *     http://www.apache.org/licenses/LICENSE-2.0
        -:    9: *
        -:   10: * Unless required by applicable law or agreed to in writing, software
        -:   11: * distributed under the License is distributed on an "AS IS" BASIS,
        -:   12: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   13: * See the License for the specific language governing permissions and
        -:   14: * limitations under the License.
        -:   15: */
        -:   16:#include <stdio.h>
        -:   17:#include <stdlib.h>
        -:   18:
        -:   19:#include "for.h"
        -:   20:
        -:   21:#define VERIFY(c)     while (!c) {                                          \
        -:   22:                        printf("%s:%d: expression failed\n",                \
        -:   23:                                        __FILE__, __LINE__);                \
        -:   24:                        exit(-1);                                           \
        -:   25:                      }
        -:   26:
        -:   27:#define VERIFY_ARRAY(a1, a2, len)                                           \
        -:   28:                      do {                                                  \
        -:   29:                        uint32_t i;                                         \
        -:   30:                        for (i = 0; i < len; i++) {                         \
        -:   31:                          if (a1[i] != a2[i]) {                             \
        -:   32:                            printf("data mismatch at %u\n", i);             \
        -:   33:                            exit(-1);                                       \
        -:   34:                          }                                                 \
        -:   35:                        }                                                   \
        -:   36:                      } while (0)
        -:   37:
        -:   38:static void
    #####:   39:run(uint32_t length)
        -:   40:{
        -:   41:  uint32_t i, s1, s2, s3;
    #####:   42:  uint8_t  *out = (uint8_t *) malloc(length * sizeof(uint32_t));
    #####:   43:  uint32_t *in =  (uint32_t *)malloc(length * sizeof(uint32_t));
    #####:   44:  uint32_t *tmp = (uint32_t *)malloc(length * sizeof(uint32_t));
        -:   45:
    #####:   46:  for (i = 0; i < length; i++)
    #####:   47:    in[i] = 33 + i;
        -:   48:
    #####:   49:  s1 = for_compress_sorted(in, out, length);
    #####:   50:  s2 = for_uncompress(out, tmp, length);
    #####:   51:  s3 = for_compressed_size_sorted(in, length);
    #####:   52:  VERIFY(s1 == s2);
    #####:   53:  VERIFY(s2 == s3);
        -:   54:  /* VERIFY_ARRAY(in, tmp, length); */
        -:   55:
    #####:   56:  free(in);
    #####:   57:  free(out);
    #####:   58:  free(tmp);
    #####:   59:}
        -:   60:
        -:   61:int
    #####:   62:main()
        -:   63:{
    #####:   64:  run(1024 * 1024 * 10); /* 10 mb */
        -:   65:  return 0;
        -:   66:}
